var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,1.075,1,1.774]],["body/components/AppComponent.html",[0,2.1,1,3.097,2,0.051,3,0.051,4,2.15,5,2.15,6,0.045,7,5.478,8,0.43,9,3.394,10,7.6,11,5.972,12,7.237,13,5.048,14,6.475,15,6.475,16,1.934,17,3.548,18,3.773,19,3.129,20,2.841,21,0.128,22,0.297,23,2.804,24,0.688,25,0.155,26,0.006,27,0.413,28,0.53,29,6.475,30,0.371,31,5.478,32,0.076,33,1.126,34,0.039,35,0.246,36,1.87,37,2.841,38,2.841,39,1.845,40,3.384,41,2.15,42,0.743,43,2.15,44,2.073,45,1.81,46,2.841,47,2.037,48,2.15,49,2.073,50,2.15,51,1.87,52,2.15,53,2.002,54,2.15,55,2.073,56,2.15,57,2.073,58,1.902,59,2.073,60,1.725,61,2.15,62,2.073,63,2.15,64,2.841,65,2.037,66,2.15,67,2.073,68,2.15,69,2.073,70,2.15,71,2.073,72,2.15,73,2.037,74,1.573,75,1.377,76,3.519,77,2.073,78,1.29,79,0.974,80,2.037,81,2.073,82,2.841,83,2.037,84,2.15,85,2.073,86,2.841,87,2.073,88,2.15,89,2.073,90,2.15,91,2.073,92,2.15,93,2.073,94,2.15,95,2.073,96,1.16,97,2.037,98,2.073,99,2.037,100,1.781,101,2.002,102,2.15,103,2.037,104,2.15,105,1.967,106,2.15,107,2.037,108,2.15,109,2.037,110,2.15,111,2.037,112,2.111,113,2.15,114,0.004,115,0.004]],["title/directives/AppDropdownDirective.html",[39,1.259,101,1.804]],["body/directives/AppDropdownDirective.html",[2,0.05,3,0.05,6,0.044,8,0.415,16,1.864,17,2.412,21,0.186,22,0.29,25,0.258,26,0.006,27,0.398,28,0.511,30,0.641,32,0.124,33,1.086,34,0.038,35,0.237,39,2.259,42,0.779,101,2.581,105,3.53,114,0.004,115,0.004,116,5.28,117,5.551,118,0.838,119,3.124,120,3.683,121,7.063,122,3.124,123,8.498,124,6.155,125,7.602,126,2.123,127,1.364,128,7.063,129,7.063,130,8.498,131,3.335,132,7.063,133,0.529,134,4.084,135,4.723,136,5.28,137,1.041,138,0.822,139,7.063,140,5.28,141,5.825,142,2.013,143,3.273,144,7.063,145,5.28,146,7.063,147,5.28,148,5.28,149,7.063,150,5.28,151,5.927,152,5.28,153,6.567,154,5.28,155,5.462,156,2.604,157,4.357,158,1.745,159,4.357,160,2.809,161,3.16,162,3.683,163,3.269,164,2.887,165,7.063,166,7.063,167,2.035,168,5.28,169,2.32,170,5.28,171,3.973,172,5.28,173,5.28,174,5.28,175,5.28,176,3.527,177,3.865,178,5.28,179,5.28,180,5.28,181,5.28,182,5.28,183,5.28,184,5.28,185,4.084,186,1.612,187,5.28,188,2.887]],["title/modules/AppModule.html",[189,1.975,190,3.819]],["body/modules/AppModule.html",[1,3.451,2,0.043,3,0.043,6,0.038,9,1.743,26,0.006,32,0.142,33,0.947,34,0.06,35,0.207,36,1.573,114,0.003,115,0.003,138,0.446,142,1.772,156,2.271,160,2.45,171,2.591,186,1.406,189,2.572,190,7.581,191,2.518,192,4.59,193,4.76,194,5.053,195,4.12,196,4.12,197,4.12,198,4.12,199,6.401,200,6.401,201,6.401,202,6.401,203,4.131,204,1.192,205,2.852,206,4.12,207,6.433,208,5.755,209,4.975,210,6.433,211,3.73,212,4.606,213,4.606,214,2.757,215,4.709,216,3.562,217,4.12,218,4.12,219,5.308,220,4.606,221,5.426,222,5.755,223,3.212,224,4.606,225,2.622,226,4.12,227,4.709,228,6.433,229,3.371,230,1.877,231,3.076,232,3.212,233,3.076,234,3.801,235,6.433,236,4.606,237,3.562,238,4.709,239,1.046,240,3.706,241,3.801,242,0.645,243,4.606,244,3.801,245,4.606,246,4.12,247,3.801,248,2.958,249,2.351,250,5.755,251,6.433,252,4.606,253,4.606,254,4.606,255,4.606,256,2.958,257,3.801,258,4.12,259,2.387,260,5.755,261,6.433,262,5.755,263,6.433,264,6.433,265,1.952,266,4.606,267,7.824,268,3.371,269,4.606,270,5.755,271,3.778,272,4.12,273,4.12,274,4.12,275,2.327,276,2.233,277,4.487,278,3.801,279,4.12,280,4.12,281,1.599,282,4.606,283,4.606,284,4.606,285,4.12,286,5.755,287,4.12,288,4.606,289,4.606,290,4.606,291,4.606,292,4.606,293,4.606,294,4.606,295,4.12,296,4.606,297,4.12,298,4.12,299,3.801,300,5.755,301,4.12,302,4.606,303,3.371,304,4.606,305,4.606,306,4.606,307,4.606,308,4.12,309,4.12,310,4.606,311,6.433,312,4.12,313,6.433,314,4.606,315,4.606,316,4.12,317,4.606,318,4.606,319,4.606,320,4.606,321,4.12,322,4.606,323,4.12,324,4.606,325,4.606]],["title/modules/AppRoutingModule.html",[189,1.975,199,3.614]],["body/modules/AppRoutingModule.html",[2,0.071,3,0.071,6,0.063,26,0.006,32,0.135,33,1.563,34,0.063,35,0.342,114,0.005,115,0.005,156,3.748,186,2.32,189,3.04,199,6.496,211,5.146,215,6.496,217,6.8,218,6.8,309,6.8,326,7.601,327,5.878,328,7.601]],["title/injectables/AuthApiService.html",[329,1.462,330,4.075]],["body/injectables/AuthApiService.html",[2,0.061,3,0.061,6,0.054,8,0.51,19,2.805,21,0.152,25,0.229,26,0.006,30,0.595,32,0.132,33,1.334,34,0.046,35,0.292,42,0.739,96,1.296,114,0.004,115,0.004,126,2.425,133,0.65,137,0.988,138,0.781,142,2.028,158,2.144,188,3.547,205,4.995,221,6.723,223,4.525,231,4.334,232,4.525,276,2.253,277,5.627,329,2.599,330,6.657,331,9.186,332,6.488,333,3.978,334,3.892,335,5.018,336,6.488,337,7.217,338,5.898,339,6.488,340,8.217,341,5.687,342,6.31,343,3.925,344,6.488,345,4.525,346,2.924,347,5.018,348,6.488,349,6.488]],["title/injectables/AuthEffects.html",[329,1.462,350,4.075]],["body/injectables/AuthEffects.html",[2,0.034,3,0.034,6,0.03,8,0.426,19,2.804,21,0.085,22,0.223,25,0.154,26,0.006,27,0.58,28,0.744,30,0.567,32,0.128,33,0.748,34,0.026,35,0.164,42,0.333,100,1.764,114,0.004,115,0.003,122,3.166,127,0.886,133,0.721,135,4.631,137,0.445,138,0.352,142,2.028,156,1.794,158,1.202,160,1.935,167,2.09,169,2.351,189,2.169,194,3.246,225,1.482,230,1.482,233,4.333,240,3.787,242,0.365,248,2.336,259,3.361,265,1.541,275,3.633,276,2.901,281,2.982,303,3.97,329,1.92,330,7.088,333,4.692,334,3.892,337,4.853,338,4.165,341,5.318,345,2.537,346,1.639,350,4.476,351,3.637,352,7.191,353,7.147,354,4.853,355,3.931,356,3.931,357,4.803,358,6.911,359,2.813,360,0.889,361,5.179,362,3.351,363,3.311,364,5.349,365,3.637,366,4.476,367,4.476,368,3.358,369,6.911,370,6.259,371,5.424,372,5.424,373,4.195,374,5.424,375,5.424,376,7.191,377,5.424,378,5.424,379,5.424,380,2.424,381,5.424,382,5.561,383,5.424,384,3.985,385,3.637,386,5.424,387,5.424,388,5.016,389,5.424,390,3.623,391,5.63,392,5.424,393,4.195,394,3.637,395,4.169,396,5.424,397,5.424,398,3.637,399,1.792,400,5.424,401,5.948,402,5.424,403,4.195,404,4.195,405,4.195,406,4.195,407,4.195,408,3.483,409,4.195,410,4.195,411,4.195,412,2.811,413,7.191,414,4.195,415,5.424,416,3.637,417,4.476,418,4.853,419,2.741,420,2.965,421,5.424,422,3.97,423,5.424,424,5.424,425,5.424,426,5.424,427,3.637,428,3.783,429,1.403,430,3.637,431,2.662,432,2.813,433,3.637,434,3.637,435,2.109,436,2.662,437,3.001,438,2.109,439,2.537,440,3.623]],["title/guards/AuthGuard.html",[441,4.075,442,4.075]],["body/guards/AuthGuard.html",[2,0.062,3,0.062,6,0.055,8,0.523,19,2.875,21,0.156,25,0.188,26,0.006,30,0.555,32,0.137,33,1.368,34,0.048,35,0.299,42,0.609,45,2.198,96,1.102,114,0.004,115,0.004,118,0.789,126,2.462,133,0.667,137,0.814,138,0.644,142,2.046,156,3.28,158,2.198,160,3.538,167,2.563,186,2.03,188,3.636,233,4.442,234,5.488,239,1.511,240,4.105,242,0.667,249,2.43,256,4.271,295,5.95,329,2.425,340,7.329,343,3.688,346,2.997,360,0.644,412,3.446,435,3.856,441,5.488,442,6.76,443,6.651,444,8.192,445,5.714,446,8.668,447,4.118,448,6.651,449,6.651,450,3.981,451,6.651,452,6.651,453,6.651]],["title/components/AuthLayoutComponent.html",[0,1.075,44,1.869]],["body/components/AuthLayoutComponent.html",[0,1.993,1,2.1,2,0.055,3,0.055,4,2.295,5,2.295,6,0.048,9,2.213,16,2.064,17,3.559,18,3.781,20,2.964,26,0.005,32,0.082,33,1.202,34,0.042,35,0.263,36,1.996,37,2.964,38,2.964,39,1.926,40,3.47,41,2.295,42,0.767,43,2.295,44,3.347,45,2.764,46,2.964,47,2.174,48,2.295,49,2.213,50,2.295,51,1.996,52,2.295,53,2.136,54,2.295,55,2.213,56,2.295,57,2.213,58,2.03,59,2.213,60,1.841,61,2.295,62,2.213,63,2.295,64,2.964,65,2.174,66,2.295,67,2.213,68,2.295,69,2.213,70,2.295,71,2.213,72,2.295,73,2.174,74,1.679,75,1.469,76,3.593,77,2.213,78,1.323,79,1.016,80,2.174,81,2.213,82,2.964,83,2.174,84,2.295,85,2.213,86,2.964,87,2.213,88,2.295,89,2.213,90,2.295,91,2.213,92,2.295,93,2.213,94,2.295,95,2.213,96,1.19,97,2.174,98,2.213,99,2.174,100,1.901,101,2.136,102,2.295,103,2.174,104,2.295,105,2.1,106,2.295,107,2.174,108,2.295,109,2.174,110,2.295,111,2.174,112,2.253,113,2.295,114,0.004,115,0.004,454,5.846,455,4.824,456,2.91]],["title/modules/AuthModule.html",[189,1.975,200,3.614]],["body/modules/AuthModule.html",[0,1.698,2,0.058,3,0.058,6,0.051,26,0.006,32,0.143,33,1.265,34,0.061,35,0.277,36,2.1,44,2.953,45,2.033,51,3.077,59,2.953,67,2.953,91,2.953,93,2.953,114,0.004,115,0.004,169,1.793,189,3.12,191,3.362,192,5.305,193,3.95,194,3.681,200,7.271,203,5.009,204,1.591,205,3.808,211,4.523,214,3.681,216,4.757,222,6.979,223,4.29,225,2.507,229,5.71,230,2.507,241,5.076,242,0.617,247,5.076,248,3.95,249,2.248,256,3.95,259,3.187,350,5.076,457,5.503,458,5.503,459,5.503,460,6.954,461,5.687,462,6.151,463,5.441,464,6.151,465,6.151,466,6.151,467,6.151,468,5.503,469,6.151,470,6.033,471,6.033,472,3.272,473,6.151,474,4.757,475,6.151,476,6.151,477,5.076,478,6.151,479,5.076]],["title/modules/AuthRoutingModule.html",[189,1.975,460,3.614]],["body/modules/AuthRoutingModule.html",[2,0.066,3,0.066,6,0.058,26,0.006,32,0.14,33,1.447,34,0.065,35,0.316,36,2.402,114,0.005,115,0.005,156,3.469,189,3.39,191,3.846,192,4.356,193,4.518,194,4.211,203,5.444,204,1.82,205,4.356,211,4.915,214,4.211,215,6.205,259,3.646,327,5.441,460,7.187,461,5.877,463,5.913,470,6.556,471,6.556,472,3.742,480,7.036,481,7.036,482,7.036,483,7.036,484,7.036,485,7.036]],["title/interfaces/AuthState.html",[486,1.045,487,4.075]],["body/interfaces/AuthState.html",[2,0.059,3,0.059,6,0.052,10,7.707,21,0.146,22,0.324,25,0.223,26,0.006,32,0.133,34,0.072,45,2.062,114,0.004,115,0.004,142,1.378,169,2.903,237,4.826,238,4.568,242,0.626,249,2.877,256,4.007,281,2.167,360,0.604,435,3.618,477,5.15,486,1.825,487,7.707,488,5.583,489,8.355,490,7.717,491,7.717,492,5.583,493,5.583,494,5.583,495,4.826,496,5.763,497,4.568,498,6.836,499,7.044,500,5.583,501,1.592,502,3.864,503,4.826,504,5.583,505,7.717,506,5.583,507,5.583,508,5.583,509,7.717,510,5.583,511,4.826,512,7.717,513,5.583,514,5.15,515,5.583,516,5.583,517,4.568,518,5.15,519,5.583,520,4.353,521,5.583,522,4.353,523,5.583]],["title/components/BlankComponent.html",[0,1.075,47,1.836]],["body/components/BlankComponent.html",[0,2.102,1,2.088,2,0.055,3,0.055,4,2.282,5,2.282,6,0.048,9,2.201,16,2.053,17,3.558,18,3.78,20,2.954,26,0.005,32,0.081,33,1.196,34,0.042,35,0.262,36,1.985,37,2.954,38,2.954,39,1.919,40,3.463,41,2.282,42,0.765,43,2.282,44,2.201,45,1.921,46,2.954,47,3.281,48,2.282,49,2.201,50,2.282,51,1.985,52,2.282,53,2.125,54,2.282,55,2.201,56,2.282,57,2.201,58,2.019,59,2.201,60,1.831,61,2.282,62,2.201,63,2.282,64,2.954,65,2.162,66,2.282,67,2.201,68,2.282,69,2.201,70,2.282,71,2.201,72,2.282,73,2.162,74,1.669,75,1.461,76,3.587,77,2.201,78,1.32,79,1.013,80,2.162,81,2.201,82,2.954,83,2.162,84,2.282,85,2.201,86,2.954,87,2.201,88,2.282,89,2.201,90,2.282,91,2.201,92,2.282,93,2.201,94,2.282,95,2.201,96,1.187,97,2.162,98,2.201,99,2.162,100,1.891,101,2.125,102,2.282,103,2.162,104,2.282,105,2.088,106,2.282,107,2.162,108,2.282,109,2.162,110,2.282,111,2.162,112,2.241,113,2.282,114,0.004,115,0.004,524,5.815,525,8.176]],["title/components/BreadcrumbComponent.html",[0,1.075,49,1.869]],["body/components/BreadcrumbComponent.html",[0,1.781,1,1.522,2,0.04,3,0.04,4,1.664,5,1.664,6,0.035,9,1.604,16,1.497,17,3.494,18,3.703,20,1.664,21,0.099,22,0.249,24,0.403,25,0.219,26,0.006,29,5.427,30,0.594,32,0.119,33,0.872,34,0.03,35,0.191,36,1.447,37,2.381,38,2.381,39,1.547,40,3.035,41,1.664,42,0.75,43,1.664,44,1.604,45,1.401,46,2.381,47,1.576,48,1.664,49,2.927,50,1.664,51,1.447,52,1.664,53,1.549,54,1.664,55,1.604,56,1.664,57,1.604,58,1.472,59,1.604,60,1.335,61,1.664,62,1.604,63,1.664,64,2.381,65,1.576,66,1.664,67,1.604,68,1.664,69,1.604,70,1.664,71,1.604,72,1.664,73,1.576,74,1.217,75,1.065,76,3.212,77,1.604,78,1.157,79,0.816,80,1.576,81,1.604,82,2.381,83,1.576,84,1.664,85,1.604,86,2.381,87,1.604,88,1.664,89,1.604,90,1.664,91,1.604,92,1.664,93,1.604,94,1.664,95,1.604,96,1.04,97,1.576,98,1.604,99,1.576,100,1.378,101,1.549,102,1.664,103,1.576,104,1.664,105,1.522,106,1.664,107,1.576,108,1.664,109,1.576,110,1.664,111,1.576,112,1.634,113,1.664,114,0.003,115,0.003,118,0.719,119,2.781,122,2.781,126,1.823,127,1.057,131,3.035,133,0.608,134,3.278,135,4.411,137,0.743,138,0.587,142,1.979,143,2.179,151,5.393,155,4.691,156,2.09,158,1.401,159,3.498,160,2.255,169,1.236,171,3.412,176,2.831,177,3.102,185,4.691,186,1.294,271,1.996,301,3.792,362,3.537,456,3.281,526,6.253,527,4.239,528,4.24,529,2.677,530,2.57,531,6.066,532,6.381,533,6.918,534,4.628,535,6.066,536,6.778,537,7.084,538,7.733,539,5.466,540,6.066,541,4.239,542,4.239,543,6.066,544,4.239,545,7.733,546,4.239,547,4.239,548,4.239,549,4.239,550,3.498,551,4.239,552,1.522,553,5.427,554,4.239,555,4.239,556,3.792,557,4.239,558,4.239,559,3.102,560,2.956,561,4.239,562,4.239,563,4.239,564,4.239,565,4.239,566,6.066,567,7.084,568,6.066,569,3.631,570,4.239,571,4.239,572,1.113,573,4.239,574,4.239,575,3.792,576,8.513,577,4.239,578,4.239,579,6.338,580,4.239,581,6.066,582,4.239,583,4.239]],["title/classes/ClearSelectedNursingHome.html",[35,0.222,584,2.559]],["body/classes/ClearSelectedNursingHome.html",[2,0.044,3,0.044,6,0.038,8,0.364,21,0.109,22,0.266,24,0.441,25,0.279,26,0.006,27,0.35,28,0.449,30,0.314,32,0.104,34,0.07,35,0.436,74,1.331,75,1.165,79,1.083,114,0.003,115,0.003,118,1.15,204,1.672,239,1.828,242,0.465,360,0.983,429,1.2,501,1.136,572,1.953,584,4.17,585,2.976,586,2.466,587,2.169,588,2.068,589,1.526,590,3.635,591,4.636,592,3.706,593,2.046,594,1.926,595,1.942,596,1.254,597,0.725,598,2.534,599,3.855,600,3.855,601,1.884,602,3.759,603,1.942,604,1.648,605,1.722,606,3.968,607,1.326,608,3.759,609,2.242,610,3.759,611,1.169,612,3.855,613,2.495,614,3.855,615,2.035,616,3.855,617,3.855,618,3.855,619,2.608,620,1.363,621,1.383,622,2.608,623,2.608,624,2.608,625,1.484,626,2.608,627,2.608,628,2.608,629,2.608,630,1.292,631,2.608,632,2.608,633,2.608,634,1.46,635,2.534]],["title/classes/ClearSelectedPatient.html",[35,0.222,636,2.435]],["body/classes/ClearSelectedPatient.html",[2,0.041,3,0.041,6,0.036,8,0.344,21,0.102,22,0.255,24,0.416,25,0.28,26,0.006,27,0.33,28,0.423,30,0.297,32,0.101,34,0.07,35,0.438,78,1.541,79,1.055,96,0.97,114,0.003,115,0.003,118,1.154,204,1.605,239,1.782,242,0.438,360,0.985,429,1.605,501,1.09,572,1.893,587,2.101,588,1.985,589,1.53,595,1.315,596,1.183,597,0.684,601,1.808,603,1.864,604,1.582,605,1.921,607,1.106,609,2.185,611,1.418,613,2.432,615,1.954,620,1.425,621,1.446,625,1.4,630,1.219,634,1.378,636,3.868,637,2.21,638,3.3,639,4.374,640,2.528,641,1.422,642,2.266,643,3.472,644,3.555,645,3.555,646,3.693,647,3.472,648,3.472,649,3.555,650,3.555,651,3.319,652,3.555,653,3.555,654,2.988,655,2.228,656,3.555,657,2.327,658,2.327,659,2.327,660,2.327,661,2.327,662,2.327,663,2.327,664,2.327,665,2.327,666,2.327,667,2.327,668,2.327,669,1.894,670,2.327,671,2.266]],["title/classes/ClearSelectedUser.html",[35,0.222,672,2.435]],["body/classes/ClearSelectedUser.html",[2,0.041,3,0.041,6,0.036,8,0.343,21,0.102,22,0.255,24,0.415,25,0.28,26,0.006,27,0.33,28,0.423,30,0.296,32,0.101,34,0.07,35,0.438,78,0.927,79,1.055,96,1.392,114,0.003,115,0.003,118,1.154,204,1.604,239,1.781,242,0.438,360,0.984,429,1.604,501,1.089,572,1.892,587,2.1,588,1.984,589,1.53,595,1.313,596,1.182,597,0.683,601,1.807,603,1.863,604,1.581,605,1.92,607,1.105,609,2.184,611,1.418,613,2.431,615,1.952,620,1.424,621,1.445,625,1.398,630,1.217,634,1.376,655,2.226,669,1.892,672,3.866,673,2.208,674,3.297,675,4.369,676,1.444,677,2.264,678,3.47,679,3.553,680,3.553,681,3.691,682,3.47,683,3.47,684,3.553,685,3.553,686,3.317,687,3.553,688,3.553,689,2.986,690,3.47,691,2.324,692,2.324,693,2.324,694,2.324,695,2.324,696,2.324,697,2.324,698,2.324,699,2.324,700,2.324,701,2.324,702,2.324,703,2.324,704,2.264]],["title/classes/CloseSideNav.html",[35,0.222,705,2.559]],["body/classes/CloseSideNav.html",[2,0.042,3,0.042,6,0.037,8,0.355,21,0.106,22,0.261,23,2.064,24,0.917,25,0.282,26,0.006,27,0.341,28,0.437,30,0.497,32,0.063,34,0.069,35,0.434,39,2.029,42,0.414,114,0.003,115,0.003,127,0.867,133,0.453,137,0.553,138,0.437,242,0.453,360,0.946,456,3.768,529,3.699,552,2.635,589,1.52,597,0.707,620,1.543,621,1.606,705,4.123,706,2.403,707,3.172,708,3.94,709,4.494,710,1.026,711,6.347,712,4.518,713,3.47,714,2.403,715,3.802,716,2.923,717,3.707,718,3.802,719,2.988,720,4.582,721,3.802,722,3.273,723,3.802,724,3.172,725,3.802,726,2.176,727,3.802,728,2.47,729,3.802,730,3.47,731,3.378,732,2.637,733,3.802,734,4.233,735,3.057,736,3.802,737,3.802,738,3.47,739,2.47,740,2.47,741,2.47,742,2.47,743,2.47,744,3.57,745,3.57,746,2.47,747,2.47,748,2.47,749,2.47,750,2.47,751,2.541,752,2.47,753,2.541,754,2.47,755,2.283]],["title/classes/CompactSideNav.html",[35,0.222,718,2.559]],["body/classes/CompactSideNav.html",[2,0.042,3,0.042,6,0.037,8,0.355,21,0.106,22,0.261,23,2.064,24,0.917,25,0.282,26,0.006,27,0.341,28,0.437,30,0.497,32,0.063,34,0.069,35,0.434,39,2.029,42,0.414,114,0.003,115,0.003,127,0.867,133,0.453,137,0.553,138,0.437,242,0.453,360,0.946,456,3.768,529,3.699,552,2.635,589,1.52,597,0.707,620,1.543,621,1.606,705,3.802,706,2.403,707,2.744,708,3.94,709,4.494,710,1.026,713,2.47,714,2.403,715,3.802,716,2.923,717,3.707,718,4.123,719,3.454,720,4.582,721,3.802,722,3.273,723,3.802,724,3.172,725,3.802,726,2.176,727,3.802,728,2.47,729,3.802,730,3.47,731,3.378,732,2.637,733,3.802,734,4.233,735,3.057,736,3.802,737,3.802,738,3.47,739,2.47,740,2.47,741,3.47,742,2.47,743,2.47,744,3.57,745,3.57,746,2.47,747,2.47,748,2.47,749,2.47,750,2.47,751,2.541,752,2.47,753,2.541,754,2.47,755,2.283,756,6.347,757,4.518]],["title/components/ConfirmComponent.html",[0,1.075,51,1.686]],["body/components/ConfirmComponent.html",[0,1.987,1,1.759,2,0.046,3,0.046,4,1.922,5,1.922,6,0.04,8,0.385,9,1.854,16,1.729,17,3.526,18,3.733,20,1.922,21,0.115,22,0.276,25,0.233,26,0.006,30,0.559,32,0.107,33,1.007,34,0.035,35,0.22,36,1.672,37,2.635,38,2.635,39,1.712,40,3.234,41,1.922,42,0.755,43,1.922,44,1.854,45,1.618,46,2.635,47,1.821,48,1.922,49,1.854,50,1.922,51,2.813,52,1.922,53,1.79,54,1.922,55,1.854,56,1.922,57,1.854,58,1.7,59,1.854,60,1.543,61,1.922,62,1.854,63,1.922,64,2.635,65,1.821,66,1.922,67,1.854,68,1.922,69,1.854,70,1.922,71,1.854,72,1.922,73,1.821,74,1.406,75,1.231,76,3.388,77,1.854,78,1.232,79,0.903,80,1.821,81,1.854,82,2.635,83,1.821,84,1.922,85,1.854,86,2.635,87,1.854,88,1.922,89,1.854,90,1.922,91,1.854,92,1.922,93,1.854,94,1.922,95,1.854,96,1.108,97,1.821,98,1.854,99,1.821,100,1.592,101,1.79,102,1.922,103,1.821,104,1.922,105,1.759,106,1.922,107,1.821,108,1.922,109,1.821,110,1.922,111,1.821,112,1.887,113,1.922,114,0.004,115,0.004,127,1.288,133,0.768,137,0.6,138,0.474,225,1.996,230,1.996,259,2.538,265,2.075,275,3.391,276,2.33,329,1.45,362,3.963,363,4.105,384,2.538,429,1.737,530,2.844,732,2.789,758,4.898,759,5.335,760,6.712,761,5.229,762,4.873,763,4.381,764,4.619,765,4.898,766,5.191,767,4.898,768,4.898,769,4.898,770,3.787,771,4.041,772,4.898,773,4.898,774,3.585,775,4.681,776,5.539,777,6.712,778,4.898,779,4.681]],["title/interfaces/ConfirmData.html",[486,1.045,780,4.075]],["body/interfaces/ConfirmData.html",[2,0.056,3,0.056,6,0.049,8,0.468,11,4.912,19,2.573,21,0.139,22,0.314,23,3.063,24,0.895,25,0.216,26,0.006,32,0.129,33,1.224,34,0.043,35,0.268,51,2.033,114,0.004,115,0.004,122,2.999,127,0.813,133,0.766,138,0.861,142,1.966,158,1.967,163,3.686,167,2.294,186,2.332,225,2.426,230,2.426,259,3.085,265,2.522,275,4.498,276,2.929,329,2.261,343,3.698,346,2.683,362,3.505,363,3.518,364,3.563,367,4.912,380,2.832,429,2.382,438,4.429,486,1.785,716,2.741,759,5.51,761,5.008,762,4.613,764,4.372,771,6.305,775,5.885,776,6.963,780,7.346,781,5.325,782,4.912,783,5.325,784,5.325,785,3.686,786,5.325,787,3.451,788,4.604,789,5.325,790,5.325,791,5.325,792,5.325,793,5.325,794,3.451,795,5.325,796,3.822,797,4.357]],["title/injectables/ConfirmService.html",[329,1.462,364,2.956]],["body/injectables/ConfirmService.html",[2,0.052,3,0.052,6,0.046,8,0.64,11,6.013,19,2.393,21,0.13,23,2.815,24,0.693,25,0.206,26,0.006,27,0.418,28,0.536,30,0.494,32,0.126,33,1.138,34,0.04,35,0.249,42,0.668,51,1.89,114,0.004,115,0.004,122,2.86,126,2.19,127,1.113,133,0.868,137,0.892,138,0.705,142,2.079,158,1.829,163,3.427,167,2.808,186,2.487,225,2.255,230,2.255,259,3.776,265,2.345,275,4.545,276,2.828,329,2.411,343,3.912,346,2.494,362,3.837,363,3.987,364,4.361,367,6.013,380,2.602,429,2.501,438,5.019,486,1.724,716,3.355,759,5.786,761,4.87,762,4.733,764,4.486,771,7.144,775,5.682,776,6.723,780,7.622,781,4.951,782,4.567,783,6.519,784,6.519,785,4.512,786,6.519,787,4.225,788,5.635,789,6.519,790,6.519,791,4.951,792,4.951,793,4.951,794,3.209,795,4.951,796,3.554,797,4.051,798,4.951,799,5.535,800,5.535]],["title/modules/CoreModule.html",[189,1.975,801,3.614]],["body/modules/CoreModule.html",[0,2.098,2,0.061,3,0.061,6,0.054,8,0.511,26,0.006,32,0.135,33,1.338,34,0.068,35,0.293,36,2.222,51,3.47,114,0.004,115,0.004,169,1.897,189,3.781,191,3.558,192,5.444,193,4.179,194,4.838,203,5.19,204,1.684,205,4.03,211,4.686,225,2.652,229,6.435,230,2.652,259,3.372,275,4.084,354,7.231,461,6.06,479,6.67,782,5.371,801,7.336,802,5.822,803,6.508,804,6.508,805,5.822,806,6.508,807,8.083,808,6.251,809,4.347]],["title/classes/CreateNursingHome.html",[35,0.222,606,2.435]],["body/classes/CreateNursingHome.html",[2,0.042,3,0.042,6,0.037,8,0.354,21,0.105,22,0.26,24,0.428,25,0.284,26,0.006,27,0.339,28,0.435,30,0.496,32,0.102,34,0.07,35,0.434,42,0.412,74,1.292,75,1.131,79,1.069,114,0.003,115,0.003,118,1.144,127,0.865,133,0.451,137,0.551,138,0.435,204,1.637,239,1.663,242,0.451,360,0.98,429,1.164,501,1.112,572,1.922,584,3.793,585,3.657,586,2.393,587,1.845,588,1.44,589,1.519,590,2.531,592,3.703,593,1.985,594,1.869,595,1.902,596,1.217,597,0.704,598,2.459,599,3.793,600,3.793,601,1.845,602,3.698,603,1.902,604,1.614,605,1.686,606,4.127,607,1.416,608,3.698,609,2.213,610,3.698,611,1.144,612,3.793,613,2.463,614,3.793,615,1.993,616,3.793,617,3.793,618,3.793,619,2.531,620,1.348,621,1.512,622,2.531,623,2.531,624,3.56,625,1.44,626,2.531,627,2.531,628,2.531,629,2.531,630,1.253,631,2.531,632,2.531,633,2.531,634,1.417,635,2.459,710,1.022,810,2.625,811,6.328,812,4.499]],["title/classes/CreateNursingHomeFailure.html",[35,0.222,813,3.058]],["body/classes/CreateNursingHomeFailure.html",[2,0.048,3,0.048,6,0.043,8,0.405,21,0.121,22,0.286,24,0.748,25,0.285,26,0.006,27,0.389,28,0.499,30,0.533,32,0.097,34,0.068,35,0.416,42,0.473,75,2.115,79,1.133,114,0.004,115,0.004,118,1.097,127,1.316,133,0.517,137,0.632,138,0.499,242,0.517,360,0.967,380,2.364,399,2.992,585,3.876,589,1.471,592,3.636,593,2.276,594,2.143,597,0.807,607,1.24,611,1.522,620,1.458,621,1.575,710,1.172,810,2.782,813,5.212,814,1.853,815,3.087,816,3.308,817,6.953,818,5.159,819,4.85,820,1.821,821,3.446,822,4.87,823,6.047,824,4.87,825,4.87,826,4.87,827,4.87,828,3.598,829,3.598,830,3.598,831,3.598,832,3.598,833,3.446]],["title/classes/CreateNursingHomeSuccess.html",[35,0.222,822,3.058]],["body/classes/CreateNursingHomeSuccess.html",[2,0.048,3,0.048,6,0.043,8,0.405,21,0.121,22,0.286,24,0.748,25,0.285,26,0.006,27,0.389,28,0.499,30,0.533,32,0.097,34,0.068,35,0.416,42,0.473,75,2.115,79,1.133,114,0.004,115,0.004,118,1.097,127,1.316,133,0.517,137,0.632,138,0.499,242,0.517,360,0.967,380,2.364,399,3.058,585,3.876,589,1.471,592,3.636,593,2.276,594,2.143,597,0.807,607,1.24,611,1.522,620,1.458,621,1.575,710,1.172,810,2.782,813,4.87,814,1.853,815,3.087,816,3.211,819,3.598,820,1.821,821,3.446,822,5.212,823,6.047,824,4.87,825,4.87,826,4.87,827,4.87,828,4.85,829,3.598,830,3.598,831,3.598,832,3.598,833,3.446,834,6.953,835,5.159]],["title/classes/CreatePatient.html",[35,0.222,646,2.325]],["body/classes/CreatePatient.html",[2,0.04,3,0.04,6,0.035,8,0.335,21,0.1,22,0.25,24,0.405,25,0.284,26,0.006,27,0.321,28,0.412,30,0.482,32,0.099,34,0.07,35,0.436,42,0.39,78,1.54,79,1.043,96,0.956,114,0.003,115,0.003,118,1.149,127,0.832,133,0.427,137,0.522,138,0.412,204,1.575,239,1.614,242,0.427,360,0.982,429,1.575,501,1.07,572,1.865,587,1.775,588,1.363,589,1.524,595,1.28,596,1.152,597,0.666,601,1.775,603,1.83,604,1.552,605,1.893,607,1.266,609,2.159,611,1.402,613,2.403,615,1.917,620,1.414,621,1.533,625,1.363,630,1.187,634,1.342,636,3.503,637,2.152,638,2.266,640,2.503,641,1.385,642,2.207,643,3.422,644,3.503,645,3.503,646,3.86,647,3.422,648,3.422,649,3.503,650,3.503,651,3.271,652,3.503,653,3.503,654,2.932,655,2.186,656,3.503,657,2.266,658,2.266,659,2.266,660,3.238,661,2.266,662,2.266,663,2.266,664,2.266,665,2.266,666,2.266,667,2.266,668,2.266,669,1.858,670,2.266,671,2.207,710,0.968,810,2.561,836,6.088,837,4.26]],["title/classes/CreatePatientFailure.html",[35,0.222,838,2.863]],["body/classes/CreatePatientFailure.html",[2,0.044,3,0.044,6,0.039,8,0.372,21,0.111,22,0.27,24,0.623,25,0.284,26,0.006,27,0.357,28,0.458,30,0.51,32,0.105,34,0.068,35,0.421,42,0.434,78,1.501,79,1.093,96,1.217,114,0.004,115,0.004,118,1.11,127,1.319,133,0.475,137,0.58,138,0.458,242,0.475,360,0.971,380,2.441,399,3.047,589,1.482,597,0.74,607,1.169,611,1.667,620,1.485,621,1.578,640,2.479,641,1.539,676,1.564,710,1.076,810,2.683,814,1.7,815,2.953,816,3.369,820,1.671,838,4.708,839,4.86,840,5.866,841,4.235,842,4.21,843,2.931,844,4.232,845,5.462,846,4.361,847,4.361,848,4.361,849,4.361,850,4.361,851,3.233,852,4.361,853,3.04,854,3.04,855,3.04,856,3.04,857,3.04,858,3.04,859,3.04,860,2.931]],["title/classes/CreatePatientFormDialog.html",[35,0.222,645,2.435]],["body/classes/CreatePatientFormDialog.html",[2,0.041,3,0.041,6,0.036,8,0.343,21,0.102,22,0.255,24,0.415,25,0.28,26,0.006,27,0.33,28,0.423,30,0.296,32,0.101,34,0.07,35,0.438,78,1.542,79,1.055,96,0.969,114,0.003,115,0.003,118,1.154,204,1.604,239,1.637,242,0.438,360,0.984,429,1.604,501,1.089,572,1.892,587,1.807,588,1.398,589,1.53,595,1.313,596,1.182,597,0.683,601,1.807,603,2.165,604,1.837,605,2.089,607,1.105,609,2.184,611,1.418,613,2.431,615,1.952,620,1.424,621,1.445,625,1.398,630,1.217,634,1.376,636,3.553,637,2.208,638,2.324,640,2.527,641,1.421,642,2.264,643,3.47,644,3.553,645,3.866,646,3.691,647,3.47,648,3.47,649,3.553,650,3.553,651,3.317,652,3.553,653,3.553,654,2.986,655,2.226,656,3.553,657,2.324,658,2.324,659,3.297,660,2.324,661,2.324,662,2.324,663,2.324,664,2.324,665,2.324,666,2.324,667,2.324,668,2.324,669,1.892,670,2.324,671,2.264,861,4.369]],["title/classes/CreatePatientSuccess.html",[35,0.222,844,2.778]],["body/classes/CreatePatientSuccess.html",[2,0.044,3,0.044,6,0.039,8,0.372,21,0.111,22,0.27,24,0.623,25,0.284,26,0.006,27,0.357,28,0.458,30,0.51,32,0.105,34,0.068,35,0.421,42,0.434,78,1.501,79,1.093,96,1.217,114,0.004,115,0.004,118,1.11,127,1.319,133,0.475,137,0.58,138,0.458,242,0.475,360,0.971,380,2.441,399,3.093,589,1.482,597,0.74,607,1.169,611,1.667,620,1.485,621,1.578,640,2.479,641,1.539,676,1.564,710,1.076,810,2.683,814,1.7,815,2.953,816,3.305,820,1.671,838,4.361,839,4.86,842,3.04,843,2.931,844,4.568,845,5.462,846,4.361,847,4.361,848,4.361,849,4.361,850,4.361,851,3.233,852,4.361,853,4.21,854,3.04,855,3.04,856,3.04,857,3.04,858,3.04,859,3.04,860,2.931,862,5.866,863,4.235]],["title/classes/CreateUser.html",[35,0.222,681,2.325]],["body/classes/CreateUser.html",[2,0.04,3,0.04,6,0.035,8,0.334,21,0.1,22,0.25,24,0.404,25,0.284,26,0.006,27,0.321,28,0.412,30,0.481,32,0.099,34,0.07,35,0.436,42,0.39,78,0.91,79,1.042,96,1.391,114,0.003,115,0.003,118,1.149,127,0.831,133,0.427,137,0.521,138,0.412,204,1.574,239,1.613,242,0.427,360,0.982,429,1.574,501,1.069,572,1.864,587,1.773,588,1.362,589,1.524,595,1.279,596,1.151,597,0.666,601,1.773,603,1.828,604,1.551,605,1.892,607,1.266,609,2.158,611,1.401,613,2.402,615,1.916,620,1.413,621,1.533,625,1.362,630,1.186,634,1.34,655,2.185,669,1.857,672,3.501,673,2.15,674,2.264,676,1.406,677,2.205,678,3.42,679,3.501,680,3.501,681,3.858,682,3.42,683,3.42,684,3.501,685,3.501,686,3.269,687,3.501,688,3.501,689,2.93,690,3.42,691,2.264,692,2.264,693,2.264,694,3.236,695,2.264,696,2.264,697,2.264,698,2.264,699,2.264,700,2.264,701,2.264,702,2.264,703,2.264,704,2.205,710,0.967,810,2.56,864,6.083,865,4.256]],["title/classes/CreateUserFailure.html",[35,0.222,866,2.863]],["body/classes/CreateUserFailure.html",[2,0.044,3,0.044,6,0.039,8,0.372,21,0.111,22,0.269,24,0.623,25,0.284,26,0.006,27,0.357,28,0.458,30,0.51,32,0.105,34,0.068,35,0.421,42,0.433,78,1.275,79,1.092,96,1.363,114,0.004,115,0.004,118,1.11,127,1.319,133,0.474,137,0.579,138,0.458,242,0.474,360,0.971,380,2.44,399,3.046,589,1.482,597,0.74,607,1.168,611,1.667,620,1.485,621,1.578,640,2,641,1.538,676,1.563,710,1.074,810,2.682,814,1.698,815,2.951,816,3.419,820,1.67,840,5.861,841,4.23,851,4.545,866,4.706,867,4.858,868,4.207,869,2.928,870,4.229,871,4.359,872,4.359,873,4.229,874,4.359,875,4.359,876,4.359,877,3.036,878,3.036,879,3.036,880,3.036,881,3.036,882,3.036,883,3.036,884,2.928]],["title/classes/CreateUserFormDialog.html",[35,0.222,680,2.435]],["body/classes/CreateUserFormDialog.html",[2,0.041,3,0.041,6,0.036,8,0.343,21,0.102,22,0.255,24,0.415,25,0.28,26,0.006,27,0.329,28,0.422,30,0.296,32,0.101,34,0.07,35,0.437,78,0.927,79,1.054,96,1.393,114,0.003,115,0.003,118,1.154,204,1.603,239,1.636,242,0.438,360,0.984,429,1.603,501,1.088,572,1.89,587,1.806,588,1.397,589,1.53,595,1.312,596,1.18,597,0.683,601,1.806,603,2.164,604,1.836,605,2.088,607,1.104,609,2.183,611,1.417,613,2.43,615,1.951,620,1.424,621,1.445,625,1.397,630,1.216,634,1.375,655,2.225,669,1.891,672,3.55,673,2.205,674,2.322,676,1.442,677,2.262,678,3.468,679,3.55,680,3.864,681,3.689,682,3.468,683,3.468,684,3.55,685,3.55,686,3.315,687,3.55,688,3.55,689,2.983,690,3.468,691,2.322,692,2.322,693,3.295,694,2.322,695,2.322,696,2.322,697,2.322,698,2.322,699,2.322,700,2.322,701,2.322,702,2.322,703,2.322,704,2.262,885,4.365]],["title/classes/CreateUserSuccess.html",[35,0.222,870,2.778]],["body/classes/CreateUserSuccess.html",[2,0.044,3,0.044,6,0.039,8,0.372,21,0.111,22,0.269,24,0.623,25,0.284,26,0.006,27,0.357,28,0.458,30,0.51,32,0.105,34,0.068,35,0.421,42,0.433,78,1.275,79,1.092,96,1.363,114,0.004,115,0.004,118,1.11,127,1.319,133,0.474,137,0.579,138,0.458,242,0.474,360,0.971,380,2.44,399,3.092,589,1.482,597,0.74,607,1.168,611,1.667,620,1.485,621,1.578,640,2,641,1.538,676,1.563,710,1.074,810,2.682,814,1.698,815,2.951,816,3.368,820,1.67,851,4.545,862,5.861,863,4.23,866,4.359,867,4.858,868,3.036,869,2.928,870,4.566,871,4.359,872,4.359,873,4.229,874,4.359,875,4.359,876,4.359,877,4.207,878,3.036,879,3.036,880,3.036,881,3.036,882,3.036,883,3.036,884,2.928]],["title/components/DashboardLayoutComponent.html",[0,1.075,53,1.804]],["body/components/DashboardLayoutComponent.html",[0,1.554,1,1.104,2,0.029,3,0.029,4,1.207,5,1.207,6,0.025,9,1.164,16,1.086,17,3.413,18,3.57,20,1.207,21,0.072,22,0.196,24,0.813,25,0.262,26,0.006,27,0.441,28,0.566,30,0.647,32,0.122,33,0.632,34,0.022,35,0.138,36,1.05,37,1.873,38,2.296,39,1.217,40,2.588,41,1.207,42,0.654,43,1.207,44,1.164,45,1.016,46,1.873,47,1.143,48,1.207,49,1.164,50,1.207,51,1.05,52,1.207,53,2.41,54,1.207,55,1.164,56,1.207,57,1.164,58,1.067,59,1.164,60,0.968,61,1.207,62,1.164,63,1.207,64,1.873,65,1.143,66,1.207,67,1.164,68,1.207,69,1.164,70,1.207,71,1.164,72,1.207,73,1.143,74,0.883,75,0.773,76,2.802,77,1.164,78,0.986,79,0.642,80,1.143,81,1.164,82,1.873,83,1.143,84,1.207,85,1.164,86,1.873,87,1.164,88,1.207,89,1.164,90,1.207,91,1.164,92,1.207,93,1.164,94,1.207,95,1.164,96,0.887,97,1.143,98,1.164,99,1.143,100,1,101,1.123,102,1.207,103,1.143,104,1.207,105,1.104,106,1.207,107,1.143,108,1.207,109,1.143,110,1.207,111,1.143,112,1.185,113,1.207,114,0.003,115,0.003,118,0.566,119,2.296,122,3.704,126,1.435,127,1.346,131,2.588,133,0.478,135,4.085,137,0.585,138,0.462,142,1.576,143,2.564,151,6.25,155,4.524,156,1.516,158,1.016,159,2.537,160,1.635,167,2.255,169,1.391,176,5.266,177,5.225,185,2.378,186,1.786,189,1.229,219,2.537,225,1.253,227,2.25,230,1.253,239,0.699,240,3.201,242,0.308,249,1.123,281,1.657,362,3.275,363,3.479,370,2.054,412,1.593,447,1.904,455,2.537,456,2.541,528,3.501,530,2.022,533,5.899,534,3.947,539,4.234,550,2.537,552,3.176,553,4.27,556,2.751,575,2.751,707,1.329,708,1.329,755,1.554,886,9.587,887,4.828,888,3.823,889,4.773,890,5.1,891,6.594,892,4.827,893,6.594,894,5.27,895,6.594,896,6.594,897,7.555,898,6.594,899,4.599,900,6.168,901,5.27,902,6.594,903,5.442,904,4.773,905,4.828,906,4.773,907,5.234,908,5.899,909,4.773,910,2.537,911,3.075,912,3.075,913,3.075,914,3.075,915,3.075,916,3.075,917,4.773,918,3.075,919,3.075,920,3.075,921,3.075,922,3.075,923,3.075,924,3.075,925,3.075,926,3.075,927,4.27,928,3.075,929,3.075,930,3.075,931,3.075,932,3.075,933,4.773,934,4.773,935,4.773,936,4.773,937,2.537,938,2.378,939,1.73,940,2.537,941,2.537,942,4.828,943,3.075,944,3.075,945,2.054,946,1.84,947,1.593,948,3.075,949,3.075,950,3.075,951,3.075,952,3.075,953,2.25,954,4.773,955,3.075,956,3.075,957,2.751,958,3.939,959,2.751,960,3.075,961,3.075,962,3.075,963,3.075,964,3.075,965,3.075,966,3.075,967,3.188,968,3.075,969,2.25,970,3.075,971,3.075,972,4.773,973,3.075,974,4.773,975,3.075,976,3.075,977,3.075,978,4.773,979,3.075,980,3.075,981,3.075,982,3.075,983,3.075,984,3.075,985,5.85,986,4.773,987,5.85,988,4.773,989,3.075,990,5.442,991,4.773,992,3.939,993,3.075,994,3.075,995,4.773,996,3.075,997,2.537,998,3.075,999,3.075,1000,3.075,1001,3.075,1002,2.751]],["title/modules/DashboardModule.html",[189,1.975,201,3.614]],["body/modules/DashboardModule.html",[0,1.566,2,0.041,3,0.041,6,0.036,8,0.343,26,0.006,32,0.144,33,0.897,34,0.061,35,0.196,36,1.489,47,2.676,49,2.343,51,2.674,53,3.3,62,2.343,65,2.302,71,2.724,73,2.302,75,1.556,77,2.343,79,1.054,80,2.913,81,2.343,83,2.302,85,2.343,87,2.343,89,2.343,95,2.343,97,2.913,98,2.343,99,2.302,101,2.262,103,2.302,105,2.223,107,2.302,109,2.302,111,2.302,114,0.003,115,0.003,157,3.598,169,1.804,189,3.436,191,2.384,192,4.456,193,2.8,194,4.307,201,7.224,203,3.974,204,1.128,205,2.7,211,3.588,214,2.61,216,3.372,225,2.522,229,4.53,230,1.777,241,3.598,242,0.437,247,3.598,248,2.8,249,1.593,259,2.259,353,4.53,364,5.143,368,2.7,439,3.041,461,5.143,463,4.317,470,4.787,471,4.787,472,2.319,474,3.372,479,5.108,708,1.885,717,2.203,801,6.289,809,4.134,888,4.172,939,2.453,1003,3.901,1004,4.36,1005,3.901,1006,3.901,1007,3.901,1008,6.966,1009,6.289,1010,4.36,1011,6.19,1012,3.372,1013,3.372,1014,8.593,1015,4.36,1016,4.36,1017,3.901,1018,3.901,1019,6.19,1020,5.108,1021,3.901,1022,3.901,1023,4.36,1024,3.901,1025,4.36,1026,3.901,1027,5.108,1028,4.36,1029,5.108,1030,4.36,1031,5.108,1032,4.36,1033,4.36,1034,4.36,1035,4.36,1036,6.438,1037,3.901,1038,6.19,1039,6.438,1040,3.901,1041,3.901,1042,3.901,1043,6.19,1044,3.901,1045,3.372,1046,6.19,1047,3.901,1048,5.537,1049,4.36,1050,3.901,1051,4.317,1052,5.311,1053,4.317,1054,3.901,1055,3.598,1056,3.598,1057,4.36,1058,4.36,1059,6.19,1060,4.36,1061,4.36,1062,4.36,1063,4.36,1064,4.36,1065,4.36,1066,4.36,1067,4.36,1068,4.36,1069,4.36]],["title/modules/DashboardRoutingModule.html",[189,1.975,1008,3.614]],["body/modules/DashboardRoutingModule.html",[0,1.949,2,0.057,3,0.057,6,0.05,23,2.911,26,0.006,32,0.14,33,1.243,34,0.064,35,0.272,36,2.064,47,2.869,53,2.82,78,1.271,83,2.869,96,1.144,99,2.869,114,0.004,115,0.004,124,4.675,156,3.805,169,1.762,189,3.399,191,3.305,192,3.743,193,3.882,194,3.619,203,4.955,204,1.564,205,3.743,211,4.474,214,3.619,215,5.648,259,3.133,327,4.675,442,7.014,446,5.409,461,5.661,463,5.382,474,4.675,525,8.01,529,3.951,761,5.037,888,5.191,946,5.087,1008,6.923,1024,5.409,1026,5.409,1041,5.409,1042,5.409,1070,6.046,1071,6.046,1072,6.046,1073,6.046,1074,6.046,1075,9.25,1076,6.046,1077,6.046,1078,6.046,1079,4.038,1080,6.046]],["title/interfaces/DashboardState.html",[486,1.045,1081,4.075]],["body/interfaces/DashboardState.html",[2,0.029,3,0.029,6,0.025,8,0.242,17,1.633,21,0.072,22,0.197,25,0.237,26,0.006,32,0.122,34,0.073,58,2.907,74,2.265,75,1.9,78,1.435,79,0.888,96,1.29,100,1.905,114,0.003,115,0.003,169,2.957,239,1.718,240,4.044,242,0.309,249,2.141,271,3.364,360,0.298,456,3.041,486,1.239,495,2.383,496,3.499,497,2.255,498,7.278,501,1.757,502,1.908,503,2.383,517,2.255,592,2.567,596,1.933,607,1.274,611,1.194,785,3.627,888,3.827,890,2.383,1081,7.302,1082,2.757,1083,4.834,1084,7.058,1085,7.058,1086,5.897,1087,7.058,1088,5.897,1089,5.241,1090,5.241,1091,5.241,1092,5.241,1093,5.241,1094,5.241,1095,5.241,1096,5.241,1097,5.241,1098,2.757,1099,5.241,1100,2.757,1101,2.757,1102,2.757,1103,4.277,1104,2.757,1105,4.277,1106,2.757,1107,2.757,1108,2.757,1109,2.757,1110,2.757,1111,2.757,1112,2.383,1113,2.757,1114,2.757,1115,2.757,1116,2.757,1117,2.757,1118,2.757,1119,2.757,1120,2.757,1121,2.757,1122,2.757,1123,7.656,1124,2.757,1125,7.491,1126,2.757,1127,2.757,1128,2.757,1129,4.578,1130,2.757,1131,2.757,1132,2.757,1133,2.757,1134,2.757,1135,2.757,1136,2.757,1137,2.757,1138,2.757,1139,2.757,1140,2.543,1141,2.757,1142,2.543,1143,2.757,1144,4.277,1145,3.56,1146,3.945,1147,2.757,1148,6.393,1149,6.393,1150,3.913,1151,2.757,1152,6.393,1153,4.277,1154,6.393,1155,2.757,1156,6.393,1157,2.757,1158,2.757,1159,4.53,1160,2.757,1161,3.913,1162,5.241,1163,2.757,1164,2.757,1165,2.757,1166,2.757,1167,2.757,1168,2.757,1169,5.241,1170,2.757,1171,2.757,1172,2.757,1173,2.757,1174,2.757,1175,4.277,1176,2.757,1177,3.945,1178,2.757,1179,2.757,1180,4.277,1181,2.757,1182,2.757,1183,2.757,1184,2.757,1185,7.491,1186,2.757,1187,2.757,1188,2.757,1189,2.757,1190,2.757,1191,2.757,1192,2.757,1193,2.757,1194,2.757,1195,2.757,1196,2.757,1197,2.757,1198,2.757,1199,2.543,1200,2.757,1201,2.543,1202,2.757,1203,4.277,1204,2.757,1205,3.945,1206,2.757,1207,2.757,1208,4.277,1209,2.757,1210,2.757,1211,2.757,1212,2.757,1213,2.757,1214,2.757,1215,2.757,1216,2.757,1217,2.757,1218,2.757,1219,2.757,1220,2.757,1221,2.058,1222,2.543,1223,7.295,1224,2.757,1225,2.543,1226,2.757,1227,2.543,1228,2.757,1229,2.543,1230,2.757,1231,2.757,1232,2.543,1233,2.757,1234,2.543,1235,2.757,1236,2.543,1237,2.757]],["title/classes/DeletePatient.html",[35,0.222,654,2.379]],["body/classes/DeletePatient.html",[2,0.04,3,0.04,6,0.035,8,0.336,21,0.1,22,0.251,24,0.406,25,0.281,26,0.006,27,0.323,28,0.414,30,0.483,32,0.099,34,0.07,35,0.436,42,0.392,78,1.54,79,1.045,96,0.958,114,0.003,115,0.003,118,1.15,127,0.834,133,0.429,137,0.524,138,0.414,204,1.58,239,1.618,242,0.429,360,0.983,429,1.58,501,1.073,572,1.869,587,1.78,588,1.369,589,1.525,595,1.286,596,1.157,597,0.669,601,1.78,603,1.835,604,1.557,605,1.897,607,1.088,609,2.163,611,1.404,613,2.407,615,1.923,620,1.415,621,1.534,625,1.369,630,1.192,634,1.347,636,3.511,637,2.161,638,2.275,640,2.506,641,1.391,642,2.216,643,3.429,644,3.511,645,3.511,646,3.656,647,3.429,648,3.429,649,3.511,650,3.511,651,3.278,652,3.511,653,3.511,654,3.429,655,2.557,656,3.511,657,2.275,658,2.275,659,2.275,660,2.275,661,2.275,662,2.275,663,2.275,664,2.275,665,2.275,666,2.275,667,2.275,668,3.248,669,2.606,670,2.275,671,2.216,710,0.972,1238,6.105,1239,4.277]],["title/classes/DeleteUser.html",[35,0.222,689,2.379]],["body/classes/DeleteUser.html",[2,0.04,3,0.04,6,0.035,8,0.336,21,0.1,22,0.251,24,0.406,25,0.281,26,0.006,27,0.322,28,0.413,30,0.482,32,0.099,34,0.07,35,0.436,42,0.392,78,0.913,79,1.044,96,1.391,114,0.003,115,0.003,118,1.15,127,0.834,133,0.428,137,0.523,138,0.413,204,1.579,239,1.617,242,0.428,360,0.983,429,1.579,501,1.072,572,1.868,587,1.778,588,1.367,589,1.525,595,1.284,596,1.155,597,0.668,601,1.778,603,1.834,604,1.556,605,1.896,607,1.088,609,2.162,611,1.404,613,2.406,615,1.922,620,1.415,621,1.534,625,1.367,630,1.19,634,1.346,655,2.556,669,2.605,672,3.509,673,2.159,674,2.273,676,1.412,677,2.214,678,3.427,679,3.509,680,3.509,681,3.654,682,3.427,683,3.427,684,3.509,685,3.509,686,3.277,687,3.509,688,3.509,689,3.427,690,3.427,691,2.273,692,2.273,693,2.273,694,2.273,695,2.273,696,2.273,697,2.273,698,2.273,699,2.273,700,2.273,701,2.273,702,3.245,703,2.273,704,2.214,710,0.971,1240,6.101,1241,4.273]],["title/classes/DismissEditNursingHome.html",[35,0.222,617,2.559]],["body/classes/DismissEditNursingHome.html",[2,0.044,3,0.044,6,0.038,8,0.364,21,0.109,22,0.266,24,0.441,25,0.279,26,0.006,27,0.35,28,0.449,30,0.314,32,0.104,34,0.07,35,0.436,74,1.331,75,1.165,79,1.139,114,0.003,115,0.003,118,1.15,204,1.672,239,1.69,242,0.465,360,0.983,429,1.2,501,1.136,572,1.953,584,3.855,585,2.976,586,2.466,587,1.884,588,1.484,589,1.526,590,2.608,592,3.709,593,2.046,594,1.926,595,1.942,596,1.254,597,0.725,598,2.534,599,3.855,600,3.855,601,1.884,602,3.759,603,1.942,604,1.648,605,1.722,606,3.968,607,1.326,608,3.759,609,2.358,610,3.759,611,1.169,612,3.855,613,2.495,614,3.855,615,2.035,616,3.855,617,4.17,618,3.855,619,2.608,620,1.363,621,1.383,622,2.608,623,2.608,624,2.608,625,1.484,626,2.608,627,2.608,628,2.608,629,2.608,630,1.292,631,2.608,632,3.635,633,2.608,634,1.46,635,2.534,1242,4.636]],["title/classes/DismissEditPatient.html",[35,0.222,652,2.435]],["body/classes/DismissEditPatient.html",[2,0.041,3,0.041,6,0.036,8,0.344,21,0.102,22,0.255,24,0.416,25,0.28,26,0.006,27,0.33,28,0.423,30,0.297,32,0.101,34,0.07,35,0.438,78,1.542,79,1.114,96,0.97,114,0.003,115,0.003,118,1.154,204,1.605,239,1.638,242,0.438,360,0.985,429,1.605,501,1.09,572,1.893,587,1.808,588,1.4,589,1.53,595,1.315,596,1.183,597,0.684,601,1.808,603,1.864,604,1.582,605,1.921,607,1.106,609,2.307,611,1.418,613,2.432,615,1.954,620,1.425,621,1.446,625,1.4,630,1.219,634,1.378,636,3.555,637,2.21,638,2.327,640,2.528,641,1.422,642,2.266,643,3.472,644,3.555,645,3.555,646,3.693,647,3.472,648,3.472,649,3.555,650,3.555,651,3.319,652,3.868,653,3.555,654,2.988,655,2.228,656,3.555,657,2.327,658,2.327,659,2.327,660,2.327,661,2.327,662,2.327,663,2.327,664,2.327,665,2.327,666,3.3,667,2.327,668,2.327,669,1.894,670,2.327,671,2.266,1243,4.374]],["title/classes/DismissEditUser.html",[35,0.222,687,2.435]],["body/classes/DismissEditUser.html",[2,0.041,3,0.041,6,0.036,8,0.343,21,0.102,22,0.255,24,0.415,25,0.28,26,0.006,27,0.33,28,0.423,30,0.296,32,0.101,34,0.07,35,0.438,78,0.927,79,1.114,96,1.393,114,0.003,115,0.003,118,1.154,204,1.604,239,1.637,242,0.438,360,0.984,429,1.604,501,1.089,572,1.892,587,1.807,588,1.398,589,1.53,595,1.313,596,1.182,597,0.683,601,1.807,603,1.863,604,1.581,605,1.92,607,1.105,609,2.306,611,1.418,613,2.431,615,1.952,620,1.424,621,1.445,625,1.398,630,1.217,634,1.376,655,2.226,669,1.892,672,3.553,673,2.208,674,2.324,676,1.444,677,2.264,678,3.47,679,3.553,680,3.553,681,3.691,682,3.47,683,3.47,684,3.553,685,3.553,686,3.317,687,3.866,688,3.553,689,2.986,690,3.47,691,2.324,692,2.324,693,2.324,694,2.324,695,2.324,696,2.324,697,2.324,698,2.324,699,2.324,700,3.297,701,2.324,702,2.324,703,2.324,704,2.264,1244,4.369]],["title/classes/DismissPatientFormDialog.html",[35,0.222,647,2.379]],["body/classes/DismissPatientFormDialog.html",[2,0.041,3,0.041,6,0.036,8,0.344,21,0.102,22,0.255,24,0.416,25,0.28,26,0.006,27,0.33,28,0.423,30,0.297,32,0.101,34,0.07,35,0.438,78,1.541,79,1.055,96,0.97,114,0.003,115,0.003,118,1.154,204,1.605,239,1.638,242,0.438,360,0.983,429,1.865,501,1.09,572,1.893,587,1.808,588,1.4,589,1.53,595,1.315,596,1.183,597,0.684,601,1.808,603,1.864,604,1.582,605,1.921,607,1.106,609,2.307,611,1.418,613,2.432,615,1.954,620,1.425,621,1.446,625,1.985,630,1.219,634,1.378,636,3.555,637,2.21,638,2.327,640,2.528,641,1.422,642,2.266,643,3.472,644,3.555,645,3.555,646,3.899,647,3.778,648,3.472,649,3.555,650,3.555,651,3.319,652,3.555,653,3.555,654,2.988,655,2.228,656,3.555,657,2.327,658,2.327,659,2.327,660,2.327,661,3.3,662,2.327,663,2.327,664,2.327,665,2.327,666,2.327,667,2.327,668,2.327,669,1.894,670,2.327,671,2.266,1245,4.374]],["title/classes/DismissPoppedUpNursingHomeForm.html",[35,0.222,608,2.495]],["body/classes/DismissPoppedUpNursingHomeForm.html",[2,0.044,3,0.044,6,0.038,8,0.364,21,0.109,22,0.266,24,0.441,25,0.279,26,0.006,27,0.35,28,0.449,30,0.314,32,0.104,34,0.07,35,0.436,74,1.331,75,1.165,79,1.083,114,0.003,115,0.003,118,1.15,204,1.672,239,1.69,242,0.465,360,0.981,429,1.672,501,1.136,572,1.953,584,3.855,585,2.976,586,2.466,587,1.884,588,1.484,589,1.526,590,2.608,592,3.706,593,2.046,594,1.926,595,1.942,596,1.254,597,0.725,598,2.534,599,3.855,600,3.855,601,1.884,602,3.759,603,1.942,604,1.648,605,1.722,606,4.173,607,1.326,608,4.066,609,2.358,610,3.759,611,1.169,612,3.855,613,2.495,614,3.855,615,2.035,616,3.855,617,3.855,618,3.855,619,2.608,620,1.363,621,1.383,622,2.608,623,2.608,624,2.608,625,2.068,626,3.635,627,2.608,628,2.608,629,2.608,630,1.292,631,2.608,632,2.608,633,2.608,634,1.46,635,2.534,1246,4.636]],["title/classes/DismissUserFormDialog.html",[35,0.222,682,2.379]],["body/classes/DismissUserFormDialog.html",[2,0.041,3,0.041,6,0.036,8,0.343,21,0.102,22,0.255,24,0.415,25,0.28,26,0.006,27,0.33,28,0.423,30,0.296,32,0.101,34,0.07,35,0.438,78,0.927,79,1.055,96,1.392,114,0.003,115,0.003,118,1.154,204,1.604,239,1.637,242,0.438,360,0.983,429,1.864,501,1.089,572,1.892,587,1.807,588,1.398,589,1.53,595,1.313,596,1.182,597,0.683,601,1.807,603,1.863,604,1.581,605,1.92,607,1.105,609,2.306,611,1.418,613,2.431,615,1.952,620,1.424,621,1.445,625,1.984,630,1.217,634,1.376,655,2.226,669,1.892,672,3.553,673,2.208,674,2.324,676,1.444,677,2.264,678,3.47,679,3.553,680,3.553,681,3.897,682,3.776,683,3.47,684,3.553,685,3.553,686,3.317,687,3.553,688,3.553,689,2.986,690,3.47,691,2.324,692,2.324,693,2.324,694,2.324,695,3.297,696,2.324,697,2.324,698,2.324,699,2.324,700,2.324,701,2.324,702,2.324,703,2.324,704,2.264,1247,4.369]],["title/directives/DropdownAnchorDirective.html",[39,1.259,103,1.836]],["body/directives/DropdownAnchorDirective.html",[2,0.064,3,0.064,6,0.056,8,0.534,16,2.397,17,2.833,21,0.159,22,0.341,25,0.235,26,0.006,30,0.607,32,0.116,33,1.396,34,0.048,35,0.305,39,2.44,42,0.622,103,3.085,105,3.541,114,0.004,115,0.004,117,4.735,120,4.735,124,6.928,125,8.82,133,0.68,137,0.831,138,0.657,157,5.602,161,4.063,162,4.735,163,4.203,164,3.711,176,5.541,329,2.009,788,6.415,905,7.393,910,5.602,1248,8.348,1249,6.789,1250,8.296,1251,8.296,1252,6.789,1253,8.296,1254,6.789,1255,6.789,1256,6.789,1257,6.789,1258,6.073,1259,6.789,1260,6.789]],["title/directives/DropdownLinkDirective.html",[39,1.259,105,1.774]],["body/directives/DropdownLinkDirective.html",[2,0.054,3,0.054,6,0.047,8,0.451,16,2.025,17,2.547,21,0.134,22,0.307,25,0.264,26,0.006,28,0.802,30,0.66,32,0.104,33,1.18,34,0.041,35,0.258,39,2.32,42,0.684,101,3.47,105,2.679,114,0.004,115,0.004,118,0.885,119,3.254,120,4.001,124,7.213,126,2.242,127,1.36,131,3.445,133,0.575,137,0.914,138,0.722,142,2.009,143,2.06,161,3.433,162,4.001,163,3.552,164,3.136,329,1.698,528,4.961,534,5.254,552,3.458,716,4.19,717,4.799,722,2.06,1248,8.785,1261,5.736,1262,7.459,1263,7.459,1264,8.778,1265,7.853,1266,7.037,1267,5.133,1268,7.459,1269,5.736,1270,7.459,1271,5.736,1272,5.736,1273,5.736,1274,5.736,1275,5.736,1276,5.736,1277,5.736,1278,5.736,1279,5.736,1280,5.736,1281,5.736,1282,7.459,1283,5.736,1284,5.736,1285,5.736,1286,5.736,1287,5.736,1288,5.736,1289,7.459]],["title/classes/EditNursingHome.html",[35,0.222,616,2.559]],["body/classes/EditNursingHome.html",[2,0.042,3,0.042,6,0.037,8,0.355,21,0.106,22,0.261,24,0.429,25,0.281,26,0.006,27,0.341,28,0.437,30,0.497,32,0.102,34,0.07,35,0.434,42,0.414,74,1.296,75,1.134,79,1.127,114,0.003,115,0.003,118,1.145,127,0.866,133,0.452,137,0.553,138,0.437,204,1.641,239,1.666,242,0.452,360,0.98,429,1.168,501,1.114,572,1.925,584,3.799,585,3.662,586,2.401,587,1.849,588,1.444,589,1.52,590,2.539,592,3.703,593,1.991,594,1.875,595,2.612,596,1.22,597,0.706,598,2.467,599,3.799,600,3.799,601,1.849,602,3.705,603,1.906,604,1.617,605,1.69,606,3.922,607,1.307,608,3.705,609,2.216,610,3.705,611,1.147,612,3.799,613,2.466,614,3.799,615,1.997,616,4.121,617,3.799,618,3.799,619,2.539,620,1.35,621,1.514,622,2.539,623,2.539,624,2.539,625,1.444,626,2.539,627,2.539,628,2.539,629,2.539,630,1.767,631,3.568,632,2.539,633,2.539,634,1.421,635,2.467,710,1.025,1290,6.342,1291,4.513]],["title/classes/EditNursingHomeFailure.html",[35,0.222,827,3.058]],["body/classes/EditNursingHomeFailure.html",[2,0.048,3,0.048,6,0.043,8,0.405,21,0.121,22,0.286,24,0.748,25,0.285,26,0.006,27,0.389,28,0.499,30,0.533,32,0.097,34,0.068,35,0.416,42,0.473,75,2.115,79,1.182,114,0.004,115,0.004,118,1.097,127,1.316,133,0.517,137,0.632,138,0.499,242,0.517,360,0.967,380,2.364,399,2.992,585,3.876,589,1.471,592,3.636,593,2.276,594,2.143,597,0.807,607,1.24,611,1.522,620,1.458,621,1.575,710,1.172,810,2.782,813,4.87,814,1.853,815,2.729,816,3.308,819,3.598,820,1.821,821,3.446,822,4.87,823,6.047,824,4.87,825,4.87,826,4.87,827,5.212,828,3.598,829,3.598,830,3.598,831,3.598,832,4.85,833,3.446,1292,6.953,1293,5.159]],["title/classes/EditNursingHomeSuccess.html",[35,0.222,826,3.058]],["body/classes/EditNursingHomeSuccess.html",[2,0.048,3,0.048,6,0.043,8,0.405,21,0.121,22,0.286,24,0.748,25,0.285,26,0.006,27,0.389,28,0.499,30,0.533,32,0.097,34,0.068,35,0.416,42,0.473,75,2.115,79,1.182,114,0.004,115,0.004,118,1.097,127,1.316,133,0.517,137,0.632,138,0.499,242,0.517,360,0.967,380,2.364,399,3.058,585,3.876,589,1.471,592,3.636,593,2.276,594,2.143,597,0.807,607,1.24,611,1.522,620,1.458,621,1.575,710,1.172,810,2.782,813,4.87,814,1.853,815,2.729,816,3.211,819,3.598,820,1.821,821,3.446,822,4.87,823,6.047,824,4.87,825,4.87,826,5.212,827,4.87,828,3.598,829,3.598,830,3.598,831,4.85,832,3.598,833,3.446,1294,6.953,1295,5.159]],["title/classes/EditPatient.html",[35,0.222,651,2.274]],["body/classes/EditPatient.html",[2,0.04,3,0.04,6,0.035,8,0.336,21,0.1,22,0.251,24,0.406,25,0.281,26,0.006,27,0.322,28,0.413,30,0.482,32,0.099,34,0.07,35,0.436,42,0.392,78,1.54,79,1.104,96,0.957,114,0.003,115,0.003,118,1.15,127,0.834,133,0.428,137,0.523,138,0.413,204,1.579,239,1.617,242,0.428,360,0.983,429,1.579,501,1.072,572,1.868,587,1.778,588,1.367,589,1.525,595,1.284,596,1.155,597,0.668,601,1.778,603,1.834,604,1.556,605,1.896,607,1.088,609,2.162,611,1.404,613,2.406,615,1.922,620,1.415,621,1.534,625,1.367,630,1.7,634,1.346,636,3.509,637,2.159,638,2.273,640,2.791,641,1.389,642,2.214,643,3.427,644,3.509,645,3.509,646,3.654,647,3.427,648,3.427,649,3.509,650,3.509,651,3.574,652,3.509,653,3.509,654,2.939,655,2.191,656,3.509,657,2.273,658,2.273,659,2.273,660,2.273,661,2.273,662,2.273,663,2.273,664,2.273,665,3.245,666,2.273,667,2.273,668,2.273,669,1.862,670,2.273,671,2.214,710,0.971,1296,6.101,1297,4.273]],["title/classes/EditPatientFailure.html",[35,0.222,849,2.863]],["body/classes/EditPatientFailure.html",[2,0.044,3,0.044,6,0.039,8,0.372,21,0.111,22,0.27,24,0.623,25,0.284,26,0.006,27,0.357,28,0.458,30,0.51,32,0.105,34,0.068,35,0.421,42,0.434,78,1.501,79,1.147,96,1.217,114,0.004,115,0.004,118,1.11,127,1.319,133,0.475,137,0.58,138,0.458,242,0.475,360,0.971,380,2.441,399,3.047,589,1.482,597,0.74,607,1.169,611,1.667,620,1.485,621,1.578,640,2.479,641,1.539,676,1.564,710,1.076,810,2.683,814,1.7,815,2.574,816,3.369,820,1.671,838,4.361,839,4.86,842,3.04,843,2.931,844,4.232,845,5.462,846,4.361,847,4.361,848,4.361,849,4.708,850,4.361,851,3.233,852,4.361,853,3.04,854,3.04,855,3.04,856,3.04,857,4.21,858,3.04,859,3.04,860,2.931,1298,5.411,1299,3.906]],["title/classes/EditPatientSuccess.html",[35,0.222,848,2.863]],["body/classes/EditPatientSuccess.html",[2,0.044,3,0.044,6,0.039,8,0.372,21,0.111,22,0.27,24,0.623,25,0.284,26,0.006,27,0.357,28,0.458,30,0.51,32,0.105,34,0.068,35,0.421,42,0.434,78,1.501,79,1.147,96,1.217,114,0.004,115,0.004,118,1.11,127,1.319,133,0.475,137,0.58,138,0.458,242,0.475,360,0.971,380,2.441,399,3.093,589,1.482,597,0.74,607,1.169,611,1.667,620,1.485,621,1.578,640,2.479,641,1.539,676,1.564,710,1.076,810,2.683,814,1.7,815,2.574,816,3.305,820,1.671,838,4.361,839,4.86,842,3.04,843,2.931,844,4.232,845,5.462,846,4.361,847,4.361,848,4.708,849,4.361,850,4.361,851,3.233,852,4.361,853,3.04,854,3.04,855,3.04,856,4.21,857,3.04,858,3.04,859,3.04,860,2.931,1300,5.411,1301,3.906]],["title/classes/EditUser.html",[35,0.222,686,2.274]],["body/classes/EditUser.html",[2,0.04,3,0.04,6,0.035,8,0.335,21,0.1,22,0.251,24,0.406,25,0.281,26,0.006,27,0.322,28,0.413,30,0.482,32,0.099,34,0.07,35,0.436,42,0.391,78,0.912,79,1.104,96,1.394,114,0.003,115,0.003,118,1.15,127,0.833,133,0.428,137,0.523,138,0.413,204,1.577,239,1.616,242,0.428,360,0.983,429,1.577,501,1.071,572,1.867,587,1.777,588,1.366,589,1.525,595,1.283,596,1.154,597,0.668,601,1.777,603,1.832,604,1.555,605,1.895,607,1.087,609,2.161,611,1.403,613,2.405,615,1.92,620,1.415,621,1.534,625,1.366,630,1.698,634,1.344,655,2.19,669,1.861,672,3.507,673,2.157,674,2.271,676,1.411,677,2.212,678,3.425,679,3.507,680,3.507,681,3.652,682,3.425,683,3.425,684,3.507,685,3.507,686,3.572,687,3.507,688,3.507,689,2.936,690,3.425,691,2.271,692,2.271,693,2.271,694,2.271,695,2.271,696,2.271,697,2.271,698,2.271,699,3.243,700,2.271,701,2.271,702,2.271,703,2.271,704,2.212,710,0.97,1302,6.097,1303,4.269]],["title/classes/EditUserFailure.html",[35,0.222,874,2.863]],["body/classes/EditUserFailure.html",[2,0.044,3,0.044,6,0.039,8,0.372,21,0.111,22,0.269,24,0.623,25,0.284,26,0.006,27,0.357,28,0.458,30,0.51,32,0.105,34,0.068,35,0.421,42,0.433,78,1.275,79,1.147,96,1.363,114,0.004,115,0.004,118,1.11,127,1.319,133,0.474,137,0.579,138,0.458,242,0.474,360,0.971,380,2.44,399,3.046,589,1.482,597,0.74,607,1.168,611,1.667,620,1.485,621,1.578,640,2,641,1.538,676,1.563,710,1.074,810,2.682,814,1.698,815,2.572,816,3.419,820,1.67,851,4.545,866,4.359,867,4.858,868,3.036,869,2.928,870,4.229,871,4.359,872,4.359,873,4.229,874,4.706,875,4.359,876,4.359,877,3.036,878,3.036,879,3.036,880,3.036,881,4.207,882,3.036,883,3.036,884,2.928,1298,5.407,1299,3.902]],["title/classes/EditUserSuccess.html",[35,0.222,873,2.778]],["body/classes/EditUserSuccess.html",[2,0.044,3,0.044,6,0.039,8,0.372,21,0.111,22,0.269,24,0.623,25,0.284,26,0.006,27,0.357,28,0.458,30,0.51,32,0.105,34,0.068,35,0.421,42,0.433,78,1.275,79,1.147,96,1.363,114,0.004,115,0.004,118,1.11,127,1.319,133,0.474,137,0.579,138,0.458,242,0.474,360,0.971,380,2.44,399,3.092,589,1.482,597,0.74,607,1.168,611,1.667,620,1.485,621,1.578,640,2,641,1.538,676,1.563,710,1.074,810,2.682,814,1.698,815,2.572,816,3.368,820,1.67,851,4.545,866,4.359,867,4.858,868,3.036,869,2.928,870,4.229,871,4.359,872,4.359,873,4.566,874,4.359,875,4.359,876,4.359,877,3.036,878,3.036,879,3.036,880,4.207,881,3.036,882,3.036,883,3.036,884,2.928,1300,5.407,1301,3.902]],["title/directives/EgretSideNavToggleDirective.html",[39,1.259,107,1.836]],["body/directives/EgretSideNavToggleDirective.html",[2,0.052,3,0.052,6,0.046,8,0.433,16,1.944,17,2.48,21,0.129,22,0.298,25,0.23,26,0.006,30,0.647,32,0.121,33,1.132,34,0.039,35,0.248,39,2.29,42,0.505,107,2.7,114,0.004,115,0.004,118,0.861,119,3.189,120,3.84,122,2.161,126,2.183,127,1.11,131,3.391,133,0.728,137,0.674,138,0.786,142,1.908,143,3.103,151,6.026,158,1.819,161,3.295,162,3.84,163,3.409,164,3.01,169,1.605,265,2.333,384,2.853,456,2.122,528,4.864,534,5.171,708,4.215,717,4.88,808,4.258,907,6.497,908,7.729,938,4.258,945,6.376,967,5.771,1265,6.497,1304,9.658,1305,5.506,1306,7.262,1307,8.64,1308,8.64,1309,8.64,1310,5.506,1311,9.223,1312,7.262,1313,5.506,1314,5.506,1315,5.506,1316,5.506,1317,5.506,1318,5.506,1319,5.506,1320,6.497,1321,8.126,1322,7.262,1323,5.506,1324,7.262,1325,5.506,1326,3.678,1327,5.506,1328,7.262,1329,5.506,1330,5.315,1331,5.506,1332,5.506,1333,7.262,1334,5.506,1335,7.262,1336,5.506,1337,5.506]],["title/components/ErrorComponent.html",[0,1.075,55,1.869]],["body/components/ErrorComponent.html",[0,1.957,1,1.985,2,0.052,3,0.052,4,2.17,5,2.17,6,0.046,9,2.092,16,1.952,17,3.549,18,3.767,20,2.17,21,0.129,26,0.005,30,0.494,32,0.077,33,1.137,34,0.039,35,0.249,36,1.887,37,2.858,38,2.858,39,1.857,40,3.396,41,2.17,42,0.746,43,2.17,44,2.092,45,1.827,46,2.858,47,2.055,48,2.17,49,2.092,50,2.17,51,1.887,52,2.17,53,2.02,54,2.17,55,3.275,56,2.17,57,2.092,58,3.122,59,2.092,60,1.741,61,2.17,62,2.092,63,2.17,64,2.858,65,2.055,66,2.17,67,2.092,68,2.17,69,2.092,70,2.17,71,2.092,72,2.17,73,2.055,74,1.587,75,1.389,76,3.529,77,2.092,78,1.294,79,0.98,80,2.055,81,2.092,82,2.858,83,2.055,84,2.17,85,2.092,86,2.858,87,2.092,88,2.17,89,2.092,90,2.17,91,2.092,92,2.17,93,2.092,94,2.17,95,2.092,96,1.164,97,2.055,98,2.092,99,2.055,100,1.797,101,2.02,102,2.17,103,2.055,104,2.17,105,1.985,106,2.17,107,2.055,108,2.17,109,2.055,110,2.17,111,2.055,112,2.13,113,2.17,114,0.004,115,0.004,118,0.863,119,3.196,126,2.188,131,3.396,133,0.816,142,1.221,143,1.985,530,3.085,888,4.221,1338,5.527,1339,7.281,1340,5.527,1341,5.527,1342,6.513,1343,7.281,1344,6.008,1345,6.513,1346,7.281,1347,7.281]],["title/components/ErrorLayoutComponent.html",[0,1.075,57,1.869]],["body/components/ErrorLayoutComponent.html",[0,1.993,1,2.1,2,0.055,3,0.055,4,2.295,5,2.295,6,0.048,9,2.213,16,2.064,17,3.559,18,3.781,20,2.964,26,0.005,32,0.082,33,1.202,34,0.042,35,0.263,36,1.996,37,2.964,38,2.964,39,1.926,40,3.47,41,2.295,42,0.767,43,2.295,44,2.213,45,1.932,46,2.964,47,2.174,48,2.295,49,2.213,50,2.295,51,1.996,52,2.295,53,2.136,54,2.295,55,2.213,56,2.295,57,3.347,58,2.904,59,2.213,60,1.841,61,2.295,62,2.213,63,2.295,64,2.964,65,2.174,66,2.295,67,2.213,68,2.295,69,2.213,70,2.295,71,2.213,72,2.295,73,2.174,74,1.679,75,1.469,76,3.593,77,2.213,78,1.323,79,1.016,80,2.174,81,2.213,82,2.964,83,2.174,84,2.295,85,2.213,86,2.964,87,2.213,88,2.295,89,2.213,90,2.295,91,2.213,92,2.295,93,2.213,94,2.295,95,2.213,96,1.19,97,2.174,98,2.213,99,2.174,100,1.901,101,2.136,102,2.295,103,2.174,104,2.295,105,2.1,106,2.295,107,2.174,108,2.295,109,2.174,110,2.295,111,2.174,112,2.253,113,2.295,114,0.004,115,0.004,455,4.824,456,2.91,1348,5.846]],["title/modules/ErrorsModule.html",[189,1.975,202,3.614]],["body/modules/ErrorsModule.html",[0,1.78,2,0.062,3,0.062,6,0.055,26,0.006,32,0.14,33,1.363,34,0.063,35,0.298,36,2.264,51,3.16,55,3.095,57,3.095,58,2.302,69,3.095,114,0.004,115,0.004,169,1.933,189,3.269,191,3.624,192,5.489,193,4.257,194,3.968,202,7.357,203,5.25,204,1.715,205,4.105,211,4.74,214,3.968,216,5.127,225,2.702,229,5.984,230,2.702,259,3.435,461,5.795,463,5.703,474,5.127,1349,5.931,1350,6.63,1351,5.931,1352,7.086,1353,6.63,1354,6.63,1355,5.931,1356,6.63,1357,6.63,1358,6.63]],["title/modules/ErrorsRoutingModule.html",[189,1.975,1352,3.614]],["body/modules/ErrorsRoutingModule.html",[2,0.072,3,0.072,6,0.063,26,0.006,32,0.135,33,1.569,34,0.064,35,0.343,114,0.005,115,0.005,156,3.762,189,3.05,211,5.156,215,6.51,327,5.9,1352,6.51,1359,7.629,1360,7.629,1361,7.629,1362,7.629]],["title/classes/FixTopbar.html",[35,0.222,737,2.559]],["body/classes/FixTopbar.html",[2,0.042,3,0.042,6,0.037,8,0.355,21,0.106,22,0.261,23,2.064,24,0.88,25,0.282,26,0.006,27,0.341,28,0.437,30,0.497,32,0.063,34,0.069,35,0.434,39,2.029,42,0.414,114,0.003,115,0.003,127,0.867,133,0.453,137,0.553,138,0.437,242,0.453,360,0.946,456,3.768,529,3.699,552,3.207,589,1.52,597,0.707,620,1.543,621,1.606,705,3.802,706,2.403,707,2.744,708,3.86,709,4.403,710,1.026,713,2.47,714,2.403,715,3.802,716,2.923,717,3.707,718,3.802,719,2.988,720,4.582,721,3.802,722,3.273,723,3.802,724,3.44,725,3.802,726,2.176,727,3.802,728,2.47,729,3.802,730,3.47,731,3.378,732,2.637,733,3.802,734,4.233,735,3.057,736,3.802,737,4.123,738,4.011,739,2.47,740,2.47,741,2.47,742,2.47,743,2.47,744,3.57,745,3.57,746,2.47,747,2.47,748,2.47,749,2.47,750,2.47,751,2.541,752,2.47,753,3.57,754,3.47,755,2.283,1363,6.347,1364,4.518]],["title/directives/FontSizeDirective.html",[39,1.259,109,1.836]],["body/directives/FontSizeDirective.html",[2,0.063,3,0.063,6,0.056,8,0.528,16,2.374,17,2.296,21,0.158,22,0.339,24,0.907,25,0.234,26,0.006,30,0.605,32,0.094,33,1.383,34,0.048,35,0.302,39,2.372,42,0.616,109,3.067,114,0.004,115,0.004,118,0.978,119,3.502,120,4.69,122,2.639,126,2.479,127,1.219,131,3.651,133,0.674,137,0.823,138,0.651,142,1.485,143,2.415,161,4.025,162,4.69,163,4.164,164,3.676,384,3.484,1365,9.301,1366,6.724,1367,8.248,1368,8.248,1369,9.84,1370,6.724,1371,7.981,1372,8.321,1373,6.724,1374,6.724,1375,6.724,1376,6.724,1377,6.016,1378,6.724,1379,6.724,1380,6.016,1381,6.724,1382,6.724,1383,6.724]],["title/classes/ForgotPassword.html",[35,0.222,1384,3.444]],["body/classes/ForgotPassword.html",[2,0.057,3,0.057,6,0.05,8,0.479,21,0.143,22,0.319,24,0.579,25,0.286,26,0.006,27,0.459,28,0.589,30,0.578,32,0.108,34,0.066,35,0.404,42,0.558,60,2.686,100,3.014,114,0.004,115,0.004,118,1.065,127,1.059,133,0.61,137,0.746,138,0.589,242,0.61,333,4.571,338,5.476,342,5.178,345,4.247,360,0.952,589,1.45,597,0.952,620,1.373,621,1.574,710,1.384,810,2.966,1384,6.261,1385,4.775,1386,4.457,1387,3.961,1388,7.752,1389,6.089,1390,6.397,1391,4.709,1392,4.709,1393,6.192,1394,4.709,1395,4.709,1396,5.025,1397,5.025,1398,3.644,1399,4.709]],["title/components/ForgotPasswordComponent.html",[0,1.075,59,1.869]],["body/components/ForgotPasswordComponent.html",[0,1.877,1,1.753,2,0.046,3,0.046,4,1.916,5,1.916,6,0.04,9,1.847,16,1.723,17,3.525,18,3.732,20,1.916,21,0.114,22,0.275,25,0.19,26,0.006,30,0.604,32,0.094,33,1.004,34,0.035,35,0.22,36,1.667,37,2.628,38,2.628,39,1.707,40,3.229,41,1.916,42,0.701,43,1.916,44,1.847,45,1.613,46,2.628,47,1.815,48,1.916,49,1.847,50,1.916,51,1.667,52,1.916,53,1.783,54,1.916,55,1.847,56,1.916,57,1.847,58,1.694,59,3.114,60,2.715,61,1.916,62,1.847,63,1.916,64,2.628,65,1.815,66,1.916,67,1.847,68,1.916,69,1.847,70,1.916,71,1.847,72,1.916,73,1.815,74,1.401,75,1.227,76,3.384,77,1.847,78,1.231,79,0.901,80,1.815,81,1.847,82,2.628,83,1.815,84,1.916,85,1.847,86,2.628,87,1.847,88,1.916,89,1.847,90,1.916,91,1.847,92,1.916,93,1.847,94,1.916,95,1.847,96,1.107,97,1.815,98,1.847,99,1.815,100,1.587,101,1.783,102,1.916,103,1.815,104,1.916,105,1.753,106,1.916,107,1.815,108,1.916,109,1.815,110,1.916,111,1.815,112,1.881,113,1.916,114,0.004,115,0.004,118,0.794,119,3,126,2.013,131,3.229,133,0.766,142,1.479,143,2.405,186,1.49,265,2.068,362,3.858,384,3.47,468,8.158,530,2.837,630,1.866,1387,2.955,1400,9.12,1401,4.881,1402,6.696,1403,6.362,1404,6.362,1405,8.226,1406,8.226,1407,6.696,1408,4.881,1409,4.881,1410,5.738,1411,5.178,1412,4.881,1413,5.738,1414,5.178,1415,4.881,1416,3.774,1417,4.027,1418,3.774,1419,3.774,1420,6.696,1421,6.696,1422,5.991]],["title/classes/ForgotPasswordFailure.html",[35,0.222,1423,2.778]],["body/classes/ForgotPasswordFailure.html",[2,0.046,3,0.046,6,0.041,8,0.389,21,0.116,22,0.278,25,0.285,26,0.006,27,0.373,28,0.479,30,0.522,32,0.069,34,0.069,35,0.43,42,0.454,60,2.129,114,0.004,115,0.004,118,1.134,127,0.924,133,0.496,137,0.606,138,0.479,242,0.496,333,4.272,334,3.262,355,4.209,356,4.209,360,0.948,380,2.688,395,3.919,399,3.025,420,4.209,589,1.509,597,0.774,604,2.334,620,1.474,621,1.577,710,1.124,810,2.734,814,1.777,816,3.453,1385,4.401,1387,2.983,1423,4.655,1424,5.307,1425,5.578,1426,4.084,1427,4.186,1428,2.962,1429,5.656,1430,4.331,1431,4.331,1432,4.331,1433,4.331,1434,4.331,1435,3.064,1436,3.064,1437,3.064,1438,3.064,1439,3.064,1440,3.064,1441,3.064,1442,3.064,1443,3.064,1444,3.064,1445,2.962]],["title/classes/ForgotPasswordSuccess.html",[35,0.222,1434,2.778]],["body/classes/ForgotPasswordSuccess.html",[2,0.046,3,0.046,6,0.041,8,0.389,21,0.116,22,0.278,25,0.285,26,0.006,27,0.373,28,0.479,30,0.522,32,0.069,34,0.069,35,0.43,42,0.454,60,2.129,114,0.004,115,0.004,118,1.134,127,0.924,133,0.496,137,0.606,138,0.479,242,0.496,333,4.272,334,3.262,355,4.209,356,4.209,360,0.948,380,2.688,395,3.919,399,3.079,420,4.209,589,1.509,597,0.774,604,2.334,620,1.474,621,1.577,710,1.124,810,2.734,814,1.777,816,3.405,1385,4.401,1387,2.983,1423,4.331,1424,5.307,1427,3.064,1428,2.962,1429,5.656,1430,4.331,1431,4.331,1432,4.331,1433,4.331,1434,4.655,1435,3.064,1436,3.064,1437,3.064,1438,3.064,1439,3.064,1440,3.064,1441,3.064,1442,3.064,1443,3.064,1444,4.186,1445,2.962,1446,5.578,1447,4.084]],["title/classes/GenericValidator.html",[35,0.222,1448,3.819]],["body/classes/GenericValidator.html",[2,0.054,3,0.054,6,0.048,15,5.173,21,0.135,24,0.867,25,0.258,26,0.006,30,0.508,32,0.081,34,0.041,35,0.374,42,0.687,114,0.004,115,0.004,118,0.686,126,2.254,133,0.58,137,0.918,138,0.726,142,1.838,169,2.567,177,4.233,188,3.161,194,3.461,275,2.922,380,2.977,418,6.709,472,3.076,501,1.016,559,4.233,605,1.998,722,2.693,810,2.75,1448,5.799,1449,8.322,1450,5.173,1451,7.499,1452,5.783,1453,5.173,1454,6.188,1455,7.499,1456,6.11,1457,5.783,1458,4.772,1459,6.397,1460,5.783,1461,4.772,1462,5.783,1463,5.783,1464,7.499,1465,7.499,1466,7.499,1467,7.499,1468,5.153,1469,5.783,1470,6.436,1471,5.783,1472,3.863,1473,5.783,1474,5.783,1475,5.783,1476,5.783,1477,6.709,1478,5.783,1479,7.499,1480,5.783,1481,5.783,1482,5.783,1483,7.499,1484,5.783,1485,5.783,1486,5.783,1487,5.783,1488,7.499]],["title/components/HeaderSideComponent.html",[0,1.075,62,1.869]],["body/components/HeaderSideComponent.html",[0,1.651,1,1.264,2,0.033,3,0.033,4,1.382,5,1.382,6,0.029,9,1.332,16,1.243,17,3.447,18,3.624,20,1.382,21,0.082,22,0.218,24,0.721,25,0.215,26,0.006,27,0.399,28,0.512,30,0.631,32,0.124,33,0.724,34,0.025,35,0.158,36,1.202,37,2.077,38,2.077,39,1.35,40,2.777,41,1.382,42,0.812,43,1.382,44,1.332,45,1.163,46,2.077,47,1.309,48,1.382,49,1.332,50,1.382,51,1.202,52,1.382,53,1.286,54,1.382,55,1.332,56,1.382,57,1.332,58,1.222,59,1.332,60,1.109,61,1.382,62,2.678,63,2.977,64,2.077,65,1.309,66,1.382,67,1.332,68,1.382,69,1.332,70,1.382,71,1.332,72,1.382,73,1.309,74,1.011,75,0.885,76,2.977,77,1.332,78,1.058,79,0.712,80,1.309,81,1.332,82,2.077,83,1.309,84,1.382,85,1.332,86,2.077,87,1.332,88,1.382,89,1.332,90,1.382,91,1.332,92,1.382,93,1.332,94,1.382,95,1.332,96,1.072,97,1.309,98,1.332,99,1.309,100,1.145,101,1.286,102,1.382,103,1.309,104,1.382,105,1.264,106,1.382,107,1.309,108,1.382,109,1.309,110,1.382,111,1.309,112,1.356,113,1.382,114,0.003,115,0.003,118,0.628,119,2.496,122,2.977,126,1.591,127,1.246,131,2.777,133,0.531,137,0.779,138,0.615,142,1.878,143,2.862,158,1.163,176,2.351,186,1.616,219,5.837,225,1.434,230,1.434,239,0.8,240,3.756,242,0.353,249,1.286,256,2.26,257,2.905,299,2.905,334,2.242,343,1.462,362,3.683,363,3.669,412,2.742,436,2.576,445,3.691,456,2.451,526,6.551,530,2.242,539,4.542,550,2.905,613,1.641,707,1.522,708,2.288,719,3.33,722,2.541,755,1.778,787,2.041,899,5.766,900,5.766,937,2.905,939,1.98,940,2.905,947,1.824,957,3.149,958,2.905,959,5.69,1002,3.149,1017,8.402,1018,8.402,1079,3.535,1266,5.471,1489,3.149,1490,5.293,1491,7.074,1492,7.074,1493,5.837,1494,4.735,1495,6.328,1496,5.293,1497,7.074,1498,7.074,1499,7.074,1500,5.69,1501,3.149,1502,6.36,1503,5.837,1504,5.293,1505,4.735,1506,3.149,1507,5.293,1508,3.52,1509,4.367,1510,3.52,1511,3.52,1512,5.293,1513,3.52,1514,3.52,1515,3.52,1516,3.52,1517,5.293,1518,6.328,1519,5.293,1520,5.293,1521,3.149,1522,3.149,1523,3.149,1524,3.52,1525,2.351,1526,3.52,1527,3.52,1528,5.293,1529,5.69,1530,2.722,1531,3.52,1532,3.52,1533,3.52,1534,3.52,1535,3.52,1536,5.293,1537,3.874,1538,3.149,1539,3.149,1540,3.874,1541,5.293,1542,5.293,1543,5.293,1544,4.735,1545,4.735,1546,4.735,1547,4.735,1548,4.367,1549,5.293,1550,3.874,1551,5.293,1552,4.735,1553,4.735]],["title/interfaces/IAdjustScreenOptions.html",[486,1.045,1554,3.614]],["body/interfaces/IAdjustScreenOptions.html",[2,0.046,3,0.046,6,0.04,19,2.881,21,0.114,22,0.274,23,2.477,24,0.894,25,0.189,26,0.006,27,0.366,32,0.106,33,0.997,34,0.035,35,0.218,114,0.004,115,0.004,127,1.121,133,0.668,138,0.921,142,1.682,158,1.602,161,2.901,164,2.65,167,2.569,169,1.943,171,2.727,186,2.034,275,2.449,276,2.644,281,1.683,329,2.254,346,2.184,408,4.891,456,3.669,486,1.735,529,2.941,539,3.113,552,3.191,572,1.75,669,1.48,707,3.546,708,3.293,719,3.138,722,2.736,724,2.881,726,3.669,731,3.069,735,3.21,794,4.416,820,1.711,892,4.878,894,5.312,899,6.349,901,4.648,946,4.909,947,3.453,967,5.479,969,6.294,1079,5.088,1221,3.238,1326,3.238,1330,5.575,1537,3.548,1554,5.575,1555,3.749,1556,6.343,1557,3.113,1558,3.238,1559,3.381,1560,3.548,1561,5.575,1562,4.878,1563,4.878,1564,4.878,1565,4.878,1566,3.749,1567,3.749,1568,3.749,1569,3.749,1570,3.749,1571,3.749,1572,3.749,1573,3.749,1574,3.113,1575,3.749,1576,5.89,1577,3.749,1578,5.154,1579,3.749,1580,3.749,1581,3.749,1582,3.749,1583,5.89,1584,5.89,1585,3.548,1586,3.749,1587,3.749,1588,3.749,1589,3.238,1590,3.749,1591,3.381,1592,3.381,1593,3.548,1594,3.749,1595,3.548,1596,4.878,1597,3.749,1598,3.749,1599,5.89,1600,3.749,1601,3.749,1602,3.749,1603,3.749,1604,3.749,1605,3.749,1606,3.548,1607,3.749,1608,3.749,1609,3.749,1610,3.749]],["title/interfaces/IBadge.html",[486,1.045,1611,3.614]],["body/interfaces/IBadge.html",[0,1.786,2,0.053,3,0.053,6,0.046,19,2.427,21,0.132,22,0.302,23,2.668,24,0.959,25,0.277,26,0.006,27,0.424,28,0.874,32,0.103,33,1.155,34,0.04,35,0.253,42,0.85,78,1.1,96,1.104,114,0.004,115,0.004,117,3.916,126,2.466,133,0.563,135,3.812,141,6.005,158,1.855,186,1.714,259,2.909,281,1.949,329,2.177,343,2.333,346,2.53,486,1.842,501,1.66,552,2.017,569,5.211,709,3.628,722,2.017,724,2.427,732,3.056,774,4.11,787,3.255,888,4.756,945,3.75,947,2.909,1267,4.555,1472,5.48,1540,6.372,1550,4.11,1557,3.605,1611,6.005,1612,4.342,1613,6.615,1614,5.384,1615,4.342,1616,4.342,1617,6.733,1618,4.11,1619,6.403,1620,6.989,1621,5.689,1622,5.689,1623,6.005,1624,4.342,1625,4.342,1626,4.342,1627,3.75,1628,5.689,1629,4.342,1630,4.342,1631,4.342,1632,4.342,1633,4.342,1634,3.916,1635,4.342,1636,4.914,1637,4.342,1638,4.342,1639,6.345,1640,4.11,1641,4.342,1642,5.689,1643,4.342,1644,4.342]],["title/interfaces/IChildItem.html",[486,1.045,1623,3.614]],["body/interfaces/IChildItem.html",[0,1.753,2,0.051,3,0.051,6,0.045,19,2.338,21,0.127,22,0.295,23,2.619,24,0.966,25,0.285,26,0.006,27,0.408,28,0.694,32,0.1,33,1.112,34,0.039,35,0.243,42,0.882,78,1.074,96,1.084,114,0.004,115,0.004,117,3.772,126,2.421,133,0.542,135,3.719,138,0.92,141,5.895,158,1.787,186,1.651,259,2.802,281,1.878,329,2.124,343,2.247,346,2.437,486,1.815,501,1.708,552,1.942,569,5.135,709,3.539,722,1.942,724,2.338,732,2.981,774,3.958,787,3.135,888,4.669,945,3.612,947,2.802,1267,4.443,1472,5.38,1540,6.279,1550,3.958,1557,3.473,1611,5.253,1612,4.182,1613,5.253,1614,5.253,1615,4.182,1616,4.182,1617,6.634,1618,3.958,1619,6.544,1620,6.904,1621,5.55,1622,6.904,1623,6.717,1624,4.182,1625,4.182,1626,4.182,1627,3.612,1628,5.55,1629,4.182,1630,4.182,1631,4.182,1632,4.182,1633,4.182,1634,3.772,1635,4.182,1636,4.793,1637,4.182,1638,4.182,1639,6.229,1640,3.958,1641,4.182,1642,5.55,1643,4.182,1644,4.182]],["title/interfaces/ICredentials.html",[338,3.171,486,1.045]],["body/interfaces/ICredentials.html",[2,0.069,3,0.069,6,0.061,8,0.577,21,0.172,22,0.357,24,0.973,25,0.246,26,0.006,34,0.062,114,0.005,115,0.005,338,5.583,342,5.807,486,1.96,820,3.07,1387,4.314,1398,4.393,1645,6.566,1646,6.819,1647,5.676,1648,4.713,1649,4.713]],["title/interfaces/IDevice.html",[486,1.045,1650,4.075]],["body/interfaces/IDevice.html",[2,0.064,3,0.064,6,0.056,8,0.653,21,0.159,22,0.341,24,0.968,25,0.276,26,0.006,34,0.049,114,0.004,115,0.004,138,0.985,486,1.757,669,2.973,1145,4.396,1650,6.852,1651,6.8,1652,6.083,1653,9.337,1654,9.337,1655,8.353,1656,9.337,1657,9.337,1658,4.831]],["title/interfaces/ILayoutChangeOptions.html",[486,1.045,1565,3.614]],["body/interfaces/ILayoutChangeOptions.html",[2,0.045,3,0.045,6,0.04,8,0.378,19,2.865,21,0.113,22,0.272,23,2.466,24,0.863,25,0.188,26,0.006,27,0.363,32,0.106,33,0.989,34,0.034,35,0.216,114,0.004,115,0.004,127,1.117,133,0.664,138,0.929,142,1.675,158,1.589,161,2.878,164,2.629,167,2.555,169,1.932,171,2.705,186,2.023,275,2.43,276,2.633,281,1.67,329,2.245,346,2.167,408,5.692,456,3.7,486,1.73,529,2.925,539,3.088,552,3.324,572,1.74,669,2.315,707,3.534,708,3.279,719,3.121,722,2.724,724,2.865,726,3.653,731,3.052,735,3.193,794,4.397,820,2.34,892,4.852,894,5.29,899,6.335,901,4.623,946,2.878,947,3.93,967,5.46,969,6.276,1079,5.066,1221,3.212,1326,3.212,1330,5.552,1537,5.984,1554,4.852,1555,3.719,1556,3.719,1557,3.088,1558,3.212,1559,3.354,1560,3.52,1561,5.552,1562,4.852,1563,4.852,1564,4.852,1565,5.552,1566,3.719,1567,3.719,1568,3.719,1569,3.719,1570,3.719,1571,3.719,1572,3.719,1573,3.719,1574,3.088,1575,3.719,1576,5.866,1577,3.719,1578,5.126,1579,3.719,1580,3.719,1581,3.719,1582,3.719,1583,5.866,1584,5.866,1585,3.52,1586,3.719,1587,3.719,1588,3.719,1589,3.212,1590,3.719,1591,3.354,1592,3.354,1593,3.52,1594,3.719,1595,3.52,1596,4.852,1597,3.719,1598,3.719,1599,5.866,1600,3.719,1601,3.719,1602,3.719,1603,3.719,1604,3.719,1605,3.719,1606,3.52,1607,3.719,1608,3.719,1609,3.719,1610,3.719]],["title/interfaces/ILayoutConf.html",[486,1.045,1561,3.614]],["body/interfaces/ILayoutConf.html",[2,0.043,3,0.043,6,0.037,8,0.357,19,2.752,21,0.106,22,0.262,23,2.391,24,0.93,25,0.258,26,0.006,27,0.342,32,0.103,33,0.933,34,0.032,35,0.204,114,0.003,115,0.003,127,1.089,133,0.638,138,0.972,142,1.624,158,1.499,161,2.716,164,2.48,167,2.453,169,1.856,171,2.552,186,1.943,275,2.292,276,2.553,281,1.575,329,2.176,346,2.045,408,4.722,456,3.66,486,1.687,529,3.705,539,2.913,552,3.493,572,1.671,669,1.385,707,3.446,708,3.179,719,2.997,722,2.641,724,2.752,726,3.542,731,3.866,735,3.066,794,4.263,820,1.602,892,4.659,894,6.071,899,6.552,901,5.856,946,2.716,947,3.298,967,5.971,969,6.145,1079,4.912,1221,4.252,1326,3.031,1330,5.382,1537,3.321,1554,4.659,1555,3.509,1556,3.509,1557,2.913,1558,3.031,1559,3.164,1560,4.659,1561,5.835,1562,6.145,1563,6.145,1564,4.659,1565,4.659,1566,3.509,1567,3.509,1568,3.509,1569,3.509,1570,3.509,1571,3.509,1572,3.509,1573,3.509,1574,2.913,1575,3.509,1576,5.687,1577,3.509,1578,4.923,1579,3.509,1580,3.509,1581,3.509,1582,3.509,1583,5.687,1584,5.687,1585,3.321,1586,3.509,1587,3.509,1588,3.509,1589,3.031,1590,3.509,1591,3.164,1592,3.164,1593,3.321,1594,3.509,1595,3.321,1596,4.659,1597,3.509,1598,3.509,1599,5.687,1600,3.509,1601,3.509,1602,3.509,1603,3.509,1604,3.509,1605,3.509,1606,3.321,1607,3.509,1608,3.509,1609,3.509,1610,3.509]],["title/interfaces/IMenuItem.html",[486,1.045,1614,3.614]],["body/interfaces/IMenuItem.html",[0,1.724,2,0.049,3,0.049,6,0.043,19,2.26,21,0.122,22,0.288,23,2.575,24,0.968,25,0.286,26,0.006,27,0.394,28,0.679,32,0.098,33,1.075,34,0.037,35,0.235,42,0.876,78,1.05,96,1.066,114,0.004,115,0.004,117,3.647,126,2.38,133,0.524,135,3.636,138,0.96,141,5.796,158,1.728,186,1.596,259,2.709,281,1.815,329,2.077,343,2.172,346,2.356,486,1.791,501,1.697,552,2.844,569,5.066,709,3.46,722,1.878,724,2.26,732,2.915,774,3.827,787,3.031,888,4.591,945,3.492,947,2.709,1267,4.344,1472,5.29,1540,6.195,1550,6.195,1557,3.357,1611,6.195,1612,4.043,1613,5.136,1614,5.796,1615,4.043,1616,4.043,1617,6.545,1618,3.827,1619,6.507,1620,7.298,1621,5.426,1622,6.827,1623,6.461,1624,6.545,1625,4.043,1626,4.043,1627,3.492,1628,5.426,1629,4.043,1630,4.043,1631,4.043,1632,4.043,1633,4.043,1634,3.647,1635,4.043,1636,4.687,1637,4.043,1638,4.043,1639,6.124,1640,3.827,1641,4.043,1642,5.426,1643,4.043,1644,4.043]],["title/interfaces/IPatient.html",[486,1.045,640,1.507]],["body/interfaces/IPatient.html",[2,0.053,3,0.053,6,0.046,8,0.644,21,0.131,22,0.302,24,0.965,25,0.282,26,0.006,32,0.114,34,0.04,74,1.606,78,1.098,96,1.289,114,0.004,115,0.004,138,0.998,486,1.552,559,4.094,560,3.901,592,3.122,594,2.324,640,2.24,669,3.026,1145,4.093,1648,5.582,1649,5.582,1650,7.173,1652,7.777,1655,7.777,1658,4.923,1659,5.593,1660,7.337,1661,8.693,1662,7.777,1663,9.026,1664,6.722,1665,7.777,1666,8.693,1667,8.693,1668,5.593,1669,5.593,1670,5.593,1671,5.593,1672,5.593,1673,5.593]],["title/interfaces/IRoutePart.html",[486,1.045,1674,4.075]],["body/interfaces/IRoutePart.html",[2,0.061,3,0.061,6,0.054,19,2.801,21,0.152,22,0.331,23,3.071,24,0.946,25,0.267,26,0.006,32,0.113,33,1.332,34,0.046,35,0.291,114,0.004,115,0.004,118,0.768,119,3.164,127,0.885,131,2.543,135,4.546,138,0.78,142,1.431,156,3.195,188,3.542,276,3.454,329,2.386,346,2.92,486,1.705,529,4.167,532,7.576,536,5.01,560,6.586,1674,7.576,1675,5.796,1676,5.796,1677,8.448,1678,7.211,1679,5.796,1680,5.796,1681,5.796,1682,5.796,1683,7.211,1684,5.796,1685,5.796,1686,7.211,1687,5.796,1688,5.796,1689,5.796,1690,5.796]],["title/interfaces/ITheme.html",[486,1.045,1691,4.075]],["body/interfaces/ITheme.html",[1,2.038,2,0.053,3,0.053,6,0.047,19,2.453,21,0.133,22,0.304,24,0.884,25,0.234,26,0.006,27,0.428,32,0.115,33,1.167,34,0.041,35,0.255,42,0.88,114,0.004,115,0.004,122,2.227,127,1.012,133,0.569,138,0.846,167,3.369,169,1.654,186,2.261,214,3.397,281,1.97,329,2.441,346,2.557,486,1.567,552,2.962,722,2.038,900,3.958,997,6.805,1112,4.389,1493,4.683,1503,6.805,1509,7.214,1558,3.791,1559,3.958,1574,3.644,1589,3.791,1591,3.958,1592,3.958,1691,7.675,1692,5.077,1693,8.595,1694,8.595,1695,7.821,1696,6.627,1697,5.077,1698,5.077,1699,5.077,1700,5.077,1701,5.077,1702,5.077,1703,5.077,1704,5.077,1705,7.378,1706,5.077,1707,5.077,1708,5.077,1709,5.077,1710,5.077,1711,8.475,1712,5.077,1713,5.077,1714,5.077,1715,5.077,1716,6.627,1717,5.077,1718,5.077,1719,5.077,1720,5.077,1721,5.077,1722,5.077,1723,6.627,1724,5.077,1725,5.077,1726,5.077,1727,6.627,1728,5.077,1729,5.077,1730,5.077,1731,5.077,1732,5.077,1733,5.077]],["title/interfaces/IUser.html",[486,1.045,1647,3.819]],["body/interfaces/IUser.html",[2,0.065,3,0.065,6,0.058,8,0.547,21,0.163,22,0.346,24,0.983,25,0.273,26,0.006,34,0.06,96,0.937,114,0.005,115,0.005,138,0.98,338,4.473,342,4.653,486,1.917,820,2.976,1387,4.254,1398,5.635,1645,6.232,1646,6.724,1647,6.517,1648,6.045,1649,6.045]],["title/classes/InitializeNursingHome.html",[35,0.222,600,2.559]],["body/classes/InitializeNursingHome.html",[2,0.044,3,0.044,6,0.038,8,0.365,21,0.109,22,0.266,24,0.441,25,0.279,26,0.006,27,0.35,28,0.449,30,0.315,32,0.104,34,0.07,35,0.436,74,1.332,75,1.166,79,1.083,114,0.003,115,0.003,118,1.15,204,1.673,239,1.691,242,0.465,360,0.983,429,1.201,501,1.136,572,1.954,584,3.857,585,2.978,586,2.469,587,1.885,588,1.485,589,1.526,590,2.611,592,3.709,593,2.048,594,1.928,595,1.944,596,1.255,597,0.726,598,2.537,599,3.857,600,4.172,601,2.17,602,3.761,603,1.944,604,1.649,605,1.723,606,3.97,607,1.327,608,3.761,609,2.243,610,3.761,611,1.17,612,3.857,613,2.496,614,3.857,615,2.037,616,3.857,617,3.857,618,3.857,619,2.611,620,1.364,621,1.384,622,3.638,623,2.611,624,2.611,625,1.485,626,2.611,627,2.611,628,2.611,629,2.611,630,1.293,631,2.611,632,2.611,633,2.611,634,1.462,635,2.537,1734,4.641]],["title/classes/InitializePatient.html",[35,0.222,644,2.435]],["body/classes/InitializePatient.html",[2,0.041,3,0.041,6,0.036,8,0.344,21,0.103,22,0.255,24,0.416,25,0.28,26,0.006,27,0.33,28,0.424,30,0.297,32,0.101,34,0.07,35,0.438,78,1.542,79,1.056,96,0.97,114,0.003,115,0.003,118,1.154,204,1.606,239,1.639,242,0.439,360,0.985,429,1.606,501,1.091,572,1.894,587,1.81,588,1.401,589,1.53,595,1.316,596,1.184,597,0.685,601,2.102,603,1.866,604,1.583,605,1.922,607,1.107,609,2.186,611,1.419,613,2.433,615,1.955,620,1.425,621,1.446,625,1.401,630,1.22,634,1.379,636,3.557,637,2.212,638,2.329,640,2.529,641,1.424,642,2.269,643,3.474,644,3.87,645,3.557,646,3.694,647,3.474,648,3.474,649,3.557,650,3.557,651,3.321,652,3.557,653,3.557,654,2.99,655,2.23,656,3.557,657,2.329,658,3.302,659,2.329,660,2.329,661,2.329,662,2.329,663,2.329,664,2.329,665,2.329,666,2.329,667,2.329,668,2.329,669,1.895,670,2.329,671,2.269,1735,4.378]],["title/classes/InitializeUser.html",[35,0.222,679,2.435]],["body/classes/InitializeUser.html",[2,0.041,3,0.041,6,0.036,8,0.344,21,0.102,22,0.255,24,0.416,25,0.28,26,0.006,27,0.33,28,0.423,30,0.297,32,0.101,34,0.07,35,0.438,78,0.928,79,1.055,96,1.393,114,0.003,115,0.003,118,1.154,204,1.605,239,1.638,242,0.438,360,0.985,429,1.605,501,1.09,572,1.893,587,1.808,588,1.4,589,1.53,595,1.315,596,1.183,597,0.684,601,2.101,603,1.864,604,1.582,605,1.921,607,1.106,609,2.185,611,1.418,613,2.432,615,1.954,620,1.425,621,1.446,625,1.4,630,1.219,634,1.378,655,2.228,669,1.894,672,3.555,673,2.21,674,2.327,676,1.445,677,2.266,678,3.472,679,3.868,680,3.555,681,3.693,682,3.472,683,3.472,684,3.555,685,3.555,686,3.319,687,3.555,688,3.555,689,2.988,690,3.472,691,2.327,692,3.3,693,2.327,694,2.327,695,2.327,696,2.327,697,2.327,698,2.327,699,2.327,700,2.327,701,2.327,702,2.327,703,2.327,704,2.266,1736,4.374]],["title/injectables/LayoutService.html",[329,1.462,539,3.171]],["body/injectables/LayoutService.html",[2,0.039,3,0.039,6,0.034,8,0.547,19,3.007,21,0.096,22,0.244,23,2.262,24,0.861,25,0.238,26,0.006,27,0.655,28,0.782,30,0.638,32,0.097,33,0.844,34,0.029,35,0.185,42,0.543,114,0.003,115,0.003,126,1.781,127,1.286,133,0.81,137,0.726,138,0.91,142,1.999,143,2.498,158,1.356,161,2.456,164,2.243,167,2.284,169,1.728,171,2.309,186,1.809,275,2.995,276,2.415,281,2.058,329,2.392,346,1.849,408,4.467,456,3.756,486,1.472,529,2.615,539,3.806,552,3.192,572,2,669,1.253,707,3.294,708,3.007,719,2.79,722,2.902,724,2.562,726,3.351,731,2.729,735,2.855,794,4.684,820,1.449,892,6.505,894,4.852,899,6.055,901,4.134,946,2.456,947,3.605,967,5.936,969,5.914,1079,4.647,1221,2.741,1326,2.741,1330,5.092,1537,3.004,1554,5.576,1555,3.174,1556,3.174,1557,2.635,1558,2.741,1559,2.862,1560,3.004,1561,6.354,1562,4.338,1563,4.338,1564,4.338,1565,5.576,1566,5.892,1567,4.583,1568,4.583,1569,5.892,1570,5.892,1571,4.583,1572,3.174,1573,5.892,1574,2.635,1575,4.583,1576,5.892,1577,4.583,1578,5.892,1579,4.583,1580,3.174,1581,3.174,1582,3.174,1583,5.38,1584,5.38,1585,4.338,1586,5.892,1587,3.174,1588,3.174,1589,2.741,1590,3.174,1591,2.862,1592,2.862,1593,4.338,1594,4.583,1595,4.338,1596,5.576,1597,4.583,1598,3.174,1599,5.38,1600,3.174,1601,3.174,1602,3.174,1603,3.174,1604,3.174,1605,4.583,1606,4.338,1607,4.583,1608,5.892,1609,3.174,1610,3.174,1737,5.927,1738,5.927,1739,5.927,1740,4.104,1741,4.104,1742,4.104,1743,4.104,1744,4.104,1745,4.104,1746,4.104,1747,4.104,1748,4.104,1749,4.104]],["title/classes/LoadNursingHomes.html",[35,0.222,610,2.495]],["body/classes/LoadNursingHomes.html",[2,0.044,3,0.044,6,0.038,8,0.365,21,0.109,22,0.266,24,0.441,25,0.279,26,0.006,27,0.35,28,0.449,30,0.315,32,0.104,34,0.07,35,0.436,74,1.332,75,1.166,79,1.083,114,0.003,115,0.003,118,1.15,204,1.673,239,1.691,242,0.465,360,0.983,429,1.201,501,1.136,572,1.954,584,3.857,585,2.978,586,2.469,587,1.885,588,1.485,589,1.526,590,2.611,592,3.709,593,2.048,594,1.928,595,1.944,596,1.255,597,0.726,598,2.537,599,3.857,600,3.857,601,1.885,602,3.761,603,1.944,604,1.649,605,1.723,606,3.97,607,1.327,608,3.761,609,2.243,610,4.068,611,1.346,612,3.857,613,2.496,614,3.857,615,2.037,616,3.857,617,3.857,618,3.857,619,2.611,620,1.364,621,1.384,622,2.611,623,2.611,624,2.611,625,1.485,626,2.611,627,3.638,628,2.611,629,2.611,630,1.293,631,2.611,632,2.611,633,2.611,634,1.462,635,2.537,1750,4.641]],["title/classes/LoadNursingHomesFailure.html",[35,0.222,825,3.058]],["body/classes/LoadNursingHomesFailure.html",[2,0.049,3,0.049,6,0.043,8,0.406,21,0.121,22,0.286,24,0.748,25,0.285,26,0.006,27,0.39,28,0.5,30,0.534,32,0.097,34,0.068,35,0.416,42,0.473,75,2.116,79,1.133,114,0.004,115,0.004,118,1.098,127,1.317,133,0.518,137,0.633,138,0.5,242,0.518,360,0.967,380,2.366,399,2.993,585,3.878,589,1.472,592,3.636,593,2.279,594,2.146,597,0.808,607,1.241,611,1.59,620,1.459,621,1.575,710,1.174,810,2.783,813,4.873,814,1.855,815,2.731,816,3.212,819,3.602,820,1.824,821,3.45,822,4.873,823,6.049,824,4.873,825,5.215,826,4.873,827,4.873,828,3.602,829,3.602,830,4.854,831,3.602,832,3.602,833,3.45,1751,6.959,1752,5.165]],["title/classes/LoadNursingHomesSuccess.html",[35,0.222,824,3.058]],["body/classes/LoadNursingHomesSuccess.html",[2,0.048,3,0.048,6,0.043,8,0.405,21,0.121,22,0.286,24,0.748,25,0.285,26,0.006,27,0.389,28,0.499,30,0.533,32,0.097,34,0.068,35,0.416,42,0.473,75,2.115,79,1.133,114,0.004,115,0.004,118,1.097,127,1.316,133,0.517,137,0.632,138,0.499,242,0.517,360,0.967,380,2.364,399,3.058,585,3.876,589,1.471,592,3.636,593,2.276,594,2.143,597,0.807,607,1.24,611,1.589,620,1.458,621,1.575,710,1.172,810,2.782,813,4.87,814,1.853,815,2.729,816,3.211,819,3.598,820,1.821,821,3.446,822,4.87,823,6.047,824,5.212,825,4.87,826,4.87,827,4.87,828,3.598,829,4.85,830,3.598,831,3.598,832,3.598,833,3.446,1753,6.953,1754,5.159]],["title/classes/LoadPatientUsers.html",[35,0.222,656,2.435]],["body/classes/LoadPatientUsers.html",[2,0.04,3,0.04,6,0.035,8,0.336,21,0.1,22,0.251,24,0.406,25,0.281,26,0.006,27,0.322,28,0.413,30,0.482,32,0.099,34,0.07,35,0.436,42,0.392,78,1.54,79,1.044,96,1.044,114,0.003,115,0.003,118,1.15,127,0.834,133,0.428,137,0.523,138,0.413,204,1.579,239,1.617,242,0.428,360,0.983,429,1.579,501,1.072,572,1.868,587,1.778,588,1.367,589,1.525,595,1.284,596,1.155,597,0.668,601,1.778,603,1.834,604,1.556,605,1.896,607,1.088,609,2.162,611,1.484,613,2.406,615,1.922,620,1.415,621,1.534,625,1.367,630,1.19,634,1.346,636,3.509,637,2.159,638,2.273,640,2.506,641,1.389,642,2.214,643,3.427,644,3.509,645,3.509,646,3.654,647,3.427,648,3.427,649,3.509,650,3.509,651,3.277,652,3.509,653,3.509,654,2.939,655,2.191,656,3.827,657,2.273,658,2.273,659,2.273,660,2.273,661,2.273,662,2.273,663,2.273,664,2.273,665,2.273,666,2.273,667,2.273,668,2.273,669,2.605,670,3.245,671,2.214,710,0.971,1755,6.101,1756,4.273]],["title/classes/LoadPatientUsersFailure.html",[35,0.222,852,2.863]],["body/classes/LoadPatientUsersFailure.html",[2,0.044,3,0.044,6,0.039,8,0.372,21,0.111,22,0.269,24,0.623,25,0.284,26,0.006,27,0.357,28,0.458,30,0.51,32,0.105,34,0.068,35,0.421,42,0.433,78,1.501,79,1.092,96,1.24,114,0.004,115,0.004,118,1.11,127,1.319,133,0.474,137,0.579,138,0.458,242,0.474,360,0.971,380,2.44,399,3.046,589,1.482,597,0.74,607,1.168,611,1.692,620,1.485,621,1.578,640,2.478,641,1.538,676,1.563,710,1.074,810,2.682,814,1.698,815,2.572,816,3.368,820,1.67,838,4.359,839,4.858,842,3.036,843,2.928,844,4.229,845,5.46,846,4.359,847,4.359,848,4.359,849,4.359,850,4.359,851,3.231,852,4.706,853,3.036,854,3.036,855,3.036,856,3.036,857,3.036,858,3.036,859,4.207,860,2.928,1425,5.407,1426,3.902]],["title/classes/LoadPatientUsersSuccess.html",[35,0.222,850,2.863]],["body/classes/LoadPatientUsersSuccess.html",[2,0.044,3,0.044,6,0.039,8,0.372,21,0.111,22,0.269,24,0.623,25,0.284,26,0.006,27,0.357,28,0.458,30,0.51,32,0.105,34,0.068,35,0.421,42,0.433,78,1.501,79,1.092,96,1.24,114,0.004,115,0.004,118,1.11,127,1.319,133,0.474,137,0.579,138,0.458,242,0.474,360,0.971,380,2.44,399,3.092,589,1.482,597,0.74,607,1.168,611,1.692,620,1.485,621,1.578,640,2.478,641,1.538,676,1.563,710,1.074,810,2.682,814,1.698,815,2.572,816,3.304,820,1.67,838,4.359,839,4.858,842,3.036,843,2.928,844,4.229,845,5.46,846,4.359,847,4.359,848,4.359,849,4.359,850,4.706,851,3.231,852,4.359,853,3.036,854,3.036,855,3.036,856,3.036,857,3.036,858,4.207,859,3.036,860,2.928,1446,5.407,1447,3.902]],["title/classes/LoadPatients.html",[35,0.222,648,2.379]],["body/classes/LoadPatients.html",[2,0.041,3,0.041,6,0.036,8,0.344,21,0.103,22,0.255,24,0.416,25,0.28,26,0.006,27,0.33,28,0.424,30,0.297,32,0.101,34,0.07,35,0.438,78,1.542,79,1.056,96,0.97,114,0.003,115,0.003,118,1.154,204,1.606,239,1.639,242,0.439,360,0.985,429,1.606,501,1.091,572,1.894,587,1.81,588,1.401,589,1.53,595,1.316,596,1.184,597,0.685,601,1.81,603,1.866,604,1.583,605,1.922,607,1.107,609,2.186,611,1.498,613,2.433,615,1.955,620,1.425,621,1.446,625,1.401,630,1.22,634,1.379,636,3.557,637,2.212,638,2.329,640,2.529,641,1.424,642,2.269,643,3.474,644,3.557,645,3.557,646,3.694,647,3.474,648,3.78,649,3.557,650,3.557,651,3.321,652,3.557,653,3.557,654,2.99,655,2.23,656,3.557,657,2.329,658,2.329,659,2.329,660,2.329,661,2.329,662,3.302,663,2.329,664,2.329,665,2.329,666,2.329,667,2.329,668,2.329,669,1.895,670,2.329,671,2.269,1757,4.378]],["title/classes/LoadPatientsFailure.html",[35,0.222,847,2.863]],["body/classes/LoadPatientsFailure.html",[2,0.045,3,0.045,6,0.039,8,0.372,21,0.111,22,0.27,24,0.624,25,0.284,26,0.006,27,0.358,28,0.459,30,0.51,32,0.105,34,0.068,35,0.421,42,0.434,78,1.501,79,1.093,96,1.217,114,0.004,115,0.004,118,1.11,127,1.319,133,0.475,137,0.58,138,0.459,242,0.475,360,0.971,380,2.442,399,3.047,589,1.482,597,0.741,607,1.17,611,1.693,620,1.485,621,1.578,640,2.48,641,1.541,676,1.566,710,1.077,810,2.685,814,1.702,815,2.576,816,3.306,820,1.673,838,4.364,839,4.863,842,3.043,843,2.934,844,4.234,845,5.464,846,4.364,847,4.71,848,4.364,849,4.364,850,4.364,851,3.236,852,4.364,853,3.043,854,3.043,855,4.214,856,3.043,857,3.043,858,3.043,859,3.043,860,2.934,1758,5.87,1759,4.24]],["title/classes/LoadPatientsSuccess.html",[35,0.222,846,2.863]],["body/classes/LoadPatientsSuccess.html",[2,0.044,3,0.044,6,0.039,8,0.372,21,0.111,22,0.27,24,0.623,25,0.284,26,0.006,27,0.357,28,0.458,30,0.51,32,0.105,34,0.068,35,0.421,42,0.434,78,1.501,79,1.093,96,1.217,114,0.004,115,0.004,118,1.11,127,1.319,133,0.475,137,0.58,138,0.458,242,0.475,360,0.971,380,2.441,399,3.093,589,1.482,597,0.74,607,1.169,611,1.693,620,1.485,621,1.578,640,2.479,641,1.539,676,1.564,710,1.076,810,2.683,814,1.7,815,2.574,816,3.305,820,1.671,838,4.361,839,4.86,842,3.04,843,2.931,844,4.232,845,5.462,846,4.708,847,4.361,848,4.361,849,4.361,850,4.361,851,3.233,852,4.361,853,3.04,854,4.21,855,3.04,856,3.04,857,3.04,858,3.04,859,3.04,860,2.931,1760,5.866,1761,4.235]],["title/classes/LoadUserPatients.html",[35,0.222,690,2.379]],["body/classes/LoadUserPatients.html",[2,0.04,3,0.04,6,0.035,8,0.335,21,0.1,22,0.251,24,0.406,25,0.281,26,0.006,27,0.322,28,0.413,30,0.482,32,0.099,34,0.07,35,0.436,42,0.391,78,1.064,79,1.044,96,1.391,114,0.003,115,0.003,118,1.15,127,0.833,133,0.428,137,0.523,138,0.413,204,1.577,239,1.616,242,0.428,360,0.983,429,1.577,501,1.071,572,1.867,587,1.777,588,1.366,589,1.525,595,1.283,596,1.154,597,0.668,601,1.777,603,1.832,604,1.555,605,1.895,607,1.087,609,2.161,611,1.484,613,2.405,615,1.92,620,1.415,621,1.534,625,1.366,630,1.189,634,1.344,655,2.19,669,2.605,672,3.507,673,2.157,674,2.271,676,1.411,677,2.212,678,3.425,679,3.507,680,3.507,681,3.652,682,3.425,683,3.425,684,3.507,685,3.507,686,3.275,687,3.507,688,3.507,689,2.936,690,3.737,691,2.271,692,2.271,693,2.271,694,2.271,695,2.271,696,2.271,697,2.271,698,2.271,699,2.271,700,2.271,701,2.271,702,2.271,703,3.243,704,2.212,710,0.97,1762,6.097,1763,4.269]],["title/classes/LoadUserPatientsFailure.html",[35,0.222,876,2.863]],["body/classes/LoadUserPatientsFailure.html",[2,0.044,3,0.044,6,0.039,8,0.371,21,0.111,22,0.269,24,0.622,25,0.284,26,0.006,27,0.356,28,0.457,30,0.509,32,0.105,34,0.068,35,0.421,42,0.433,78,1.319,79,1.092,96,1.363,114,0.004,115,0.004,118,1.11,127,1.319,133,0.473,137,0.578,138,0.457,242,0.473,360,0.971,380,2.438,399,3.045,589,1.481,597,0.739,607,1.167,611,1.692,620,1.484,621,1.577,640,1.998,641,1.536,676,1.561,710,1.073,810,2.681,814,1.696,815,2.57,816,3.419,820,1.668,851,4.544,866,4.356,867,4.856,868,3.033,869,2.925,870,4.227,871,4.356,872,4.356,873,4.227,874,4.356,875,4.356,876,4.703,877,3.033,878,3.033,879,3.033,880,3.033,881,3.033,882,3.033,883,4.204,884,2.925,1425,5.402,1426,3.898]],["title/classes/LoadUserPatientsSuccess.html",[35,0.222,875,2.863]],["body/classes/LoadUserPatientsSuccess.html",[2,0.044,3,0.044,6,0.039,8,0.371,21,0.111,22,0.269,24,0.622,25,0.284,26,0.006,27,0.356,28,0.457,30,0.509,32,0.105,34,0.068,35,0.421,42,0.433,78,1.319,79,1.092,96,1.363,114,0.004,115,0.004,118,1.11,127,1.319,133,0.473,137,0.578,138,0.457,242,0.473,360,0.971,380,2.438,399,3.092,589,1.481,597,0.739,607,1.167,611,1.692,620,1.484,621,1.577,640,1.998,641,1.536,676,1.561,710,1.073,810,2.681,814,1.696,815,2.57,816,3.367,820,1.668,851,4.544,866,4.356,867,4.856,868,3.033,869,2.925,870,4.227,871,4.356,872,4.356,873,4.227,874,4.356,875,4.703,876,4.356,877,3.033,878,3.033,879,3.033,880,3.033,881,3.033,882,4.204,883,3.033,884,2.925,1446,5.402,1447,3.898]],["title/classes/LoadUsers.html",[35,0.222,683,2.379]],["body/classes/LoadUsers.html",[2,0.041,3,0.041,6,0.036,8,0.344,21,0.102,22,0.255,24,0.416,25,0.28,26,0.006,27,0.33,28,0.423,30,0.297,32,0.101,34,0.07,35,0.438,78,0.928,79,1.055,96,1.393,114,0.003,115,0.003,118,1.154,204,1.605,239,1.638,242,0.438,360,0.985,429,1.605,501,1.09,572,1.893,587,1.808,588,1.4,589,1.53,595,1.315,596,1.183,597,0.684,601,1.808,603,1.864,604,1.582,605,1.921,607,1.106,609,2.185,611,1.498,613,2.432,615,1.954,620,1.425,621,1.446,625,1.4,630,1.219,634,1.378,655,2.228,669,1.894,672,3.555,673,2.21,674,2.327,676,1.445,677,2.266,678,3.472,679,3.555,680,3.555,681,3.693,682,3.472,683,3.778,684,3.555,685,3.555,686,3.319,687,3.555,688,3.555,689,2.988,690,3.472,691,2.327,692,2.327,693,2.327,694,2.327,695,2.327,696,3.3,697,2.327,698,2.327,699,2.327,700,2.327,701,2.327,702,2.327,703,2.327,704,2.266,1764,4.374]],["title/classes/LoadUsersFailure.html",[35,0.222,872,2.863]],["body/classes/LoadUsersFailure.html",[2,0.044,3,0.044,6,0.039,8,0.372,21,0.111,22,0.269,24,0.623,25,0.284,26,0.006,27,0.357,28,0.458,30,0.51,32,0.105,34,0.068,35,0.421,42,0.433,78,1.275,79,1.092,96,1.363,114,0.004,115,0.004,118,1.11,127,1.319,133,0.474,137,0.579,138,0.458,242,0.474,360,0.971,380,2.44,399,3.046,589,1.482,597,0.74,607,1.168,611,1.692,620,1.485,621,1.578,640,2,641,1.538,676,1.563,710,1.074,810,2.682,814,1.698,815,2.572,816,3.419,820,1.67,851,4.545,866,4.359,867,4.858,868,3.036,869,2.928,870,4.229,871,4.359,872,4.706,873,4.229,874,4.359,875,4.359,876,4.359,877,3.036,878,3.036,879,4.207,880,3.036,881,3.036,882,3.036,883,3.036,884,2.928,1758,5.861,1759,4.23]],["title/classes/LoadUsersSuccess.html",[35,0.222,871,2.863]],["body/classes/LoadUsersSuccess.html",[2,0.044,3,0.044,6,0.039,8,0.372,21,0.111,22,0.269,24,0.623,25,0.284,26,0.006,27,0.357,28,0.458,30,0.51,32,0.105,34,0.068,35,0.421,42,0.433,78,1.275,79,1.092,96,1.363,114,0.004,115,0.004,118,1.11,127,1.319,133,0.474,137,0.579,138,0.458,242,0.474,360,0.971,380,2.44,399,3.092,589,1.482,597,0.74,607,1.168,611,1.692,620,1.485,621,1.578,640,2,641,1.538,676,1.563,710,1.074,810,2.682,814,1.698,815,2.572,816,3.368,820,1.67,851,4.545,866,4.359,867,4.858,868,3.036,869,2.928,870,4.229,871,4.706,872,4.359,873,4.229,874,4.359,875,4.359,876,4.359,877,3.036,878,4.207,879,3.036,880,3.036,881,3.036,882,3.036,883,3.036,884,2.928,1760,5.861,1761,4.23]],["title/components/LoaderComponent.html",[0,1.075,65,1.836]],["body/components/LoaderComponent.html",[0,1.92,1,1.873,2,0.049,3,0.049,4,2.047,5,2.047,6,0.043,9,2.994,13,3.638,16,1.842,17,3.538,18,3.751,20,2.047,21,0.122,22,0.288,23,2.953,25,0.198,26,0.006,30,0.598,32,0.098,33,1.073,34,0.037,35,0.235,36,1.781,37,2.749,38,2.749,39,1.786,40,3.319,41,2.047,42,0.775,43,2.047,44,1.974,45,1.724,46,2.749,47,1.939,48,2.047,49,1.974,50,2.047,51,1.781,52,2.047,53,1.906,54,2.047,55,1.974,56,2.047,57,1.974,58,1.811,59,1.974,60,1.643,61,2.047,62,1.974,63,2.047,64,2.749,65,3.144,66,2.047,67,1.974,68,2.047,69,1.974,70,2.047,71,1.974,72,2.047,73,1.939,74,1.497,75,1.311,76,3.462,77,1.974,78,1.265,79,0.942,80,1.939,81,1.974,82,2.749,83,1.939,84,2.047,85,1.974,86,2.749,87,1.974,88,2.047,89,1.974,90,2.047,91,1.974,92,2.047,93,1.974,94,2.047,95,1.974,96,1.138,97,1.939,98,1.974,99,1.939,100,1.696,101,1.906,102,2.047,103,1.939,104,2.047,105,1.873,106,2.047,107,1.939,108,2.047,109,1.939,110,2.047,111,1.939,112,2.01,113,2.047,114,0.004,115,0.004,118,0.831,119,3.104,126,2.105,127,0.957,131,3.319,133,0.523,137,0.639,138,0.505,142,1.152,143,1.873,227,5.127,265,2.21,380,2.541,429,1.35,530,2.968,620,0.84,762,4.822,763,4.666,764,4.706,990,4.304,1765,5.216,1766,5.127,1767,7.909,1768,7.005,1769,7.005,1770,5.216,1771,5.216,1772,5.216,1773,4.666,1774,4.304,1775,5.216,1776,5.216]],["title/injectables/LoaderService.html",[329,1.462,1777,4.418]],["body/injectables/LoaderService.html",[2,0.053,3,0.053,6,0.047,8,0.648,19,2.45,21,0.133,22,0.304,23,2.841,24,0.861,25,0.233,26,0.006,27,0.622,28,0.548,30,0.592,32,0.127,33,1.165,34,0.04,35,0.255,42,0.678,65,2.107,114,0.004,115,0.004,122,2.905,126,2.225,127,1.27,133,0.876,137,0.906,138,0.716,142,1.929,143,2.035,158,1.873,186,1.73,225,2.31,227,7.172,230,2.31,265,2.401,275,3.739,276,2.861,329,2.439,343,3.766,346,2.554,362,3.63,363,4.281,428,5.162,429,2.45,438,5.39,707,4.019,716,4.023,762,5.082,764,4.527,796,3.639,798,5.07,1773,6.621,1777,6.621,1778,5.667,1779,7.401,1780,7.401,1781,5.667,1782,7.401,1783,7.401,1784,5.667,1785,8.738,1786,8.738,1787,5.667,1788,7.401,1789,5.667,1790,5.667,1791,5.667,1792,5.667,1793,5.667,1794,5.667,1795,5.667,1796,5.667,1797,5.667,1798,5.667]],["title/components/LockscreenComponent.html",[0,1.075,67,1.869]],["body/components/LockscreenComponent.html",[0,1.984,1,1.749,2,0.046,3,0.046,4,1.911,5,1.911,6,0.04,8,0.383,9,1.843,14,4.356,16,1.719,17,3.524,18,3.732,20,1.911,21,0.114,22,0.275,25,0.216,26,0.006,27,0.367,28,0.471,30,0.603,32,0.093,33,1.001,34,0.035,35,0.219,36,1.663,37,2.624,38,2.624,39,1.705,40,3.226,41,1.911,42,0.7,43,1.911,44,1.843,45,1.609,46,2.624,47,1.811,48,1.911,49,1.843,50,1.911,51,1.663,52,1.911,53,1.779,54,1.911,55,1.843,56,1.911,57,1.843,58,1.691,59,1.843,60,1.534,61,1.911,62,1.843,63,1.911,64,2.624,65,1.811,66,1.911,67,3.111,68,1.911,69,1.843,70,1.911,71,1.843,72,1.911,73,1.811,74,1.398,75,1.224,76,3.381,77,1.843,78,1.229,79,0.9,80,1.811,81,1.843,82,2.624,83,1.811,84,1.911,85,1.843,86,2.624,87,1.843,88,1.911,89,1.843,90,1.911,91,1.843,92,1.911,93,1.843,94,1.911,95,1.843,96,1.106,97,1.811,98,1.843,99,1.811,100,1.583,101,1.779,102,1.911,103,1.811,104,1.911,105,1.749,106,1.911,107,1.811,108,1.911,109,1.811,110,1.911,111,1.811,112,1.877,113,1.911,114,0.004,115,0.004,118,0.793,119,2.997,126,2.01,131,3.226,133,0.765,142,1.476,143,2.401,171,3.761,186,1.486,265,2.063,268,4.894,271,3.148,384,3.464,428,4.663,530,2.833,927,5.981,1387,3.627,1403,6.356,1404,6.356,1410,5.732,1411,5.17,1413,5.732,1414,5.17,1416,3.766,1417,4.018,1418,3.766,1419,3.766,1596,4.894,1799,4.869,1800,5.981,1801,6.686,1802,6.686,1803,8.218,1804,9.282,1805,4.869,1806,4.869,1807,4.869,1808,4.869,1809,4.869,1810,4.869,1811,4.869,1812,6.686,1813,6.686,1814,6.686,1815,6.686,1816,6.686,1817,5.981,1818,4.869]],["title/classes/Login.html",[35,0.222,333,2.435]],["body/classes/Login.html",[2,0.057,3,0.057,6,0.05,8,0.48,21,0.143,22,0.319,24,0.58,25,0.286,26,0.006,27,0.461,28,0.591,30,0.579,32,0.108,34,0.066,35,0.404,42,0.56,60,2.446,100,2.922,114,0.004,115,0.004,118,1.066,127,1.061,133,0.612,137,0.748,138,0.591,242,0.612,333,4.752,338,5.483,342,5.187,345,4.259,360,0.953,589,1.451,597,0.955,620,1.375,621,1.575,710,1.387,810,2.97,1384,5.956,1385,4.78,1386,4.47,1387,3.768,1390,5.039,1391,4.722,1392,4.722,1393,6.197,1394,4.722,1395,4.722,1396,6.408,1397,5.039,1398,3.655,1399,4.722,1819,7.766,1820,6.107]],["title/classes/LoginFailure.html",[35,0.222,1430,2.778]],["body/classes/LoginFailure.html",[2,0.047,3,0.047,6,0.041,8,0.389,21,0.116,22,0.278,25,0.285,26,0.006,27,0.374,28,0.479,30,0.522,32,0.069,34,0.069,35,0.43,42,0.454,60,2.131,114,0.004,115,0.004,118,1.134,127,0.924,133,0.497,137,0.607,138,0.479,242,0.497,333,4.411,334,3.264,355,4.212,356,4.212,360,0.948,380,2.689,395,3.922,399,3.026,420,4.212,589,1.51,597,0.775,604,2.281,620,1.475,621,1.577,710,1.126,810,2.736,814,1.779,816,3.454,1385,4.403,1387,2.985,1423,4.334,1424,5.186,1427,3.068,1428,2.965,1429,5.658,1430,4.657,1431,4.334,1432,4.334,1433,4.334,1434,4.334,1435,3.068,1436,3.068,1437,4.189,1438,3.068,1439,3.068,1440,3.068,1441,3.068,1442,3.068,1443,3.068,1444,3.068,1445,2.965,1821,6.766,1822,4.955]],["title/classes/LoginRedirect.html",[35,0.222,355,2.7]],["body/classes/LoginRedirect.html",[2,0.048,3,0.048,6,0.042,8,0.403,21,0.12,22,0.285,25,0.279,26,0.006,27,0.387,28,0.496,30,0.348,32,0.072,34,0.069,35,0.433,60,2.181,114,0.004,115,0.004,118,1.141,242,0.514,333,4.325,334,3.322,355,4.59,356,4.287,360,0.958,380,2.716,395,4.546,399,3.053,420,4.287,589,1.519,597,0.802,604,2.304,620,1.488,621,1.51,814,1.842,816,3.433,1385,3.684,1387,3.056,1423,4.411,1424,5.239,1427,3.175,1428,3.069,1429,5.698,1430,4.411,1431,4.411,1432,4.411,1433,4.411,1434,4.411,1435,3.175,1436,3.175,1437,3.175,1438,3.175,1439,3.175,1440,3.175,1441,4.288,1442,3.175,1443,3.175,1444,3.175,1445,3.069,1823,5.128]],["title/classes/LoginSuccess.html",[35,0.222,356,2.7]],["body/classes/LoginSuccess.html",[2,0.047,3,0.047,6,0.041,8,0.389,21,0.116,22,0.278,25,0.285,26,0.006,27,0.374,28,0.479,30,0.522,32,0.069,34,0.069,35,0.43,42,0.454,60,2.131,114,0.004,115,0.004,118,1.134,127,0.924,133,0.497,137,0.607,138,0.479,242,0.497,333,4.411,334,3.264,355,4.212,356,4.526,360,0.953,380,2.689,395,3.922,399,3.026,420,4.212,589,1.51,597,0.775,604,2.281,620,1.475,621,1.577,710,1.126,810,2.736,814,1.779,816,3.406,1385,4.403,1387,2.985,1423,4.334,1424,5.186,1427,3.068,1428,2.965,1429,5.658,1430,4.334,1431,4.334,1432,4.334,1433,4.334,1434,4.334,1435,4.189,1436,3.068,1437,3.068,1438,3.068,1439,3.068,1440,3.068,1441,3.068,1442,3.068,1443,3.068,1444,3.068,1445,2.965,1824,6.766,1825,4.955]],["title/classes/Logout.html",[35,0.222,334,2.092]],["body/classes/Logout.html",[2,0.063,3,0.063,6,0.055,8,0.524,21,0.156,22,0.337,25,0.278,26,0.006,27,0.503,28,0.646,30,0.452,32,0.093,34,0.068,35,0.417,45,2.938,96,1.104,114,0.004,115,0.004,118,1.1,242,0.669,334,4.263,357,5.938,360,0.967,589,1.489,597,1.043,609,2.287,759,5.321,1826,4.883,1827,6.773,1828,6.672,1829,5.159,1830,6.201,1831,4.883,1832,5.505,1833,5.505,1834,5.505,1835,5.159]],["title/classes/LogoutConfirmation.html",[35,0.222,357,3.298]],["body/classes/LogoutConfirmation.html",[2,0.062,3,0.062,6,0.055,8,0.522,21,0.156,22,0.336,25,0.278,26,0.006,27,0.501,28,0.642,30,0.45,32,0.093,34,0.068,35,0.416,45,2.932,96,1.194,114,0.004,115,0.004,118,1.098,242,0.666,334,4.233,357,6.185,360,0.967,589,1.487,597,1.039,609,2.28,759,5.543,1826,4.86,1827,5.48,1829,5.135,1830,6.188,1831,5.99,1832,6.753,1833,5.48,1834,5.48,1835,5.135,1836,6.64]],["title/classes/LogoutConfirmationDismiss.html",[35,0.222,1830,3.444]],["body/classes/LogoutConfirmationDismiss.html",[2,0.062,3,0.062,6,0.055,8,0.523,21,0.156,22,0.337,25,0.278,26,0.006,27,0.502,28,0.644,30,0.451,32,0.093,34,0.068,35,0.417,45,2.934,96,1.194,114,0.004,115,0.004,118,1.099,242,0.667,334,4.201,357,5.93,360,0.967,589,1.488,597,1.04,609,2.473,759,5.313,1826,4.868,1827,5.488,1829,5.143,1830,6.462,1831,4.868,1832,5.488,1833,6.76,1834,6.76,1835,5.143,1837,6.651]],["title/classes/LogoutFailure.html",[35,0.222,1431,2.778]],["body/classes/LogoutFailure.html",[2,0.047,3,0.047,6,0.041,8,0.389,21,0.116,22,0.278,25,0.285,26,0.006,27,0.374,28,0.479,30,0.522,32,0.069,34,0.069,35,0.43,42,0.454,60,2.131,114,0.004,115,0.004,118,1.134,127,0.924,133,0.497,137,0.607,138,0.479,242,0.497,333,4.273,334,3.264,355,4.212,356,4.212,360,0.948,380,2.689,395,3.922,399,3.026,420,4.212,589,1.51,597,0.775,604,2.281,620,1.475,621,1.577,710,1.126,810,2.736,814,1.779,816,3.454,1385,4.403,1387,2.985,1423,4.334,1424,5.186,1427,3.068,1428,2.965,1429,5.658,1430,4.334,1431,4.657,1432,4.334,1433,4.334,1434,4.334,1435,3.068,1436,3.068,1437,3.068,1438,3.068,1439,4.189,1440,4.189,1441,3.068,1442,3.068,1443,3.068,1444,3.068,1445,2.965,1838,6.766,1839,4.955]],["title/classes/LogoutSuccess.html",[35,0.222,420,2.7]],["body/classes/LogoutSuccess.html",[2,0.048,3,0.048,6,0.042,8,0.403,21,0.12,22,0.285,25,0.279,26,0.006,27,0.387,28,0.496,30,0.348,32,0.072,34,0.069,35,0.433,60,2.181,114,0.004,115,0.004,118,1.141,242,0.514,333,4.325,334,3.558,355,4.287,356,4.287,360,0.953,380,2.716,395,4.015,399,3.105,420,4.59,589,1.519,597,0.802,604,2.304,620,1.488,621,1.51,814,1.842,816,3.433,1385,3.684,1387,3.056,1423,4.411,1424,5.239,1427,3.175,1428,3.069,1429,5.698,1430,4.411,1431,4.411,1432,4.411,1433,4.411,1434,4.411,1435,3.175,1436,3.175,1437,3.175,1438,4.288,1439,3.175,1440,3.175,1441,3.175,1442,3.175,1443,3.175,1444,3.175,1445,3.069,1840,5.128]],["title/classes/MakeBreadcrumbSimple.html",[35,0.222,733,2.559]],["body/classes/MakeBreadcrumbSimple.html",[2,0.042,3,0.042,6,0.037,8,0.355,21,0.106,22,0.261,23,2.064,24,0.917,25,0.282,26,0.006,27,0.341,28,0.437,30,0.497,32,0.063,34,0.069,35,0.434,39,2.029,42,0.414,114,0.003,115,0.003,127,0.867,133,0.453,137,0.553,138,0.437,242,0.453,360,0.946,456,3.768,529,3.836,552,2.635,589,1.52,597,0.707,620,1.543,621,1.606,705,3.802,706,2.403,707,2.744,708,3.86,709,4.403,710,1.026,713,2.47,714,2.403,715,3.802,716,2.923,717,3.707,718,3.802,719,2.988,720,4.582,721,3.802,722,3.273,723,3.802,724,3.172,725,3.802,726,2.176,727,3.802,728,2.47,729,3.802,730,3.47,731,3.378,732,2.637,733,4.123,734,4.459,735,3.534,736,3.802,737,3.802,738,3.47,739,2.47,740,2.47,741,2.47,742,2.47,743,2.47,744,3.57,745,3.57,746,2.47,747,2.47,748,2.47,749,2.47,750,3.47,751,2.541,752,2.47,753,2.541,754,2.47,755,2.283,1841,6.347,1842,4.518]],["title/classes/MakeBreadcrumbTitle.html",[35,0.222,736,2.559]],["body/classes/MakeBreadcrumbTitle.html",[2,0.042,3,0.042,6,0.037,8,0.355,21,0.106,22,0.261,23,2.386,24,0.917,25,0.282,26,0.006,27,0.341,28,0.437,30,0.497,32,0.063,34,0.069,35,0.434,39,2.029,42,0.414,114,0.003,115,0.003,127,0.867,133,0.453,137,0.553,138,0.437,242,0.453,360,0.946,456,3.768,529,3.699,552,2.635,589,1.52,597,0.707,620,1.543,621,1.606,705,3.802,706,2.403,707,2.744,708,3.86,709,4.403,710,1.026,713,2.47,714,2.403,715,3.802,716,2.923,717,3.707,718,3.802,719,2.988,720,4.582,721,3.802,722,3.273,723,3.802,724,3.172,725,3.802,726,2.176,727,3.802,728,2.47,729,3.802,730,3.47,731,3.378,732,2.637,733,3.802,734,4.459,735,3.057,736,4.123,737,3.802,738,3.47,739,2.47,740,2.47,741,2.47,742,2.47,743,2.47,744,3.57,745,3.57,746,2.47,747,2.47,748,2.47,749,2.47,750,2.47,751,3.57,752,3.47,753,2.541,754,2.47,755,2.283,1843,6.347,1844,4.518]],["title/modules/MaterialModule.html",[189,1.975,461,2.956]],["body/modules/MaterialModule.html",[2,0.066,3,0.066,6,0.058,26,0.006,32,0.132,33,1.452,34,0.061,35,0.317,114,0.005,115,0.005,169,2.058,189,3.781,192,4.371,211,4.925,260,7.599,262,7.599,265,2.991,456,2.72,461,5.084,938,5.459,1845,7.059,1846,8.495,1847,8.495,1848,8.495,1849,8.495,1850,8.495,1851,8.495,1852,8.495,1853,8.495,1854,8.495,1855,8.495,1856,8.495,1857,8.495,1858,8.495,1859,8.495,1860,8.495,1861,8.495,1862,8.495,1863,8.495]],["title/injectables/NavigationService.html",[329,1.462,1627,3.298]],["body/injectables/NavigationService.html",[0,1.687,2,0.047,3,0.047,6,0.041,19,2.167,21,0.117,22,0.28,23,2.52,24,0.947,25,0.28,26,0.006,27,0.657,28,0.869,30,0.609,32,0.095,33,1.031,34,0.036,35,0.225,42,0.878,78,1.244,96,1.171,114,0.004,115,0.004,117,3.496,126,2.615,133,0.777,135,3.534,137,0.614,138,0.485,141,6.57,142,1.107,143,1.8,158,1.657,186,1.53,259,2.598,281,2.368,329,2.294,343,2.083,346,2.259,486,1.64,501,1.684,552,1.8,569,4.979,709,3.363,722,1.8,724,2.167,732,2.833,774,4.992,787,2.906,888,5.204,945,3.348,947,2.598,1267,5.151,1472,5.177,1540,6.089,1550,3.669,1557,3.219,1611,4.992,1612,3.877,1613,4.992,1614,6.089,1615,3.877,1616,3.877,1617,6.433,1618,3.669,1619,6.46,1620,7.228,1621,5.274,1622,5.274,1623,5.673,1624,3.877,1625,3.877,1626,3.877,1627,4.555,1628,6.729,1629,5.274,1630,5.274,1631,5.274,1632,3.877,1633,3.877,1634,5.802,1635,5.274,1636,6.243,1637,5.274,1638,5.274,1639,5.994,1640,3.669,1641,3.877,1642,5.274,1643,5.274,1644,3.877,1864,6.82,1865,5.013,1866,5.013,1867,5.013,1868,5.013,1869,5.013,1870,5.013,1871,5.013]],["title/components/NotFoundComponent.html",[0,1.075,69,1.869]],["body/components/NotFoundComponent.html",[0,1.952,1,1.97,2,0.052,3,0.052,4,2.153,5,2.153,6,0.045,9,2.076,16,1.937,17,3.548,18,3.765,20,2.153,21,0.128,26,0.006,30,0.491,32,0.077,33,1.128,34,0.039,35,0.247,36,1.873,37,2.843,38,2.843,39,1.847,40,3.386,41,2.153,42,0.743,43,2.153,44,2.076,45,1.812,46,2.843,47,2.039,48,2.153,49,2.076,50,2.153,51,1.873,52,2.153,53,2.004,54,2.153,55,2.076,56,2.153,57,2.076,58,2.816,59,2.076,60,1.727,61,2.153,62,2.076,63,2.153,64,2.843,65,2.039,66,2.153,67,2.076,68,2.153,69,3.265,70,2.153,71,2.076,72,2.153,73,2.039,74,1.575,75,1.378,76,3.52,77,2.076,78,1.291,79,0.975,80,2.039,81,2.076,82,2.843,83,2.039,84,2.153,85,2.076,86,2.843,87,2.076,88,2.153,89,2.076,90,2.153,91,2.076,92,2.153,93,2.076,94,2.153,95,2.076,96,1.161,97,2.039,98,2.076,99,2.039,100,2.637,101,2.004,102,2.153,103,2.039,104,2.153,105,1.97,106,2.153,107,2.039,108,2.153,109,2.039,110,2.153,111,2.039,112,2.114,113,2.153,114,0.004,115,0.004,118,0.859,119,3.183,126,2.177,131,3.386,133,0.813,142,1.211,143,1.97,362,3.009,530,3.069,888,4.199,1345,6.48,1355,7.256,1872,8.111,1873,5.485,1874,8.627,1875,7.244,1876,5.485,1877,5.485,1878,7.244]],["title/components/NotificationsComponent.html",[0,1.075,71,1.869]],["body/components/NotificationsComponent.html",[0,1.824,1,1.621,2,0.042,3,0.042,4,1.771,5,1.771,6,0.037,9,1.708,16,1.593,17,3.508,18,3.709,20,1.771,21,0.106,22,0.261,25,0.18,26,0.006,27,0.341,28,0.437,30,0.568,32,0.089,33,0.928,34,0.032,35,0.203,36,1.541,37,2.489,38,2.489,39,1.617,40,3.122,41,1.771,42,0.768,43,1.771,44,1.708,45,1.491,46,2.489,47,1.678,48,1.771,49,1.708,50,1.771,51,1.541,52,1.771,53,1.649,54,1.771,55,1.708,56,1.771,57,1.708,58,1.567,59,1.708,60,1.421,61,1.771,62,1.708,63,1.771,64,2.489,65,1.678,66,1.771,67,1.708,68,1.771,69,1.708,70,1.771,71,3.01,72,1.771,73,1.678,74,1.296,75,1.134,76,3.289,77,1.708,78,1.19,79,0.853,80,1.678,81,1.708,82,2.489,83,1.678,84,1.771,85,1.708,86,2.489,87,1.708,88,1.771,89,1.708,90,1.771,91,1.708,92,1.771,93,1.708,94,1.771,95,1.708,96,1.07,97,1.678,98,1.708,99,1.678,100,1.467,101,1.649,102,1.771,103,1.678,104,1.771,105,1.621,106,1.771,107,1.678,108,1.771,109,1.678,110,1.771,111,1.678,112,1.739,113,1.771,114,0.003,115,0.003,118,0.752,119,2.878,126,1.906,131,3.122,133,0.452,134,3.49,135,4.503,137,0.777,138,0.614,142,1.4,143,2.278,155,4.904,156,2.225,171,3.568,176,3.014,177,3.303,188,2.467,281,2.761,380,2.738,526,6.061,530,2.687,587,2.318,946,5.201,1266,6.151,1342,5.674,1344,5.233,1500,6.56,1544,8.634,1613,6.36,1619,5.804,1774,7.17,1817,7.774,1879,4.513,1880,6.342,1881,6.342,1882,4.513,1883,4.513,1884,6.342,1885,4.513,1886,4.513,1887,6.342,1888,4.904,1889,6.342,1890,7.774,1891,6.342,1892,6.342,1893,7.953,1894,5.674,1895,6.342,1896,6.342,1897,6.342,1898,5.674,1899,6.342,1900,4.513,1901,4.513,1902,4.513,1903,4.513,1904,4.513,1905,4.513,1906,4.513,1907,6.342,1908,6.342,1909,6.342]],["title/classes/NumberValidators.html",[35,0.222,1910,3.819]],["body/classes/NumberValidators.html",[2,0.066,3,0.066,6,0.058,21,0.165,24,0.669,25,0.199,26,0.006,30,0.477,32,0.098,34,0.05,35,0.381,42,0.645,114,0.005,115,0.005,126,2.548,137,0.862,138,0.681,142,2.086,186,2.148,472,3.742,552,2.527,669,2.997,1450,6.294,1453,6.294,1468,4.356,1477,6.294,1606,6.914,1658,4.083,1774,5.806,1910,6.556,1911,8.478,1912,9.099,1913,9.099,1914,8.478,1915,9.099,1916,6.996,1917,8.478,1918,7.036]],["title/interfaces/NursingHome.html",[486,1.045,592,1.774]],["body/interfaces/NursingHome.html",[2,0.069,3,0.069,6,0.06,8,0.574,21,0.171,22,0.356,24,0.941,25,0.262,26,0.006,34,0.052,42,0.876,74,2.096,75,1.835,114,0.005,115,0.005,138,0.958,486,1.834,592,3.113,669,2.822,1145,4.502,1468,5.921,1560,5.344,1658,4.453,1919,6.025,1920,7.301]],["title/components/NursingHomeFormComponent.html",[0,1.075,73,1.836]],["body/components/NursingHomeFormComponent.html",[0,1.753,1,1.461,2,0.038,3,0.038,4,1.597,5,1.597,6,0.034,9,1.54,16,1.437,17,3.484,18,3.659,20,1.597,21,0.095,22,0.242,25,0.228,26,0.006,30,0.613,32,0.128,33,0.837,34,0.029,35,0.183,36,1.389,37,2.312,38,2.312,39,1.502,40,2.978,41,1.597,42,0.793,43,1.597,44,1.54,45,1.344,46,2.312,47,1.513,48,1.597,49,1.54,50,1.597,51,1.389,52,1.597,53,1.487,54,1.597,55,1.54,56,1.597,57,1.54,58,1.413,59,1.54,60,1.281,61,1.597,62,1.54,63,1.597,64,2.312,65,1.513,66,1.597,67,1.54,68,1.597,69,1.54,70,1.597,71,1.54,72,1.597,73,2.822,74,2.312,75,2.517,76,3.161,77,1.54,78,1.135,79,0.792,80,1.513,81,1.54,82,2.312,83,1.513,84,1.597,85,1.54,86,2.312,87,1.54,88,1.597,89,1.54,90,1.597,91,1.54,92,1.597,93,1.54,94,1.597,95,1.54,96,1.021,97,1.513,98,1.54,99,1.513,100,1.323,101,1.487,102,1.597,103,1.513,104,1.597,105,1.461,106,1.597,107,1.513,108,1.597,109,1.513,110,1.597,111,1.513,112,1.568,113,1.597,114,0.003,115,0.003,118,0.698,119,2.717,122,2.717,126,1.77,127,1.235,131,2.978,133,0.59,137,0.848,138,0.67,142,1.778,143,2.892,158,1.344,225,1.658,230,1.658,239,0.924,240,3.668,242,0.408,249,1.487,265,1.724,276,1.413,281,2.045,329,1.204,343,1.69,360,0.67,362,2.876,363,3.494,368,2.519,384,2.108,412,3.587,440,3.934,472,2.164,530,2.496,569,2.435,592,3.184,593,1.795,594,1.69,605,2.022,607,1.05,630,2.339,761,4.53,762,4.589,764,4.35,766,4.555,770,3.146,775,4.108,779,5.855,939,2.289,1055,7.572,1056,7.572,1456,4.872,1459,2.612,1468,2.519,1921,9.176,1922,2.978,1923,4.311,1924,7.588,1925,5.89,1926,5.89,1927,3.357,1928,5.067,1929,5.554,1930,5.89,1931,5.89,1932,3.357,1933,3.146,1934,3.357,1935,5.89,1936,3.146,1937,4.069,1938,4.069,1939,3.357,1940,3.357,1941,3.357,1942,3.357,1943,3.146,1944,3.146,1945,4.069,1946,3.357,1947,4.069,1948,2.978,1949,4.069,1950,3.934,1951,4.069,1952,4.069,1953,4.069,1954,4.069,1955,4.108]],["title/injectables/NursingHomesEffects.html",[329,1.462,1031,4.075]],["body/injectables/NursingHomesEffects.html",[2,0.035,3,0.035,6,0.031,8,0.291,21,0.087,22,0.226,23,2.639,25,0.156,26,0.006,27,0.547,28,0.701,30,0.55,32,0.129,33,0.76,34,0.026,35,0.166,42,0.339,73,1.375,74,1.576,75,1.822,114,0.004,115,0.003,122,3.185,127,0.895,133,0.727,135,4.472,137,0.453,138,0.358,142,2.075,156,1.823,158,1.222,160,1.967,167,1.425,169,2.516,186,1.676,225,1.507,230,1.507,233,4.375,240,3.657,242,0.371,248,2.374,265,1.567,276,2.689,281,2.996,303,2.706,329,1.939,341,3.4,353,6.982,358,6.276,359,2.859,360,0.868,361,5.211,362,2.721,363,3.338,369,6.674,370,6.156,373,4.246,380,2.594,382,5.606,384,3.756,388,2.859,391,5.669,393,2.859,401,5.989,403,4.246,404,4.246,405,4.246,406,4.246,407,4.246,408,3.526,409,4.246,410,4.246,411,4.246,412,2.845,414,4.246,428,3.83,429,2.174,431,2.706,432,2.859,438,4.202,440,4.375,592,3.448,593,1.632,594,1.536,602,3.663,603,1.65,604,1.4,605,1.931,606,3.575,607,1.292,608,3.663,609,1.53,610,3.663,611,0.993,630,1.53,761,4.078,762,3.002,764,3.394,794,3.183,796,3.526,797,4.019,1031,4.531,1052,2.374,1054,3.308,1055,3.051,1056,3.051,1888,4.246,1943,2.859,1944,2.859,1956,8.402,1957,3.697,1958,7.122,1959,3.697,1960,5.491,1961,5.491,1962,5.491,1963,5.491,1964,5.982,1965,5.491,1966,5.491,1967,5.491,1968,6.485,1969,7.249,1970,3.697,1971,4.531,1972,4.531,1973,4.531,1974,5.491,1975,5.491,1976,3.697,1977,5.306,1978,5.491,1979,5.491,1980,5.491,1981,5.491,1982,5.491,1983,4.531,1984,4.531,1985,4.531,1986,5.491,1987,5.491,1988,5.491,1989,3.697,1990,5.491,1991,5.491,1992,4.019,1993,3.697,1994,3.697,1995,3.697,1996,3.697,1997,3.051]],["title/injectables/NursingHomesService.html",[329,1.462,1958,4.075]],["body/injectables/NursingHomesService.html",[2,0.06,3,0.06,6,0.053,18,2.929,19,2.775,21,0.15,25,0.227,26,0.006,30,0.592,32,0.134,33,1.32,34,0.046,35,0.289,42,0.734,74,2.301,75,2.014,114,0.004,115,0.004,126,2.409,133,0.644,137,0.981,138,0.775,142,2.021,158,2.121,160,3.415,188,3.51,221,6.698,223,4.478,231,4.288,232,4.478,233,4.288,276,2.229,277,5.59,281,2.783,329,2.586,335,4.965,341,4.962,343,3.913,346,2.893,347,4.965,391,4.699,431,4.699,592,3.568,593,2.833,594,2.667,606,3.952,607,1.429,1958,6.613,1998,9.151,1999,6.42,2000,9.151,2001,6.42,2002,8.015,2003,6.42,2004,6.42,2005,6.613,2006,6.42,2007,6.42,2008,6.42,2009,6.42]],["title/classes/OpenSideNav.html",[35,0.222,715,2.559]],["body/classes/OpenSideNav.html",[2,0.042,3,0.042,6,0.037,8,0.355,21,0.106,22,0.261,23,2.064,24,0.917,25,0.282,26,0.006,27,0.341,28,0.437,30,0.497,32,0.063,34,0.069,35,0.434,39,2.029,42,0.414,114,0.003,115,0.003,127,0.867,133,0.453,137,0.553,138,0.437,242,0.453,360,0.946,456,3.768,529,3.699,552,2.635,589,1.52,597,0.707,620,1.543,621,1.606,705,3.802,706,2.403,707,2.744,708,3.94,709,4.494,710,1.026,713,2.47,714,2.403,715,4.123,716,3.378,717,3.707,718,3.802,719,2.988,720,4.582,721,3.802,722,3.273,723,3.802,724,3.172,725,3.802,726,2.176,727,3.802,728,2.47,729,3.802,730,3.47,731,3.378,732,2.637,733,3.802,734,4.233,735,3.057,736,3.802,737,3.802,738,3.47,739,2.47,740,3.47,741,2.47,742,2.47,743,2.47,744,3.57,745,3.57,746,2.47,747,2.47,748,2.47,749,2.47,750,2.47,751,2.541,752,2.47,753,2.541,754,2.47,755,2.283,2010,6.347,2011,4.518]],["title/components/PatientEditFormComponent.html",[0,1.075,77,1.869]],["body/components/PatientEditFormComponent.html",[0,1.472,1,0.986,2,0.026,3,0.026,4,1.078,5,1.078,6,0.036,9,1.039,13,1.915,16,0.969,17,3.371,18,3.52,20,1.078,21,0.064,22,0.223,23,1.768,24,0.718,25,0.258,26,0.006,27,0.51,28,0.781,30,0.642,32,0.122,33,0.565,34,0.02,35,0.196,36,0.937,37,1.714,38,1.714,39,1.113,40,2.432,41,1.078,42,0.62,43,1.078,44,1.039,45,0.907,46,1.714,47,1.021,48,1.078,49,1.039,50,1.078,51,0.937,52,1.078,53,1.003,54,1.078,55,1.039,56,1.078,57,1.039,58,2.151,59,1.039,60,0.865,61,1.078,62,1.039,63,1.078,64,1.714,65,1.021,66,1.078,67,1.039,68,1.078,69,1.039,70,1.078,71,1.039,72,1.078,73,1.021,74,0.788,75,0.69,76,2.654,77,2.345,78,1.483,79,1.364,80,1.021,81,1.039,82,1.714,83,1.021,84,1.078,85,1.039,86,1.714,87,1.039,88,1.078,89,1.039,90,1.078,91,1.039,92,1.078,93,1.039,94,1.078,95,1.039,96,1.086,97,1.021,98,1.039,99,1.021,100,1.42,101,1.003,102,1.078,103,1.021,104,1.078,105,0.986,106,1.078,107,1.021,108,1.078,109,1.021,110,1.078,111,1.021,112,1.058,113,1.078,114,0.002,115,0.002,118,0.518,119,2.134,122,3.076,126,1.312,127,0.743,131,2.432,133,0.275,137,0.535,138,0.422,142,1.667,143,3.088,158,0.907,160,1.46,164,1.501,167,1.058,169,1.806,186,1.333,188,1.501,225,1.119,230,1.119,239,1.235,240,3.051,242,0.275,249,1.003,268,3.979,281,0.953,343,3.51,362,3.626,363,2.853,364,5.145,380,2.27,412,3.732,422,2.009,439,1.915,447,1.7,450,4.31,472,1.46,501,0.767,528,3.254,530,1.85,534,3.708,559,2.009,572,1.146,605,2.012,611,0.79,640,0.838,641,0.893,651,2.853,654,2.984,655,1.568,676,0.907,722,0.986,732,1.814,779,3.045,787,1.592,808,3.377,810,2.047,939,1.544,947,2.817,1053,6.539,1086,5.58,1129,1.501,1145,2.56,1267,1.7,1448,6.061,1454,5.113,1456,3.978,1459,5.185,1461,2.265,1468,3.366,1472,1.834,1648,2.804,1649,2.804,1662,5.543,1665,2.456,1766,3.196,1910,2.123,1922,2.009,1923,3.196,1928,3.979,1929,4.535,1932,2.265,1933,2.123,1934,2.265,1948,2.009,1950,1.834,1955,1.915,2012,7.736,2013,4.864,2014,4.791,2015,5.543,2016,4.535,2017,6.196,2018,6.196,2019,6.442,2020,6.196,2021,6.05,2022,5.543,2023,4.366,2024,2.745,2025,2.456,2026,2.456,2027,4.366,2028,2.745,2029,2.456,2030,2.745,2031,2.745,2032,2.745,2033,2.456,2034,2.456,2035,4.366,2036,2.265,2037,4.366,2038,2.456,2039,2.456,2040,2.456,2041,2.456,2042,2.745,2043,2.123,2044,2.456,2045,2.456,2046,3.377,2047,1.834,2048,2.456,2049,2.745,2050,2.456,2051,2.456,2052,2.456,2053,2.456,2054,3.906,2055,2.456,2056,2.456,2057,2.456,2058,2.456,2059,2.456,2060,2.123,2061,4.864,2062,2.456,2063,3.377,2064,3.906,2065,2.745,2066,2.745,2067,4.366,2068,3.906,2069,2.745,2070,2.456,2071,2.456,2072,2.456,2073,2.456,2074,3.906,2075,4.366,2076,2.456,2077,2.456,2078,4.366,2079,2.745,2080,2.745,2081,2.265,2082,2.745,2083,2.745,2084,2.745,2085,2.745,2086,2.456,2087,2.745,2088,2.456,2089,2.265,2090,2.456,2091,5.543,2092,2.123,2093,2.123,2094,4.366,2095,2.123,2096,2.123,2097,2.745,2098,2.456,2099,2.745,2100,2.456,2101,2.745,2102,2.745,2103,3.603,2104,2.456,2105,2.456,2106,2.456,2107,2.456,2108,2.745,2109,2.745,2110,2.745,2111,2.745,2112,2.745,2113,2.745,2114,2.456,2115,2.265,2116,3.603,2117,4.366,2118,4.366,2119,4.366,2120,3.603,2121,3.603,2122,4.366]],["title/components/PatientFormComponent.html",[0,1.075,80,1.836]],["body/components/PatientFormComponent.html",[0,1.558,1,1.11,2,0.029,3,0.029,4,1.213,5,1.213,6,0.026,9,1.17,16,1.091,17,3.409,18,3.548,20,1.213,21,0.072,22,0.197,23,1.558,24,0.455,25,0.251,26,0.006,27,0.54,28,0.692,30,0.621,32,0.124,33,0.635,34,0.022,35,0.139,36,1.055,37,1.881,38,1.881,39,1.222,40,2.595,41,1.213,42,0.656,43,1.213,44,1.17,45,1.021,46,1.881,47,1.149,48,1.213,49,1.17,50,1.213,51,1.055,52,1.213,53,1.129,54,1.213,55,1.17,56,1.213,57,1.17,58,2.296,59,1.17,60,0.973,61,1.213,62,1.17,63,1.213,64,1.881,65,1.149,66,1.213,67,1.17,68,1.213,69,1.17,70,1.213,71,1.17,72,1.213,73,1.149,74,1.685,75,1.475,76,2.809,77,1.17,78,1.394,79,0.645,80,2.459,81,1.17,82,1.881,83,1.149,84,1.213,85,1.17,86,1.881,87,1.17,88,1.213,89,1.17,90,1.213,91,1.17,92,1.213,93,1.17,94,1.213,95,1.17,96,0.89,97,1.149,98,1.17,99,1.149,100,1.005,101,1.129,102,1.213,103,1.149,104,1.213,105,1.11,106,1.213,107,1.149,108,1.213,109,1.149,110,1.213,111,1.149,112,1.191,113,1.213,114,0.003,115,0.004,118,0.568,119,2.304,122,1.881,126,1.44,127,1.252,131,2.595,133,0.48,137,0.587,138,0.464,142,1.58,143,2.108,158,1.021,169,2.086,186,0.943,225,1.259,230,1.259,239,0.702,240,3.346,242,0.31,249,1.129,265,1.309,276,1.073,281,1.664,329,0.915,343,3.946,360,0.568,362,4.02,363,3.486,364,5.3,368,1.913,380,1.764,384,1.601,412,3.426,422,2.262,439,2.155,440,3.201,445,2.155,450,5.126,472,1.644,501,0.842,530,2.03,592,2.57,594,1.284,605,2.324,607,1.046,609,1.335,611,0.867,630,2.109,640,0.943,641,1.005,716,2.207,722,1.11,759,3.513,761,4.443,762,4.139,764,3.923,766,3.706,770,2.39,775,3.342,779,5.28,939,1.738,1053,6.449,1129,2.62,1159,2.39,1267,1.913,1387,3.848,1398,1.85,1456,4.246,1459,3.077,1470,5.113,1648,1.984,1649,1.984,1658,1.488,1916,5.456,1919,2.55,1922,2.262,1923,3.507,1927,2.55,1928,4.296,1929,4.84,1933,2.39,1936,2.39,1939,2.55,1940,2.55,1941,2.55,1942,2.55,1946,2.55,1948,2.262,1950,5.275,1955,4.093,1977,2.262,2012,7.63,2036,2.55,2043,2.39,2047,2.064,2054,2.765,2092,2.39,2093,2.39,2095,2.39,2096,2.39,2116,3.954,2123,5.915,2124,6.773,2125,5.915,2126,7.156,2127,7.571,2128,4.287,2129,2.765,2130,4.287,2131,4.287,2132,2.765,2133,4.287,2134,2.765,2135,2.765,2136,2.765,2137,4.792,2138,2.765,2139,2.765,2140,4.792,2141,2.765,2142,4.287,2143,4.287,2144,2.55,2145,4.287,2146,2.765,2147,2.262,2148,2.262,2149,2.55,2150,2.765,2151,3.09,2152,2.55,2153,4.287,2154,2.55,2155,2.765,2156,2.765,2157,2.765,2158,5.25,2159,2.765,2160,2.765,2161,2.55,2162,2.765,2163,2.765,2164,2.765,2165,2.765,2166,2.765,2167,3.09,2168,3.09,2169,2.55,2170,3.09,2171,3.09,2172,3.09,2173,4.792,2174,4.84,2175,4.287,2176,4.792,2177,4.287,2178,4.287,2179,4.287,2180,4.287,2181,4.287]],["title/components/PatientListComponent.html",[0,1.075,81,1.869]],["body/components/PatientListComponent.html",[0,1.873,1,1.215,2,0.032,3,0.032,4,1.328,5,1.328,6,0.028,8,0.266,9,1.28,13,2.359,16,1.194,17,3.436,18,3.609,20,1.328,21,0.079,22,0.211,24,0.659,25,0.244,26,0.006,27,0.523,28,0.671,30,0.627,32,0.125,33,0.696,34,0.024,35,0.152,36,1.155,37,2.016,38,3.201,39,1.31,40,2.721,41,1.328,42,0.719,43,1.328,44,1.28,45,1.118,46,2.016,47,1.258,48,1.328,49,1.28,50,1.328,51,1.155,52,1.328,53,1.236,54,1.328,55,1.28,56,1.328,57,1.28,58,1.783,59,1.28,60,1.065,61,1.328,62,1.28,63,1.328,64,2.016,65,1.258,66,1.328,67,1.28,68,1.328,69,1.28,70,1.328,71,1.28,72,1.328,73,1.258,74,0.971,75,0.85,76,2.926,77,1.28,78,1.516,79,0.691,80,1.91,81,2.97,82,2.016,83,1.258,84,1.328,85,1.28,86,2.016,87,1.28,88,1.328,89,1.28,90,1.328,91,1.28,92,1.328,93,1.28,94,1.328,95,1.28,96,0.933,97,1.258,98,1.28,99,1.258,100,1.1,101,1.236,102,1.328,103,1.258,104,1.328,105,1.215,106,1.328,107,1.258,108,1.328,109,1.258,110,1.328,111,1.258,112,1.304,113,1.328,114,0.003,115,0.003,118,0.609,119,2.437,122,2.721,126,1.544,127,0.848,131,2.721,133,0.695,137,0.76,138,0.601,142,1.801,143,3.091,153,5.123,158,1.118,160,1.799,167,1.304,169,0.986,186,1.568,191,2.808,225,1.378,230,1.378,239,1.994,240,3.646,242,0.339,249,1.236,265,2.176,276,2.156,343,3.874,360,0.601,361,4.452,362,2.88,363,3.614,368,2.094,370,2.259,412,3.863,419,2.595,429,1.606,438,4.019,447,2.094,450,4.881,528,3.716,530,2.176,534,4.149,569,4.149,607,0.603,640,1.033,641,1.1,643,2.474,722,1.845,732,2.134,764,1.753,787,2.978,809,4.147,939,1.903,953,3.759,1040,8.342,1045,3.972,1052,2.172,1053,2.359,1129,1.849,1145,3.509,1410,2.359,1413,2.359,1530,2.616,1574,2.172,1658,2.991,1766,3.759,2012,7.695,2014,5.361,2016,5.074,2046,3.972,2047,2.259,2048,3.026,2060,2.616,2062,3.026,2063,3.972,2064,3.026,2120,4.238,2121,4.238,2174,2.476,2182,3.026,2183,5.554,2184,4.595,2185,6.202,2186,6.933,2187,6.933,2188,4.595,2189,4.801,2190,3.383,2191,3.383,2192,3.383,2193,3.383,2194,3.026,2195,3.383,2196,6.202,2197,4.595,2198,4.595,2199,4.595,2200,4.595,2201,5.136,2202,3.383,2203,3.026,2204,5.136,2205,3.383,2206,3.383,2207,5.136,2208,3.383,2209,3.383,2210,3.383,2211,5.136,2212,3.383,2213,3.026,2214,3.026,2215,3.026,2216,3.383,2217,3.383,2218,3.026,2219,3.026,2220,5.136,2221,3.383,2222,3.383,2223,5.136,2224,3.026,2225,3.026,2226,3.383,2227,3.026,2228,3.383,2229,5.136,2230,5.136]],["title/components/PatientsComponent.html",[0,1.075,83,1.836]],["body/components/PatientsComponent.html",[0,1.853,1,1.693,2,0.044,3,0.044,4,1.85,5,1.85,6,0.039,8,0.514,9,1.784,16,1.664,17,3.518,18,3.722,20,1.85,21,0.11,22,0.269,23,2.44,25,0.185,26,0.006,27,0.356,28,0.456,30,0.509,32,0.126,33,0.969,34,0.034,35,0.212,36,1.609,37,2.566,38,2.566,39,1.667,40,3.181,41,1.85,42,0.743,43,1.85,44,1.784,45,1.557,46,2.566,47,1.753,48,1.85,49,1.784,50,1.85,51,1.609,52,1.85,53,1.722,54,1.85,55,1.784,56,1.85,57,1.784,58,1.636,59,1.784,60,1.484,61,1.85,62,1.784,63,1.85,64,2.566,65,1.753,66,1.85,67,1.784,68,1.85,69,1.784,70,1.85,71,1.784,72,1.85,73,1.753,74,1.353,75,1.184,76,3.342,77,1.784,78,1.416,79,0.879,80,2.431,81,1.784,82,2.566,83,3.014,84,1.85,85,1.784,86,2.566,87,1.784,88,1.85,89,1.784,90,1.85,91,1.784,92,1.85,93,1.784,94,1.85,95,1.784,96,1.09,97,1.753,98,1.784,99,1.753,100,2.768,101,1.722,102,1.85,103,1.753,104,1.85,105,1.693,106,1.85,107,1.753,108,1.85,109,1.753,110,1.85,111,1.753,112,1.816,113,1.85,114,0.004,115,0.004,122,3.181,126,1.965,133,0.812,137,0.577,138,0.456,142,1.041,143,1.693,158,1.557,186,1.439,225,1.921,230,1.921,239,1.485,240,3.962,242,0.472,249,1.722,265,1.997,276,1.636,343,3.367,361,5.204,362,3.537,363,3.732,429,1.942,438,4.699,447,2.918,450,3.912,456,2.519,530,2.77,761,2.651,762,2.576,764,3.387,794,2.732,796,3.026,815,1.85,939,2.651,1052,3.026,1053,3.287,1145,3.078,1458,5.394,1992,3.45,2189,5.804,2231,4.713,2232,5.394,2233,5.394,2234,6.537,2235,7.251,2236,7.251,2237,4.713,2238,4.713,2239,6.537,2240,4.713,2241,4.713,2242,4.713,2243,4.216,2244,4.713,2245,4.216,2246,4.216]],["title/injectables/PatientsEffects.html",[329,1.462,1029,4.075]],["body/injectables/PatientsEffects.html",[2,0.03,3,0.03,6,0.026,8,0.249,21,0.074,22,0.201,23,2.488,25,0.138,26,0.006,27,0.577,28,0.74,30,0.558,32,0.124,33,0.652,34,0.023,35,0.143,42,0.291,78,1.44,80,1.179,114,0.004,115,0.003,122,3.003,127,0.815,133,0.672,135,4.265,137,0.388,138,0.307,142,2.106,156,1.564,158,1.048,160,1.687,167,1.884,169,2.708,186,1.492,225,1.292,230,1.292,233,3.984,240,3.488,242,0.318,248,2.036,265,1.344,276,2.514,281,2.995,303,3.578,329,1.766,341,4.151,343,2.031,353,6.941,358,5.916,359,2.452,360,0.835,361,4.912,362,2.478,363,3.087,369,6.67,370,6.206,373,5.184,380,2.299,382,5.916,384,3.964,388,2.452,391,4.366,393,3.78,401,5.6,403,3.78,404,3.78,405,5.184,406,5.184,407,5.184,408,4.304,409,5.184,410,5.184,411,5.184,412,4.265,414,3.78,419,2.47,428,3.409,429,2.185,431,2.321,432,2.452,438,3.886,440,3.265,603,1.469,604,1.246,605,2.038,607,1.364,609,1.362,611,0.884,630,1.362,640,2.578,641,1.031,646,3.156,647,3.229,648,3.229,651,3.087,707,2.113,761,4.304,762,2.672,764,3.091,794,2.834,796,3.139,797,3.578,809,3.265,844,4.304,1029,4.034,1039,2.837,1052,2.036,1053,2.212,1468,3.027,1888,3.78,1964,5.532,1971,4.034,1972,5.532,1973,5.532,1977,4.906,1983,5.532,1984,4.034,1985,5.532,1992,3.578,1997,2.617,2047,2.118,2091,4.373,2147,2.321,2169,5.532,2215,5.997,2243,4.373,2247,3.171,2248,6.703,2249,6.793,2250,3.171,2251,4.888,2252,4.888,2253,4.888,2254,4.888,2255,4.888,2256,4.888,2257,4.373,2258,4.888,2259,3.171,2260,4.888,2261,4.888,2262,3.171,2263,4.373,2264,4.373,2265,4.373,2266,4.888,2267,4.888,2268,3.171,2269,4.373,2270,4.888,2271,4.034,2272,4.888,2273,4.888,2274,4.888,2275,4.888,2276,4.888,2277,4.888,2278,4.888,2279,4.888,2280,3.171,2281,4.888,2282,4.888,2283,4.373,2284,4.373,2285,4.888,2286,4.888,2287,4.888,2288,4.888,2289,3.171,2290,4.888,2291,3.171,2292,3.171,2293,3.171]],["title/injectables/PatientsService.html",[329,1.462,2249,4.075]],["body/injectables/PatientsService.html",[2,0.051,3,0.051,6,0.045,8,0.675,18,2.624,19,2.341,21,0.127,25,0.253,26,0.006,30,0.622,32,0.128,33,1.113,34,0.039,35,0.244,42,0.819,78,1.531,79,0.966,114,0.004,115,0.004,126,2.159,133,0.543,137,1.094,138,0.864,142,2.146,158,1.789,188,2.96,221,6.282,223,3.777,231,3.617,232,3.777,275,3.629,276,2.98,277,5.009,281,2.494,329,2.385,335,4.188,341,5.314,343,4.071,346,2.44,347,4.188,366,5.927,595,2.759,596,1.464,607,1.28,640,2.938,641,1.761,646,3.381,651,3.307,654,3.459,655,2.58,669,2.46,947,3.722,1145,4.041,1831,5.257,2005,5.927,2249,5.927,2294,5.415,2295,5.927,2296,8.583,2297,7.182,2298,5.415,2299,7.182,2300,5.415,2301,7.182,2302,5.415,2303,7.182,2304,5.415,2305,5.415,2306,7.182,2307,5.415,2308,7.182,2309,5.415,2310,5.415,2311,5.415,2312,5.415,2313,5.415,2314,5.415,2315,4.844]],["title/classes/PopUpNursingHomeForm.html",[35,0.222,602,2.495]],["body/classes/PopUpNursingHomeForm.html",[2,0.043,3,0.043,6,0.038,8,0.364,21,0.108,22,0.265,24,0.44,25,0.279,26,0.006,27,0.349,28,0.448,30,0.314,32,0.104,34,0.07,35,0.436,74,1.33,75,1.164,79,1.082,114,0.003,115,0.003,118,1.149,204,1.671,239,1.689,242,0.464,360,0.982,429,1.198,501,1.135,572,1.952,584,3.852,585,2.974,586,2.463,587,1.882,588,1.482,589,1.526,590,2.605,592,3.709,593,2.044,594,1.924,595,1.941,596,1.252,597,0.724,598,2.532,599,3.852,600,3.852,601,1.882,602,4.064,603,2.235,604,1.896,605,1.981,606,3.967,607,1.325,608,3.757,609,2.241,610,3.757,611,1.168,612,3.852,613,2.494,614,3.852,615,2.034,616,3.852,617,3.852,618,3.852,619,2.605,620,1.362,621,1.383,622,2.605,623,3.633,624,2.605,625,1.482,626,2.605,627,2.605,628,2.605,629,2.605,630,1.29,631,2.605,632,2.605,633,2.605,634,1.459,635,2.532,2316,4.631]],["title/classes/ResetNursingHomesState.html",[35,0.222,618,2.559]],["body/classes/ResetNursingHomesState.html",[2,0.044,3,0.044,6,0.038,8,0.365,21,0.109,22,0.266,24,0.441,25,0.279,26,0.006,27,0.35,28,0.449,30,0.315,32,0.104,34,0.07,35,0.436,74,1.332,75,1.166,79,1.083,114,0.003,115,0.003,118,1.15,204,1.926,239,1.691,242,0.465,360,0.981,429,1.201,501,1.308,572,1.954,584,3.857,585,2.978,586,2.469,587,1.885,588,1.485,589,1.526,590,2.611,592,3.709,593,2.048,594,1.928,595,1.944,596,1.255,597,0.726,598,2.537,599,3.857,600,3.857,601,1.885,602,3.761,603,1.944,604,1.649,605,1.723,606,3.97,607,1.327,608,3.761,609,2.243,610,3.761,611,1.17,612,3.857,613,2.496,614,3.857,615,2.037,616,3.857,617,3.857,618,4.172,619,2.611,620,1.364,621,1.384,622,2.611,623,2.611,624,2.611,625,1.485,626,2.611,627,2.611,628,2.611,629,2.611,630,1.293,631,2.611,632,2.611,633,3.638,634,1.462,635,2.537,2317,4.641]],["title/classes/ResetPatientsState.html",[35,0.222,653,2.435]],["body/classes/ResetPatientsState.html",[2,0.041,3,0.041,6,0.036,8,0.344,21,0.103,22,0.255,24,0.416,25,0.28,26,0.006,27,0.33,28,0.424,30,0.297,32,0.101,34,0.07,35,0.438,78,1.542,79,1.056,96,0.97,114,0.003,115,0.003,118,1.154,204,1.866,239,1.639,242,0.439,360,0.983,429,1.606,501,1.267,572,1.894,587,1.81,588,1.401,589,1.53,595,1.316,596,1.184,597,0.685,601,1.81,603,1.866,604,1.583,605,1.922,607,1.107,609,2.186,611,1.419,613,2.433,615,1.955,620,1.425,621,1.446,625,1.401,630,1.22,634,1.379,636,3.557,637,2.212,638,2.329,640,2.529,641,1.424,642,2.269,643,3.474,644,3.557,645,3.557,646,3.694,647,3.474,648,3.474,649,3.557,650,3.557,651,3.321,652,3.557,653,3.87,654,2.99,655,2.23,656,3.557,657,2.329,658,2.329,659,2.329,660,2.329,661,2.329,662,2.329,663,2.329,664,2.329,665,2.329,666,2.329,667,3.302,668,2.329,669,1.895,670,2.329,671,2.269,2318,4.378]],["title/classes/ResetUsersState.html",[35,0.222,688,2.435]],["body/classes/ResetUsersState.html",[2,0.041,3,0.041,6,0.036,8,0.344,21,0.102,22,0.255,24,0.416,25,0.28,26,0.006,27,0.33,28,0.423,30,0.297,32,0.101,34,0.07,35,0.438,78,0.928,79,1.055,96,1.393,114,0.003,115,0.003,118,1.154,204,1.865,239,1.638,242,0.438,360,0.983,429,1.605,501,1.267,572,1.893,587,1.808,588,1.4,589,1.53,595,1.315,596,1.183,597,0.684,601,1.808,603,1.864,604,1.582,605,1.921,607,1.106,609,2.185,611,1.418,613,2.432,615,1.954,620,1.425,621,1.446,625,1.4,630,1.219,634,1.378,655,2.228,669,1.894,672,3.555,673,2.21,674,2.327,676,1.445,677,2.266,678,3.472,679,3.555,680,3.555,681,3.693,682,3.472,683,3.472,684,3.555,685,3.555,686,3.319,687,3.555,688,3.868,689,2.988,690,3.472,691,2.327,692,2.327,693,2.327,694,2.327,695,2.327,696,2.327,697,2.327,698,2.327,699,2.327,700,2.327,701,3.3,702,2.327,703,2.327,704,2.266,2319,4.374]],["title/injectables/RoutePartsService.html",[329,1.462,536,3.819]],["body/injectables/RoutePartsService.html",[2,0.059,3,0.059,6,0.052,19,2.726,21,0.148,22,0.326,23,2.577,24,0.824,25,0.245,26,0.006,30,0.617,32,0.111,33,1.297,34,0.045,35,0.284,42,0.726,114,0.004,115,0.004,118,0.748,119,3.111,126,2.382,127,1.184,131,3.569,133,0.632,134,4.876,135,4.955,137,0.971,138,0.767,142,1.914,143,2.265,156,3.11,188,3.447,276,3.157,329,2.565,346,2.842,486,1.334,529,3.497,532,8.008,536,6.129,560,5.527,1674,7.89,1675,8.381,1676,5.641,1677,7.09,1678,8.134,1679,7.09,1680,7.09,1681,5.641,1682,5.641,1683,7.09,1684,5.641,1685,5.641,1686,7.09,1687,5.641,1688,5.641,1689,5.641,1690,5.641,2320,7.925,2321,7.925,2322,6.306,2323,6.306]],["title/directives/ScrollToDirective.html",[39,1.259,111,1.836]],["body/directives/ScrollToDirective.html",[2,0.049,3,0.049,6,0.043,8,0.409,16,1.837,17,1.777,21,0.122,22,0.287,24,0.838,25,0.198,26,0.006,30,0.615,32,0.073,33,1.07,34,0.037,35,0.234,39,2.154,42,0.641,111,2.601,112,2.695,114,0.004,115,0.004,118,0.829,119,3.101,120,3.629,122,2.042,126,2.102,127,1.079,131,3.315,133,0.522,137,0.856,138,0.677,142,2.131,143,1.869,161,3.114,162,3.629,163,3.222,164,2.844,169,2.569,176,4.671,185,5.408,384,2.696,788,6.109,905,6.519,910,4.293,1258,4.655,1371,7.067,1372,7.557,1377,4.655,1380,4.655,2324,9.273,2325,5.203,2326,6.256,2327,8.813,2328,8.447,2329,6.994,2330,5.203,2331,5.203,2332,5.203,2333,5.203,2334,6.994,2335,5.203,2336,5.203,2337,5.203,2338,5.203,2339,5.203,2340,5.203,2341,5.203,2342,5.203,2343,5.203,2344,5.203,2345,6.994,2346,6.994,2347,6.994,2348,5.771,2349,5.203,2350,5.203,2351,5.203,2352,6.994,2353,4.655,2354,4.655,2355,6.994,2356,6.994,2357,5.203,2358,7.9,2359,5.203,2360,6.256,2361,7.9,2362,5.203,2363,5.203,2364,5.203,2365,5.203,2366,9.65,2367,5.203,2368,9.55,2369,5.203,2370,6.994,2371,6.994,2372,6.994,2373,8.813,2374,5.203,2375,5.203,2376,8.813,2377,7.9,2378,5.203]],["title/classes/SearchNursingHome.html",[35,0.222,612,2.559]],["body/classes/SearchNursingHome.html",[2,0.042,3,0.042,6,0.037,8,0.355,21,0.106,22,0.261,24,0.797,25,0.281,26,0.006,27,0.341,28,0.437,30,0.497,32,0.102,34,0.07,35,0.434,42,0.414,74,1.297,75,1.135,79,1.071,114,0.003,115,0.003,118,1.145,127,0.867,133,0.453,137,0.553,138,0.437,204,1.642,239,1.667,242,0.453,360,0.98,429,1.169,501,1.115,572,1.926,584,3.802,585,3.664,586,2.403,587,1.85,588,1.446,589,1.52,590,2.541,592,3.704,593,1.994,594,1.877,595,1.908,596,1.222,597,0.707,598,2.47,599,3.802,600,3.802,601,1.85,602,3.707,603,1.908,604,1.618,605,1.691,606,3.924,607,1.308,608,3.707,609,2.217,610,3.707,611,1.148,612,4.123,613,2.599,614,3.802,615,1.999,616,3.802,617,3.802,618,3.802,619,2.541,620,1.35,621,1.514,622,2.541,623,2.541,624,2.541,625,1.446,626,2.541,627,2.541,628,3.57,629,2.541,630,1.259,631,2.541,632,2.541,633,2.541,634,1.423,635,2.47,710,1.026,2379,6.347,2380,4.518]],["title/classes/SearchNursingHomeComplete.html",[35,0.222,614,2.559]],["body/classes/SearchNursingHomeComplete.html",[2,0.042,3,0.042,6,0.037,8,0.355,21,0.106,22,0.261,24,0.429,25,0.281,26,0.006,27,0.341,28,0.437,30,0.497,32,0.102,34,0.07,35,0.434,42,0.414,74,1.296,75,1.134,79,1.07,114,0.003,115,0.003,118,1.145,127,0.866,133,0.452,137,0.553,138,0.437,204,1.641,239,1.666,242,0.452,360,0.98,429,1.168,501,1.114,572,1.925,584,3.799,585,3.662,586,2.401,587,1.849,588,1.444,589,1.52,590,2.539,592,3.715,593,1.991,594,1.875,595,1.906,596,1.22,597,0.706,598,2.467,599,3.799,600,3.799,601,1.849,602,3.705,603,1.906,604,1.617,605,1.69,606,3.922,607,1.307,608,3.705,609,2.216,610,3.705,611,1.147,612,3.799,613,2.598,614,4.121,615,2.309,616,3.799,617,3.799,618,3.799,619,2.539,620,1.35,621,1.514,622,2.539,623,2.539,624,2.539,625,1.444,626,2.539,627,2.539,628,2.539,629,3.568,630,1.257,631,2.539,632,2.539,633,2.539,634,1.421,635,2.467,710,1.025,2381,6.342,2382,4.513]],["title/classes/SearchPatient.html",[35,0.222,649,2.435]],["body/classes/SearchPatient.html",[2,0.04,3,0.04,6,0.035,8,0.336,21,0.1,22,0.251,24,0.78,25,0.281,26,0.006,27,0.323,28,0.414,30,0.483,32,0.099,34,0.07,35,0.436,42,0.392,78,1.54,79,1.045,96,0.958,114,0.003,115,0.003,118,1.15,127,0.834,133,0.429,137,0.524,138,0.414,204,1.58,239,1.618,242,0.429,360,0.983,429,1.58,501,1.073,572,1.869,587,1.78,588,1.369,589,1.525,595,1.286,596,1.157,597,0.669,601,1.78,603,1.835,604,1.557,605,1.897,607,1.088,609,2.163,611,1.404,613,2.546,615,1.923,620,1.415,621,1.534,625,1.369,630,1.192,634,1.347,636,3.511,637,2.161,638,2.275,640,2.506,641,1.391,642,2.216,643,3.429,644,3.511,645,3.511,646,3.656,647,3.429,648,3.429,649,3.829,650,3.511,651,3.278,652,3.511,653,3.511,654,2.941,655,2.193,656,3.511,657,2.275,658,2.275,659,2.275,660,2.275,661,2.275,662,2.275,663,3.248,664,2.275,665,2.275,666,2.275,667,2.275,668,2.275,669,1.864,670,2.275,671,2.216,710,0.972,2383,6.105,2384,4.277]],["title/classes/SearchPatientComplete.html",[35,0.222,650,2.435]],["body/classes/SearchPatientComplete.html",[2,0.04,3,0.04,6,0.035,8,0.336,21,0.1,22,0.251,24,0.406,25,0.281,26,0.006,27,0.322,28,0.413,30,0.482,32,0.099,34,0.07,35,0.436,42,0.392,78,1.54,79,1.044,96,0.957,114,0.003,115,0.003,118,1.15,127,0.834,133,0.428,137,0.523,138,0.413,204,1.579,239,1.617,242,0.428,360,0.983,429,1.579,501,1.072,572,1.868,587,1.778,588,1.367,589,1.525,595,1.284,596,1.155,597,0.668,601,1.778,603,1.834,604,1.556,605,1.896,607,1.088,609,2.162,611,1.404,613,2.545,615,2.241,620,1.415,621,1.534,625,1.367,630,1.19,634,1.346,636,3.509,637,2.159,638,2.273,640,2.791,641,1.389,642,2.214,643,3.427,644,3.509,645,3.509,646,3.654,647,3.427,648,3.427,649,3.509,650,3.827,651,3.277,652,3.509,653,3.509,654,2.939,655,2.191,656,3.509,657,2.273,658,2.273,659,2.273,660,2.273,661,2.273,662,2.273,663,2.273,664,3.245,665,2.273,666,2.273,667,2.273,668,2.273,669,1.862,670,2.273,671,2.214,710,0.971,2385,6.101,2386,4.273]],["title/classes/SearchUser.html",[35,0.222,684,2.435]],["body/classes/SearchUser.html",[2,0.04,3,0.04,6,0.035,8,0.336,21,0.1,22,0.251,24,0.78,25,0.281,26,0.006,27,0.322,28,0.413,30,0.482,32,0.099,34,0.07,35,0.436,42,0.392,78,0.913,79,1.044,96,1.391,114,0.003,115,0.003,118,1.15,127,0.834,133,0.428,137,0.523,138,0.413,204,1.579,239,1.617,242,0.428,360,0.983,429,1.579,501,1.072,572,1.868,587,1.778,588,1.367,589,1.525,595,1.284,596,1.155,597,0.668,601,1.778,603,1.834,604,1.556,605,1.896,607,1.088,609,2.162,611,1.404,613,2.545,615,1.922,620,1.415,621,1.534,625,1.367,630,1.19,634,1.346,655,2.191,669,1.862,672,3.509,673,2.159,674,2.273,676,1.412,677,2.214,678,3.427,679,3.509,680,3.509,681,3.654,682,3.427,683,3.427,684,3.827,685,3.509,686,3.277,687,3.509,688,3.509,689,2.939,690,3.427,691,2.273,692,2.273,693,2.273,694,2.273,695,2.273,696,2.273,697,3.245,698,2.273,699,2.273,700,2.273,701,2.273,702,2.273,703,2.273,704,2.214,710,0.971,2387,6.101,2388,4.273]],["title/classes/SearchUserComplete.html",[35,0.222,685,2.435]],["body/classes/SearchUserComplete.html",[2,0.04,3,0.04,6,0.035,8,0.335,21,0.1,22,0.251,24,0.406,25,0.281,26,0.006,27,0.322,28,0.413,30,0.482,32,0.099,34,0.07,35,0.436,42,0.391,78,0.912,79,1.044,96,1.394,114,0.003,115,0.003,118,1.15,127,0.833,133,0.428,137,0.523,138,0.413,204,1.577,239,1.616,242,0.428,360,0.983,429,1.577,501,1.071,572,1.867,587,1.777,588,1.366,589,1.525,595,1.283,596,1.154,597,0.668,601,1.777,603,1.832,604,1.555,605,1.895,607,1.087,609,2.161,611,1.403,613,2.544,615,2.24,620,1.415,621,1.534,625,1.366,630,1.189,634,1.344,655,2.19,669,1.861,672,3.507,673,2.157,674,2.271,676,1.411,677,2.212,678,3.425,679,3.507,680,3.507,681,3.652,682,3.425,683,3.425,684,3.507,685,3.825,686,3.275,687,3.507,688,3.507,689,2.936,690,3.425,691,2.271,692,2.271,693,2.271,694,2.271,695,2.271,696,2.271,697,2.271,698,3.243,699,2.271,700,2.271,701,2.271,702,2.271,703,2.271,704,2.212,710,0.97,2389,6.097,2390,4.269]],["title/classes/SelectNursingHome.html",[35,0.222,599,2.559]],["body/classes/SelectNursingHome.html",[2,0.042,3,0.042,6,0.037,8,0.355,21,0.106,22,0.261,24,0.429,25,0.281,26,0.006,27,0.341,28,0.437,30,0.497,32,0.102,34,0.07,35,0.434,42,0.414,74,1.297,75,1.135,79,1.071,114,0.003,115,0.003,118,1.145,127,0.867,133,0.453,137,0.553,138,0.437,204,1.642,239,1.808,242,0.453,360,0.98,429,1.169,501,1.115,572,1.926,584,3.802,585,3.664,586,2.403,587,1.85,588,1.446,589,1.52,590,2.541,592,3.715,593,1.994,594,1.877,595,1.908,596,1.222,597,0.707,598,2.47,599,4.123,600,3.802,601,1.85,602,3.707,603,1.908,604,1.618,605,1.691,606,3.924,607,1.308,608,3.707,609,2.217,610,3.707,611,1.148,612,3.802,613,2.467,614,3.802,615,1.999,616,3.802,617,3.802,618,3.802,619,3.57,620,1.35,621,1.514,622,2.541,623,2.541,624,2.541,625,1.446,626,2.541,627,2.541,628,2.541,629,2.541,630,1.259,631,2.541,632,2.541,633,2.541,634,1.423,635,2.47,710,1.026,2391,6.347,2392,4.518]],["title/classes/SelectPatient.html",[35,0.222,643,2.379]],["body/classes/SelectPatient.html",[2,0.04,3,0.04,6,0.035,8,0.336,21,0.1,22,0.251,24,0.406,25,0.281,26,0.006,27,0.323,28,0.414,30,0.483,32,0.099,34,0.07,35,0.436,42,0.392,78,1.54,79,1.045,96,0.958,114,0.003,115,0.003,118,1.15,127,0.834,133,0.429,137,0.524,138,0.414,204,1.58,239,1.764,242,0.429,360,0.983,429,1.58,501,1.073,572,1.869,587,1.78,588,1.369,589,1.525,595,1.286,596,1.157,597,0.669,601,1.78,603,1.835,604,1.557,605,1.897,607,1.088,609,2.163,611,1.404,613,2.407,615,1.923,620,1.415,621,1.534,625,1.369,630,1.192,634,1.347,636,3.511,637,2.161,638,2.275,640,2.792,641,1.391,642,2.216,643,3.74,644,3.511,645,3.511,646,3.656,647,3.429,648,3.429,649,3.511,650,3.511,651,3.278,652,3.511,653,3.511,654,2.941,655,2.193,656,3.511,657,3.248,658,2.275,659,2.275,660,2.275,661,2.275,662,2.275,663,2.275,664,2.275,665,2.275,666,2.275,667,2.275,668,2.275,669,1.864,670,2.275,671,2.216,710,0.972,2393,6.105,2394,4.277]],["title/classes/SelectUser.html",[35,0.222,678,2.379]],["body/classes/SelectUser.html",[2,0.04,3,0.04,6,0.035,8,0.336,21,0.1,22,0.251,24,0.406,25,0.281,26,0.006,27,0.322,28,0.413,30,0.482,32,0.099,34,0.07,35,0.436,42,0.392,78,0.913,79,1.044,96,1.395,114,0.003,115,0.003,118,1.15,127,0.834,133,0.428,137,0.523,138,0.413,204,1.579,239,1.763,242,0.428,360,0.983,429,1.579,501,1.072,572,1.868,587,1.778,588,1.367,589,1.525,595,1.284,596,1.155,597,0.668,601,1.778,603,1.834,604,1.556,605,1.896,607,1.088,609,2.162,611,1.404,613,2.406,615,1.922,620,1.415,621,1.534,625,1.367,630,1.19,634,1.346,655,2.191,669,1.862,672,3.509,673,2.159,674,2.273,676,1.412,677,2.214,678,3.738,679,3.509,680,3.509,681,3.654,682,3.427,683,3.427,684,3.509,685,3.509,686,3.277,687,3.509,688,3.509,689,2.939,690,3.427,691,3.245,692,2.273,693,2.273,694,2.273,695,2.273,696,2.273,697,2.273,698,2.273,699,2.273,700,2.273,701,2.273,702,2.273,703,2.273,704,2.214,710,0.971,2395,6.101,2396,4.273]],["title/classes/SetDirectionLtr.html",[35,0.222,725,2.559]],["body/classes/SetDirectionLtr.html",[2,0.042,3,0.042,6,0.037,8,0.355,21,0.106,22,0.261,23,2.062,24,0.917,25,0.282,26,0.006,27,0.341,28,0.437,30,0.497,32,0.063,34,0.069,35,0.434,39,2.137,42,0.414,114,0.003,115,0.003,127,0.866,133,0.452,137,0.553,138,0.437,242,0.452,360,0.946,456,3.767,529,3.698,552,2.633,589,1.52,597,0.706,620,1.542,621,1.606,705,3.799,706,2.401,707,2.742,708,3.858,709,4.401,710,1.025,713,2.467,714,2.401,715,3.799,716,2.92,717,3.705,718,3.799,719,2.986,720,4.581,721,3.799,722,3.326,723,3.799,724,3.17,725,4.121,726,2.174,727,3.799,728,2.467,729,3.799,730,3.467,731,3.376,732,2.635,733,3.799,734,4.231,735,3.055,736,3.799,737,3.799,738,3.467,739,2.467,740,2.467,741,2.467,742,2.467,743,2.467,744,4.125,745,4.125,746,3.467,747,2.467,748,2.467,749,2.467,750,2.467,751,2.539,752,2.467,753,2.539,754,2.467,755,2.28,2397,6.342,2398,4.513]],["title/classes/SetDirectionRtr.html",[35,0.222,727,2.559]],["body/classes/SetDirectionRtr.html",[2,0.042,3,0.042,6,0.037,8,0.355,21,0.106,22,0.261,23,2.062,24,0.917,25,0.282,26,0.006,27,0.341,28,0.437,30,0.497,32,0.063,34,0.069,35,0.434,39,2.137,42,0.414,114,0.003,115,0.003,127,0.866,133,0.452,137,0.553,138,0.437,242,0.452,360,0.946,456,3.767,529,3.698,552,2.633,589,1.52,597,0.706,620,1.542,621,1.606,705,3.799,706,2.401,707,2.742,708,3.858,709,4.401,710,1.025,713,2.467,714,2.401,715,3.799,716,2.92,717,3.705,718,3.799,719,2.986,720,4.581,721,3.799,722,3.326,723,3.799,724,3.17,725,3.799,726,2.174,727,4.121,728,2.467,729,3.799,730,3.467,731,3.376,732,2.635,733,3.799,734,4.231,735,3.055,736,3.799,737,3.799,738,3.467,739,2.467,740,2.467,741,2.467,742,2.467,743,2.467,744,4.125,745,4.125,746,2.467,747,3.467,748,2.467,749,2.467,750,2.467,751,2.539,752,2.467,753,2.539,754,2.467,755,2.28,2399,6.342,2400,4.513]],["title/classes/SetNavigationPositionSide.html",[35,0.222,721,2.559]],["body/classes/SetNavigationPositionSide.html",[2,0.042,3,0.042,6,0.037,8,0.355,21,0.106,22,0.261,23,2.062,24,0.917,25,0.282,26,0.006,27,0.341,28,0.437,30,0.497,32,0.063,34,0.069,35,0.434,39,2.028,42,0.414,114,0.003,115,0.003,127,0.866,133,0.452,137,0.553,138,0.437,242,0.452,360,0.946,456,3.767,529,3.698,552,2.633,589,1.52,597,0.706,620,1.542,621,1.606,705,3.799,706,2.401,707,2.742,708,3.939,709,4.493,710,1.025,713,2.467,714,2.401,715,3.799,716,2.92,717,3.705,718,3.799,719,2.986,720,4.75,721,4.121,722,3.326,723,3.799,724,3.17,725,3.799,726,2.174,727,3.799,728,2.467,729,3.799,730,3.467,731,3.376,732,2.635,733,3.799,734,4.231,735,3.055,736,3.799,737,3.799,738,3.467,739,2.467,740,2.467,741,2.467,742,3.467,743,2.467,744,3.568,745,3.568,746,2.467,747,2.467,748,2.467,749,2.467,750,2.467,751,2.539,752,2.467,753,2.539,754,2.467,755,2.28,2401,6.342,2402,4.513]],["title/classes/SetNavigationPositionTop.html",[35,0.222,723,2.559]],["body/classes/SetNavigationPositionTop.html",[2,0.042,3,0.042,6,0.037,8,0.355,21,0.106,22,0.261,23,2.062,24,0.917,25,0.282,26,0.006,27,0.341,28,0.437,30,0.497,32,0.063,34,0.069,35,0.434,39,2.028,42,0.414,114,0.003,115,0.003,127,0.866,133,0.452,137,0.553,138,0.437,242,0.452,360,0.946,456,3.767,529,3.698,552,2.633,589,1.52,597,0.706,620,1.542,621,1.606,705,3.799,706,2.401,707,2.742,708,3.858,709,4.493,710,1.025,713,2.467,714,2.401,715,3.799,716,2.92,717,3.705,718,3.799,719,2.986,720,4.75,721,3.799,722,3.326,723,4.121,724,3.438,725,3.799,726,2.174,727,3.799,728,2.467,729,3.799,730,3.467,731,3.376,732,2.635,733,3.799,734,4.231,735,3.055,736,3.799,737,3.799,738,3.467,739,2.467,740,2.467,741,2.467,742,2.467,743,3.467,744,3.568,745,3.568,746,2.467,747,2.467,748,2.467,749,2.467,750,2.467,751,2.539,752,2.467,753,2.539,754,2.467,755,2.28,2403,6.342,2404,4.513]],["title/modules/SharedModule.html",[189,1.975,1009,3.614]],["body/modules/SharedModule.html",[2,0.071,3,0.071,6,0.062,26,0.006,32,0.135,33,1.552,34,0.063,35,0.339,114,0.005,115,0.005,189,3.018,211,5.124,214,4.517,463,6.538,470,6.835,471,6.835,472,4.015,1009,6.469,2405,7.547]],["title/components/SidebarSideComponent.html",[0,1.075,85,1.869]],["body/components/SidebarSideComponent.html",[0,1.721,1,1.396,2,0.037,3,0.037,4,1.525,5,1.525,6,0.032,9,1.471,16,1.372,17,3.473,18,3.66,20,1.525,21,0.091,22,0.234,24,0.641,25,0.248,26,0.006,30,0.624,32,0.122,33,0.799,34,0.028,35,0.175,36,1.327,37,2.236,38,2.236,39,1.453,40,2.915,41,1.525,42,0.681,43,1.525,44,1.471,45,1.284,46,2.236,47,1.445,48,1.525,49,1.471,50,1.525,51,1.327,52,1.525,53,1.42,54,1.525,55,1.471,56,1.525,57,1.471,58,1.349,59,1.471,60,1.224,61,1.525,62,1.471,63,1.525,64,2.236,65,1.445,66,1.525,67,1.471,68,1.525,69,1.471,70,1.525,71,1.471,72,1.525,73,1.445,74,1.116,75,0.977,76,3.103,77,1.471,78,1.111,79,0.766,80,1.445,81,1.471,82,2.236,83,1.445,84,1.525,85,2.811,86,3.243,87,1.471,88,1.525,89,1.471,90,1.525,91,1.471,92,1.525,93,1.471,94,1.525,95,1.471,96,1.253,97,1.445,98,1.471,99,1.445,100,1.264,101,1.42,102,1.525,103,1.445,104,1.525,105,1.396,106,1.525,107,1.445,108,1.525,109,1.445,110,1.525,111,1.445,112,1.498,113,1.525,114,0.003,115,0.003,118,0.676,119,2.647,122,3.351,126,1.712,127,1.305,131,2.915,133,0.571,137,0.476,138,0.376,142,1.64,143,2.667,151,5.179,158,1.284,186,1.186,239,0.883,240,3.847,242,0.39,256,2.496,257,3.207,281,1.349,334,2.414,362,3.085,436,2.845,445,2.711,526,6.494,528,4.036,530,2.414,534,4.445,552,2.422,569,2.326,708,2.463,722,2.046,809,2.596,887,5.565,900,6.494,903,6.128,937,3.207,941,3.207,942,4.701,992,3.207,1012,3.005,1013,3.005,1020,7.683,1021,8.329,1326,2.596,1489,3.477,1495,6.643,1501,3.477,1505,5.096,1506,3.477,1521,3.477,1522,3.477,1523,3.477,1525,2.596,1529,3.477,1530,3.005,1538,3.477,1539,3.477,1546,5.096,1547,5.096,1552,6.643,1553,5.096,1619,2.596,1627,4.96,1634,5.179,1636,5.281,1800,5.096,2406,5.697,2407,6.643,2408,6.643,2409,6.033,2410,5.697,2411,3.886,2412,3.886,2413,3.886,2414,3.886,2415,3.886,2416,3.477,2417,3.886,2418,3.886,2419,5.096,2420,3.477,2421,3.477,2422,3.886,2423,3.886,2424,3.477,2425,3.886,2426,3.886,2427,3.207,2428,3.477,2429,3.886,2430,3.477,2431,3.477,2432,3.477,2433,3.477,2434,5.096,2435,5.096]],["title/components/SidebarTopComponent.html",[0,1.075,87,1.869]],["body/components/SidebarTopComponent.html",[0,1.841,1,1.661,2,0.043,3,0.043,4,1.816,5,1.816,6,0.038,9,1.751,16,1.633,17,3.514,18,3.717,20,1.816,21,0.108,22,0.265,25,0.228,26,0.006,30,0.609,32,0.112,33,0.951,34,0.033,35,0.208,36,1.58,37,2.533,38,2.533,39,1.645,40,3.156,41,1.816,42,0.737,43,1.816,44,1.751,45,1.529,46,2.533,47,1.72,48,1.816,49,1.751,50,1.816,51,1.58,52,1.816,53,1.69,54,1.816,55,1.751,56,1.816,57,1.751,58,1.606,59,1.751,60,1.457,61,1.816,62,1.751,63,1.816,64,2.533,65,1.72,66,1.816,67,1.751,68,1.816,69,1.751,70,1.816,71,1.751,72,1.816,73,1.72,74,1.328,75,1.163,76,3.319,77,1.751,78,1.203,79,0.868,80,1.72,81,1.751,82,2.533,83,1.72,84,1.816,85,1.751,86,3.438,87,3.043,88,1.816,89,1.751,90,1.816,91,1.751,92,1.816,93,1.751,94,1.816,95,1.751,96,1.082,97,1.72,98,1.751,99,1.72,100,1.504,101,1.69,102,1.816,103,1.72,104,1.816,105,1.661,106,1.816,107,1.72,108,1.816,109,1.72,110,1.816,111,1.72,112,1.783,113,1.816,114,0.003,115,0.003,118,0.765,119,2.916,122,3.528,126,1.939,127,1.015,131,3.156,133,0.647,137,0.567,138,0.448,142,1.641,143,2.669,151,5.608,158,1.529,186,1.412,281,1.606,526,6.394,528,4.447,530,2.734,534,4.812,724,3.212,887,6.132,903,6.634,941,6.634,942,6.634,992,3.817,1012,3.577,1013,3.577,1020,7.565,1022,8.201,1326,3.09,1618,3.386,1619,3.09,1627,5.37,1636,5.37,2326,4.138,2408,7.193,2409,5.772,2416,4.138,2419,5.772,2420,4.138,2421,4.138,2424,5.772,2428,4.138,2430,4.138,2431,4.138,2432,4.138,2433,4.138,2436,4.626,2437,6.453,2438,4.626,2439,6.453,2440,4.626,2441,4.626,2442,4.626,2443,4.626,2444,4.626,2445,4.626,2446,4.626]],["title/components/SidenavComponent.html",[0,1.075,89,1.869]],["body/components/SidenavComponent.html",[0,1.974,1,1.715,2,0.045,3,0.045,4,1.875,5,1.875,6,0.039,8,0.375,9,1.808,16,1.687,17,3.52,18,3.726,20,1.875,21,0.112,24,0.627,25,0.214,26,0.006,27,0.36,28,0.462,30,0.58,32,0.067,33,0.982,34,0.034,35,0.215,36,1.631,37,2.59,38,2.59,39,1.682,40,3.199,41,1.875,42,0.693,43,1.875,44,1.808,45,1.578,46,2.59,47,1.776,48,1.875,49,1.808,50,1.875,51,1.631,52,1.875,53,1.745,54,1.875,55,1.808,56,1.875,57,1.808,58,1.658,59,1.808,60,1.504,61,1.875,62,1.808,63,1.875,64,2.59,65,1.776,66,1.875,67,1.808,68,1.875,69,1.808,70,1.875,71,1.808,72,1.875,73,1.776,74,1.371,75,1.2,76,3.358,77,1.808,78,1.219,79,0.888,80,1.776,81,1.808,82,2.59,83,1.776,84,1.875,85,1.808,86,2.59,87,1.808,88,1.875,89,3.085,90,1.875,91,1.808,92,1.875,93,1.808,94,1.875,95,1.808,96,1.097,97,1.776,98,1.808,99,1.776,100,1.553,101,1.745,102,1.875,103,1.776,104,1.875,105,1.715,106,1.875,107,1.776,108,1.875,109,1.776,110,1.875,111,1.776,112,1.841,113,1.875,114,0.004,115,0.004,118,0.782,119,2.967,126,1.983,127,1.033,131,3.199,133,0.758,142,1.055,143,1.715,362,4.072,526,6.17,530,2.795,552,2.37,569,3.949,945,5.445,953,4.829,1266,5.845,1634,5.272,1636,3.19,2407,4.273,2447,4.777,2448,6.598,2449,6.598,2450,6.598,2451,6.598,2452,4.777,2453,4.777,2454,4.777,2455,6.598,2456,6.598,2457,4.777,2458,4.777,2459,4.777,2460,9.24,2461,9.24,2462,8.846,2463,8.152,2464,8.152,2465,6.598]],["title/classes/SignUpFailure.html",[35,0.222,1433,2.778]],["body/classes/SignUpFailure.html",[2,0.046,3,0.046,6,0.041,8,0.389,21,0.116,22,0.278,25,0.285,26,0.006,27,0.373,28,0.479,30,0.522,32,0.069,34,0.069,35,0.43,42,0.454,60,2.129,114,0.004,115,0.004,118,1.134,127,0.924,133,0.496,137,0.606,138,0.479,242,0.496,333,4.272,334,3.262,355,4.209,356,4.209,360,0.948,380,2.688,395,3.919,399,3.025,420,4.209,589,1.509,597,0.774,604,2.334,620,1.474,621,1.577,710,1.124,810,2.734,814,1.777,816,3.453,1298,5.578,1299,4.084,1385,4.401,1387,2.983,1423,4.331,1424,5.307,1427,3.064,1428,2.962,1429,5.656,1430,4.331,1431,4.331,1432,4.331,1433,4.655,1434,4.331,1435,3.064,1436,3.064,1437,3.064,1438,3.064,1439,3.064,1440,3.064,1441,3.064,1442,3.064,1443,4.186,1444,3.064,1445,2.962]],["title/classes/SignUpSuccess.html",[35,0.222,1432,2.778]],["body/classes/SignUpSuccess.html",[2,0.046,3,0.046,6,0.041,8,0.389,21,0.116,22,0.278,25,0.285,26,0.006,27,0.373,28,0.479,30,0.522,32,0.069,34,0.069,35,0.43,42,0.454,60,2.129,114,0.004,115,0.004,118,1.134,127,0.924,133,0.496,137,0.606,138,0.479,242,0.496,333,4.272,334,3.262,355,4.209,356,4.209,360,0.948,380,2.688,395,3.919,399,3.079,420,4.209,589,1.509,597,0.774,604,2.334,620,1.474,621,1.577,710,1.124,810,2.734,814,1.777,816,3.405,1300,5.578,1301,4.084,1385,4.401,1387,2.983,1423,4.331,1424,5.307,1427,3.064,1428,2.962,1429,5.656,1430,4.331,1431,4.331,1432,4.655,1433,4.331,1434,4.331,1435,3.064,1436,3.064,1437,3.064,1438,3.064,1439,3.064,1440,3.064,1441,3.064,1442,4.186,1443,3.064,1444,3.064,1445,2.962]],["title/components/SigninComponent.html",[0,1.075,91,1.869]],["body/components/SigninComponent.html",[0,1.794,1,1.552,2,0.041,3,0.041,4,1.696,5,1.696,6,0.036,9,1.635,16,1.526,17,3.498,18,3.695,20,1.696,21,0.101,22,0.253,25,0.233,26,0.006,27,0.326,28,0.418,30,0.598,32,0.126,33,0.888,34,0.031,35,0.194,36,1.475,37,2.414,38,2.414,39,1.568,40,3.062,41,1.696,42,0.715,43,1.696,44,1.635,45,1.428,46,2.414,47,1.607,48,1.696,49,1.635,50,1.696,51,1.475,52,1.696,53,1.579,54,1.696,55,1.635,56,1.696,57,1.635,58,2.135,59,1.635,60,2.255,61,1.696,62,1.635,63,1.696,64,2.414,65,1.607,66,1.696,67,1.635,68,1.696,69,1.635,70,1.696,71,1.635,72,1.696,73,1.607,74,1.24,75,1.086,76,3.235,77,1.635,78,1.167,79,0.827,80,1.607,81,1.635,82,2.414,83,1.607,84,1.696,85,1.635,86,2.414,87,1.635,88,1.696,89,1.635,90,1.696,91,2.952,92,1.696,93,1.635,94,1.696,95,1.635,96,1.05,97,1.607,98,1.635,99,1.607,100,1.405,101,1.579,102,1.696,103,1.607,104,1.696,105,1.552,106,1.696,107,1.607,108,1.696,109,1.607,110,1.696,111,1.607,112,1.665,113,1.696,114,0.003,115,0.003,118,0.729,119,2.81,122,1.696,126,1.848,131,3.062,133,0.433,137,0.529,138,0.418,142,1.358,143,2.209,158,1.428,169,1.259,188,2.362,225,1.761,230,1.761,239,0.982,240,3.63,242,0.433,249,1.579,256,2.774,265,1.831,281,2.862,343,3.241,360,0.418,362,4.035,363,3.592,384,3.186,412,2.239,437,3.565,447,2.675,450,4.285,472,2.298,530,2.606,605,1.639,607,1.096,630,1.713,1129,2.362,1387,3.159,1403,6.032,1404,6.032,1410,5.44,1411,4.756,1413,5.44,1414,4.756,1416,3.341,1418,4.756,1419,3.341,1422,5.501,1456,5.293,1459,2.774,1548,5.074,1646,3.013,1950,4.107,2016,6.27,2149,3.565,2174,4.501,2466,4.321,2467,8.567,2468,6.149,2469,7.8,2470,4.321,2471,4.321,2472,4.321,2473,6.149,2474,4.321,2475,4.321,2476,4.321,2477,4.321,2478,6.405,2479,4.321,2480,4.321,2481,4.321,2482,4.321,2483,4.321,2484,4.321,2485,6.149,2486,4.321,2487,4.321,2488,6.149,2489,6.149,2490,6.149]],["title/classes/Signup.html",[35,0.222,1393,3.298]],["body/classes/Signup.html",[2,0.057,3,0.057,6,0.05,8,0.48,21,0.143,22,0.319,24,0.58,25,0.286,26,0.006,27,0.461,28,0.591,30,0.579,32,0.108,34,0.066,35,0.404,42,0.56,60,2.446,100,2.922,114,0.004,115,0.004,118,1.066,127,1.061,133,0.612,137,0.748,138,0.591,242,0.612,333,4.575,338,5.483,342,5.187,345,4.259,360,0.953,589,1.451,597,0.955,620,1.375,621,1.575,710,1.387,810,2.97,1384,5.956,1385,4.78,1386,4.47,1387,3.768,1390,5.039,1391,4.722,1392,4.722,1393,6.436,1394,4.722,1395,4.722,1396,5.039,1397,6.408,1398,3.655,1399,4.722,2491,7.766,2492,6.107]],["title/components/SignupComponent.html",[0,1.075,93,1.869]],["body/components/SignupComponent.html",[0,1.93,1,1.584,2,0.041,3,0.041,4,1.731,5,1.731,6,0.036,8,0.347,9,1.669,16,1.557,17,3.503,18,3.702,20,1.731,21,0.103,22,0.256,25,0.205,26,0.006,30,0.585,32,0.101,33,0.907,34,0.032,35,0.198,36,1.506,37,2.449,38,2.449,39,1.591,40,3.09,41,1.731,42,0.664,43,1.731,44,1.669,45,1.457,46,2.449,47,1.64,48,1.731,49,1.669,50,1.731,51,1.506,52,1.731,53,1.611,54,1.731,55,1.669,56,1.731,57,1.669,58,1.531,59,1.669,60,1.389,61,1.731,62,1.669,63,1.731,64,2.449,65,1.64,66,1.731,67,1.669,68,1.731,69,1.669,70,1.731,71,1.669,72,1.731,73,1.64,74,1.266,75,1.108,76,3.261,77,1.669,78,1.178,79,0.84,80,1.64,81,1.669,82,2.449,83,1.64,84,1.731,85,1.669,86,2.449,87,1.669,88,1.731,89,1.669,90,1.731,91,1.669,92,1.731,93,2.98,94,1.731,95,1.669,96,1.059,97,1.64,98,1.669,99,1.64,100,1.434,101,1.611,102,1.731,103,1.64,104,1.731,105,1.584,106,1.731,107,1.64,108,1.731,109,1.64,110,1.731,111,1.64,112,1.7,113,1.731,114,0.003,115,0.003,118,0.74,119,2.842,126,1.875,131,3.09,133,0.833,142,1.738,143,2.241,169,2.111,186,1.905,265,1.869,268,6.313,275,3.978,281,2.884,384,3.233,472,2.346,530,2.644,604,2.007,605,1.663,630,1.738,732,2.592,759,3.735,953,4.567,1387,4.065,1393,6.238,1398,4.972,1403,6.088,1404,6.088,1410,5.491,1411,4.825,1413,5.491,1414,4.825,1416,3.411,1417,3.639,1418,3.411,1419,3.411,1424,5,1456,5.334,1459,2.832,1470,3.411,1548,5.149,1658,2.124,1950,4.836,2152,3.639,2161,5.149,2478,7.716,2493,4.41,2494,6.24,2495,7.873,2496,6.24,2497,4.41,2498,6.24,2499,6.24,2500,6.24,2501,4.41,2502,4.41,2503,4.41,2504,7.241,2505,4.41,2506,9.058,2507,4.41,2508,6.24,2509,6.24,2510,5.582,2511,7.873,2512,6.24,2513,5.582]],["title/interfaces/State.html",[486,1.045,501,0.868]],["body/interfaces/State.html",[2,0.062,3,0.062,6,0.055,21,0.156,22,0.337,25,0.188,26,0.006,32,0.129,34,0.068,45,2.198,114,0.004,115,0.004,135,4.93,142,1.96,169,2.388,186,2.03,231,4.442,232,4.639,240,3.471,242,0.667,244,5.488,249,3.244,250,7.942,271,4.18,323,5.95,360,0.859,368,4.118,486,1.733,496,5.996,501,1.725,732,2.763,1468,4.118,1955,4.639,1968,5.95,2232,5.488,2514,5.95,2515,8.878,2516,6.651,2517,9.515,2518,8.192,2519,7.329,2520,6.651,2521,6.651,2522,7.329,2523,5.95,2524,6.651,2525,5.488,2526,5.95,2527,6.651,2528,7.329]],["title/interfaces/State-1.html",[171,2.317,486,0.871,501,0.724]],["body/interfaces/State-1.html",[2,0.03,3,0.03,6,0.027,8,0.253,17,1.687,21,0.075,22,0.203,25,0.091,26,0.006,32,0.123,34,0.073,58,2.944,74,2.3,75,1.933,78,1.422,79,0.908,96,1.279,100,1.956,114,0.003,115,0.003,169,2.965,239,1.748,240,4.069,242,0.322,249,2.198,271,3.43,360,0.311,456,2.602,486,1.273,495,2.486,496,3.615,497,2.352,498,7.307,501,1.766,502,1.99,503,2.486,517,2.352,592,1.774,596,1.97,607,1.299,611,1.221,785,3.058,888,4.459,890,2.486,1081,7.468,1082,2.875,1083,4.964,1084,6.04,1085,6.04,1086,4.076,1087,6.04,1088,4.076,1089,2.875,1090,2.875,1091,2.875,1092,2.875,1093,2.875,1094,2.875,1095,2.875,1096,2.875,1097,2.875,1098,2.875,1099,5.382,1100,2.875,1101,2.875,1102,2.875,1103,4.419,1104,2.875,1105,4.419,1106,2.875,1107,2.875,1108,2.875,1109,2.875,1110,2.875,1111,2.875,1112,3.82,1113,2.875,1114,2.875,1115,2.875,1116,2.875,1117,2.875,1118,2.875,1119,2.875,1120,2.875,1121,2.875,1122,2.875,1123,7.744,1124,2.875,1125,7.586,1126,2.875,1127,2.875,1128,2.875,1129,4.635,1130,2.875,1131,2.875,1132,2.875,1133,2.875,1134,2.875,1135,2.875,1136,2.875,1137,2.875,1138,2.875,1139,2.875,1140,2.652,1141,2.875,1142,2.652,1143,2.875,1144,4.419,1145,3.621,1146,4.076,1147,2.875,1148,6.518,1149,6.518,1150,4.018,1151,2.875,1152,6.518,1153,4.419,1154,6.518,1155,2.875,1156,6.518,1157,2.875,1158,2.875,1159,4.652,1160,2.875,1161,4.018,1162,5.382,1163,2.875,1164,2.875,1165,2.875,1166,2.875,1167,2.875,1168,2.875,1169,5.382,1170,2.875,1171,2.875,1172,2.875,1173,2.875,1174,2.875,1175,4.419,1176,2.875,1177,4.076,1178,2.875,1179,2.875,1180,4.419,1181,2.875,1182,2.875,1183,2.875,1184,2.875,1185,7.586,1186,2.875,1187,2.875,1188,2.875,1189,2.875,1190,2.875,1191,2.875,1192,2.875,1193,2.875,1194,2.875,1195,2.875,1196,2.875,1197,2.875,1198,2.875,1199,2.652,1200,2.875,1201,2.652,1202,2.875,1203,4.419,1204,2.875,1205,4.076,1206,2.875,1207,2.875,1208,4.419,1209,2.875,1210,2.875,1211,2.875,1212,2.875,1213,2.875,1214,2.875,1215,2.875,1216,2.875,1217,2.875,1218,2.875,1219,2.875,1220,2.875,1221,2.147,1222,2.652,1223,7.396,1224,2.875,1225,2.652,1226,2.875,1227,2.652,1228,2.875,1229,2.652,1230,2.875,1231,2.875,1232,2.652,1233,2.875,1234,2.652,1235,2.875,1236,2.652,1237,2.875]],["title/interfaces/State-10.html",[321,3.685,486,0.871,501,0.724]],["body/interfaces/State-10.html",[2,0.054,3,0.054,6,0.047,21,0.134,22,0.306,25,0.162,26,0.006,27,0.432,32,0.123,34,0.067,96,1.295,114,0.004,115,0.004,142,2.126,167,2.208,169,2.415,204,1.482,239,1.882,249,2.723,271,2.697,276,3.046,281,1.989,334,2.427,360,0.802,390,3.826,399,2.463,419,4.917,435,3.321,486,1.753,501,1.814,502,5.129,572,1.504,587,1.67,596,1.549,601,2.172,611,1.036,669,2.529,676,1.893,785,3.547,815,2.248,820,2.023,1145,2.697,1146,4.727,1150,3.826,1161,4.978,1525,3.826,1658,4.381,2148,4.193,2529,5.125,2530,6.063,2531,8.494,2532,4.193,2533,3.826,2534,5.455,2535,5.455,2536,5.455,2537,4.43,2538,4.193,2539,4.803,2540,4.193,2541,4.727,2542,4.727,2543,3.826,2544,3.321,2545,3.321,2546,5.125,2547,5.125,2548,5.125,2549,5.728,2550,5.125,2551,5.728,2552,5.125,2553,4.727,2554,4.727,2555,5.125,2556,5.728]],["title/interfaces/State-11.html",[486,0.871,501,0.724,2557,3.685]],["body/interfaces/State-11.html",[2,0.062,3,0.062,6,0.054,8,0.515,21,0.153,22,0.334,24,0.838,25,0.23,26,0.006,27,0.494,32,0.113,34,0.068,45,2.681,96,1.299,114,0.004,115,0.004,142,1.947,169,2.57,249,2.393,271,3.083,345,4.567,360,0.785,390,4.374,419,4.1,435,3.796,436,4.793,486,1.717,501,1.793,511,5.064,514,5.404,517,4.793,518,5.404,1647,7.127,1658,4.762,2539,5.111,2543,4.374,2544,3.796,2545,3.796,2558,5.858,2559,9.652,2560,5.858,2561,5.858,2562,6.548,2563,6.548]],["title/interfaces/State-12.html",[486,0.871,501,0.724,1898,3.685]],["body/interfaces/State-12.html",[2,0.059,3,0.059,6,0.052,10,6.54,21,0.148,22,0.326,25,0.179,26,0.006,32,0.134,34,0.072,45,3.005,114,0.004,115,0.004,142,1.392,169,2.907,237,4.876,238,4.615,242,0.632,249,2.896,256,4.049,281,2.189,360,0.61,435,3.656,477,5.203,486,1.834,487,7.89,488,5.641,489,7.09,490,5.641,491,5.641,492,5.641,493,5.641,494,5.641,495,4.876,496,5.801,497,4.615,498,6.857,499,7.09,500,5.641,501,1.646,502,3.904,503,4.876,504,5.641,505,7.753,506,5.641,507,5.641,508,5.641,509,7.753,510,5.641,511,4.876,512,7.753,513,5.641,514,5.203,515,5.641,516,5.641,517,4.615,518,5.203,519,5.641,520,4.398,521,5.641,522,4.398,523,5.641]],["title/interfaces/State-13.html",[486,0.871,501,0.724,2564,4.119]],["body/interfaces/State-13.html",[2,0.062,3,0.062,6,0.054,21,0.153,22,0.334,24,0.838,25,0.23,26,0.006,27,0.494,32,0.091,34,0.068,58,3.432,114,0.004,115,0.004,142,2.035,167,3.398,169,2.57,186,1.999,249,2.393,271,3.083,360,0.785,419,4.455,435,3.796,436,4.793,437,5.404,486,1.717,501,1.793,520,4.567,522,4.567,552,3.166,1129,5.405,1658,4.649,2539,4.704,2543,4.374,2544,3.796,2545,3.796,2560,5.858,2561,5.858,2565,5.858,2566,6.548,2567,6.548,2568,6.548,2569,5.064,2570,5.064,2571,5.064]],["title/interfaces/State-2.html",[308,3.685,486,0.871,501,0.724]],["body/interfaces/State-2.html",[2,0.048,3,0.048,6,0.042,21,0.119,22,0.283,23,2.243,24,0.929,25,0.266,26,0.006,27,0.385,32,0.096,34,0.069,39,2.352,114,0.004,115,0.004,142,2.172,167,3.013,169,2.772,186,1.556,242,0.511,271,2.4,360,0.493,419,4.938,486,1.459,497,3.731,498,3.731,501,1.814,529,4.07,552,3.51,707,2.203,708,2.982,713,2.786,714,2.711,719,2.4,724,2.203,726,3.322,731,4.154,735,2.455,740,2.786,741,2.786,742,2.786,743,2.786,746,2.786,747,2.786,748,2.786,749,2.786,750,2.786,752,2.786,754,2.786,755,3.485,890,3.942,894,6.292,901,6.292,940,4.206,958,7.742,967,5.846,1079,4.607,1222,4.206,1225,4.206,1227,4.206,1229,4.206,1232,4.206,1234,4.206,1236,4.206,1562,6.751,1564,3.731,2271,8.065,2525,4.206,2539,3.999,2544,2.955,2545,2.955,2572,4.56,2573,5.097,2574,5.097,2575,5.097,2576,5.097,2577,5.097,2578,5.097,2579,5.097,2580,5.097]],["title/interfaces/State-3.html",[486,0.871,501,0.724,1545,3.685]],["body/interfaces/State-3.html",[2,0.057,3,0.057,6,0.05,21,0.142,22,0.318,24,0.809,25,0.219,26,0.006,27,0.458,32,0.085,34,0.066,58,3.442,75,1.526,100,2.769,114,0.004,115,0.004,142,2.045,167,3.282,169,2.482,186,1.853,249,2.827,271,2.859,276,3.113,360,0.824,419,4.97,486,1.637,501,1.805,520,4.235,522,4.235,552,3.059,572,1.594,592,3.059,1129,5.377,1658,4.635,1943,4.696,1944,4.696,2539,4.486,2544,3.52,2545,3.52,2569,4.696,2570,4.696,2571,4.696,2581,5.01,2582,4.696,2583,5.432,2584,5.432,2585,6.072,2586,6.072,2587,5.432,2588,5.432,2589,5.432,2590,6.072,2591,6.072,2592,6.072,2593,6.072]],["title/interfaces/State-4.html",[486,0.871,501,0.724,1894,3.685]],["body/interfaces/State-4.html",[2,0.055,3,0.055,6,0.048,21,0.137,22,0.31,25,0.165,26,0.006,27,0.441,32,0.123,34,0.067,114,0.004,115,0.004,142,2.106,167,2.25,169,2.437,204,1.511,239,1.714,249,2.757,271,2.749,276,2.903,281,2.027,334,2.474,360,0.809,390,3.9,399,2.493,419,4.883,435,3.385,486,1.769,501,1.809,502,5.176,592,3.425,593,2.576,594,2.426,596,1.579,601,2.199,611,1.056,669,2.552,785,3.615,815,2.292,820,2.061,1145,2.749,1150,3.9,1161,5.04,1177,4.818,1525,3.9,1658,4.257,1943,4.515,1944,4.515,2148,4.273,2530,6.119,2534,5.523,2535,5.523,2536,5.523,2538,4.273,2539,4.847,2540,4.273,2543,3.9,2544,3.385,2545,3.385,2553,4.818,2581,4.818,2583,5.223,2584,5.223,2587,5.223,2588,5.223,2589,5.223,2594,5.223,2595,9.372,2596,5.838,2597,5.838,2598,5.838,2599,5.838,2600,5.838,2601,5.838,2602,5.838,2603,5.838]],["title/interfaces/State-5.html",[486,0.871,501,0.724,2604,4.119]],["body/interfaces/State-5.html",[2,0.059,3,0.059,6,0.052,26,0.006,27,0.475,32,0.127,34,0.067,78,1.359,96,1.286,114,0.004,115,0.004,142,2.068,167,2.427,169,2.308,204,1.629,239,1.431,249,2.893,271,2.964,276,2.749,334,2.668,360,0.838,390,4.206,399,2.081,419,4.731,435,3.65,486,1.832,501,1.791,502,5.363,587,2.308,596,1.703,601,2.308,611,1.139,676,2.081,785,3.899,820,2.223,1150,4.206,1161,4.206,1525,4.206,2047,4.206,2147,4.609,2530,6.339,2534,5.795,2535,5.795,2536,5.795,2537,4.869,2538,4.609,2539,5.021,2540,4.609,2543,4.206,2544,3.65,2545,3.65,2547,5.633,2605,5.196,2606,5.633,2607,5.196,2608,5.196,2609,6.296,2610,5.196,2611,7.083,2612,5.633,2613,5.633]],["title/interfaces/State-6.html",[486,0.871,501,0.724,2348,3.399]],["body/interfaces/State-6.html",[2,0.042,3,0.042,6,0.037,21,0.106,22,0.26,24,0.91,25,0.258,26,0.006,27,0.34,32,0.063,34,0.068,58,3.35,78,1.385,79,0.853,96,0.853,100,2.383,114,0.003,115,0.003,142,2.095,167,3.616,169,2.699,186,2.237,249,2.316,271,2.122,276,3.257,360,0.709,419,4.74,486,1.341,501,1.824,520,3.144,522,3.144,552,3.438,572,1.924,607,1.13,611,1.146,1129,5.234,1199,3.72,1201,3.72,1658,4.836,2047,3.011,2123,8.149,2147,3.3,2539,3.674,2544,2.614,2545,2.614,2569,5.667,2570,3.486,2571,3.486,2582,3.486,2605,3.72,2607,3.72,2608,3.72,2610,3.72,2614,8.923,2615,9.109,2616,9.109,2617,8.376,2618,8.376,2619,4.508,2620,4.508,2621,4.508,2622,4.508,2623,4.033,2624,4.033,2625,4.033,2626,4.508,2627,4.508,2628,4.508,2629,4.508,2630,4.508,2631,4.508,2632,4.508,2633,4.508,2634,4.508,2635,4.508,2636,4.508,2637,4.508]],["title/interfaces/State-7.html",[486,0.871,501,0.724,2353,3.685]],["body/interfaces/State-7.html",[2,0.054,3,0.054,6,0.047,21,0.134,22,0.306,25,0.162,26,0.006,27,0.432,32,0.123,34,0.067,78,1.395,114,0.004,115,0.004,142,2.126,167,2.208,169,2.415,204,1.482,239,1.882,249,2.723,271,2.697,276,3.046,281,1.989,334,2.427,360,0.802,390,3.826,399,2.463,419,4.917,435,3.321,486,1.753,501,1.814,502,5.129,572,1.504,587,1.67,596,1.549,601,2.172,611,1.036,640,2.275,641,1.863,669,2.529,785,3.547,815,2.248,820,2.023,1145,2.697,1150,3.826,1161,4.978,1205,4.727,1525,3.826,1658,4.381,2047,3.826,2081,4.727,2147,4.193,2148,4.193,2235,8.494,2530,6.063,2534,5.455,2535,5.455,2536,5.455,2538,4.193,2539,4.803,2540,4.193,2543,3.826,2544,3.321,2545,3.321,2553,4.727,2607,4.727,2608,4.727,2610,4.727,2612,5.125,2613,5.125,2623,5.125,2624,5.125,2625,5.125,2638,5.125,2639,5.125,2640,5.728,2641,5.728,2642,5.728]],["title/interfaces/State-8.html",[486,0.871,501,0.724,2354,3.685]],["body/interfaces/State-8.html",[2,0.059,3,0.059,6,0.052,26,0.006,27,0.475,32,0.127,34,0.067,78,1.359,96,1.223,114,0.004,115,0.004,142,2.068,167,2.427,169,2.308,204,1.629,239,1.431,249,2.893,271,2.964,276,2.749,334,2.668,360,0.838,390,4.206,399,2.081,419,4.731,435,3.65,486,1.832,501,1.791,502,5.363,587,2.308,596,1.703,601,2.308,611,1.139,640,2.417,641,2.047,785,3.899,820,2.223,1150,4.206,1161,4.206,1525,4.206,2081,5.196,2530,6.339,2532,4.609,2533,4.206,2534,5.795,2535,5.795,2536,5.795,2538,4.609,2539,5.021,2540,4.609,2541,5.196,2542,5.196,2543,4.206,2544,3.65,2545,3.65,2552,5.633,2554,5.196,2555,5.633,2611,7.083,2639,5.633,2643,5.196,2644,5.633,2645,5.633]],["title/interfaces/State-9.html",[486,0.871,501,0.724,2646,4.119]],["body/interfaces/State-9.html",[2,0.041,3,0.041,6,0.036,21,0.103,22,0.256,24,0.875,25,0.256,26,0.006,27,0.332,32,0.061,34,0.067,58,3.336,78,0.931,79,0.838,96,1.239,100,2.35,114,0.003,115,0.003,142,2.137,167,3.673,169,2.683,186,2.4,249,2.275,271,2.07,276,3.24,360,0.699,419,4.855,486,1.317,501,1.825,520,3.066,522,3.066,552,3.423,572,1.898,607,1.11,611,1.126,1129,5.21,1140,3.628,1142,3.628,1658,4.848,2532,3.218,2533,2.937,2539,3.609,2541,3.628,2542,3.628,2544,2.549,2545,2.549,2546,3.933,2548,3.933,2550,3.933,2554,3.628,2569,6.08,2570,3.4,2571,3.4,2582,3.4,2643,3.628,2645,3.933,2647,8.859,2648,8.097,2649,9.05,2650,9.05,2651,8.097,2652,8.097,2653,4.396,2654,4.396,2655,4.396,2656,4.396,2657,4.396,2658,4.396,2659,4.396,2660,4.396,2661,4.396,2662,4.396,2663,4.396,2664,4.396,2665,4.396,2666,4.396,2667,4.396,2668,4.396,2669,4.396,2670,4.396]],["title/injectables/ThemeService.html",[329,1.462,900,3.444]],["body/injectables/ThemeService.html",[1,1.773,2,0.046,3,0.046,6,0.041,19,2.134,21,0.116,22,0.277,24,0.641,25,0.253,26,0.006,27,0.509,28,0.478,30,0.62,32,0.107,33,1.015,34,0.035,35,0.222,42,0.897,114,0.004,115,0.004,122,1.938,126,2.029,127,1.221,133,0.677,137,1.012,138,0.8,142,1.825,143,2.969,167,3.525,169,1.439,186,2.347,214,2.955,281,1.714,329,2.447,346,2.225,486,1.045,552,1.773,579,6.038,722,1.773,900,4.707,997,7.374,1112,3.818,1493,6.821,1494,6.038,1503,7.548,1509,7.548,1558,3.298,1559,3.444,1574,3.17,1589,3.298,1591,3.444,1592,3.444,1691,8.078,1692,4.417,1693,8.45,1694,8.45,1695,8.331,1696,7.395,1697,6.038,1698,6.038,1699,6.038,1700,6.038,1701,6.038,1702,6.038,1703,6.038,1704,6.038,1705,7.994,1706,4.417,1707,4.417,1708,4.417,1709,4.417,1710,6.038,1711,8.183,1712,4.417,1713,4.417,1714,4.417,1715,4.417,1716,6.038,1717,4.417,1718,4.417,1719,6.038,1720,4.417,1721,4.417,1722,4.417,1723,6.038,1724,4.417,1725,6.038,1726,4.417,1727,6.038,1728,4.417,1729,7.395,1730,4.417,1731,4.417,1732,4.417,1733,4.417,2671,6.749,2672,6.749,2673,4.937,2674,6.749,2675,4.937,2676,4.937,2677,4.937,2678,4.937,2679,4.937]],["title/classes/TransitioningLayout.html",[35,0.222,729,2.559]],["body/classes/TransitioningLayout.html",[2,0.042,3,0.042,6,0.037,8,0.355,21,0.106,22,0.261,23,2.065,24,0.881,25,0.282,26,0.006,27,0.341,28,0.438,30,0.498,32,0.063,34,0.069,35,0.434,39,2.03,42,0.414,114,0.003,115,0.003,127,0.868,133,0.453,137,0.554,138,0.438,242,0.453,360,0.946,456,3.788,529,3.7,552,3.207,589,1.52,597,0.707,620,1.543,621,1.606,705,3.804,706,2.406,707,2.746,708,3.861,709,4.404,710,1.028,713,2.472,714,2.406,715,3.804,716,2.925,717,3.709,718,3.804,719,2.99,720,4.584,721,3.804,722,3.274,723,3.804,724,3.173,725,3.804,726,2.178,727,3.804,728,2.472,729,4.125,730,4.013,731,3.38,732,2.639,733,3.804,734,4.235,735,3.059,736,3.804,737,3.804,738,3.472,739,2.472,740,2.472,741,2.472,742,2.472,743,2.472,744,3.573,745,3.573,746,2.472,747,2.472,748,3.472,749,2.472,750,2.472,751,2.544,752,2.472,753,2.544,754,2.472,755,2.285,2680,6.351,2681,4.523]],["title/classes/UseBreadcrumb.html",[35,0.222,731,2.274]],["body/classes/UseBreadcrumb.html",[2,0.042,3,0.042,6,0.037,8,0.355,21,0.106,22,0.261,23,2.065,24,0.881,25,0.282,26,0.006,27,0.341,28,0.438,30,0.498,32,0.063,34,0.069,35,0.434,39,2.03,42,0.414,114,0.003,115,0.003,127,0.868,133,0.453,137,0.554,138,0.438,242,0.453,360,0.946,456,3.768,529,3.837,552,3.207,589,1.52,597,0.707,620,1.543,621,1.606,705,3.804,706,2.406,707,2.746,708,3.861,709,4.404,710,1.028,713,2.472,714,2.406,715,3.804,716,2.925,717,3.709,718,3.804,719,2.99,720,4.584,721,3.804,722,3.274,723,3.804,724,3.173,725,3.804,726,2.178,727,3.804,728,2.472,729,3.804,730,3.472,731,3.666,732,3.05,733,3.804,734,4.235,735,3.059,736,3.804,737,3.804,738,3.472,739,2.472,740,2.472,741,2.472,742,2.472,743,2.472,744,3.573,745,3.573,746,2.472,747,2.472,748,2.472,749,3.472,750,2.472,751,2.544,752,2.472,753,2.544,754,2.472,755,2.285,2682,6.351,2683,4.523]],["title/interfaces/User.html",[96,0.664,486,1.045]],["body/interfaces/User.html",[2,0.056,3,0.056,6,0.05,21,0.14,22,0.315,24,0.99,25,0.286,26,0.006,32,0.084,34,0.043,42,0.818,96,1.033,114,0.004,115,0.004,138,1.004,486,1.624,640,1.83,669,2.996,1145,4.202,1387,3.939,1398,5.342,1646,6.225,1648,5.731,1649,5.731,1658,4.546,1664,6.902,2154,7.365,2684,5.995,2685,8.925,2686,7.365,2687,7.985,2688,7.365,2689,8.925,2690,5.995]],["title/components/UserEditFormComponent.html",[0,1.075,95,1.869]],["body/components/UserEditFormComponent.html",[0,1.468,1,0.98,2,0.026,3,0.026,4,1.071,5,1.071,6,0.036,9,1.033,13,1.904,16,0.964,17,3.369,18,3.518,20,1.071,21,0.064,22,0.223,23,1.761,24,0.716,25,0.258,26,0.006,27,0.542,28,0.799,30,0.642,32,0.122,33,0.561,34,0.019,35,0.195,36,0.932,37,1.706,38,1.706,39,1.108,40,2.424,41,1.071,42,0.618,43,1.071,44,1.033,45,0.902,46,1.706,47,1.015,48,1.071,49,1.033,50,1.071,51,0.932,52,1.071,53,0.997,54,1.071,55,1.033,56,1.071,57,1.033,58,2.144,59,1.033,60,0.86,61,1.071,62,1.033,63,1.071,64,1.706,65,1.015,66,1.071,67,1.033,68,1.071,69,1.033,70,1.071,71,1.033,72,1.071,73,1.015,74,0.784,75,0.686,76,2.647,77,1.033,78,1.127,79,1.364,80,1.015,81,1.033,82,1.706,83,1.015,84,1.071,85,1.033,86,1.706,87,1.033,88,1.071,89,1.033,90,1.071,91,1.033,92,1.071,93,1.033,94,1.071,95,2.337,96,1.327,97,1.015,98,1.033,99,1.015,100,1.413,101,0.997,102,1.071,103,1.015,104,1.071,105,0.98,106,1.071,107,1.015,108,1.071,109,1.015,110,1.071,111,1.015,112,1.052,113,1.071,114,0.002,115,0.002,118,0.515,119,2.126,122,3.07,126,1.306,127,0.74,131,2.424,133,0.274,137,0.532,138,0.421,142,1.664,143,3.083,158,0.902,160,1.452,164,1.492,167,1.052,169,1.8,186,1.327,188,1.492,225,1.112,230,1.112,239,1.231,240,3.044,242,0.274,249,0.997,268,3.964,281,0.948,343,3.62,362,3.711,363,2.844,364,5.138,380,2.265,412,3.722,422,1.998,439,1.904,447,1.69,450,4.51,472,1.452,501,0.764,528,3.241,530,1.842,534,3.696,559,1.998,572,1.141,605,2.008,611,0.786,640,0.833,655,1.561,676,0.902,686,2.844,689,2.974,722,0.98,732,1.806,779,3.031,787,1.582,808,3.361,810,2.041,939,1.535,947,2.806,1051,6.533,1088,5.096,1129,1.492,1145,2.55,1267,1.69,1398,2.601,1448,6.048,1454,5.096,1456,3.965,1459,5.175,1461,2.252,1468,3.353,1472,1.823,1646,5.01,1648,2.791,1649,2.791,1664,2.111,1766,3.181,1910,2.111,1922,1.998,1923,3.181,1928,3.964,1929,4.52,1932,2.252,1934,2.252,1936,2.111,1948,1.998,1950,1.823,1955,1.904,2013,4.845,2014,4.776,2015,5.525,2016,4.52,2019,6.426,2021,6.032,2022,5.525,2025,2.442,2026,2.442,2029,2.442,2033,2.442,2034,2.442,2038,2.442,2039,2.442,2040,2.442,2041,2.442,2043,2.111,2044,2.442,2045,2.442,2046,3.361,2050,2.442,2051,2.442,2052,2.442,2053,2.442,2055,2.442,2056,2.442,2057,2.442,2058,2.442,2059,2.442,2060,2.111,2061,4.845,2063,3.361,2068,3.888,2070,2.442,2071,2.442,2072,2.442,2073,2.442,2074,3.888,2076,2.442,2077,2.442,2086,2.442,2088,2.442,2089,2.252,2090,2.442,2092,2.111,2093,2.111,2095,2.111,2096,2.111,2098,2.442,2100,2.442,2103,3.587,2104,2.442,2105,2.442,2106,2.442,2107,2.442,2114,2.442,2115,2.252,2120,3.587,2121,3.587,2144,2.252,2427,3.587,2434,2.442,2435,2.442,2533,1.823,2537,2.111,2651,5.525,2652,5.525,2686,2.252,2688,2.252,2691,7.729,2692,6.176,2693,4.346,2694,2.729,2695,4.346,2696,2.729,2697,2.729,2698,2.729,2699,2.729,2700,4.346,2701,4.346,2702,4.346,2703,2.729,2704,2.442,2705,2.729,2706,2.442,2707,4.346,2708,2.729,2709,4.346,2710,4.346,2711,2.729,2712,2.729,2713,2.729,2714,2.729,2715,2.729,2716,2.729,2717,2.729,2718,2.729,2719,5.525,2720,4.346,2721,2.729,2722,2.729,2723,2.729,2724,2.729,2725,2.729,2726,2.729,2727,2.729,2728,2.729,2729,2.729,2730,2.729,2731,4.346,2732,3.888,2733,4.346,2734,4.346,2735,4.346]],["title/components/UserFormComponent.html",[0,1.075,97,1.836]],["body/components/UserFormComponent.html",[0,1.556,1,1.107,2,0.029,3,0.029,4,1.21,5,1.21,6,0.025,9,1.167,16,1.089,17,3.408,18,3.547,20,1.21,21,0.072,22,0.197,23,1.555,24,0.455,25,0.251,26,0.006,27,0.539,28,0.692,30,0.621,32,0.124,33,0.634,34,0.022,35,0.139,36,1.053,37,1.878,38,1.878,39,1.22,40,2.592,41,1.21,42,0.655,43,1.21,44,1.167,45,1.019,46,1.878,47,1.147,48,1.21,49,1.167,50,1.21,51,1.053,52,1.21,53,1.127,54,1.21,55,1.167,56,1.21,57,1.167,58,2.293,59,1.167,60,0.971,61,1.21,62,1.167,63,1.21,64,1.878,65,1.147,66,1.21,67,1.167,68,1.21,69,1.167,70,1.21,71,1.167,72,1.21,73,1.147,74,1.683,75,1.473,76,2.806,77,1.167,78,0.988,79,0.644,80,1.147,81,1.167,82,1.878,83,1.147,84,1.21,85,1.167,86,1.878,87,1.167,88,1.21,89,1.167,90,1.21,91,1.167,92,1.21,93,1.167,94,1.21,95,1.167,96,1.262,97,2.456,98,1.167,99,1.147,100,1.003,101,1.127,102,1.21,103,1.147,104,1.21,105,1.107,106,1.21,107,1.147,108,1.21,109,1.147,110,1.21,111,1.147,112,1.188,113,1.21,114,0.003,115,0.004,118,0.567,119,2.3,122,1.878,126,1.438,127,1.252,131,2.592,133,0.48,137,0.586,138,0.463,142,1.579,143,2.105,158,1.019,169,2.084,186,0.941,225,1.257,230,1.257,239,0.701,240,3.344,242,0.309,249,1.127,265,1.307,276,1.071,281,1.661,329,0.913,343,3.945,360,0.567,362,4.047,363,3.483,364,5.297,368,1.909,380,1.762,384,1.598,412,3.422,422,2.257,439,2.151,440,3.195,445,2.151,450,5.123,472,1.64,501,0.841,530,2.027,592,2.567,594,1.281,605,2.322,607,1.045,609,1.333,611,0.865,630,2.107,676,1.019,716,2.203,722,1.107,759,3.508,761,4.44,762,4.135,764,3.919,766,3.699,770,2.385,775,3.337,779,5.276,939,1.735,1051,6.447,1129,2.615,1159,2.385,1267,1.909,1387,3.696,1398,1.846,1456,4.241,1459,3.072,1470,5.108,1646,2.151,1648,1.98,1649,1.98,1658,1.485,1916,5.45,1919,2.545,1922,2.257,1923,3.501,1927,2.545,1928,4.29,1929,4.834,1933,2.385,1936,2.385,1939,2.545,1940,2.545,1941,2.545,1942,2.545,1946,2.545,1948,2.257,1950,3.915,1955,4.088,1977,2.257,2036,2.545,2043,2.385,2092,2.385,2093,2.385,2095,2.385,2096,2.385,2116,3.948,2124,6.767,2125,5.908,2128,4.28,2129,2.759,2130,4.28,2131,4.28,2132,2.759,2133,4.28,2134,2.759,2135,2.759,2136,2.759,2138,2.759,2139,2.759,2141,2.759,2142,4.28,2143,4.28,2144,2.545,2145,4.28,2146,2.759,2148,2.257,2149,2.545,2150,2.759,2152,2.545,2153,4.28,2154,2.545,2155,2.759,2156,2.759,2157,2.759,2158,5.243,2159,2.759,2160,2.759,2161,2.545,2162,2.759,2163,2.759,2164,5.243,2165,2.759,2166,2.759,2174,4.834,2175,4.28,2177,4.28,2178,4.28,2179,4.28,2180,4.28,2181,4.28,2532,2.257,2533,2.06,2648,5.908,2691,7.627,2732,4.28,2736,7.564,2737,7.149,2738,4.784,2739,4.784,2740,3.084,2741,3.084,2742,3.084,2743,2.545,2744,3.084,2745,3.084,2746,3.084,2747,4.784]],["title/components/UserListComponent.html",[0,1.075,98,1.869]],["body/components/UserListComponent.html",[0,1.847,1,1.156,2,0.03,3,0.03,4,1.263,5,1.263,6,0.027,8,0.253,9,1.218,13,2.245,16,1.137,17,3.421,18,3.589,20,1.263,21,0.075,22,0.203,24,0.642,25,0.245,26,0.006,27,0.55,28,0.705,30,0.626,32,0.123,33,0.662,34,0.023,35,0.145,36,1.099,37,1.941,38,3.146,39,1.261,40,2.652,41,1.263,42,0.854,43,1.263,44,1.218,45,1.064,46,1.941,47,1.197,48,1.263,49,1.218,50,1.263,51,1.099,52,1.263,53,1.176,54,1.263,55,1.218,56,1.263,57,1.218,58,1.717,59,1.218,60,1.014,61,1.263,62,1.218,63,1.263,64,1.941,65,1.197,66,1.263,67,1.218,68,1.263,69,1.218,70,1.263,71,1.218,72,1.263,73,1.197,74,0.924,75,0.809,76,2.862,77,1.218,78,1.011,79,0.665,80,1.197,81,1.218,82,1.941,83,1.197,84,1.263,85,1.218,86,1.941,87,1.218,88,1.263,89,1.218,90,1.263,91,1.218,92,1.263,93,1.218,94,1.263,95,1.218,96,1.361,97,1.839,98,2.913,99,1.197,100,1.047,101,1.176,102,1.263,103,1.197,104,1.263,105,1.156,106,1.263,107,1.197,108,1.263,109,1.197,110,1.263,111,1.197,112,1.241,113,1.263,114,0.003,115,0.003,118,0.586,119,2.363,122,2.652,126,1.486,127,0.823,131,2.652,133,0.677,137,0.737,138,0.583,142,1.77,143,3.047,153,4.969,158,1.064,160,1.712,167,1.241,169,0.938,186,1.509,191,2.703,225,1.312,230,1.312,239,1.968,240,3.594,242,0.323,249,1.176,265,2.095,276,2.091,343,3.838,360,0.583,361,4.339,362,2.807,363,3.544,368,1.993,370,2.15,412,3.778,419,2.499,429,1.558,438,3.917,447,1.993,450,4.797,528,3.604,530,2.095,534,4.044,569,4.044,607,0.574,676,1.064,678,2.382,722,1.776,732,2.054,764,1.668,787,2.867,809,4.022,939,1.811,953,3.619,1037,8.335,1045,3.824,1051,2.245,1052,2.067,1129,1.76,1145,3.432,1410,2.245,1413,2.245,1530,2.489,1574,2.067,1658,2.9,1664,3.824,1766,3.619,2014,5.225,2016,4.945,2046,3.824,2060,2.489,2063,3.824,2174,2.356,2182,2.88,2183,5.387,2184,4.424,2185,6.045,2188,4.424,2189,4.657,2194,2.88,2196,6.045,2197,4.424,2198,4.424,2199,4.424,2200,4.424,2203,2.88,2213,2.88,2214,2.88,2218,2.88,2219,2.88,2224,2.88,2225,2.88,2227,2.88,2427,2.656,2533,2.15,2686,4.081,2687,4.424,2688,4.081,2691,7.688,2704,2.88,2706,2.88,2748,7.697,2749,6.757,2750,6.757,2751,3.219,2752,3.219,2753,3.219,2754,3.219,2755,3.219,2756,4.945,2757,3.219,2758,7.747,2759,4.945,2760,4.945,2761,4.945,2762,4.945,2763,4.945,2764,4.945,2765,3.219,2766,4.945,2767,4.945,2768,3.219,2769,3.219,2770,4.945,2771,3.219,2772,3.219,2773,3.219,2774,4.945,2775,3.219,2776,2.88,2777,3.219,2778,3.219,2779,4.945,2780,3.219,2781,3.219,2782,4.945,2783,3.219,2784,3.219]],["title/components/UsersComponent.html",[0,1.075,99,1.836]],["body/components/UsersComponent.html",[0,1.855,1,1.696,2,0.044,3,0.044,4,1.854,5,1.854,6,0.039,8,0.515,9,1.788,16,1.668,17,3.518,18,3.723,20,1.854,21,0.111,22,0.269,23,2.443,25,0.185,26,0.006,27,0.356,28,0.457,30,0.509,32,0.126,33,0.971,34,0.034,35,0.212,36,1.613,37,2.57,38,2.57,39,1.669,40,3.184,41,1.854,42,0.743,43,1.854,44,1.788,45,1.561,46,2.57,47,1.756,48,1.854,49,1.788,50,1.854,51,1.613,52,1.854,53,1.726,54,1.854,55,1.788,56,1.854,57,1.788,58,1.64,59,1.788,60,1.488,61,1.854,62,1.788,63,1.854,64,2.57,65,1.756,66,1.854,67,1.788,68,1.854,69,1.788,70,1.854,71,1.788,72,1.854,73,1.756,74,1.356,75,1.187,76,3.344,77,1.788,78,1.214,79,0.881,80,1.756,81,1.788,82,2.57,83,1.756,84,1.854,85,1.788,86,2.57,87,1.788,88,1.854,89,1.788,90,1.854,91,1.788,92,1.854,93,1.788,94,1.854,95,1.788,96,1.274,97,2.434,98,1.788,99,3.017,100,2.77,101,1.726,102,1.854,103,1.756,104,1.854,105,1.696,106,1.854,107,1.756,108,1.854,109,1.756,110,1.854,111,1.756,112,1.82,113,1.854,114,0.004,115,0.004,122,3.184,126,1.968,133,0.813,137,0.578,138,0.457,142,1.043,143,1.696,158,1.561,186,1.442,225,1.925,230,1.925,239,1.488,240,3.964,242,0.473,249,1.726,265,2.001,276,1.64,343,3.37,361,5.209,362,3.54,363,3.736,429,1.944,438,4.703,447,2.925,450,3.918,456,2.523,530,2.774,761,2.657,762,2.582,764,3.392,794,2.738,796,3.033,815,1.854,939,2.657,1051,3.294,1052,3.033,1145,3.082,1458,5.402,1992,3.457,2189,5.811,2232,5.402,2233,5.402,2236,7.258,2245,4.226,2246,4.226,2531,7.258,2785,4.724,2786,6.547,2787,4.724,2788,4.724,2789,6.547,2790,4.724,2791,4.724,2792,4.724,2793,4.226,2794,4.724]],["title/injectables/UsersEffects.html",[329,1.462,1027,4.075]],["body/injectables/UsersEffects.html",[2,0.025,3,0.025,6,0.022,8,0.21,21,0.063,22,0.176,23,2.315,25,0.121,26,0.006,27,0.586,28,0.751,30,0.557,32,0.123,33,0.55,34,0.019,35,0.12,42,0.245,78,0.913,79,0.575,96,1.322,97,0.995,114,0.004,115,0.002,122,2.794,127,0.73,133,0.612,135,4.023,137,0.328,138,0.259,142,2.112,156,1.319,158,0.884,160,1.423,167,2.059,169,2.737,171,2.406,186,1.305,225,1.09,230,1.09,233,3.569,240,3.29,242,0.268,248,1.717,265,1.133,276,2.318,281,2.964,303,3.911,329,1.581,341,3.78,343,2.536,353,6.941,358,5.505,359,2.068,360,0.826,361,4.571,362,2.22,363,2.811,369,6.796,370,6.271,373,5.505,380,2.334,382,6.004,384,4.023,388,2.068,391,4.886,393,4.132,401,5.162,403,3.307,404,3.307,405,5.505,406,5.505,407,5.505,408,4.571,409,5.505,410,5.505,411,5.505,412,4.254,414,3.307,419,3.084,428,2.983,429,2.071,431,1.958,432,2.068,438,3.539,440,3.569,595,0.804,596,0.723,603,1.285,604,1.09,605,1.897,607,1.269,609,1.191,611,1.104,630,1.191,640,1.631,641,0.87,669,1.305,676,0.884,681,2.874,682,2.94,683,2.94,686,2.811,690,2.94,707,1.849,761,4.005,762,2.338,764,2.769,794,2.479,796,2.746,797,3.13,809,4.078,870,4.005,873,4.005,1027,3.529,1036,2.393,1051,1.865,1052,1.717,1145,2.013,1468,2.648,1888,3.307,1964,5.875,1971,3.529,1972,5.037,1973,5.037,1977,4.468,1983,5.875,1984,3.529,1985,5.875,1992,3.13,1997,2.207,2169,3.529,2257,3.826,2263,5.461,2264,3.826,2265,3.826,2269,3.826,2271,5.037,2283,3.826,2284,3.826,2510,3.826,2532,1.958,2533,1.786,2537,3.307,2719,3.826,2743,5.037,2776,5.461,2793,3.826,2795,2.675,2796,6.105,2797,6.407,2798,2.675,2799,4.276,2800,4.276,2801,4.276,2802,4.276,2803,4.276,2804,4.276,2805,4.276,2806,2.675,2807,4.276,2808,4.276,2809,2.675,2810,4.276,2811,4.276,2812,2.675,2813,4.276,2814,4.276,2815,4.276,2816,4.276,2817,4.276,2818,4.276,2819,4.276,2820,6.105,2821,6.105,2822,2.675,2823,4.276,2824,2.675,2825,3.826,2826,4.276,2827,4.276,2828,4.276,2829,4.276,2830,7.764,2831,4.276,2832,4.276,2833,4.276,2834,4.276,2835,4.276,2836,2.675,2837,4.276,2838,4.276,2839,4.276,2840,4.276,2841,4.276,2842,2.675,2843,4.276,2844,2.675,2845,2.675,2846,2.675]],["title/injectables/UsersService.html",[329,1.462,2797,4.075]],["body/injectables/UsersService.html",[2,0.048,3,0.048,6,0.042,8,0.687,18,3.058,19,2.198,21,0.119,25,0.255,26,0.006,30,0.625,32,0.129,33,1.046,34,0.036,35,0.229,42,0.826,78,1.03,79,0.926,96,1.391,114,0.004,115,0.004,126,2.07,133,0.51,137,1.104,138,0.872,142,2.157,158,1.68,188,2.78,221,6.125,223,3.546,231,3.396,232,3.546,275,3.479,276,3.036,277,4.803,281,2.391,329,2.311,335,3.932,341,5.582,343,4.085,346,2.291,347,3.932,366,5.682,511,6.471,595,2.71,596,1.375,607,1.228,640,1.552,641,1.653,655,2.473,669,2.752,676,1.68,681,3.242,686,3.171,689,3.317,947,3.568,1145,4.415,1831,5.04,2005,6.905,2295,5.682,2315,4.549,2743,4.196,2797,5.682,2847,5.085,2848,6.886,2849,6.886,2850,5.085,2851,6.886,2852,5.085,2853,6.886,2854,5.085,2855,6.886,2856,5.085,2857,6.886,2858,5.085,2859,6.886,2860,5.085,2861,6.886,2862,5.085,2863,6.886,2864,5.085,2865,5.085,2866,5.085,2867,5.085,2868,5.085,2869,5.085,2870,5.085]],["title/dependencies.html",[191,3.248,2871,3.685]],["body/dependencies.html",[26,0.006,33,1.365,114,0.004,115,0.004,156,3.275,158,2.194,191,3.63,208,7.322,209,6.329,214,3.974,225,3.774,226,5.941,227,4.86,230,2.706,237,5.135,238,4.86,240,3.468,242,0.82,244,5.48,246,5.941,248,4.264,265,2.814,368,4.112,456,2.559,472,3.532,596,1.796,938,5.135,1012,5.135,1013,5.135,1044,5.941,1045,6.329,1047,5.941,1048,5.941,1050,5.941,2519,5.941,2825,5.941,2872,6.64,2873,9.511,2874,6.64,2875,9.814,2876,6.64,2877,6.64,2878,6.64,2879,6.64,2880,6.64,2881,9.511,2882,6.64,2883,8.184,2884,6.64,2885,6.64,2886,6.64,2887,6.64,2888,6.64,2889,6.64,2890,6.64,2891,6.64,2892,6.64,2893,5.941,2894,6.64,2895,6.64,2896,6.64,2897,6.64,2898,6.64,2899,6.64,2900,6.64]],["title/miscellaneous/enumerations.html",[2901,2.873,2902,5.316]],["body/miscellaneous/enumerations.html",[21,0.083,23,1.15,25,0.201,26,0.006,28,1.009,39,1.355,45,2.108,60,2.009,74,1.016,75,1.603,78,1.515,79,1.228,96,1.366,100,2.074,114,0.003,115,0.003,204,1.651,239,1.449,333,3.748,334,3.382,355,1.934,356,1.934,357,2.363,360,0.686,395,2.051,399,3.106,420,1.934,429,1.375,456,3.592,501,1.121,529,2.815,572,2.288,584,1.833,585,2.446,586,2.826,587,1.86,592,3.581,598,2.904,599,1.833,600,1.833,601,1.86,602,1.787,603,1.917,604,1.938,605,2.025,606,1.744,607,1.582,608,1.787,609,2.307,610,1.787,611,1.7,612,1.833,613,2.475,614,1.833,615,2.009,616,1.833,617,1.833,618,1.833,636,1.744,637,1.787,642,2.753,643,1.704,644,1.744,645,1.744,646,1.665,647,1.704,648,1.704,649,1.744,650,1.744,651,1.629,652,1.744,653,1.744,654,1.704,655,1.908,656,1.744,672,1.744,673,1.787,677,2.753,678,1.704,679,1.744,680,1.744,681,1.665,682,1.704,683,1.704,684,1.744,685,1.744,686,1.629,687,1.744,688,1.744,689,1.704,690,1.704,705,1.833,706,1.882,707,1.529,708,2.758,709,2.62,714,2.826,715,1.833,716,1.629,717,3.223,718,1.833,719,1.665,720,3.487,721,1.833,722,2.547,723,1.833,724,1.529,725,1.833,726,1.704,727,1.833,728,1.934,729,1.833,730,1.934,731,1.629,732,1.47,733,1.833,734,2.826,735,1.704,736,1.833,737,1.833,738,1.934,739,1.934,759,3.18,813,2.19,814,3.059,816,3.435,820,2.252,821,3.548,822,2.19,823,5.332,824,2.19,825,2.19,826,2.19,827,2.19,838,2.051,839,2.117,843,3.289,844,1.99,845,4.943,846,2.051,847,2.051,848,2.051,849,2.051,850,2.051,851,4.377,852,2.051,866,2.051,867,2.117,869,3.289,870,1.99,871,2.051,872,2.051,873,1.99,874,2.051,875,2.051,876,2.051,1384,2.467,1385,2.826,1386,3.888,1387,3.129,1391,4.108,1392,2.736,1393,3.548,1394,2.736,1395,2.736,1423,1.99,1424,3.08,1428,3.18,1429,5.215,1430,1.99,1431,1.99,1432,1.99,1433,1.99,1434,1.99,1826,2.589,1829,4.108,1830,2.467,2901,2.467,2902,3.165,2903,3.165,2904,4.753,2905,3.165,2906,4.384,2907,3.165,2908,2.919,2909,3.165,2910,2.919]],["title/miscellaneous/functions.html",[271,2.798,2901,2.873]],["body/miscellaneous/functions.html",[8,0.635,21,0.128,22,0.224,26,0.005,42,0.922,75,1.813,78,1.287,96,1.158,100,2.629,114,0.004,115,0.004,137,1.232,138,0.977,206,4.875,209,4.214,238,3.989,240,3.426,249,3.783,270,6.453,271,3.396,272,4.875,273,4.875,274,4.875,275,2.753,276,1.892,277,5.031,278,4.497,279,4.875,280,4.875,285,4.875,286,4.875,287,4.875,297,4.875,298,4.875,299,4.497,300,7.233,312,6.453,316,6.453,360,0.989,501,1.768,560,3.801,592,2.59,1558,4.818,1585,3.989,2514,4.875,2522,6.453,2523,4.875,2525,8.095,2526,4.875,2528,6.453,2529,4.875,2558,4.875,2565,4.875,2572,4.875,2581,5.952,2582,7.112,2594,6.453,2605,5.952,2606,6.453,2638,4.875,2643,5.952,2644,6.453,2758,4.875,2901,3.801,2906,5.952,2908,5.952,2910,5.952,2911,8.085,2912,5.45,2913,7.213,2914,5.45,2915,5.45,2916,5.45,2917,5.45,2918,5.45,2919,5.45,2920,5.45,2921,5.45,2922,5.45]],["title/index.html",[21,0.096,417,3.399,2923,4.119]],["body/index.html",[6,0.077,8,0.384,9,3.266,18,1.788,19,2.115,26,0.005,42,0.755,114,0.004,115,0.004,163,3.029,164,4.184,191,3.666,231,6.095,234,4.037,258,6.847,267,7.718,278,7.87,281,2.859,341,4.153,342,3.267,417,7.353,445,4.678,560,5.743,595,1.47,604,1.247,607,1.364,716,3.088,732,3.18,734,2.602,815,1.92,947,2.535,990,5.534,1083,5.534,1145,2.303,1221,5.952,1320,6,1344,7.119,1518,6,1563,4.909,1589,3.267,1593,3.581,1595,3.581,1640,3.581,1890,6,2089,4.037,2103,5.534,2115,4.037,2233,5.534,2295,4.037,2360,4.376,2513,4.376,2871,7.367,2893,6,2924,4.892,2925,6.707,2926,8.911,2927,4.892,2928,8.234,2929,8.234,2930,4.892,2931,6.707,2932,6.707,2933,8.234,2934,4.892,2935,4.892,2936,4.892,2937,6.707,2938,9.709,2939,7.653,2940,6.707,2941,8.911,2942,4.892,2943,7.653,2944,6.707,2945,8.234,2946,9.538,2947,6.707,2948,4.892,2949,4.892,2950,4.892,2951,4.892,2952,4.892,2953,4.892,2954,8.234,2955,7.653,2956,6.707,2957,7.653,2958,6.707,2959,4.892,2960,4.892,2961,4.892,2962,9.709,2963,4.892,2964,7.653,2965,6.707,2966,7.653,2967,7.653,2968,6.707,2969,4.892,2970,4.892,2971,6.707,2972,6.707,2973,4.892,2974,6.707,2975,6.707,2976,4.892,2977,6.707,2978,4.892,2979,4.892,2980,4.892,2981,6.707,2982,4.892,2983,6.707,2984,4.892,2985,4.892,2986,7.653,2987,7.653,2988,7.653,2989,4.892,2990,4.892,2991,4.892,2992,4.892,2993,4.892,2994,4.892,2995,4.892,2996,6.707,2997,4.892,2998,4.892,2999,4.892,3000,4.892,3001,4.892,3002,4.892,3003,4.892,3004,4.892,3005,4.892,3006,4.892,3007,4.892,3008,7.653,3009,4.892,3010,6.707,3011,7.653,3012,6.707,3013,4.892,3014,4.892,3015,4.892,3016,4.892,3017,4.892,3018,4.892,3019,4.892,3020,4.892,3021,4.892,3022,4.892]],["title/modules.html",[189,2.699]],["body/modules.html",[26,0.005,114,0.005,115,0.005,189,2.95,190,5.705,199,5.4,200,5.4,201,5.4,202,5.4,209,7.753,460,5.4,461,4.415,801,5.4,1008,5.4,1009,5.4,1352,5.4,3023,10.025,3024,10.025,3025,10.248,3026,9.595,3027,9.595]],["title/overview.html",[3028,6.039]],["body/overview.html",[0,1.305,1,3.446,26,0.006,34,0.043,35,0.27,36,2.047,39,1.529,51,3.378,53,3.261,114,0.004,115,0.004,171,3.372,189,3.069,190,7.78,191,3.277,192,3.712,193,3.849,194,3.588,195,5.363,196,5.363,197,5.363,198,5.363,199,6.196,200,7.183,201,7.463,202,7.183,203,4.928,204,1.551,205,3.712,329,1.774,364,5.067,441,4.947,457,5.363,458,5.363,459,5.363,460,6.753,461,5.993,486,1.268,801,7.183,802,5.363,805,5.363,946,3.588,1003,5.363,1005,5.363,1006,5.363,1007,5.363,1008,7.183,1009,6.196,1349,5.363,1351,5.363,1352,6.196,2348,4.947,2557,5.363,3028,5.363,3029,5.995,3030,5.995,3031,5.995,3032,5.995,3033,5.995]],["title/routes.html",[946,4.04]],["body/routes.html",[26,0.005,114,0.005,115,0.005,946,4.844]],["title/miscellaneous/typealiases.html",[2901,2.873,3034,5.942]],["body/miscellaneous/typealiases.html",[21,0.13,25,0.157,26,0.006,34,0.058,75,1.831,78,0.828,96,0.745,114,0.004,115,0.004,333,2.729,334,2.345,355,3.026,356,3.026,357,3.697,360,0.788,420,3.026,584,2.868,585,3.355,586,3.876,592,1.988,599,2.868,600,2.868,602,2.796,606,2.729,608,2.796,610,2.796,612,2.868,614,2.868,616,2.868,617,2.868,618,2.868,634,2.566,635,4.454,636,2.729,637,2.796,643,2.666,644,2.729,645,2.729,646,2.606,647,2.666,648,2.666,649,2.729,650,2.729,651,2.549,652,2.729,653,2.729,656,2.729,671,4.221,672,2.729,673,2.796,678,2.666,679,2.729,680,2.729,681,2.606,682,2.666,683,2.666,684,2.729,685,2.729,686,2.549,687,2.729,688,2.729,690,2.666,704,4.221,705,2.868,706,2.944,715,2.868,718,2.868,721,2.868,723,2.868,725,2.868,727,2.868,729,2.868,731,2.549,733,2.868,736,2.868,737,2.868,755,4.116,813,3.427,814,3.432,822,3.427,824,3.427,825,3.427,826,3.427,827,3.427,833,5.442,838,3.209,839,3.313,844,3.113,846,3.209,847,3.209,848,3.209,849,3.209,850,3.209,852,3.209,860,5.044,866,3.209,867,3.313,870,3.113,871,3.209,872,3.209,873,3.113,874,3.209,875,3.209,876,3.209,884,5.044,1384,3.86,1385,3.876,1386,5.334,1393,3.697,1399,6.3,1423,3.113,1430,3.113,1431,3.113,1432,3.113,1433,3.113,1434,3.113,1445,4.876,1826,4.051,1830,3.86,1835,6.3,2901,3.86,2903,4.951,2904,6.519,2905,4.951,2906,6.013,2907,4.951,2908,4.567,2909,4.951,2910,4.567,3035,5.535]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interfaces/AuthState.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"modules/CoreModule.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"modules/ErrorsModule.html":{},"modules/ErrorsRoutingModule.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"components/ForgotPasswordComponent.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ICredentials.html":{},"interfaces/IDevice.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IPatient.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"interfaces/IUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"modules/MaterialModule.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"classes/NumberValidators.html":{},"interfaces/NursingHome.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"modules/SharedModule.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":185,"title":{},"body":{"directives/AppDropdownDirective.html":{},"components/BreadcrumbComponent.html":{},"components/DashboardLayoutComponent.html":{},"directives/ScrollToDirective.html":{}}}],["0.0.0.0",{"_index":2997,"title":{},"body":{"index.html":{}}}],["0.8.26",{"_index":2900,"title":{},"body":{"dependencies.html":{}}}],["0th",{"_index":2200,"title":{},"body":{"components/PatientListComponent.html":{},"components/UserListComponent.html":{}}}],["1",{"_index":171,"title":{"interfaces/State-1.html":{}},"body":{"directives/AppDropdownDirective.html":{},"modules/AppModule.html":{},"components/BreadcrumbComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"components/LockscreenComponent.html":{},"components/NotificationsComponent.html":{},"injectables/UsersEffects.html":{},"overview.html":{}}}],["1.0.3",{"_index":2890,"title":{},"body":{"dependencies.html":{}}}],["1.3.0",{"_index":2895,"title":{},"body":{"dependencies.html":{}}}],["1.4.0",{"_index":2888,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":321,"title":{"interfaces/State-10.html":{}},"body":{"modules/AppModule.html":{}}}],["10000",{"_index":409,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["11",{"_index":2557,"title":{"interfaces/State-11.html":{}},"body":{"overview.html":{}}}],["11.0.1",{"_index":2882,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":1898,"title":{"interfaces/State-12.html":{}},"body":{"components/NotificationsComponent.html":{}}}],["122px",{"_index":1776,"title":{},"body":{"components/LoaderComponent.html":{}}}],["13",{"_index":2564,"title":{"interfaces/State-13.html":{}},"body":{}}],["14",{"_index":3030,"title":{},"body":{"overview.html":{}}}],["14.0.0",{"_index":2884,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":3033,"title":{},"body":{"overview.html":{}}}],["1].url}/${item.url",{"_index":574,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["1]['breadcrumb",{"_index":582,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["1][\\'breadcrumb",{"_index":583,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["2",{"_index":308,"title":{"interfaces/State-2.html":{}},"body":{"modules/AppModule.html":{}}}],["2.0.0",{"_index":2880,"title":{},"body":{"dependencies.html":{}}}],["2.4.0",{"_index":2896,"title":{},"body":{"dependencies.html":{}}}],["2.6.0",{"_index":2887,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":2371,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["247ba0",{"_index":1702,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["25",{"_index":2375,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["250",{"_index":1581,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["28",{"_index":3029,"title":{},"body":{"overview.html":{}}}],["3",{"_index":1545,"title":{"interfaces/State-3.html":{}},"body":{"components/HeaderSideComponent.html":{}}}],["31",{"_index":3032,"title":{},"body":{"overview.html":{}}}],["380px",{"_index":795,"title":{},"body":{"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{}}}],["3f51b5",{"_index":1704,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["4",{"_index":1894,"title":{"interfaces/State-4.html":{}},"body":{"components/NotificationsComponent.html":{}}}],["4.0.0",{"_index":2883,"title":{},"body":{"dependencies.html":{}}}],["404",{"_index":1878,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["4200",{"_index":2999,"title":{},"body":{"index.html":{}}}],["5",{"_index":2604,"title":{"interfaces/State-5.html":{}},"body":{}}],["5.1.0",{"_index":2889,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":1343,"title":{},"body":{"components/ErrorComponent.html":{}}}],["6",{"_index":2348,"title":{"interfaces/State-6.html":{}},"body":{"directives/ScrollToDirective.html":{},"overview.html":{}}}],["6.1.2",{"_index":2881,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":2898,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":2353,"title":{"interfaces/State-7.html":{}},"body":{"directives/ScrollToDirective.html":{}}}],["7.0.0",{"_index":2873,"title":{},"body":{"dependencies.html":{}}}],["7.1.0",{"_index":2891,"title":{},"body":{"dependencies.html":{}}}],["7.1.1",{"_index":2875,"title":{},"body":{"dependencies.html":{}}}],["720px",{"_index":1992,"title":{},"body":{"injectables/NursingHomesEffects.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{}}}],["8",{"_index":2354,"title":{"interfaces/State-8.html":{}},"body":{"directives/ScrollToDirective.html":{}}}],["9",{"_index":2646,"title":{"interfaces/State-9.html":{}},"body":{}}],["91",{"_index":3031,"title":{},"body":{"overview.html":{}}}],["959px",{"_index":1607,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["959px)`).match",{"_index":1610,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["9c27b0",{"_index":1698,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["_open",{"_index":1264,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["_router",{"_index":123,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["abstractcontrol",{"_index":1916,"title":{},"body":{"classes/NumberValidators.html":{},"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["accent",{"_index":1895,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["access",{"_index":774,"title":{},"body":{"components/ConfirmComponent.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["access_token",{"_index":2559,"title":{},"body":{"interfaces/State-11.html":{}}}],["accessor",{"_index":1268,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["account",{"_index":1548,"title":{},"body":{"components/HeaderSideComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["account_box",{"_index":1546,"title":{},"body":{"components/HeaderSideComponent.html":{},"components/SidebarSideComponent.html":{}}}],["accountmenu.profil",{"_index":1547,"title":{},"body":{"components/HeaderSideComponent.html":{},"components/SidebarSideComponent.html":{}}}],["action",{"_index":360,"title":{},"body":{"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"interfaces/AuthState.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/FixTopbar.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"classes/OpenSideNav.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"injectables/PatientsEffects.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"injectables/UsersEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["action.payload",{"_index":2271,"title":{},"body":{"injectables/PatientsEffects.html":{},"interfaces/State-2.html":{},"injectables/UsersEffects.html":{}}}],["action.payload.credenti",{"_index":374,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["action.payload.id",{"_index":2553,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-4.html":{},"interfaces/State-7.html":{}}}],["action.payload.messag",{"_index":2569,"title":{},"body":{"interfaces/State-13.html":{},"interfaces/State-3.html":{},"interfaces/State-6.html":{},"interfaces/State-9.html":{}}}],["action.payload.nursinghom",{"_index":1961,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["action.payload.pati",{"_index":2252,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["action.payload.response.access_token",{"_index":2563,"title":{},"body":{"interfaces/State-11.html":{}}}],["action.payload.response.us",{"_index":2562,"title":{},"body":{"interfaces/State-11.html":{}}}],["action.payload.us",{"_index":2800,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["action.typ",{"_index":2545,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{}}}],["actionreduc",{"_index":2517,"title":{},"body":{"interfaces/State.html":{}}}],["actionreducermap",{"_index":496,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/DashboardState.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-12.html":{}}}],["actions/layout.act",{"_index":940,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"components/HeaderSideComponent.html":{},"interfaces/State-2.html":{}}}],["actions/nurs",{"_index":1941,"title":{},"body":{"components/NursingHomeFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["actions/patients.act",{"_index":2048,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/PatientListComponent.html":{}}}],["actions/users.act",{"_index":2704,"title":{},"body":{"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{}}}],["activatedrout",{"_index":538,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["activatedroutesnapshot",{"_index":1678,"title":{},"body":{"interfaces/IRoutePart.html":{},"injectables/RoutePartsService.html":{}}}],["activatedthem",{"_index":1705,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["activerout",{"_index":537,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["actual_compon",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["ad",{"_index":1888,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["adapat",{"_index":2536,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{}}}],["adapater.addone(action.payload.nursinghom",{"_index":2599,"title":{},"body":{"interfaces/State-4.html":{}}}],["adapater.addone(action.payload.pati",{"_index":2640,"title":{},"body":{"interfaces/State-7.html":{}}}],["adapater.addone(action.payload.us",{"_index":2549,"title":{},"body":{"interfaces/State-10.html":{}}}],["adapater.getinitialst",{"_index":2540,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{}}}],["adapater.removeall(st",{"_index":2611,"title":{},"body":{"interfaces/State-5.html":{},"interfaces/State-8.html":{}}}],["adapater.upsertmany(action.payload.nursinghom",{"_index":2598,"title":{},"body":{"interfaces/State-4.html":{}}}],["adapater.upsertmany(action.payload.pati",{"_index":2639,"title":{},"body":{"interfaces/State-7.html":{},"interfaces/State-8.html":{}}}],["adapater.upsertmany(action.payload.us",{"_index":2547,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-5.html":{}}}],["adapater.upsertone(action.payload.nursinghom",{"_index":2600,"title":{},"body":{"interfaces/State-4.html":{}}}],["adapater.upsertone(action.payload.pati",{"_index":2641,"title":{},"body":{"interfaces/State-7.html":{}}}],["adapater.upsertone(action.payload.us",{"_index":2551,"title":{},"body":{"interfaces/State-10.html":{}}}],["add",{"_index":815,"title":{},"body":{"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/PatientsComponent.html":{},"interfaces/State-10.html":{},"interfaces/State-4.html":{},"interfaces/State-7.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["addlink",{"_index":128,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["addlink(link",{"_index":139,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["address",{"_index":2509,"title":{},"body":{"components/SignupComponent.html":{}}}],["add{{'creat",{"_index":2245,"title":{},"body":{"components/PatientsComponent.html":{},"components/UsersComponent.html":{}}}],["add{{\\'creat",{"_index":2246,"title":{},"body":{"components/PatientsComponent.html":{},"components/UsersComponent.html":{}}}],["adjust",{"_index":1593,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"index.html":{}}}],["adjustlayout",{"_index":1737,"title":{},"body":{"injectables/LayoutService.html":{}}}],["adjustlayout(opt",{"_index":1597,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["admin_cod",{"_index":1653,"title":{},"body":{"interfaces/IDevice.html":{}}}],["administr",{"_index":2832,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["afterviewinit",{"_index":887,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["against",{"_index":2976,"title":{},"body":{"index.html":{}}}],["ago",{"_index":1817,"title":{},"body":{"components/LockscreenComponent.html":{},"components/NotificationsComponent.html":{}}}],["agre",{"_index":2506,"title":{},"body":{"components/SignupComponent.html":{}}}],["alert",{"_index":1551,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["alex",{"_index":2950,"title":{},"body":{"index.html":{}}}],["alexander.rueckert@appsolut",{"_index":2952,"title":{},"body":{"index.html":{}}}],["alias",{"_index":3035,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{}}}],["anchor.direct",{"_index":1060,"title":{},"body":{"modules/DashboardModule.html":{}}}],["anchor.directive.t",{"_index":1249,"title":{},"body":{"directives/DropdownAnchorDirective.html":{}}}],["anchor.directive.ts:13",{"_index":1253,"title":{},"body":{"directives/DropdownAnchorDirective.html":{}}}],["anchor.directive.ts:20",{"_index":1255,"title":{},"body":{"directives/DropdownAnchorDirective.html":{}}}],["angular",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["angular.json",{"_index":2977,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":2872,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2874,"title":{},"body":{"dependencies.html":{}}}],["angular/cli",{"_index":2942,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/ErrorsModule.html":{},"interfaces/ITheme.html":{},"modules/SharedModule.html":{},"injectables/ThemeService.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthApiService.html":{},"modules/AuthModule.html":{},"injectables/NursingHomesService.html":{},"injectables/PatientsService.html":{},"injectables/UsersService.html":{}}}],["angular/common/locales/d",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compil",{"_index":2876,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"modules/CoreModule.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"modules/ErrorsModule.html":{},"modules/ErrorsRoutingModule.html":{},"directives/FontSizeDirective.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"injectables/LayoutService.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"modules/MaterialModule.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"modules/SharedModule.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"injectables/ThemeService.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":938,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"directives/EgretSideNavToggleDirective.html":{},"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":472,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardModule.html":{},"classes/GenericValidator.html":{},"classes/NumberValidators.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":2878,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ForgotPasswordComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"modules/MaterialModule.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":156,"title":{},"body":{"directives/AppDropdownDirective.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"components/BreadcrumbComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardRoutingModule.html":{},"modules/ErrorsRoutingModule.html":{},"interfaces/IRoutePart.html":{},"components/NotificationsComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/RoutePartsService.html":{},"injectables/UsersEffects.html":{},"dependencies.html":{}}}],["api",{"_index":341,"title":{},"body":{"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["api.actions.t",{"_index":814,"title":{},"body":{"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["api.actions.ts:19",{"_index":1824,"title":{},"body":{"classes/LoginSuccess.html":{}}}],["api.actions.ts:20",{"_index":834,"title":{},"body":{"classes/CreateNursingHomeSuccess.html":{}}}],["api.actions.ts:21",{"_index":1825,"title":{},"body":{"classes/LoginSuccess.html":{}}}],["api.actions.ts:22",{"_index":835,"title":{},"body":{"classes/CreateNursingHomeSuccess.html":{}}}],["api.actions.ts:23",{"_index":862,"title":{},"body":{"classes/CreatePatientSuccess.html":{},"classes/CreateUserSuccess.html":{}}}],["api.actions.ts:25",{"_index":863,"title":{},"body":{"classes/CreatePatientSuccess.html":{},"classes/CreateUserSuccess.html":{}}}],["api.actions.ts:29",{"_index":1821,"title":{},"body":{"classes/LoginFailure.html":{}}}],["api.actions.ts:30",{"_index":817,"title":{},"body":{"classes/CreateNursingHomeFailure.html":{}}}],["api.actions.ts:31",{"_index":1822,"title":{},"body":{"classes/LoginFailure.html":{}}}],["api.actions.ts:32",{"_index":818,"title":{},"body":{"classes/CreateNursingHomeFailure.html":{}}}],["api.actions.ts:33",{"_index":840,"title":{},"body":{"classes/CreatePatientFailure.html":{},"classes/CreateUserFailure.html":{}}}],["api.actions.ts:35",{"_index":841,"title":{},"body":{"classes/CreatePatientFailure.html":{},"classes/CreateUserFailure.html":{}}}],["api.actions.ts:39",{"_index":1840,"title":{},"body":{"classes/LogoutSuccess.html":{}}}],["api.actions.ts:40",{"_index":1753,"title":{},"body":{"classes/LoadNursingHomesSuccess.html":{}}}],["api.actions.ts:42",{"_index":1754,"title":{},"body":{"classes/LoadNursingHomesSuccess.html":{}}}],["api.actions.ts:43",{"_index":1760,"title":{},"body":{"classes/LoadPatientsSuccess.html":{},"classes/LoadUsersSuccess.html":{}}}],["api.actions.ts:45",{"_index":1761,"title":{},"body":{"classes/LoadPatientsSuccess.html":{},"classes/LoadUsersSuccess.html":{}}}],["api.actions.ts:46",{"_index":1838,"title":{},"body":{"classes/LogoutFailure.html":{}}}],["api.actions.ts:48",{"_index":1839,"title":{},"body":{"classes/LogoutFailure.html":{}}}],["api.actions.ts:50",{"_index":1751,"title":{},"body":{"classes/LoadNursingHomesFailure.html":{}}}],["api.actions.ts:52",{"_index":1752,"title":{},"body":{"classes/LoadNursingHomesFailure.html":{}}}],["api.actions.ts:53",{"_index":1758,"title":{},"body":{"classes/LoadPatientsFailure.html":{},"classes/LoadUsersFailure.html":{}}}],["api.actions.ts:55",{"_index":1759,"title":{},"body":{"classes/LoadPatientsFailure.html":{},"classes/LoadUsersFailure.html":{}}}],["api.actions.ts:56",{"_index":1823,"title":{},"body":{"classes/LoginRedirect.html":{}}}],["api.actions.ts:60",{"_index":1294,"title":{},"body":{"classes/EditNursingHomeSuccess.html":{}}}],["api.actions.ts:62",{"_index":1295,"title":{},"body":{"classes/EditNursingHomeSuccess.html":{}}}],["api.actions.ts:63",{"_index":1300,"title":{},"body":{"classes/EditPatientSuccess.html":{},"classes/EditUserSuccess.html":{},"classes/SignUpSuccess.html":{}}}],["api.actions.ts:65",{"_index":1301,"title":{},"body":{"classes/EditPatientSuccess.html":{},"classes/EditUserSuccess.html":{},"classes/SignUpSuccess.html":{}}}],["api.actions.ts:70",{"_index":1292,"title":{},"body":{"classes/EditNursingHomeFailure.html":{}}}],["api.actions.ts:72",{"_index":1293,"title":{},"body":{"classes/EditNursingHomeFailure.html":{}}}],["api.actions.ts:73",{"_index":1298,"title":{},"body":{"classes/EditPatientFailure.html":{},"classes/EditUserFailure.html":{},"classes/SignUpFailure.html":{}}}],["api.actions.ts:75",{"_index":1299,"title":{},"body":{"classes/EditPatientFailure.html":{},"classes/EditUserFailure.html":{},"classes/SignUpFailure.html":{}}}],["api.actions.ts:83",{"_index":1446,"title":{},"body":{"classes/ForgotPasswordSuccess.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadUserPatientsSuccess.html":{}}}],["api.actions.ts:85",{"_index":1447,"title":{},"body":{"classes/ForgotPasswordSuccess.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadUserPatientsSuccess.html":{}}}],["api.actions.ts:93",{"_index":1425,"title":{},"body":{"classes/ForgotPasswordFailure.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadUserPatientsFailure.html":{}}}],["api.actions.ts:95",{"_index":1426,"title":{},"body":{"classes/ForgotPasswordFailure.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadUserPatientsFailure.html":{}}}],["api.servic",{"_index":434,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["api.service.t",{"_index":332,"title":{},"body":{"injectables/AuthApiService.html":{}}}],["api.service.ts:16",{"_index":339,"title":{},"body":{"injectables/AuthApiService.html":{}}}],["api.service.ts:24",{"_index":344,"title":{},"body":{"injectables/AuthApiService.html":{}}}],["api.service.ts:26",{"_index":336,"title":{},"body":{"injectables/AuthApiService.html":{}}}],["app",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["app.rout",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"interfaces/ITheme.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"injectables/ThemeService.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["appdropdown",{"_index":121,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["appdropdown]'},{'nam",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["appdropdowndirect",{"_index":101,"title":{"directives/AppDropdownDirective.html":{}},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"directives/DropdownLinkDirective.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["appdropdownlink",{"_index":1263,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["appdropdownlink]'},{'nam",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["appdropdowntoggl",{"_index":1251,"title":{},"body":{"directives/DropdownAnchorDirective.html":{}}}],["appdropdowntoggle]'},{'nam",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["appear",{"_index":1621,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["appli",{"_index":1708,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["applic",{"_index":3001,"title":{},"body":{"index.html":{}}}],["applymatthem",{"_index":2671,"title":{},"body":{"injectables/ThemeService.html":{}}}],["applymattheme(r",{"_index":1710,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["appmodul",{"_index":190,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppati",{"_index":2241,"title":{},"body":{"components/PatientsComponent.html":{}}}],["appropri",{"_index":2076,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["approutingmodul",{"_index":199,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appus",{"_index":2791,"title":{},"body":{"components/UsersComponent.html":{}}}],["area",{"_index":2430,"title":{},"body":{"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["argument",{"_index":910,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"directives/DropdownAnchorDirective.html":{},"directives/ScrollToDirective.html":{}}}],["array",{"_index":153,"title":{},"body":{"directives/AppDropdownDirective.html":{},"components/PatientListComponent.html":{},"components/UserListComponent.html":{}}}],["assets/i18n",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["assign",{"_index":1112,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/ITheme.html":{},"interfaces/State-1.html":{},"injectables/ThemeService.html":{}}}],["assignment_ind",{"_index":1889,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["async",{"_index":2174,"title":{},"body":{"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/SigninComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{}}}],["attribut",{"_index":1377,"title":{},"body":{"directives/FontSizeDirective.html":{},"directives/ScrollToDirective.html":{}}}],["attribute('fonts",{"_index":1375,"title":{},"body":{"directives/FontSizeDirective.html":{}}}],["attribute('scrollto",{"_index":2338,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["auth",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"interfaces/AuthState.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/State.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["auth.emailrequir",{"_index":1421,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["auth.passwordrequri",{"_index":2490,"title":{},"body":{"components/SigninComponent.html":{}}}],["auth.reduc",{"_index":492,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-12.html":{}}}],["auth.rout",{"_index":484,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["auth.signin",{"_index":1422,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/SigninComponent.html":{}}}],["auth.signintoyouraccount",{"_index":2488,"title":{},"body":{"components/SigninComponent.html":{}}}],["auth.signout",{"_index":1553,"title":{},"body":{"components/HeaderSideComponent.html":{},"components/SidebarSideComponent.html":{}}}],["auth.usernamerequir",{"_index":2489,"title":{},"body":{"components/SigninComponent.html":{}}}],["auth/act",{"_index":1525,"title":{},"body":{"components/HeaderSideComponent.html":{},"components/SidebarSideComponent.html":{},"interfaces/State-10.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{}}}],["auth/api",{"_index":1429,"title":{},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["auth/auth.modul",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/forgot",{"_index":1395,"title":{},"body":{"classes/ForgotPassword.html":{},"classes/Login.html":{},"classes/Signup.html":{},"miscellaneous/enumerations.html":{}}}],["auth/guards/auth.guard",{"_index":1073,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["auth/login",{"_index":1392,"title":{},"body":{"classes/ForgotPassword.html":{},"classes/Login.html":{},"classes/Signup.html":{},"miscellaneous/enumerations.html":{}}}],["auth/reduc",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderSideComponent.html":{},"components/SidebarSideComponent.html":{}}}],["auth/signup",{"_index":1394,"title":{},"body":{"classes/ForgotPassword.html":{},"classes/Login.html":{},"classes/Signup.html":{},"miscellaneous/enumerations.html":{}}}],["auth0/angular",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthState.html":{},"interfaces/State-12.html":{},"dependencies.html":{}}}],["authact",{"_index":436,"title":{},"body":{"injectables/AuthEffects.html":{},"components/HeaderSideComponent.html":{},"components/SidebarSideComponent.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{}}}],["authactions.authactionsunion",{"_index":2560,"title":{},"body":{"interfaces/State-11.html":{},"interfaces/State-13.html":{}}}],["authactions.logout",{"_index":413,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["authactions.logoutconfirm",{"_index":1539,"title":{},"body":{"components/HeaderSideComponent.html":{},"components/SidebarSideComponent.html":{}}}],["authactions.logoutconfirmationdismiss",{"_index":426,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["authactionsunion",{"_index":1835,"title":{},"body":{"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"miscellaneous/typealiases.html":{}}}],["authactiontyp",{"_index":1829,"title":{},"body":{"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"miscellaneous/enumerations.html":{}}}],["authactiontypes.logout",{"_index":1827,"title":{},"body":{"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{}}}],["authactiontypes.logoutconfirm",{"_index":1832,"title":{},"body":{"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{}}}],["authactiontypes.logoutconfirmationdismiss",{"_index":1834,"title":{},"body":{"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{}}}],["authapiact",{"_index":435,"title":{},"body":{"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"interfaces/AuthState.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{}}}],["authapiactions.authapiactionsunion",{"_index":2543,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{}}}],["authapiactions.authapiactiontypes.loginfailur",{"_index":2568,"title":{},"body":{"interfaces/State-13.html":{}}}],["authapiactions.authapiactiontypes.loginredirect",{"_index":389,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["authapiactions.authapiactiontypes.loginsuccess",{"_index":2561,"title":{},"body":{"interfaces/State-11.html":{},"interfaces/State-13.html":{}}}],["authapiactions.authapiactiontypes.logoutsuccess",{"_index":390,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{}}}],["authapiactions.loginfailure({messag",{"_index":383,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["authapiactions.loginredirect",{"_index":453,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authapiactions.loginsuccess({respons",{"_index":378,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["authapiactions.logoutfailure({messag",{"_index":415,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["authapiactions.logoutsuccess",{"_index":402,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["authapiactionsunion",{"_index":1445,"title":{},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["authapiactiontyp",{"_index":1428,"title":{},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["authapiactiontypes.forgotpasswordfailur",{"_index":1427,"title":{},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{}}}],["authapiactiontypes.forgotpasswordsuccess",{"_index":1444,"title":{},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{}}}],["authapiactiontypes.loginfailur",{"_index":1437,"title":{},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{}}}],["authapiactiontypes.loginredirect",{"_index":1441,"title":{},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{}}}],["authapiactiontypes.loginsuccess",{"_index":1435,"title":{},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{}}}],["authapiactiontypes.logoutfailur",{"_index":1440,"title":{},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{}}}],["authapiactiontypes.logoutsuccess",{"_index":1438,"title":{},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{}}}],["authapiactiontypes.signupfailur",{"_index":1443,"title":{},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{}}}],["authapiactiontypes.signupsuccess",{"_index":1442,"title":{},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{}}}],["authapiservic",{"_index":330,"title":{"injectables/AuthApiService.html":{}},"body":{"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{}}}],["autheffect",{"_index":350,"title":{"injectables/AuthEffects.html":{}},"body":{"injectables/AuthEffects.html":{},"modules/AuthModule.html":{}}}],["authent",{"_index":352,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["authguard",{"_index":442,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"modules/DashboardRoutingModule.html":{}}}],["authlayoutcompon",{"_index":44,"title":{"components/AuthLayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["authmodul",{"_index":200,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authpageact",{"_index":437,"title":{},"body":{"injectables/AuthEffects.html":{},"components/SigninComponent.html":{},"interfaces/State-13.html":{}}}],["authpageactions.authpageactionsunion",{"_index":2566,"title":{},"body":{"interfaces/State-13.html":{}}}],["authpageactions.authpageactiontypes.login",{"_index":2567,"title":{},"body":{"interfaces/State-13.html":{}}}],["authpageactions.login({credenti",{"_index":2487,"title":{},"body":{"components/SigninComponent.html":{}}}],["authpageactionsunion",{"_index":1399,"title":{},"body":{"classes/ForgotPassword.html":{},"classes/Login.html":{},"classes/Signup.html":{},"miscellaneous/typealiases.html":{}}}],["authpageactiontyp",{"_index":1391,"title":{},"body":{"classes/ForgotPassword.html":{},"classes/Login.html":{},"classes/Signup.html":{},"miscellaneous/enumerations.html":{}}}],["authpageactiontypes.forgotpassword",{"_index":1390,"title":{},"body":{"classes/ForgotPassword.html":{},"classes/Login.html":{},"classes/Signup.html":{}}}],["authpageactiontypes.login",{"_index":1396,"title":{},"body":{"classes/ForgotPassword.html":{},"classes/Login.html":{},"classes/Signup.html":{}}}],["authpageactiontypes.signup",{"_index":1397,"title":{},"body":{"classes/ForgotPassword.html":{},"classes/Login.html":{},"classes/Signup.html":{}}}],["authrout",{"_index":483,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["authroutingmodul",{"_index":460,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authstat",{"_index":487,"title":{"interfaces/AuthState.html":{}},"body":{"interfaces/AuthState.html":{},"interfaces/State-12.html":{}}}],["authstor",{"_index":1505,"title":{},"body":{"components/HeaderSideComponent.html":{},"components/SidebarSideComponent.html":{}}}],["auto",{"_index":1670,"title":{},"body":{"interfaces/IPatient.html":{}}}],["avail",{"_index":3027,"title":{},"body":{"modules.html":{}}}],["availablelang",{"_index":1491,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["b",{"_index":578,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["back",{"_index":1345,"title":{},"body":{"components/ErrorComponent.html":{},"components/NotFoundComponent.html":{}}}],["backdrop",{"_index":1793,"title":{},"body":{"injectables/LoaderService.html":{}}}],["backdropclass",{"_index":1791,"title":{},"body":{"injectables/LoaderService.html":{}}}],["badg",{"_index":1624,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["badge.valu",{"_index":2462,"title":{},"body":{"components/SidenavComponent.html":{}}}],["bar",{"_index":753,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["base64",{"_index":1672,"title":{},"body":{"interfaces/IPatient.html":{}}}],["basecolor",{"_index":1693,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["basic",{"_index":2232,"title":{},"body":{"components/PatientsComponent.html":{},"interfaces/State.html":{},"components/UsersComponent.html":{}}}],["befor",{"_index":2934,"title":{},"body":{"index.html":{}}}],["behaviorsubject",{"_index":1557,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"injectables/LayoutService.html":{},"injectables/NavigationService.html":{}}}],["behaviorsubject(this.iconmenu",{"_index":1637,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["behaviorsubject(this.layoutconf",{"_index":1567,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["belong",{"_index":2859,"title":{},"body":{"injectables/UsersService.html":{}}}],["beta.19",{"_index":2877,"title":{},"body":{"dependencies.html":{}}}],["blank",{"_index":525,"title":{},"body":{"components/BlankComponent.html":{},"modules/DashboardRoutingModule.html":{}}}],["blank'},{'nam",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["blankcompon",{"_index":47,"title":{"components/BlankComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["blue",{"_index":1701,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["blur",{"_index":2021,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["bodyp",{"_index":943,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["boolean",{"_index":552,"title":{},"body":{"components/BreadcrumbComponent.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/DashboardLayoutComponent.html":{},"directives/DropdownLinkDirective.html":{},"classes/FixTopbar.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/ITheme.html":{},"injectables/LayoutService.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"injectables/NavigationService.html":{},"classes/NumberValidators.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"components/SidebarSideComponent.html":{},"components/SidenavComponent.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-6.html":{},"interfaces/State-9.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["bootstrap",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/ErrorsModule.html":{},"overview.html":{}}}],["box",{"_index":2264,"title":{},"body":{"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["branch",{"_index":2929,"title":{},"body":{"index.html":{}}}],["breadcrum",{"_index":751,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["breadcrumb",{"_index":529,"title":{},"body":{"components/BreadcrumbComponent.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"modules/DashboardRoutingModule.html":{},"classes/FixTopbar.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IRoutePart.html":{},"injectables/LayoutService.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"injectables/RoutePartsService.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-2.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{}}}],["breadcrumb'},{'nam",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["breadcrumb.component.html",{"_index":531,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["breadcrumbcompon",{"_index":49,"title":{"components/BreadcrumbComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["brows",{"_index":3025,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"modules.html":{}}}],["browser/anim",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["browserev",{"_index":1556,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["browserlang",{"_index":954,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["browsermodul",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":2962,"title":{},"body":{"index.html":{}}}],["build:prod",{"_index":2969,"title":{},"body":{"index.html":{}}}],["build:stag",{"_index":2972,"title":{},"body":{"index.html":{}}}],["builditemform",{"_index":1925,"title":{},"body":{"components/NursingHomeFormComponent.html":{}}}],["builditemform(item",{"_index":1931,"title":{},"body":{"components/NursingHomeFormComponent.html":{}}}],["bundl",{"_index":354,"title":{},"body":{"injectables/AuthEffects.html":{},"modules/CoreModule.html":{}}}],["busi",{"_index":1779,"title":{},"body":{"injectables/LoaderService.html":{}}}],["button",{"_index":789,"title":{},"body":{"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{}}}],["c",{"_index":1477,"title":{},"body":{"classes/GenericValidator.html":{},"classes/NumberValidators.html":{}}}],["c.dirti",{"_index":1484,"title":{},"body":{"classes/GenericValidator.html":{}}}],["c.error",{"_index":1486,"title":{},"body":{"classes/GenericValidator.html":{}}}],["c.touch",{"_index":1485,"title":{},"body":{"classes/GenericValidator.html":{}}}],["c.valu",{"_index":1917,"title":{},"body":{"classes/NumberValidators.html":{}}}],["call",{"_index":367,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{}}}],["callback",{"_index":2500,"title":{},"body":{"components/SignupComponent.html":{}}}],["calvin",{"_index":2991,"title":{},"body":{"index.html":{}}}],["canactiv",{"_index":446,"title":{},"body":{"guards/AuthGuard.html":{},"modules/DashboardRoutingModule.html":{}}}],["cancel",{"_index":779,"title":{},"body":{"components/ConfirmComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["canceledit",{"_index":2022,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["case",{"_index":419,"title":{},"body":{"injectables/AuthEffects.html":{},"components/PatientListComponent.html":{},"injectables/PatientsEffects.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"components/UserListComponent.html":{},"injectables/UsersEffects.html":{}}}],["catch",{"_index":1591,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/ITheme.html":{},"injectables/LayoutService.html":{},"injectables/ThemeService.html":{}}}],["catcherror",{"_index":431,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["catcherror(httperror",{"_index":1983,"title":{},"body":{"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["catcherror(httprespons",{"_index":403,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["catcherror(respons",{"_index":379,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["cd",{"_index":2956,"title":{},"body":{"index.html":{}}}],["chang",{"_index":947,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"injectables/LayoutService.html":{},"injectables/NavigationService.html":{},"components/PatientEditFormComponent.html":{},"injectables/PatientsService.html":{},"components/UserEditFormComponent.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["change.mqalia",{"_index":1335,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["changed.chang",{"_index":2315,"title":{},"body":{"injectables/PatientsService.html":{},"injectables/UsersService.html":{}}}],["changethem",{"_index":1494,"title":{},"body":{"components/HeaderSideComponent.html":{},"injectables/ThemeService.html":{}}}],["changetheme(r",{"_index":1719,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["changetheme(them",{"_index":1507,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["chart",{"_index":1899,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["chat",{"_index":1893,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["check",{"_index":445,"title":{},"body":{"guards/AuthGuard.html":{},"components/HeaderSideComponent.html":{},"components/PatientFormComponent.html":{},"components/SidebarSideComponent.html":{},"components/UserFormComponent.html":{},"index.html":{}}}],["checkout",{"_index":2957,"title":{},"body":{"index.html":{}}}],["chevron_left",{"_index":1541,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["child",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"classes/GenericValidator.html":{}}}],["childmessag",{"_index":1479,"title":{},"body":{"classes/GenericValidator.html":{}}}],["children",{"_index":1076,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["chrome",{"_index":2342,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["class",{"_index":35,"title":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/FixTopbar.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/GenericValidator.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/NumberValidators.html":{},"classes/OpenSideNav.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"classes/Signup.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"modules/CoreModule.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"modules/ErrorsModule.html":{},"modules/ErrorsRoutingModule.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"components/ForgotPasswordComponent.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"modules/MaterialModule.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"classes/NumberValidators.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"modules/SharedModule.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["clean",{"_index":3016,"title":{},"body":{"index.html":{}}}],["clear",{"_index":587,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreateNursingHome.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"components/NotificationsComponent.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"interfaces/State-10.html":{},"interfaces/State-5.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"miscellaneous/enumerations.html":{}}}],["clearal",{"_index":1881,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["clearall(ev",{"_index":1884,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["clearselectednursinghom",{"_index":584,"title":{"classes/ClearSelectedNursingHome.html":{}},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["clearselectedpati",{"_index":636,"title":{"classes/ClearSelectedPatient.html":{}},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["clearselectedus",{"_index":672,"title":{"classes/ClearSelectedUser.html":{}},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["cli",{"_index":2939,"title":{},"body":{"index.html":{}}}],["click",{"_index":788,"title":{},"body":{"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"directives/DropdownAnchorDirective.html":{},"directives/ScrollToDirective.html":{}}}],["click(",{"_index":1254,"title":{},"body":{"directives/DropdownAnchorDirective.html":{}}}],["client",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["clone",{"_index":2943,"title":{},"body":{"index.html":{}}}],["close",{"_index":707,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/DashboardLayoutComponent.html":{},"classes/FixTopbar.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"injectables/LoaderService.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"injectables/PatientsEffects.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-2.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"injectables/UsersEffects.html":{},"miscellaneous/enumerations.html":{}}}],["closeotherlink",{"_index":129,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["closeotherlinks(openlink",{"_index":144,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["closesidebar",{"_index":902,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["closesidenav",{"_index":705,"title":{"classes/CloseSideNav.html":{}},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["cloud",{"_index":2005,"title":{},"body":{"injectables/NursingHomesService.html":{},"injectables/PatientsService.html":{},"injectables/UsersService.html":{}}}],["cluster_appmodul",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodul",{"_index":457,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declar",{"_index":458,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_import",{"_index":459,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authroutingmodul",{"_index":480,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["cluster_authroutingmodule_import",{"_index":481,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["cluster_coremodul",{"_index":802,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_declar",{"_index":803,"title":{},"body":{"modules/CoreModule.html":{}}}],["cluster_coremodule_export",{"_index":805,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_import",{"_index":804,"title":{},"body":{"modules/CoreModule.html":{}}}],["cluster_dashboardmodul",{"_index":1003,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_declar",{"_index":1004,"title":{},"body":{"modules/DashboardModule.html":{}}}],["cluster_dashboardmodule_export",{"_index":1006,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_import",{"_index":1005,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_provid",{"_index":1007,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardroutingmodul",{"_index":1070,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["cluster_dashboardroutingmodule_import",{"_index":1071,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["cluster_errorsmodul",{"_index":1349,"title":{},"body":{"modules/ErrorsModule.html":{},"overview.html":{}}}],["cluster_errorsmodule_declar",{"_index":1350,"title":{},"body":{"modules/ErrorsModule.html":{}}}],["cluster_errorsmodule_import",{"_index":1351,"title":{},"body":{"modules/ErrorsModule.html":{},"overview.html":{}}}],["code",{"_index":1518,"title":{},"body":{"components/HeaderSideComponent.html":{},"index.html":{}}}],["codes(#fff000",{"_index":1626,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["collect",{"_index":1159,"title":{},"body":{"interfaces/DashboardState.html":{},"components/PatientFormComponent.html":{},"interfaces/State-1.html":{},"components/UserFormComponent.html":{}}}],["color",{"_index":1613,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{},"components/NotificationsComponent.html":{}}}],["column",{"_index":2748,"title":{},"body":{"components/UserListComponent.html":{}}}],["command",{"_index":2964,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":463,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/ErrorsModule.html":{},"modules/SharedModule.html":{}}}],["compact",{"_index":719,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-2.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{}}}],["compactsidenav",{"_index":718,"title":{"classes/CompactSideNav.html":{}},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["compar",{"_index":2160,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["complet",{"_index":615,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreateNursingHome.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"miscellaneous/enumerations.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"modules/CoreModule.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"modules/ErrorsModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["component_templ",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["componentact",{"_index":2014,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/PatientListComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{}}}],["components.layoutconf$.subscribe(chang",{"_index":980,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["components/blank/blank.compon",{"_index":1026,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["components/breadcrumb/breadcrumb.compon",{"_index":1016,"title":{},"body":{"modules/DashboardModule.html":{}}}],["components/breadcrumb/breadcrumb.component.t",{"_index":527,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["components/breadcrumb/breadcrumb.component.ts:13",{"_index":547,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["components/breadcrumb/breadcrumb.component.ts:14",{"_index":540,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["components/breadcrumb/breadcrumb.component.ts:21",{"_index":546,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["components/breadcrumb/breadcrumb.component.ts:49",{"_index":542,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["components/breadcrumb/breadcrumb.component.ts:52",{"_index":541,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["components/breadcrumb/breadcrumb.component.ts:58",{"_index":544,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["components/confirm/confirm.compon",{"_index":782,"title":{},"body":{"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"modules/CoreModule.html":{}}}],["components/error/error.compon",{"_index":1357,"title":{},"body":{"modules/ErrorsModule.html":{}}}],["components/forgot",{"_index":467,"title":{},"body":{"modules/AuthModule.html":{}}}],["components/head",{"_index":1017,"title":{},"body":{"modules/DashboardModule.html":{},"components/HeaderSideComponent.html":{}}}],["components/loader/loader.compon",{"_index":1787,"title":{},"body":{"injectables/LoaderService.html":{}}}],["components/lockscreen/lockscreen.compon",{"_index":466,"title":{},"body":{"modules/AuthModule.html":{}}}],["components/not",{"_index":1354,"title":{},"body":{"modules/ErrorsModule.html":{}}}],["components/notifications/notifications.compon",{"_index":1015,"title":{},"body":{"modules/DashboardModule.html":{}}}],["components/notifications/notifications.component.t",{"_index":1879,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["components/notifications/notifications.component.ts:12",{"_index":1900,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["components/notifications/notifications.component.ts:30",{"_index":1882,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["components/notifications/notifications.component.ts:34",{"_index":1886,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["components/notifications/notifications.component.ts:45",{"_index":1885,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["components/notifications/notifications.component.ts:9",{"_index":1883,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["components/nurs",{"_index":1054,"title":{},"body":{"modules/DashboardModule.html":{},"injectables/NursingHomesEffects.html":{}}}],["components/patients/pati",{"_index":1039,"title":{},"body":{"modules/DashboardModule.html":{},"injectables/PatientsEffects.html":{}}}],["components/patients/patients.compon",{"_index":1042,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["components/sidebar",{"_index":1020,"title":{},"body":{"modules/DashboardModule.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["components/sidenav/sidenav.compon",{"_index":1025,"title":{},"body":{"modules/DashboardModule.html":{}}}],["components/sidenav/sidenav.component.t",{"_index":2447,"title":{},"body":{"components/SidenavComponent.html":{}}}],["components/sidenav/sidenav.component.ts:12",{"_index":2453,"title":{},"body":{"components/SidenavComponent.html":{}}}],["components/sidenav/sidenav.component.ts:13",{"_index":2452,"title":{},"body":{"components/SidenavComponent.html":{}}}],["components/sidenav/sidenav.component.ts:14",{"_index":2451,"title":{},"body":{"components/SidenavComponent.html":{}}}],["components/sidenav/sidenav.component.ts:22",{"_index":2454,"title":{},"body":{"components/SidenavComponent.html":{}}}],["components/signin/signin.compon",{"_index":464,"title":{},"body":{"modules/AuthModule.html":{}}}],["components/signup/signup.compon",{"_index":465,"title":{},"body":{"modules/AuthModule.html":{}}}],["components/users/us",{"_index":1036,"title":{},"body":{"modules/DashboardModule.html":{},"injectables/UsersEffects.html":{}}}],["components/users/users.compon",{"_index":1041,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["compos",{"_index":785,"title":{},"body":{"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"interfaces/DashboardState.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{}}}],["condit",{"_index":2512,"title":{},"body":{"components/SignupComponent.html":{}}}],["conf",{"_index":1577,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["config",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["configur",{"_index":1221,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"interfaces/State-1.html":{},"index.html":{}}}],["configuration=calvin\",if",{"_index":3000,"title":{},"body":{"index.html":{}}}],["configuration=stag",{"_index":2973,"title":{},"body":{"index.html":{}}}],["confirm",{"_index":759,"title":{},"body":{"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"components/PatientFormComponent.html":{},"components/SignupComponent.html":{},"components/UserFormComponent.html":{},"miscellaneous/enumerations.html":{}}}],["confirm'},{'nam",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["confirm(`r",{"_index":2098,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["confirm(data",{"_index":790,"title":{},"body":{"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{}}}],["confirm.component.html",{"_index":760,"title":{},"body":{"components/ConfirmComponent.html":{}}}],["confirm_password",{"_index":2685,"title":{},"body":{"interfaces/User.html":{}}}],["confirmcompon",{"_index":51,"title":{"components/ConfirmComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"modules/CoreModule.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"modules/ErrorsModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["confirmdata",{"_index":780,"title":{"interfaces/ConfirmData.html":{}},"body":{"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{}}}],["confirmpassword",{"_index":2504,"title":{},"body":{"components/SignupComponent.html":{}}}],["confirmpasswordrequir",{"_index":2179,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["confirmservic",{"_index":364,"title":{"injectables/ConfirmService.html":{}},"body":{"injectables/AuthEffects.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"modules/DashboardModule.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"overview.html":{}}}],["connect",{"_index":3007,"title":{},"body":{"index.html":{}}}],["connectedpatientprofil",{"_index":2733,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["connecteduserprofil",{"_index":2119,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["console.log('act",{"_index":1968,"title":{},"body":{"injectables/NursingHomesEffects.html":{},"interfaces/State.html":{}}}],["console.log('load",{"_index":2309,"title":{},"body":{"injectables/PatientsService.html":{}}}],["console.log('st",{"_index":2524,"title":{},"body":{"interfaces/State.html":{}}}],["console.log(action.payload.nursinghom",{"_index":2597,"title":{},"body":{"interfaces/State-4.html":{}}}],["console.log(chang",{"_index":2869,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log(ev",{"_index":1532,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["console.log(httperror",{"_index":1984,"title":{},"body":{"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["console.log(httprespons",{"_index":2257,"title":{},"body":{"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["console.log(nursinghom",{"_index":1981,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["console.log(p",{"_index":2112,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["console.log(pati",{"_index":2169,"title":{},"body":{"components/PatientFormComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["console.log(snapshot.data['titl",{"_index":1685,"title":{},"body":{"interfaces/IRoutePart.html":{},"injectables/RoutePartsService.html":{}}}],["console.log(this.lockscreendata",{"_index":1811,"title":{},"body":{"components/LockscreenComponent.html":{}}}],["console.log(this.patienteditform.valu",{"_index":2101,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["console.log(this.routepart",{"_index":561,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["console.log(this.usereditform.valu",{"_index":2723,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["console.log(us",{"_index":2743,"title":{},"body":{"components/UserFormComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{}}}],["const",{"_index":169,"title":{},"body":{"directives/AppDropdownDirective.html":{},"injectables/AuthEffects.html":{},"modules/AuthModule.html":{},"interfaces/AuthState.html":{},"components/BreadcrumbComponent.html":{},"modules/CoreModule.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"interfaces/DashboardState.html":{},"directives/EgretSideNavToggleDirective.html":{},"modules/ErrorsModule.html":{},"classes/GenericValidator.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/ITheme.html":{},"injectables/LayoutService.html":{},"modules/MaterialModule.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"injectables/PatientsEffects.html":{},"directives/ScrollToDirective.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/ThemeService.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"injectables/UsersEffects.html":{}}}],["constructor",{"_index":133,"title":{},"body":{"directives/AppDropdownDirective.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"components/ForgotPasswordComponent.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/ITheme.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{}}}],["constructor(@attribute('fonts",{"_index":1381,"title":{},"body":{"directives/FontSizeDirective.html":{}}}],["constructor(@attribute('scrollto",{"_index":2340,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["constructor(@inject(appdropdowndirect",{"_index":1285,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["constructor(@inject(dropdownlinkdirect",{"_index":1256,"title":{},"body":{"directives/DropdownAnchorDirective.html":{}}}],["constructor(act",{"_index":359,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["constructor(authstor",{"_index":1501,"title":{},"body":{"components/HeaderSideComponent.html":{},"components/SidebarSideComponent.html":{}}}],["constructor(data",{"_index":1927,"title":{},"body":{"components/NursingHomeFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["constructor(dialog",{"_index":798,"title":{},"body":{"injectables/ConfirmService.html":{},"injectables/LoaderService.html":{}}}],["constructor(dialogref",{"_index":763,"title":{},"body":{"components/ConfirmComponent.html":{},"components/LoaderComponent.html":{}}}],["constructor(docu",{"_index":2673,"title":{},"body":{"injectables/ThemeService.html":{}}}],["constructor(elmid",{"_index":2330,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["constructor(fonts",{"_index":1370,"title":{},"body":{"directives/FontSizeDirective.html":{}}}],["constructor(http",{"_index":335,"title":{},"body":{"injectables/AuthApiService.html":{},"injectables/NursingHomesService.html":{},"injectables/PatientsService.html":{},"injectables/UsersService.html":{}}}],["constructor(media",{"_index":1310,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["constructor(nav",{"_index":1269,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["constructor(navlink",{"_index":1252,"title":{},"body":{"directives/DropdownAnchorDirective.html":{}}}],["constructor(navservic",{"_index":2438,"title":{},"body":{"components/SidebarTopComponent.html":{}}}],["constructor(payload",{"_index":710,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/FixTopbar.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"classes/Signup.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["constructor(priv",{"_index":188,"title":{},"body":{"directives/AppDropdownDirective.html":{},"injectables/AuthApiService.html":{},"guards/AuthGuard.html":{},"classes/GenericValidator.html":{},"interfaces/IRoutePart.html":{},"components/NotificationsComponent.html":{},"injectables/NursingHomesService.html":{},"components/PatientEditFormComponent.html":{},"injectables/PatientsService.html":{},"injectables/RoutePartsService.html":{},"components/SigninComponent.html":{},"components/UserEditFormComponent.html":{},"injectables/UsersService.html":{}}}],["constructor(publ",{"_index":620,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/FixTopbar.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"classes/Signup.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["constructor(rout",{"_index":134,"title":{},"body":{"directives/AppDropdownDirective.html":{},"components/BreadcrumbComponent.html":{},"components/NotificationsComponent.html":{},"injectables/RoutePartsService.html":{}}}],["constructor(stor",{"_index":447,"title":{},"body":{"guards/AuthGuard.html":{},"components/DashboardLayoutComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SigninComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["constructor(validationmessag",{"_index":1452,"title":{},"body":{"classes/GenericValidator.html":{}}}],["contact",{"_index":1887,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["contain",{"_index":1458,"title":{},"body":{"classes/GenericValidator.html":{},"components/PatientsComponent.html":{},"components/UsersComponent.html":{}}}],["container.control",{"_index":1475,"title":{},"body":{"classes/GenericValidator.html":{}}}],["container.controls.hasownproperty(controlkey",{"_index":1476,"title":{},"body":{"classes/GenericValidator.html":{}}}],["container.controls[controlkey",{"_index":1478,"title":{},"body":{"classes/GenericValidator.html":{}}}],["containers/auth",{"_index":473,"title":{},"body":{"modules/AuthModule.html":{}}}],["containers/dashboard",{"_index":1024,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["containers/error",{"_index":1358,"title":{},"body":{"modules/ErrorsModule.html":{}}}],["containers/layout",{"_index":1014,"title":{},"body":{"modules/DashboardModule.html":{}}}],["content",{"_index":990,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"components/LoaderComponent.html":{},"index.html":{}}}],["control",{"_index":1470,"title":{},"body":{"classes/GenericValidator.html":{},"components/PatientFormComponent.html":{},"components/SignupComponent.html":{},"components/UserFormComponent.html":{}}}],["control.get('password').valu",{"_index":2157,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["control.get('password_confirmation').seterror",{"_index":2163,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["control.get('password_confirmation').valu",{"_index":2159,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["control.geterror('nopasswordmatch",{"_index":2165,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["control.seterrors(nul",{"_index":2166,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["control.valu",{"_index":2507,"title":{},"body":{"components/SignupComponent.html":{}}}],["controlkey",{"_index":1474,"title":{},"body":{"classes/GenericValidator.html":{}}}],["controlname1",{"_index":1464,"title":{},"body":{"classes/GenericValidator.html":{}}}],["controlname2",{"_index":1467,"title":{},"body":{"classes/GenericValidator.html":{}}}],["copi",{"_index":2103,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{},"index.html":{}}}],["core",{"_index":2885,"title":{},"body":{"dependencies.html":{}}}],["core/components/loader/loader.compon",{"_index":1057,"title":{},"body":{"modules/DashboardModule.html":{}}}],["core/containers/app/app.compon",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["core/core.modul",{"_index":1035,"title":{},"body":{"modules/DashboardModule.html":{}}}],["core/directives/dropdown",{"_index":1059,"title":{},"body":{"modules/DashboardModule.html":{}}}],["core/directives/dropdown.direct",{"_index":1058,"title":{},"body":{"modules/DashboardModule.html":{}}}],["core/directives/egret",{"_index":1061,"title":{},"body":{"modules/DashboardModule.html":{}}}],["core/directives/font",{"_index":1063,"title":{},"body":{"modules/DashboardModule.html":{}}}],["core/directives/scrol",{"_index":1065,"title":{},"body":{"modules/DashboardModule.html":{}}}],["core/services/confirm.servic",{"_index":439,"title":{},"body":{"injectables/AuthEffects.html":{},"modules/DashboardModule.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["core/services/layout.servic",{"_index":550,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/HeaderSideComponent.html":{}}}],["core/services/navigation.servic",{"_index":2416,"title":{},"body":{"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["core/services/rout",{"_index":548,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["core/services/theme.servic",{"_index":937,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"components/HeaderSideComponent.html":{},"components/SidebarSideComponent.html":{}}}],["coremodul",{"_index":801,"title":{"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["correct",{"_index":2115,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{},"index.html":{}}}],["coverag",{"_index":2894,"title":{},"body":{"dependencies.html":{}}}],["creat",{"_index":607,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"components/SigninComponent.html":{},"interfaces/State-1.html":{},"interfaces/State-6.html":{},"interfaces/State-9.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["createentityadapt",{"_index":2534,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{}}}],["createfeatureselector",{"_index":497,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/DashboardState.html":{},"interfaces/State-1.html":{},"interfaces/State-12.html":{},"interfaces/State-2.html":{}}}],["createfeatureselector('auth",{"_index":506,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-12.html":{}}}],["createfeatureselector('dashboard",{"_index":1124,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["createnursinghom",{"_index":606,"title":{"classes/CreateNursingHome.html":{}},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["createnursinghome(nursinghom",{"_index":2002,"title":{},"body":{"injectables/NursingHomesService.html":{}}}],["createnursinghomefailur",{"_index":813,"title":{"classes/CreateNursingHomeFailure.html":{}},"body":{"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["createnursinghomesuccess",{"_index":822,"title":{"classes/CreateNursingHomeSuccess.html":{}},"body":{"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["createpati",{"_index":646,"title":{"classes/CreatePatient.html":{}},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["createpatient(pati",{"_index":2299,"title":{},"body":{"injectables/PatientsService.html":{}}}],["createpatienterror",{"_index":2614,"title":{},"body":{"interfaces/State-6.html":{}}}],["createpatientfailur",{"_index":838,"title":{"classes/CreatePatientFailure.html":{}},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["createpatientformdialog",{"_index":645,"title":{"classes/CreatePatientFormDialog.html":{}},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["createpatientpend",{"_index":2123,"title":{},"body":{"components/PatientFormComponent.html":{},"interfaces/State-6.html":{}}}],["createpatientsuccess",{"_index":844,"title":{"classes/CreatePatientSuccess.html":{}},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"injectables/PatientsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["createselector",{"_index":498,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/DashboardState.html":{},"interfaces/State-1.html":{},"interfaces/State-12.html":{},"interfaces/State-2.html":{}}}],["createselector(getlayoutst",{"_index":1223,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["createselector(selectauthuserst",{"_index":512,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-12.html":{}}}],["createtanslateload",{"_index":312,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["createtanslateloader(http",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["createus",{"_index":681,"title":{"classes/CreateUser.html":{}},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["createuser(us",{"_index":2851,"title":{},"body":{"injectables/UsersService.html":{}}}],["createusererror",{"_index":2647,"title":{},"body":{"interfaces/State-9.html":{}}}],["createuserfailur",{"_index":866,"title":{"classes/CreateUserFailure.html":{}},"body":{"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["createuserformdialog",{"_index":680,"title":{"classes/CreateUserFormDialog.html":{}},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["createuserpend",{"_index":2648,"title":{},"body":{"interfaces/State-9.html":{},"components/UserFormComponent.html":{}}}],["createusersuccess",{"_index":870,"title":{"classes/CreateUserSuccess.html":{}},"body":{"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"injectables/UsersEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["creation",{"_index":2148,"title":{},"body":{"components/PatientFormComponent.html":{},"interfaces/State-10.html":{},"interfaces/State-4.html":{},"interfaces/State-7.html":{},"components/UserFormComponent.html":{}}}],["credenti",{"_index":342,"title":{},"body":{"injectables/AuthApiService.html":{},"classes/ForgotPassword.html":{},"interfaces/ICredentials.html":{},"interfaces/IUser.html":{},"classes/Login.html":{},"classes/Signup.html":{},"index.html":{}}}],["cto",{"_index":2949,"title":{},"body":{"index.html":{}}}],["current",{"_index":572,"title":{},"body":{"components/BreadcrumbComponent.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreateNursingHome.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"components/PatientEditFormComponent.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"interfaces/State-10.html":{},"interfaces/State-3.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-9.html":{},"components/UserEditFormComponent.html":{},"miscellaneous/enumerations.html":{}}}],["currentlang",{"_index":1492,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["currentpati",{"_index":2220,"title":{},"body":{"components/PatientListComponent.html":{}}}],["currentrout",{"_index":1569,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["currenturl",{"_index":182,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["currenturl.indexof(link.group",{"_index":184,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["currentus",{"_index":2779,"title":{},"body":{"components/UserListComponent.html":{}}}],["currentyposit",{"_index":2328,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["custom",{"_index":1639,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["cvb",{"_index":162,"title":{},"body":{"directives/AppDropdownDirective.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"directives/EgretSideNavToggleDirective.html":{},"directives/FontSizeDirective.html":{},"directives/ScrollToDirective.html":{}}}],["cycl",{"_index":2499,"title":{},"body":{"components/SignupComponent.html":{}}}],["dark",{"_index":1696,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["dashboard",{"_index":888,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"interfaces/DashboardState.html":{},"components/ErrorComponent.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"interfaces/State-1.html":{}}}],["dashboard'},{'nam",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["dashboard/blank",{"_index":1629,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["dashboard/dashboard.modul",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["dashboard/pati",{"_index":1631,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["dashboard/us",{"_index":1630,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["dashboardlayoutcompon",{"_index":53,"title":{"components/DashboardLayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["dashboardmodul",{"_index":201,"title":{"modules/DashboardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["dashboardrout",{"_index":1074,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["dashboardroutingmodul",{"_index":1008,"title":{"modules/DashboardRoutingModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["dashboardst",{"_index":1081,"title":{"interfaces/DashboardState.html":{}},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["data",{"_index":761,"title":{},"body":{"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"modules/DashboardRoutingModule.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientFormComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"components/UserFormComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{}}}],["data.messag",{"_index":776,"title":{},"body":{"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{}}}],["data.titl",{"_index":775,"title":{},"body":{"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["databas",{"_index":2052,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["datat",{"_index":1045,"title":{},"body":{"modules/DashboardModule.html":{},"components/PatientListComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["db",{"_index":1671,"title":{},"body":{"interfaces/IPatient.html":{}}}],["de",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"components/DashboardLayoutComponent.html":{},"components/HeaderSideComponent.html":{}}}],["declar",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/ErrorsModule.html":{},"modules/MaterialModule.html":{},"overview.html":{}}}],["deconstruct",{"_index":1148,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["decor",{"_index":384,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ConfirmComponent.html":{},"directives/EgretSideNavToggleDirective.html":{},"directives/FontSizeDirective.html":{},"components/ForgotPasswordComponent.html":{},"components/LockscreenComponent.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientFormComponent.html":{},"injectables/PatientsEffects.html":{},"directives/ScrollToDirective.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserFormComponent.html":{},"injectables/UsersEffects.html":{}}}],["default",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"injectables/AuthEffects.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"injectables/ConfirmService.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/FixTopbar.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/ITheme.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"injectables/NavigationService.html":{},"components/NotificationsComponent.html":{},"injectables/NursingHomesEffects.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"components/SidenavComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{}}}],["defin",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"injectables/ConfirmService.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"components/ForgotPasswordComponent.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"classes/NumberValidators.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{}}}],["definit",{"_index":820,"title":{},"body":{"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ICredentials.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IUser.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"interfaces/State-10.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"miscellaneous/enumerations.html":{}}}],["defint",{"_index":1560,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"interfaces/NursingHome.html":{}}}],["delay",{"_index":432,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["delay(2000",{"_index":1964,"title":{},"body":{"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["delay(3000",{"_index":372,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["delet",{"_index":655,"title":{},"body":{"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"components/PatientEditFormComponent.html":{},"injectables/PatientsService.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"components/UserEditFormComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["deletepati",{"_index":654,"title":{"classes/DeletePatient.html":{}},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"components/PatientEditFormComponent.html":{},"injectables/PatientsService.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{},"miscellaneous/enumerations.html":{}}}],["deletepatient(id",{"_index":2301,"title":{},"body":{"injectables/PatientsService.html":{}}}],["deleteus",{"_index":689,"title":{"classes/DeleteUser.html":{}},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{},"components/UserEditFormComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["deleteuser(id",{"_index":2853,"title":{},"body":{"injectables/UsersService.html":{}}}],["demo",{"_index":1716,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["dep",{"_index":313,"title":{},"body":{"modules/AppModule.html":{}}}],["depend",{"_index":191,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/ErrorsModule.html":{},"components/PatientListComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deploy",{"_index":3003,"title":{},"body":{"index.html":{}}}],["deprec",{"_index":161,"title":{},"body":{"directives/AppDropdownDirective.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"directives/EgretSideNavToggleDirective.html":{},"directives/FontSizeDirective.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"directives/ScrollToDirective.html":{}}}],["descript",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"modules/CoreModule.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"directives/EgretSideNavToggleDirective.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"interfaces/ICredentials.html":{},"interfaces/IDevice.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IPatient.html":{},"interfaces/IUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"interfaces/NursingHome.html":{},"injectables/NursingHomesEffects.html":{},"classes/OpenSideNav.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"components/SidenavComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"interfaces/State-1.html":{},"interfaces/State-11.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["destin",{"_index":3012,"title":{},"body":{"index.html":{}}}],["detail",{"_index":1977,"title":{},"body":{"injectables/NursingHomesEffects.html":{},"components/PatientFormComponent.html":{},"injectables/PatientsEffects.html":{},"components/UserFormComponent.html":{},"injectables/UsersEffects.html":{}}}],["determin",{"_index":2483,"title":{},"body":{"components/SigninComponent.html":{}}}],["deutsch",{"_index":1520,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["dev",{"_index":3005,"title":{},"body":{"index.html":{}}}],["develop",{"_index":2926,"title":{},"body":{"index.html":{}}}],["devic",{"_index":1652,"title":{},"body":{"interfaces/IDevice.html":{},"interfaces/IPatient.html":{}}}],["device.model",{"_index":1668,"title":{},"body":{"interfaces/IPatient.html":{}}}],["device_id",{"_index":1661,"title":{},"body":{"interfaces/IPatient.html":{}}}],["devtool",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["dialog",{"_index":429,"title":{},"body":{"injectables/AuthEffects.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"classes/CreateNursingHome.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"miscellaneous/enumerations.html":{}}}],["dialog.afterclos",{"_index":786,"title":{},"body":{"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{}}}],["dialogref",{"_index":762,"title":{},"body":{"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientFormComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"components/UserFormComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{}}}],["dialogref.afterclos",{"_index":797,"title":{},"body":{"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["dialogu",{"_index":2130,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["differ",{"_index":1642,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["dir",{"_index":1563,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"index.html":{}}}],["direct",{"_index":39,"title":{"directives/AppDropdownDirective.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"directives/EgretSideNavToggleDirective.html":{},"directives/FontSizeDirective.html":{},"directives/ScrollToDirective.html":{}},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"directives/ScrollToDirective.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/State-2.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["directive({selector",{"_index":1380,"title":{},"body":{"directives/FontSizeDirective.html":{},"directives/ScrollToDirective.html":{}}}],["directori",{"_index":3017,"title":{},"body":{"index.html":{}}}],["disabl",{"_index":1550,"title":{},"body":{"components/HeaderSideComponent.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["disableclos",{"_index":796,"title":{},"body":{"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"injectables/LoaderService.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{}}}],["dismiss",{"_index":609,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreateNursingHome.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientFormComponent.html":{},"injectables/PatientsEffects.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"components/UserFormComponent.html":{},"injectables/UsersEffects.html":{},"miscellaneous/enumerations.html":{}}}],["dismisseditnursinghom",{"_index":617,"title":{"classes/DismissEditNursingHome.html":{}},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["dismisseditpati",{"_index":652,"title":{"classes/DismissEditPatient.html":{}},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["dismisseditus",{"_index":687,"title":{"classes/DismissEditUser.html":{}},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["dismisspatientformdialog",{"_index":647,"title":{"classes/DismissPatientFormDialog.html":{}},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"injectables/PatientsEffects.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["dismisspoppedupnursinghomeform",{"_index":608,"title":{"classes/DismissPoppedUpNursingHomeForm.html":{}},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"injectables/NursingHomesEffects.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["dismissuserformdialog",{"_index":682,"title":{"classes/DismissUserFormDialog.html":{}},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{},"injectables/UsersEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["dispatch",{"_index":440,"title":{},"body":{"injectables/AuthEffects.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientFormComponent.html":{},"injectables/PatientsEffects.html":{},"components/UserFormComponent.html":{},"injectables/UsersEffects.html":{}}}],["display",{"_index":1472,"title":{},"body":{"classes/GenericValidator.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{},"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["displaymessag",{"_index":2015,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["displaypati",{"_index":2023,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["displaypatient(pati",{"_index":2027,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["displayus",{"_index":2693,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["displayuser(us",{"_index":2695,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["dist",{"_index":3020,"title":{},"body":{"index.html":{}}}],["distanc",{"_index":2370,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["document",{"_index":997,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["document.bodi",{"_index":2362,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["document.body.scrolltop",{"_index":2355,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["document.documentel",{"_index":2351,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["document.documentelement.scrolltop",{"_index":2352,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["document.getelementbyid(eid",{"_index":2357,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["document.queryselector(selector",{"_index":998,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["doe",{"_index":1813,"title":{},"body":{"components/LockscreenComponent.html":{}}}],["dom",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["don",{"_index":1379,"title":{},"body":{"directives/FontSizeDirective.html":{}}}],["don't",{"_index":2162,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["dropdown",{"_index":117,"title":{},"body":{"directives/AppDropdownDirective.html":{},"directives/DropdownAnchorDirective.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["dropdown.direct",{"_index":1280,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["dropdownanchordirect",{"_index":103,"title":{"directives/DropdownAnchorDirective.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"directives/DropdownAnchorDirective.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["dropdownlink",{"_index":1262,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["dropdownlinkdirect",{"_index":105,"title":{"directives/DropdownLinkDirective.html":{}},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["dropdowntoggl",{"_index":1250,"title":{},"body":{"directives/DropdownAnchorDirective.html":{}}}],["dummi",{"_index":1901,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["durat",{"_index":408,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["dynam",{"_index":2879,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1592,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/ITheme.html":{},"injectables/LayoutService.html":{},"injectables/ThemeService.html":{}}}],["e.g",{"_index":1595,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"index.html":{}}}],["e2",{"_index":2893,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["e91e63",{"_index":1700,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["each",{"_index":1469,"title":{},"body":{"classes/GenericValidator.html":{}}}],["easi",{"_index":783,"title":{},"body":{"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{}}}],["edit",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"components/ConfirmComponent.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsService.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/State-1.html":{},"interfaces/State-6.html":{},"interfaces/State-9.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["editnursinghom",{"_index":616,"title":{"classes/EditNursingHome.html":{}},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["editnursinghomefailur",{"_index":827,"title":{"classes/EditNursingHomeFailure.html":{}},"body":{"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["editnursinghomesuccess",{"_index":826,"title":{"classes/EditNursingHomeSuccess.html":{}},"body":{"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["editpati",{"_index":651,"title":{"classes/EditPatient.html":{}},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"components/PatientEditFormComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["editpatient(chang",{"_index":2303,"title":{},"body":{"injectables/PatientsService.html":{}}}],["editpatienterror",{"_index":2615,"title":{},"body":{"interfaces/State-6.html":{}}}],["editpatientfailur",{"_index":849,"title":{"classes/EditPatientFailure.html":{}},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["editpatientpend",{"_index":2616,"title":{},"body":{"interfaces/State-6.html":{}}}],["editpatientsuccess",{"_index":848,"title":{"classes/EditPatientSuccess.html":{}},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["editus",{"_index":686,"title":{"classes/EditUser.html":{}},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{},"components/UserEditFormComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["edituser(chang",{"_index":2855,"title":{},"body":{"injectables/UsersService.html":{}}}],["editusererror",{"_index":2649,"title":{},"body":{"interfaces/State-9.html":{}}}],["edituserfailur",{"_index":874,"title":{"classes/EditUserFailure.html":{}},"body":{"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["edituserpend",{"_index":2650,"title":{},"body":{"interfaces/State-9.html":{}}}],["editusersuccess",{"_index":873,"title":{"classes/EditUserSuccess.html":{}},"body":{"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"injectables/UsersEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["effect",{"_index":353,"title":{},"body":{"injectables/AuthEffects.html":{},"modules/DashboardModule.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["effect({dispatch",{"_index":393,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["effects/auth.effect",{"_index":475,"title":{},"body":{"modules/AuthModule.html":{}}}],["effects/nurs",{"_index":1032,"title":{},"body":{"modules/DashboardModule.html":{}}}],["effects/patients.effect",{"_index":1030,"title":{},"body":{"modules/DashboardModule.html":{}}}],["effects/users.effect",{"_index":1028,"title":{},"body":{"modules/DashboardModule.html":{}}}],["effectsmodul",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{}}}],["effectsmodule.forfeature([autheffect",{"_index":478,"title":{},"body":{"modules/AuthModule.html":{}}}],["effectsmodule.forfeature(effect",{"_index":1069,"title":{},"body":{"modules/DashboardModule.html":{}}}],["effectsmodule.forroot",{"_index":324,"title":{},"body":{"modules/AppModule.html":{}}}],["egret",{"_index":1695,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["egretsidenavtoggl",{"_index":1306,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["egretsidenavtoggle]'},{'nam",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["egretsidenavtoggledirect",{"_index":107,"title":{"directives/EgretSideNavToggleDirective.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["egretthem",{"_index":1493,"title":{},"body":{"components/HeaderSideComponent.html":{},"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["eid",{"_index":2336,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["el",{"_index":1371,"title":{},"body":{"directives/FontSizeDirective.html":{},"directives/ScrollToDirective.html":{}}}],["element",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["element.scrolltop",{"_index":999,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["elementref",{"_index":1372,"title":{},"body":{"directives/FontSizeDirective.html":{},"directives/ScrollToDirective.html":{}}}],["elm",{"_index":2356,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["elm.offsettop",{"_index":2359,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["elmid",{"_index":2327,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["elmyposit",{"_index":2329,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["elmyposition(eid",{"_index":2334,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["email",{"_index":1398,"title":{},"body":{"classes/ForgotPassword.html":{},"interfaces/ICredentials.html":{},"interfaces/IUser.html":{},"classes/Login.html":{},"components/PatientFormComponent.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["emailinvalid",{"_index":2731,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["emailrequir",{"_index":2177,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["emit",{"_index":2196,"title":{},"body":{"components/PatientListComponent.html":{},"components/UserListComponent.html":{}}}],["en",{"_index":1519,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["enabl",{"_index":3002,"title":{},"body":{"index.html":{}}}],["encapsul",{"_index":366,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/PatientsService.html":{},"injectables/UsersService.html":{}}}],["encod",{"_index":1673,"title":{},"body":{"interfaces/IPatient.html":{}}}],["english",{"_index":1517,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["ensur",{"_index":2105,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["entiti",{"_index":1161,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{}}}],["entities[id",{"_index":1162,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["entityadapt",{"_index":2535,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{}}}],["entityst",{"_index":2530,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{}}}],["entrycompon",{"_index":479,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{}}}],["enum",{"_index":597,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/FixTopbar.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"classes/Signup.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["enumer",{"_index":2902,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":2980,"title":{},"body":{"index.html":{}}}],["environ",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthApiService.html":{},"injectables/NursingHomesService.html":{},"injectables/PatientsService.html":{},"interfaces/State.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["environment.*.t",{"_index":2978,"title":{},"body":{"index.html":{}}}],["environment.calvin.t",{"_index":2984,"title":{},"body":{"index.html":{}}}],["environment.product",{"_index":323,"title":{},"body":{"modules/AppModule.html":{},"interfaces/State.html":{}}}],["environment.t",{"_index":2981,"title":{},"body":{"index.html":{}}}],["environment.whitelisteddomain",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environ",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthApiService.html":{},"injectables/NursingHomesService.html":{},"injectables/PatientsService.html":{},"interfaces/State.html":{},"injectables/UsersService.html":{}}}],["error",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"interfaces/DashboardState.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"modules/ErrorsModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/State-1.html":{},"interfaces/State-13.html":{},"interfaces/State-3.html":{},"interfaces/State-6.html":{},"interfaces/State-9.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["error'},{'nam",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["error.component.html",{"_index":1339,"title":{},"body":{"components/ErrorComponent.html":{}}}],["errorcompon",{"_index":55,"title":{"components/ErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"modules/ErrorsModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["errorlayoutcompon",{"_index":57,"title":{"components/ErrorLayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"modules/ErrorsModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["errormessag",{"_index":2016,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/PatientListComponent.html":{},"components/SigninComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{}}}],["errors.rout",{"_index":1361,"title":{},"body":{"modules/ErrorsRoutingModule.html":{}}}],["errors/errors.modul",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["errorsmodul",{"_index":202,"title":{"modules/ErrorsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ErrorsModule.html":{},"modules.html":{},"overview.html":{}}}],["errorsrout",{"_index":1360,"title":{},"body":{"modules/ErrorsRoutingModule.html":{}}}],["errorsroutingmodul",{"_index":1352,"title":{"modules/ErrorsRoutingModule.html":{}},"body":{"modules/ErrorsModule.html":{},"modules/ErrorsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["event",{"_index":176,"title":{},"body":{"directives/AppDropdownDirective.html":{},"components/BreadcrumbComponent.html":{},"components/DashboardLayoutComponent.html":{},"directives/DropdownAnchorDirective.html":{},"components/HeaderSideComponent.html":{},"components/NotificationsComponent.html":{},"directives/ScrollToDirective.html":{}}}],["event.preventdefault",{"_index":1905,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["exampl",{"_index":120,"title":{},"body":{"directives/AppDropdownDirective.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"directives/EgretSideNavToggleDirective.html":{},"directives/FontSizeDirective.html":{},"directives/ScrollToDirective.html":{}}}],["exhaustmap",{"_index":401,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["exhaustmap((credenti",{"_index":375,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["exhaustmap((id",{"_index":2827,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["exhaustmap((nursinghomedata",{"_index":1962,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["exhaustmap((pati",{"_index":2272,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["exhaustmap((patientdata",{"_index":2253,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["exhaustmap((us",{"_index":2814,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["exhaustmap((userdata",{"_index":2801,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["exist",{"_index":2513,"title":{},"body":{"components/SignupComponent.html":{},"index.html":{}}}],["exit_to_app",{"_index":1552,"title":{},"body":{"components/HeaderSideComponent.html":{},"components/SidebarSideComponent.html":{}}}],["explor",{"_index":2347,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["export",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interfaces/AuthState.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"modules/CoreModule.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"modules/ErrorsModule.html":{},"modules/ErrorsRoutingModule.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"components/ForgotPasswordComponent.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ICredentials.html":{},"interfaces/IDevice.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IPatient.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"interfaces/IUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"modules/MaterialModule.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"classes/NumberValidators.html":{},"interfaces/NursingHome.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"modules/SharedModule.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["extend",{"_index":502,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/DashboardState.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-12.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{}}}],["extract",{"_index":2922,"title":{},"body":{"miscellaneous/functions.html":{}}}],["factori",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["failur",{"_index":816,"title":{},"body":{"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["fals",{"_index":167,"title":{},"body":{"directives/AppDropdownDirective.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"components/DashboardLayoutComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/ITheme.html":{},"injectables/LayoutService.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientEditFormComponent.html":{},"components/PatientListComponent.html":{},"injectables/PatientsEffects.html":{},"interfaces/State-10.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/ThemeService.html":{},"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{},"injectables/UsersEffects.html":{}}}],["fb",{"_index":1928,"title":{},"body":{"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["featur",{"_index":1122,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["femal",{"_index":2118,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["field",{"_index":2073,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["file",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interfaces/AuthState.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"modules/CoreModule.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"modules/ErrorsModule.html":{},"modules/ErrorsRoutingModule.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"components/ForgotPasswordComponent.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ICredentials.html":{},"interfaces/IDevice.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IPatient.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"interfaces/IUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"modules/MaterialModule.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"classes/NumberValidators.html":{},"interfaces/NursingHome.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"modules/SharedModule.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["filereplac",{"_index":2992,"title":{},"body":{"index.html":{}}}],["filter",{"_index":159,"title":{},"body":{"directives/AppDropdownDirective.html":{},"components/BreadcrumbComponent.html":{},"components/DashboardLayoutComponent.html":{}}}],["filter(ev",{"_index":950,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["final",{"_index":2995,"title":{},"body":{"index.html":{}}}],["finish",{"_index":1969,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["fire",{"_index":1971,"title":{},"body":{"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["firefox",{"_index":2341,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["first",{"_index":2224,"title":{},"body":{"components/PatientListComponent.html":{},"components/UserListComponent.html":{}}}],["firstnam",{"_index":1648,"title":{},"body":{"interfaces/ICredentials.html":{},"interfaces/IPatient.html":{},"interfaces/IUser.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["firstnamerequir",{"_index":2175,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["fix",{"_index":738,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{}}}],["fixtopbar",{"_index":737,"title":{"classes/FixTopbar.html":{}},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["flag",{"_index":971,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["flexlayoutmodul",{"_index":1863,"title":{},"body":{"modules/MaterialModule.html":{}}}],["flipactiveflag",{"_index":2672,"title":{},"body":{"injectables/ThemeService.html":{}}}],["flipactiveflag(them",{"_index":1725,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["folder",{"_index":2954,"title":{},"body":{"index.html":{}}}],["follow",{"_index":2990,"title":{},"body":{"index.html":{}}}],["font",{"_index":1367,"title":{},"body":{"directives/FontSizeDirective.html":{}}}],["fontsiz",{"_index":1369,"title":{},"body":{"directives/FontSizeDirective.html":{}}}],["fontsize]'},{'nam",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["fontsizedirect",{"_index":109,"title":{"directives/FontSizeDirective.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"directives/FontSizeDirective.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["forgot",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"classes/ForgotPassword.html":{},"components/ForgotPasswordComponent.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["forgotpassword",{"_index":1384,"title":{"classes/ForgotPassword.html":{}},"body":{"classes/ForgotPassword.html":{},"classes/Login.html":{},"classes/Signup.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["forgotpasswordcompon",{"_index":59,"title":{"components/ForgotPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["forgotpasswordfailur",{"_index":1423,"title":{"classes/ForgotPasswordFailure.html":{}},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["forgotpasswordsuccess",{"_index":1434,"title":{"classes/ForgotPasswordSuccess.html":{}},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["form",{"_index":605,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreateNursingHome.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"classes/GenericValidator.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"injectables/PatientsEffects.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"injectables/UsersEffects.html":{},"miscellaneous/enumerations.html":{}}}],["form'",{"_index":2057,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["form'},{'nam",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["form.compon",{"_index":1052,"title":{},"body":{"modules/DashboardModule.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{}}}],["form.component.html",{"_index":1923,"title":{},"body":{"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.scss",{"_index":2013,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["form.component.t",{"_index":1922,"title":{},"body":{"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.ts:100",{"_index":2024,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["form.component.ts:101",{"_index":2696,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["form.component.ts:104",{"_index":2028,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["form.component.ts:112",{"_index":2129,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.ts:122",{"_index":2025,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["form.component.ts:143",{"_index":2026,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["form.component.ts:154",{"_index":2029,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["form.component.ts:18",{"_index":1930,"title":{},"body":{"components/NursingHomeFormComponent.html":{}}}],["form.component.ts:20",{"_index":1938,"title":{},"body":{"components/NursingHomeFormComponent.html":{}}}],["form.component.ts:21",{"_index":1939,"title":{},"body":{"components/NursingHomeFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.ts:24",{"_index":2138,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.ts:25",{"_index":2039,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["form.component.ts:26",{"_index":2033,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["form.component.ts:27",{"_index":1934,"title":{},"body":{"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["form.component.ts:28",{"_index":2041,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["form.component.ts:29",{"_index":2146,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.ts:30",{"_index":2040,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["form.component.ts:33",{"_index":1932,"title":{},"body":{"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["form.component.ts:34",{"_index":2043,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.ts:35",{"_index":2034,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["form.component.ts:38",{"_index":2703,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["form.component.ts:39",{"_index":2141,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.ts:40",{"_index":1937,"title":{},"body":{"components/NursingHomeFormComponent.html":{}}}],["form.component.ts:42",{"_index":2042,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["form.component.ts:43",{"_index":2144,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.ts:45",{"_index":2036,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.ts:48",{"_index":1936,"title":{},"body":{"components/NursingHomeFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.ts:49",{"_index":2139,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.ts:50",{"_index":2038,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["form.component.ts:52",{"_index":1933,"title":{},"body":{"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.ts:53",{"_index":2136,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.ts:55",{"_index":2699,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["form.component.ts:57",{"_index":2032,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["form.component.ts:58",{"_index":2132,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.ts:72",{"_index":2698,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["form.component.ts:74",{"_index":2031,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["form.component.ts:80",{"_index":2134,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.ts:91",{"_index":2697,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["form.component.ts:94",{"_index":2030,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["form.component.ts:97",{"_index":2694,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["form.component.ts:99",{"_index":2135,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form/nurs",{"_index":1056,"title":{},"body":{"modules/DashboardModule.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{}}}],["form/pati",{"_index":1053,"title":{},"body":{"modules/DashboardModule.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{}}}],["form/us",{"_index":1051,"title":{},"body":{"modules/DashboardModule.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{}}}],["format_color_fil",{"_index":1543,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["formbuild",{"_index":1929,"title":{},"body":{"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["formcontrol",{"_index":2478,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["formgroup",{"_index":1456,"title":{},"body":{"classes/GenericValidator.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["formsmodul",{"_index":470,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/SharedModule.html":{}}}],["formvaluechang",{"_index":2086,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["found",{"_index":1874,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found'},{'nam",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["found.compon",{"_index":1356,"title":{},"body":{"modules/ErrorsModule.html":{}}}],["found.component.html",{"_index":1875,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.t",{"_index":1873,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts:12",{"_index":1877,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts:7",{"_index":1876,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found/not",{"_index":1355,"title":{},"body":{"modules/ErrorsModule.html":{},"components/NotFoundComponent.html":{}}}],["frequent",{"_index":1635,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["fromauth",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthState.html":{},"components/HeaderSideComponent.html":{},"components/SidebarSideComponent.html":{},"components/SigninComponent.html":{},"interfaces/State-12.html":{}}}],["fromauth.getaccesstoken",{"_index":515,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-12.html":{}}}],["fromauth.getus",{"_index":513,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-12.html":{}}}],["fromauth.reduc",{"_index":477,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/AuthState.html":{},"interfaces/State-12.html":{}}}],["fromauth.st",{"_index":490,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-12.html":{}}}],["fromdashboard",{"_index":939,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"components/HeaderSideComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["fromdashboard.reduc",{"_index":1068,"title":{},"body":{"modules/DashboardModule.html":{}}}],["fromlayout",{"_index":1110,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromlayout.getbreadcrumb",{"_index":1235,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromlayout.getdirect",{"_index":1228,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromlayout.getismobil",{"_index":1231,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromlayout.getlayoutintransit",{"_index":1230,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromlayout.getnavposit",{"_index":1226,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromlayout.getsidenav",{"_index":1224,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromlayout.gettopbarfix",{"_index":1237,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromlayout.getusebreadcrumb",{"_index":1233,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromlayout.reduc",{"_index":1121,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromlayout.st",{"_index":1089,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromnursinghom",{"_index":1108,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromnursinghome.adapater.getselectors(getnursinghomesst",{"_index":1183,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromnursinghome.getselectednursinghomeid",{"_index":1178,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromnursinghome.reduc",{"_index":1116,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromnursinghome.st",{"_index":1091,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromnursinghomepag",{"_index":1101,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromnursinghomepage.geterror",{"_index":1172,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromnursinghomepage.getpend",{"_index":1174,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromnursinghomepage.reduc",{"_index":1115,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromnursinghomepage.st",{"_index":1090,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["frompati",{"_index":1104,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["frompatientpag",{"_index":1100,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["frompatientpage.getcreatepatienterror",{"_index":1192,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["frompatientpage.getcreatepatientpend",{"_index":1194,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["frompatientpage.geteditpatienterror",{"_index":1196,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["frompatientpage.geteditpatientpend",{"_index":1198,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["frompatientpage.geterror",{"_index":1188,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["frompatientpage.getloadpatientuserserror",{"_index":1202,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["frompatientpage.getloadpatientuserspend",{"_index":1200,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["frompatientpage.getpend",{"_index":1190,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["frompatientpage.reduc",{"_index":1117,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["frompatientpage.st",{"_index":1092,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["frompatients.adapater.getselectors(getpatientsst",{"_index":1211,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["frompatients.getselectedpatientid",{"_index":1206,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["frompatients.reduc",{"_index":1118,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["frompatients.st",{"_index":1093,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["frompatientus",{"_index":1107,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["frompatientusers.adapater.getselectors(getpatientusersst",{"_index":1218,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["frompatientusers.reduc",{"_index":1120,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["frompatientusers.st",{"_index":1094,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromroot",{"_index":495,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/DashboardState.html":{},"interfaces/State-1.html":{},"interfaces/State-12.html":{}}}],["fromroot.st",{"_index":503,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/DashboardState.html":{},"interfaces/State-1.html":{},"interfaces/State-12.html":{}}}],["fromrout",{"_index":2516,"title":{},"body":{"interfaces/State.html":{}}}],["fromrouter.routerreduc",{"_index":2521,"title":{},"body":{"interfaces/State.html":{}}}],["fromrouter.routerreducerst",{"_index":2515,"title":{},"body":{"interfaces/State.html":{}}}],["fromus",{"_index":1102,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromuserpag",{"_index":1098,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromuserpage.getcreateusererror",{"_index":1133,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromuserpage.getcreateuserpend",{"_index":1135,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromuserpage.geteditusererror",{"_index":1137,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromuserpage.getedituserpend",{"_index":1139,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromuserpage.geterror",{"_index":1128,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromuserpage.getloaduserpatientserror",{"_index":1143,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromuserpage.getloaduserpatientspend",{"_index":1141,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromuserpage.getpend",{"_index":1131,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromuserpage.reduc",{"_index":1113,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromuserpage.st",{"_index":1095,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromuserpati",{"_index":1106,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromuserpatients.adapater.getselectors(getuserpatientsst",{"_index":1168,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromuserpatients.reduc",{"_index":1119,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromuserpatients.st",{"_index":1096,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromusers.adapater.getselectors(getusersst",{"_index":1158,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromusers.getselecteduserid",{"_index":1147,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromusers.reduc",{"_index":1114,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromusers.st",{"_index":1097,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["fromview",{"_index":493,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-12.html":{}}}],["fromviews.geterror",{"_index":523,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-12.html":{}}}],["fromviews.getpend",{"_index":521,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-12.html":{}}}],["fromviews.reduc",{"_index":504,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-12.html":{}}}],["fromviews.st",{"_index":491,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-12.html":{}}}],["ftp",{"_index":3018,"title":{},"body":{"index.html":{}}}],["full",{"_index":1079,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"interfaces/State-2.html":{}}}],["fullnam",{"_index":2759,"title":{},"body":{"components/UserListComponent.html":{}}}],["fullwidthrout",{"_index":1570,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["function",{"_index":271,"title":{"miscellaneous/functions.html":{}},"body":{"modules/AppModule.html":{},"components/BreadcrumbComponent.html":{},"interfaces/DashboardState.html":{},"components/LockscreenComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"miscellaneous/functions.html":{}}}],["g",{"_index":2940,"title":{},"body":{"index.html":{}}}],["gaurd",{"_index":444,"title":{},"body":{"guards/AuthGuard.html":{}}}],["gender",{"_index":1662,"title":{},"body":{"interfaces/IPatient.html":{},"components/PatientEditFormComponent.html":{}}}],["gener",{"_index":559,"title":{},"body":{"components/BreadcrumbComponent.html":{},"classes/GenericValidator.html":{},"interfaces/IPatient.html":{},"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["generateroutepart",{"_index":2320,"title":{},"body":{"injectables/RoutePartsService.html":{}}}],["generaterouteparts(snapshot",{"_index":1679,"title":{},"body":{"interfaces/IRoutePart.html":{},"injectables/RoutePartsService.html":{}}}],["genericvalid",{"_index":1448,"title":{"classes/GenericValidator.html":{}},"body":{"classes/GenericValidator.html":{},"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["genericvalidator(this.validationmessag",{"_index":2059,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["get",{"_index":2923,"title":{"index.html":{}},"body":{}}],["getaccesstoken",{"_index":514,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{}}}],["getallnursinghom",{"_index":1181,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["getallpati",{"_index":1209,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["getallpatientus",{"_index":1216,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["getallus",{"_index":1155,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["getalluserpati",{"_index":1166,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["getbreadcrumb",{"_index":1234,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{}}}],["getbrowserlanguag",{"_index":300,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["getcreatepatienterror",{"_index":2628,"title":{},"body":{"interfaces/State-6.html":{}}}],["getcreatepatientpend",{"_index":2630,"title":{},"body":{"interfaces/State-6.html":{}}}],["getcreateusererror",{"_index":2661,"title":{},"body":{"interfaces/State-9.html":{}}}],["getcreateuserpend",{"_index":2663,"title":{},"body":{"interfaces/State-9.html":{}}}],["getdashboardst",{"_index":1123,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["getdirect",{"_index":1227,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{}}}],["geteditpatienterror",{"_index":2632,"title":{},"body":{"interfaces/State-6.html":{}}}],["geteditpatientpend",{"_index":2634,"title":{},"body":{"interfaces/State-6.html":{}}}],["geteditusererror",{"_index":2665,"title":{},"body":{"interfaces/State-9.html":{}}}],["getedituserpend",{"_index":2667,"title":{},"body":{"interfaces/State-9.html":{}}}],["geterror",{"_index":522,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-3.html":{},"interfaces/State-6.html":{},"interfaces/State-9.html":{}}}],["getismobil",{"_index":890,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"interfaces/DashboardState.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{}}}],["getlayoutintransit",{"_index":1229,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{}}}],["getlayoutst",{"_index":1219,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["getloadpatientuserserror",{"_index":1201,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{},"interfaces/State-6.html":{}}}],["getloadpatientuserspend",{"_index":1199,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{},"interfaces/State-6.html":{}}}],["getloaduserpatientserror",{"_index":1142,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{},"interfaces/State-9.html":{}}}],["getloaduserpatientspend",{"_index":1140,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{},"interfaces/State-9.html":{}}}],["getnavposit",{"_index":1225,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{}}}],["getnursinghom",{"_index":2000,"title":{},"body":{"injectables/NursingHomesService.html":{}}}],["getnursinghomeent",{"_index":1180,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["getnursinghomepageerror",{"_index":1171,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["getnursinghomepagepend",{"_index":1173,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["getnursinghomesid",{"_index":1179,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["getnursinghomespagest",{"_index":1169,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["getnursinghomesst",{"_index":1175,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["getpati",{"_index":2296,"title":{},"body":{"injectables/PatientsService.html":{}}}],["getpatientcreationerror",{"_index":1191,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["getpatientcreationpend",{"_index":1193,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["getpatienteditionerror",{"_index":1195,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["getpatienteditionpend",{"_index":1197,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["getpatientent",{"_index":1208,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["getpatientpageerror",{"_index":1187,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["getpatientpagepend",{"_index":1189,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["getpatientsid",{"_index":1207,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["getpatientspagest",{"_index":1185,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["getpatientsst",{"_index":1203,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["getpatientusersent",{"_index":1215,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["getpatientusersst",{"_index":1213,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["getpend",{"_index":520,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-3.html":{},"interfaces/State-6.html":{},"interfaces/State-9.html":{}}}],["getqueryparam",{"_index":1558,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/ITheme.html":{},"injectables/LayoutService.html":{},"injectables/ThemeService.html":{},"miscellaneous/functions.html":{}}}],["getqueryparam('layout",{"_index":1588,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["getqueryparam('them",{"_index":1731,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["getqueryparam(prop",{"_index":2920,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getselectednursinghom",{"_index":1184,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["getselectednursinghomeid",{"_index":1177,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{},"interfaces/State-4.html":{}}}],["getselectedpati",{"_index":1212,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["getselectedpatientid",{"_index":1205,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{},"interfaces/State-7.html":{}}}],["getselectedus",{"_index":1160,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["getselecteduserid",{"_index":1146,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{}}}],["getsidenav",{"_index":1222,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{}}}],["gettopbarfix",{"_index":1236,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{}}}],["gettotalnursiom",{"_index":1182,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["gettotalpati",{"_index":1210,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["gettotalpatientus",{"_index":1217,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["gettotalus",{"_index":1157,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["gettotaluserpati",{"_index":1167,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["geturl",{"_index":130,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["getus",{"_index":511,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"injectables/UsersService.html":{}}}],["getusebreadcrumb",{"_index":1232,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{}}}],["getusercreationerror",{"_index":1132,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["getusercreationpend",{"_index":1134,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["getusereditionerror",{"_index":1136,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["getusereditionpend",{"_index":1138,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["getuserent",{"_index":1153,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["getuserpageerror",{"_index":1127,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["getuserpagepend",{"_index":1130,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["getuserpati",{"_index":2848,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserpatients(id",{"_index":2857,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserpatientsent",{"_index":1165,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["getuserpatientsst",{"_index":1163,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["getusersid",{"_index":1151,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["getuserspagest",{"_index":1125,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["getusersst",{"_index":1144,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["git",{"_index":2928,"title":{},"body":{"index.html":{}}}],["gitlab",{"_index":2947,"title":{},"body":{"index.html":{}}}],["give",{"_index":2982,"title":{},"body":{"index.html":{}}}],["gloabl",{"_index":2520,"title":{},"body":{"interfaces/State.html":{}}}],["global",{"_index":1083,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{},"index.html":{}}}],["good",{"_index":3014,"title":{},"body":{"index.html":{}}}],["graph",{"_index":3026,"title":{},"body":{"modules.html":{}}}],["group",{"_index":1267,"title":{},"body":{"directives/DropdownLinkDirective.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["guard",{"_index":441,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"overview.html":{}}}],["handl",{"_index":1973,"title":{},"body":{"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["hasiconmenu",{"_index":2449,"title":{},"body":{"components/SidenavComponent.html":{}}}],["hasicontypemenuitem",{"_index":2407,"title":{},"body":{"components/SidebarSideComponent.html":{},"components/SidenavComponent.html":{}}}],["header",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["headerfixedbodyp",{"_index":944,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["headersidecompon",{"_index":62,"title":{"components/HeaderSideComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["height",{"_index":1775,"title":{},"body":{"components/LoaderComponent.html":{}}}],["help",{"_index":2070,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["helper",{"_index":2921,"title":{},"body":{"miscellaneous/functions.html":{}}}],["helpers/url.help",{"_index":1559,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/ITheme.html":{},"injectables/LayoutService.html":{},"injectables/ThemeService.html":{}}}],["here",{"_index":1574,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/ITheme.html":{},"injectables/LayoutService.html":{},"components/PatientListComponent.html":{},"injectables/ThemeService.html":{},"components/UserListComponent.html":{}}}],["hideload",{"_index":1988,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["hold",{"_index":991,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["home",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/ClearSelectedNursingHome.html":{},"components/ConfirmComponent.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/NursingHome.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/State-1.html":{},"interfaces/State-3.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["home.model",{"_index":594,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"interfaces/IPatient.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"components/PatientFormComponent.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"interfaces/State-4.html":{},"components/UserFormComponent.html":{}}}],["home.model.t",{"_index":1920,"title":{},"body":{"interfaces/NursingHome.html":{}}}],["homes.act",{"_index":1942,"title":{},"body":{"components/NursingHomeFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["homes.actions.t",{"_index":586,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["homes.actions.ts:106",{"_index":1242,"title":{},"body":{"classes/DismissEditNursingHome.html":{}}}],["homes.actions.ts:113",{"_index":2317,"title":{},"body":{"classes/ResetNursingHomesState.html":{}}}],["homes.actions.ts:25",{"_index":2391,"title":{},"body":{"classes/SelectNursingHome.html":{}}}],["homes.actions.ts:27",{"_index":2392,"title":{},"body":{"classes/SelectNursingHome.html":{}}}],["homes.actions.ts:34",{"_index":591,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{}}}],["homes.actions.ts:41",{"_index":1734,"title":{},"body":{"classes/InitializeNursingHome.html":{}}}],["homes.actions.ts:48",{"_index":2316,"title":{},"body":{"classes/PopUpNursingHomeForm.html":{}}}],["homes.actions.ts:55",{"_index":811,"title":{},"body":{"classes/CreateNursingHome.html":{}}}],["homes.actions.ts:57",{"_index":812,"title":{},"body":{"classes/CreateNursingHome.html":{}}}],["homes.actions.ts:64",{"_index":1246,"title":{},"body":{"classes/DismissPoppedUpNursingHomeForm.html":{}}}],["homes.actions.ts:71",{"_index":1750,"title":{},"body":{"classes/LoadNursingHomes.html":{}}}],["homes.actions.ts:78",{"_index":2379,"title":{},"body":{"classes/SearchNursingHome.html":{}}}],["homes.actions.ts:80",{"_index":2380,"title":{},"body":{"classes/SearchNursingHome.html":{}}}],["homes.actions.ts:87",{"_index":2381,"title":{},"body":{"classes/SearchNursingHomeComplete.html":{}}}],["homes.actions.ts:89",{"_index":2382,"title":{},"body":{"classes/SearchNursingHomeComplete.html":{}}}],["homes.actions.ts:96",{"_index":1290,"title":{},"body":{"classes/EditNursingHome.html":{}}}],["homes.actions.ts:98",{"_index":1291,"title":{},"body":{"classes/EditNursingHome.html":{}}}],["homes.effect",{"_index":1033,"title":{},"body":{"modules/DashboardModule.html":{}}}],["homes.effects.t",{"_index":1957,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["homes.effects.ts:118",{"_index":1976,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["homes.effects.ts:124",{"_index":1959,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["homes.effects.ts:142",{"_index":1994,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["homes.effects.ts:25",{"_index":1970,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["homes.effects.ts:53",{"_index":1989,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["homes.effects.ts:96",{"_index":1993,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["homes.reduc",{"_index":1109,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["homes.reducer.t",{"_index":2594,"title":{},"body":{"interfaces/State-4.html":{},"miscellaneous/functions.html":{}}}],["homes.servic",{"_index":1996,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["homes.service.t",{"_index":1999,"title":{},"body":{"injectables/NursingHomesService.html":{}}}],["homes.service.ts:13",{"_index":2001,"title":{},"body":{"injectables/NursingHomesService.html":{}}}],["homes.service.ts:20",{"_index":2004,"title":{},"body":{"injectables/NursingHomesService.html":{}}}],["homes.service.ts:28",{"_index":2003,"title":{},"body":{"injectables/NursingHomesService.html":{}}}],["homes/nurs",{"_index":1055,"title":{},"body":{"modules/DashboardModule.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{}}}],["hook",{"_index":2456,"title":{},"body":{"components/SidenavComponent.html":{}}}],["host",{"_index":1320,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{},"index.html":{}}}],["host()@self()@opt",{"_index":1318,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["hostbind",{"_index":1279,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["hostbinding('class.open",{"_index":1281,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["hostlisten",{"_index":905,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"directives/DropdownAnchorDirective.html":{},"directives/ScrollToDirective.html":{}}}],["hostlistener('click",{"_index":1258,"title":{},"body":{"directives/DropdownAnchorDirective.html":{},"directives/ScrollToDirective.html":{}}}],["hostlistener('window:res",{"_index":975,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["hour",{"_index":1816,"title":{},"body":{"components/LockscreenComponent.html":{}}}],["html",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["http",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthApiService.html":{},"injectables/NursingHomesService.html":{},"injectables/PatientsService.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["httpclient",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthApiService.html":{},"injectables/NursingHomesService.html":{},"injectables/PatientsService.html":{},"injectables/UsersService.html":{}}}],["httpclientmodul",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["httperror.statustext.tolowercas",{"_index":1985,"title":{},"body":{"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["httpheader",{"_index":2006,"title":{},"body":{"injectables/NursingHomesService.html":{}}}],["httpresponse.statustext.tolowercas",{"_index":404,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["iadjustscreenopt",{"_index":1554,"title":{"interfaces/IAdjustScreenOptions.html":{}},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["ibadg",{"_index":1611,"title":{"interfaces/IBadge.html":{}},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["ichilditem",{"_index":1623,"title":{"interfaces/IChildItem.html":{}},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["icon",{"_index":1619,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{},"components/NotificationsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["icon').length",{"_index":2425,"title":{},"body":{"components/SidebarSideComponent.html":{}}}],["iconmenu",{"_index":1628,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["iconmenutitl",{"_index":2450,"title":{},"body":{"components/SidenavComponent.html":{}}}],["icontypemenutitl",{"_index":1634,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{},"components/SidebarSideComponent.html":{},"components/SidenavComponent.html":{}}}],["icredenti",{"_index":338,"title":{"interfaces/ICredentials.html":{}},"body":{"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"classes/ForgotPassword.html":{},"interfaces/ICredentials.html":{},"interfaces/IUser.html":{},"classes/Login.html":{},"classes/Signup.html":{}}}],["id",{"_index":1145,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/IDevice.html":{},"interfaces/IPatient.html":{},"interfaces/NursingHome.html":{},"components/PatientEditFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsService.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-4.html":{},"interfaces/State-7.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["idea",{"_index":3015,"title":{},"body":{"index.html":{}}}],["identifi",{"_index":1605,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["idevic",{"_index":1650,"title":{"interfaces/IDevice.html":{}},"body":{"interfaces/IDevice.html":{},"interfaces/IPatient.html":{}}}],["if(layoutconf.navigationpo",{"_index":983,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["if(this.sidebarp",{"_index":2431,"title":{},"body":{"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["if(user[0].user_patient_permiss",{"_index":2831,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["ilayoutchangeopt",{"_index":1565,"title":{"interfaces/ILayoutChangeOptions.html":{}},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["ilayoutconf",{"_index":1561,"title":{"interfaces/ILayoutConf.html":{}},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["imag",{"_index":1663,"title":{},"body":{"interfaces/IPatient.html":{}}}],["imenuitem",{"_index":1614,"title":{"interfaces/IMenuItem.html":{}},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["implement",{"_index":118,"title":{},"body":{"directives/AppDropdownDirective.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"components/ForgotPasswordComponent.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"interfaces/IRoutePart.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{}}}],["import",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interfaces/AuthState.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"modules/CoreModule.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"modules/ErrorsModule.html":{},"modules/ErrorsRoutingModule.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"components/ForgotPasswordComponent.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IPatient.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"modules/MaterialModule.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"classes/NumberValidators.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"modules/SharedModule.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{}}}],["inbox",{"_index":1891,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["indetermin",{"_index":1419,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LockscreenComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"interfaces/AuthState.html":{},"components/BreadcrumbComponent.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"components/ForgotPasswordComponent.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ICredentials.html":{},"interfaces/IDevice.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IPatient.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"interfaces/IUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"classes/NumberValidators.html":{},"interfaces/NursingHome.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-9.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["indigo",{"_index":1703,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["individu",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interfaces/AuthState.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"modules/CoreModule.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"modules/ErrorsModule.html":{},"modules/ErrorsRoutingModule.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"components/ForgotPasswordComponent.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ICredentials.html":{},"interfaces/IDevice.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IPatient.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"interfaces/IUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"modules/MaterialModule.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"classes/NumberValidators.html":{},"interfaces/NursingHome.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"modules/SharedModule.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{}}}],["init",{"_index":953,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"components/PatientListComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/UserListComponent.html":{}}}],["initbodyps(layoutconf:ani",{"_index":982,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["initi",{"_index":601,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreateNursingHome.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"interfaces/State-10.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"miscellaneous/enumerations.html":{}}}],["initializenursinghom",{"_index":600,"title":{"classes/InitializeNursingHome.html":{}},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["initializepati",{"_index":644,"title":{"classes/InitializePatient.html":{}},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["initializeus",{"_index":679,"title":{"classes/InitializeUser.html":{}},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["initialst",{"_index":2539,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{}}}],["initsidenav",{"_index":1308,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["inject",{"_index":329,"title":{"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"injectables/ConfirmService.html":{},"injectables/LayoutService.html":{},"injectables/LoaderService.html":{},"injectables/NavigationService.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"injectables/RoutePartsService.html":{},"injectables/ThemeService.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"injectables/LayoutService.html":{},"injectables/LoaderService.html":{},"injectables/NavigationService.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"components/PatientFormComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"injectables/RoutePartsService.html":{},"injectables/ThemeService.html":{},"components/UserFormComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["inject(docu",{"_index":1706,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["inject(mat_dialog_data",{"_index":766,"title":{},"body":{"components/ConfirmComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["injectiontoken",{"_index":773,"title":{},"body":{"components/ConfirmComponent.html":{}}}],["input",{"_index":1266,"title":{},"body":{"directives/DropdownLinkDirective.html":{},"components/HeaderSideComponent.html":{},"components/NotificationsComponent.html":{},"components/SidenavComponent.html":{}}}],["input('hasiconmenu",{"_index":2458,"title":{},"body":{"components/SidenavComponent.html":{}}}],["input('iconmenutitl",{"_index":2459,"title":{},"body":{"components/SidenavComponent.html":{}}}],["input('item",{"_index":2457,"title":{},"body":{"components/SidenavComponent.html":{}}}],["instal",{"_index":2941,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":2055,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["instanceof",{"_index":177,"title":{},"body":{"directives/AppDropdownDirective.html":{},"components/BreadcrumbComponent.html":{},"components/DashboardLayoutComponent.html":{},"classes/GenericValidator.html":{},"components/NotificationsComponent.html":{}}}],["instanti",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["instead",{"_index":2050,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["interact",{"_index":1831,"title":{},"body":{"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"injectables/PatientsService.html":{},"injectables/UsersService.html":{}}}],["interfac",{"_index":486,"title":{"interfaces/AuthState.html":{},"interfaces/ConfirmData.html":{},"interfaces/DashboardState.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ICredentials.html":{},"interfaces/IDevice.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IPatient.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"interfaces/IUser.html":{},"interfaces/NursingHome.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"interfaces/User.html":{}},"body":{"interfaces/AuthState.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"interfaces/DashboardState.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ICredentials.html":{},"interfaces/IDevice.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IPatient.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"interfaces/IUser.html":{},"injectables/LayoutService.html":{},"injectables/NavigationService.html":{},"interfaces/NursingHome.html":{},"injectables/RoutePartsService.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/ThemeService.html":{},"interfaces/User.html":{},"overview.html":{}}}],["internet",{"_index":2346,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["invaild",{"_index":2508,"title":{},"body":{"components/SignupComponent.html":{}}}],["invok",{"_index":1707,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["ipati",{"_index":640,"title":{"interfaces/IPatient.html":{}},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"interfaces/IPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{}}}],["iroutepart",{"_index":1674,"title":{"interfaces/IRoutePart.html":{}},"body":{"interfaces/IRoutePart.html":{},"injectables/RoutePartsService.html":{}}}],["isact",{"_index":1694,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["isen",{"_index":551,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["isloggedin",{"_index":516,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-12.html":{}}}],["ismobil",{"_index":967,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"directives/EgretSideNavToggleDirective.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"interfaces/State-2.html":{}}}],["ismoduleload",{"_index":891,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["isnan(c.valu",{"_index":1918,"title":{},"body":{"classes/NumberValidators.html":{}}}],["ispend",{"_index":2185,"title":{},"body":{"components/PatientListComponent.html":{},"components/UserListComponent.html":{}}}],["issm",{"_index":1608,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["it'",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/LockscreenComponent.html":{}}}],["it\\'",{"_index":1818,"title":{},"body":{"components/LockscreenComponent.html":{}}}],["item",{"_index":569,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientListComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidenavComponent.html":{},"components/UserListComponent.html":{}}}],["item.breadcrumb",{"_index":563,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["item.firstnam",{"_index":1949,"title":{},"body":{"components/NursingHomeFormComponent.html":{}}}],["item.icon",{"_index":2460,"title":{},"body":{"components/SidenavComponent.html":{}}}],["item.lastnam",{"_index":1951,"title":{},"body":{"components/NursingHomeFormComponent.html":{}}}],["item.nam",{"_index":2461,"title":{},"body":{"components/SidenavComponent.html":{}}}],["item.typ",{"_index":2424,"title":{},"body":{"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["item.url",{"_index":567,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["item.urlsegments.foreach((urlseg",{"_index":565,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["itemform",{"_index":1924,"title":{},"body":{"components/NursingHomeFormComponent.html":{}}}],["itemlvl2.nam",{"_index":2464,"title":{},"body":{"components/SidenavComponent.html":{}}}],["itemlvl3.nam",{"_index":2465,"title":{},"body":{"components/SidenavComponent.html":{}}}],["ithem",{"_index":1691,"title":{"interfaces/ITheme.html":{}},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["iuser",{"_index":1647,"title":{"interfaces/IUser.html":{}},"body":{"interfaces/ICredentials.html":{},"interfaces/IUser.html":{},"interfaces/State-11.html":{}}}],["j",{"_index":566,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["john",{"_index":1812,"title":{},"body":{"components/LockscreenComponent.html":{}}}],["js",{"_index":2886,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["json.parse(layoutconfstr",{"_index":1590,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["json.parse(themestr",{"_index":1732,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["jwt",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthState.html":{},"interfaces/State-12.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["jwt_option",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["jwthelper",{"_index":500,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-12.html":{}}}],["jwthelper.istokenexpired(state.access_token",{"_index":519,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-12.html":{}}}],["jwthelperservic",{"_index":499,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-12.html":{}}}],["jwtmodul",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtmodule.forroot",{"_index":314,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtoptionsfactori",{"_index":316,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["jwtoptionsfactory(stor",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["jwtoptionsprovid",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["key",{"_index":1468,"title":{},"body":{"classes/GenericValidator.html":{},"classes/NumberValidators.html":{},"interfaces/NursingHome.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"injectables/PatientsEffects.html":{},"interfaces/State.html":{},"components/UserEditFormComponent.html":{},"injectables/UsersEffects.html":{}}}],["keyboard_arrow_right",{"_index":2463,"title":{},"body":{"components/SidenavComponent.html":{}}}],["lang.nam",{"_index":1542,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["languag",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderSideComponent.html":{},"miscellaneous/functions.html":{}}}],["last",{"_index":1814,"title":{},"body":{"components/LockscreenComponent.html":{}}}],["last_login",{"_index":2686,"title":{},"body":{"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{}}}],["lastnam",{"_index":1649,"title":{},"body":{"interfaces/ICredentials.html":{},"interfaces/IPatient.html":{},"interfaces/IUser.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["lastnamerequir",{"_index":2116,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["later",{"_index":2989,"title":{},"body":{"index.html":{}}}],["layout",{"_index":456,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/DashboardLayoutComponent.html":{},"interfaces/DashboardState.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorLayoutComponent.html":{},"classes/FixTopbar.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"modules/MaterialModule.html":{},"classes/OpenSideNav.html":{},"components/PatientsComponent.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-1.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"components/UsersComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["layout'},{'nam",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["layout.compon",{"_index":474,"title":{},"body":{"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/ErrorsModule.html":{}}}],["layout.component.html",{"_index":889,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.component.t",{"_index":455,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorLayoutComponent.html":{}}}],["layout.component.ts:120",{"_index":918,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.component.ts:127",{"_index":915,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.component.ts:139",{"_index":913,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.component.ts:19",{"_index":919,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.component.ts:20",{"_index":924,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.component.ts:21",{"_index":921,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.component.ts:22",{"_index":926,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.component.ts:23",{"_index":923,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.component.ts:28",{"_index":928,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.component.ts:29",{"_index":920,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.component.ts:30",{"_index":929,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.component.ts:31",{"_index":925,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.component.ts:32",{"_index":922,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.component.ts:33",{"_index":931,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.component.ts:34",{"_index":909,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.component.ts:39",{"_index":932,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.component.ts:40",{"_index":930,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.component.ts:58",{"_index":916,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.component.ts:93",{"_index":912,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.component.ts:97",{"_index":914,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.reduc",{"_index":1111,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["layoutact",{"_index":755,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/DashboardLayoutComponent.html":{},"classes/FixTopbar.html":{},"components/HeaderSideComponent.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-2.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/typealiases.html":{}}}],["layoutactions.closesidenav('clos",{"_index":1002,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"components/HeaderSideComponent.html":{}}}],["layoutactions.opensidenav('ful",{"_index":1535,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["layoutactiontyp",{"_index":714,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-2.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{}}}],["layoutactiontypes.closesidenav",{"_index":713,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-2.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["layoutactiontypes.compactsidenav",{"_index":741,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-2.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["layoutactiontypes.fixtopbar",{"_index":754,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-2.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["layoutactiontypes.makebreadcrumbsimpl",{"_index":750,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-2.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["layoutactiontypes.makebreadcrumbtitl",{"_index":752,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-2.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["layoutactiontypes.opensidenav",{"_index":740,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-2.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["layoutactiontypes.setdirectionltr",{"_index":746,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-2.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["layoutactiontypes.setdirectionrtr",{"_index":747,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-2.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["layoutactiontypes.setnavigationpositionsid",{"_index":742,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-2.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["layoutactiontypes.setnavigationpositiontop",{"_index":743,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-2.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["layoutactiontypes.transitioninglayout",{"_index":748,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-2.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["layoutactiontypes.usebreadcrumb",{"_index":749,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-2.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["layoutconf",{"_index":892,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["layoutconf.topbarfix",{"_index":984,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layoutconfstr",{"_index":1587,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["layoutconfsub",{"_index":893,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layoutconfsubject",{"_index":1566,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["layoutintransit",{"_index":894,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"interfaces/State-2.html":{}}}],["layoutservic",{"_index":539,"title":{"injectables/LayoutService.html":{}},"body":{"components/BreadcrumbComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["lc",{"_index":1576,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["leapi",{"_index":2376,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["left",{"_index":744,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["legend",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"modules/CoreModule.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"modules/ErrorsModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["life",{"_index":2498,"title":{},"body":{"components/SignupComponent.html":{}}}],["lifecycl",{"_index":2455,"title":{},"body":{"components/SidenavComponent.html":{}}}],["light",{"_index":1792,"title":{},"body":{"injectables/LoaderService.html":{}}}],["link",{"_index":141,"title":{},"body":{"directives/AppDropdownDirective.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["link.direct",{"_index":157,"title":{},"body":{"directives/AppDropdownDirective.html":{},"modules/DashboardModule.html":{},"directives/DropdownAnchorDirective.html":{}}}],["link.directive.t",{"_index":1261,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["link.directive.ts:16",{"_index":1271,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["link.directive.ts:20",{"_index":1272,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["link.directive.ts:24",{"_index":1278,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["link.directive.ts:31",{"_index":1276,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["link.directive.ts:32",{"_index":1270,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["link.directive.ts:38",{"_index":1274,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["link.directive.ts:42",{"_index":1273,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["link.directive.ts:46",{"_index":1275,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["link.group",{"_index":179,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["link.open",{"_index":166,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["link/dropdown/icon/separator/extlink",{"_index":1616,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["lint",{"_index":2971,"title":{},"body":{"index.html":{}}}],["list",{"_index":809,"title":{},"body":{"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"components/PatientListComponent.html":{},"injectables/PatientsEffects.html":{},"components/SidebarSideComponent.html":{},"components/UserListComponent.html":{},"injectables/UsersEffects.html":{}}}],["list'},{'nam",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["list.compon",{"_index":1038,"title":{},"body":{"modules/DashboardModule.html":{}}}],["list.component.html",{"_index":2184,"title":{},"body":{"components/PatientListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.scss",{"_index":2183,"title":{},"body":{"components/PatientListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.t",{"_index":2182,"title":{},"body":{"components/PatientListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.ts:107",{"_index":2195,"title":{},"body":{"components/PatientListComponent.html":{}}}],["list.component.ts:111",{"_index":2753,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:116",{"_index":2752,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:121",{"_index":2757,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:134",{"_index":2755,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:24",{"_index":2213,"title":{},"body":{"components/PatientListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.ts:25",{"_index":2203,"title":{},"body":{"components/PatientListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.ts:27",{"_index":2206,"title":{},"body":{"components/PatientListComponent.html":{}}}],["list.component.ts:30",{"_index":2212,"title":{},"body":{"components/PatientListComponent.html":{}}}],["list.component.ts:31",{"_index":2765,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:35",{"_index":2208,"title":{},"body":{"components/PatientListComponent.html":{}}}],["list.component.ts:40",{"_index":2205,"title":{},"body":{"components/PatientListComponent.html":{}}}],["list.component.ts:42",{"_index":2190,"title":{},"body":{"components/PatientListComponent.html":{}}}],["list.component.ts:54",{"_index":2769,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:57",{"_index":2775,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:59",{"_index":2209,"title":{},"body":{"components/PatientListComponent.html":{}}}],["list.component.ts:60",{"_index":2210,"title":{},"body":{"components/PatientListComponent.html":{}}}],["list.component.ts:62",{"_index":2771,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:65",{"_index":2193,"title":{},"body":{"components/PatientListComponent.html":{}}}],["list.component.ts:67",{"_index":2768,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:69",{"_index":2751,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:84",{"_index":2192,"title":{},"body":{"components/PatientListComponent.html":{}}}],["list.component.ts:86",{"_index":2772,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:87",{"_index":2773,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:89",{"_index":2191,"title":{},"body":{"components/PatientListComponent.html":{}}}],["list.component.ts:92",{"_index":2754,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:94",{"_index":2202,"title":{},"body":{"components/PatientListComponent.html":{}}}],["list/pati",{"_index":1040,"title":{},"body":{"modules/DashboardModule.html":{},"components/PatientListComponent.html":{}}}],["list/us",{"_index":1037,"title":{},"body":{"modules/DashboardModule.html":{},"components/UserListComponent.html":{}}}],["listen",{"_index":386,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["liter",{"_index":810,"title":{},"body":{"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/GenericValidator.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"components/PatientEditFormComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"classes/Signup.html":{},"components/UserEditFormComponent.html":{}}}],["load",{"_index":611,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"injectables/PatientsEffects.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"injectables/UsersEffects.html":{},"miscellaneous/enumerations.html":{}}}],["loadallnursinghom",{"_index":2150,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["loader",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"components/DashboardLayoutComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"dependencies.html":{}}}],["loader'},{'nam",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["loader.component.html",{"_index":1768,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.component.scss",{"_index":1767,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loadercompon",{"_index":65,"title":{"components/LoaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["loaderservic",{"_index":1777,"title":{"injectables/LoaderService.html":{}},"body":{"injectables/LoaderService.html":{}}}],["loadnursinghom",{"_index":610,"title":{"classes/LoadNursingHomes.html":{}},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"injectables/NursingHomesEffects.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadnursinghomeerrormessag",{"_index":2124,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["loadnursinghomepend",{"_index":2125,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["loadnursinghomesfailur",{"_index":825,"title":{"classes/LoadNursingHomesFailure.html":{}},"body":{"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadnursinghomessuccess",{"_index":824,"title":{"classes/LoadNursingHomesSuccess.html":{}},"body":{"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadpati",{"_index":648,"title":{"classes/LoadPatients.html":{}},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"injectables/PatientsEffects.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadpatientpatientserror",{"_index":2017,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["loadpatientpatientspend",{"_index":2018,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["loadpatientsfailur",{"_index":847,"title":{"classes/LoadPatientsFailure.html":{}},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadpatientssuccess",{"_index":846,"title":{"classes/LoadPatientsSuccess.html":{}},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadpatientus",{"_index":656,"title":{"classes/LoadPatientUsers.html":{}},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadpatientuserserror",{"_index":2617,"title":{},"body":{"interfaces/State-6.html":{}}}],["loadpatientusersfailur",{"_index":852,"title":{"classes/LoadPatientUsersFailure.html":{}},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadpatientuserspend",{"_index":2618,"title":{},"body":{"interfaces/State-6.html":{}}}],["loadpatientuserssuccess",{"_index":850,"title":{"classes/LoadPatientUsersSuccess.html":{}},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadus",{"_index":683,"title":{"classes/LoadUsers.html":{}},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{},"injectables/UsersEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loaduserpati",{"_index":690,"title":{"classes/LoadUserPatients.html":{}},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{},"injectables/UsersEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loaduserpatientserror",{"_index":2651,"title":{},"body":{"interfaces/State-9.html":{},"components/UserEditFormComponent.html":{}}}],["loaduserpatientsfailur",{"_index":876,"title":{"classes/LoadUserPatientsFailure.html":{}},"body":{"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loaduserpatientspend",{"_index":2652,"title":{},"body":{"interfaces/State-9.html":{},"components/UserEditFormComponent.html":{}}}],["loaduserpatientssuccess",{"_index":875,"title":{"classes/LoadUserPatientsSuccess.html":{}},"body":{"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadusersfailur",{"_index":872,"title":{"classes/LoadUsersFailure.html":{}},"body":{"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loaduserssuccess",{"_index":871,"title":{"classes/LoadUsersSuccess.html":{}},"body":{"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["local",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["locale.indexof",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["locale.substr(0",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["locale_id",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["localhost:4200",{"_index":2963,"title":{},"body":{"index.html":{}}}],["localstorag",{"_index":2519,"title":{},"body":{"interfaces/State.html":{},"dependencies.html":{}}}],["localstoragesync",{"_index":2518,"title":{},"body":{"interfaces/State.html":{}}}],["localstoragesyncreduc",{"_index":2528,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/functions.html":{}}}],["localstoragesyncreducer(reduc",{"_index":2526,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/functions.html":{}}}],["lock",{"_index":1800,"title":{},"body":{"components/LockscreenComponent.html":{},"components/SidebarSideComponent.html":{}}}],["lockscreen",{"_index":1801,"title":{},"body":{"components/LockscreenComponent.html":{}}}],["lockscreen'},{'nam",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["lockscreen.component.html",{"_index":1802,"title":{},"body":{"components/LockscreenComponent.html":{}}}],["lockscreencompon",{"_index":67,"title":{"components/LockscreenComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["lockscreendata",{"_index":1803,"title":{},"body":{"components/LockscreenComponent.html":{}}}],["log",{"_index":340,"title":{},"body":{"injectables/AuthApiService.html":{},"guards/AuthGuard.html":{}}}],["logger",{"_index":2522,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/functions.html":{}}}],["logger(reduc",{"_index":2523,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/functions.html":{}}}],["login",{"_index":333,"title":{"classes/Login.html":{}},"body":{"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"classes/Signup.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["login(credenti",{"_index":337,"title":{},"body":{"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{}}}],["loginfailur",{"_index":1430,"title":{"classes/LoginFailure.html":{}},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loginredirect",{"_index":355,"title":{"classes/LoginRedirect.html":{}},"body":{"injectables/AuthEffects.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loginsuccess",{"_index":356,"title":{"classes/LoginSuccess.html":{}},"body":{"injectables/AuthEffects.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["logonli",{"_index":322,"title":{},"body":{"modules/AppModule.html":{}}}],["logout",{"_index":334,"title":{"classes/Logout.html":{}},"body":{"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"components/HeaderSideComponent.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"components/SidebarSideComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"interfaces/State-10.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["logoutconfirm",{"_index":357,"title":{"classes/LogoutConfirmation.html":{}},"body":{"injectables/AuthEffects.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["logoutconfirmationdismiss",{"_index":1830,"title":{"classes/LogoutConfirmationDismiss.html":{}},"body":{"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["logoutfailur",{"_index":1431,"title":{"classes/LogoutFailure.html":{}},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["logoutsuccess",{"_index":420,"title":{"classes/LogoutSuccess.html":{}},"body":{"injectables/AuthEffects.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["look",{"_index":2987,"title":{},"body":{"index.html":{}}}],["lougout",{"_index":1439,"title":{},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{}}}],["ltr",{"_index":726,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-2.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{}}}],["machin",{"_index":2979,"title":{},"body":{"index.html":{}}}],["made",{"_index":2090,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["make",{"_index":734,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["makebreadcrumbsimpl",{"_index":733,"title":{"classes/MakeBreadcrumbSimple.html":{}},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["makebreadcrumbtitl",{"_index":736,"title":{"classes/MakeBreadcrumbTitle.html":{}},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["male",{"_index":2117,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["manag",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{}}}],["managemet",{"_index":2927,"title":{},"body":{"index.html":{}}}],["map",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["map((nursinghom",{"_index":1980,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["map((pati",{"_index":2283,"title":{},"body":{"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["map((savedpati",{"_index":2274,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["map((savedus",{"_index":2816,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["map((us",{"_index":2839,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["map(act",{"_index":373,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["map(auth",{"_index":452,"title":{},"body":{"guards/AuthGuard.html":{}}}],["map(nursinghom",{"_index":1965,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["map(pati",{"_index":2255,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["map(respons",{"_index":377,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["map(result",{"_index":425,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["map(token",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["map(us",{"_index":2803,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["master",{"_index":2930,"title":{},"body":{"index.html":{}}}],["mat",{"_index":1773,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["mat_dialog_data",{"_index":770,"title":{},"body":{"components/ConfirmComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["matbutton",{"_index":1413,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LockscreenComponent.html":{},"components/PatientListComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserListComponent.html":{}}}],["matbuttonmodul",{"_index":1846,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodul",{"_index":1847,"title":{},"body":{"modules/MaterialModule.html":{}}}],["match",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interfaces/AuthState.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"modules/CoreModule.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"modules/ErrorsModule.html":{},"modules/ErrorsRoutingModule.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"components/ForgotPasswordComponent.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ICredentials.html":{},"interfaces/IDevice.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IPatient.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"interfaces/IUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"modules/MaterialModule.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"classes/NumberValidators.html":{},"interfaces/NursingHome.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"modules/SharedModule.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["matcheckboxmodul",{"_index":1848,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialog",{"_index":438,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"injectables/LoaderService.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{}}}],["matdialogmodul",{"_index":1849,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialogref",{"_index":764,"title":{},"body":{"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{}}}],["materi",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/ErrorsModule.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["materialmodul",{"_index":461,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/ErrorsModule.html":{},"modules/MaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["matgridlistmodul",{"_index":1850,"title":{},"body":{"modules/MaterialModule.html":{}}}],["math",{"_index":2161,"title":{},"body":{"components/PatientFormComponent.html":{},"components/SignupComponent.html":{},"components/UserFormComponent.html":{}}}],["math.round(dist",{"_index":2374,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["maticonmodul",{"_index":1851,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodul",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["matlistmodul",{"_index":1852,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matmenumodul",{"_index":1853,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matoptionmodul",{"_index":1854,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matpaginatormodul",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressbar",{"_index":1410,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LockscreenComponent.html":{},"components/PatientListComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserListComponent.html":{}}}],["matprogressbarmodul",{"_index":1855,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodul",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["matradiomodul",{"_index":1856,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matripplemodul",{"_index":1857,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matselectmodul",{"_index":1858,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenav",{"_index":1311,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["matsidenavmodul",{"_index":1859,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbar",{"_index":361,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{}}}],["matsnackbarmodul",{"_index":1860,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsortmodul",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["mattablemodul",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodul",{"_index":1861,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodul",{"_index":1862,"title":{},"body":{"modules/MaterialModule.html":{}}}],["max",{"_index":1606,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"classes/NumberValidators.html":{}}}],["maxag",{"_index":320,"title":{},"body":{"modules/AppModule.html":{}}}],["media",{"_index":907,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"directives/EgretSideNavToggleDirective.html":{}}}],["mediachang",{"_index":1322,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["mediasub",{"_index":895,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["menu",{"_index":1540,"title":{},"body":{"components/HeaderSideComponent.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["menuitem",{"_index":1636,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{}}}],["menuitem.filter(item",{"_index":2445,"title":{},"body":{"components/SidebarTopComponent.html":{}}}],["menuitemssub",{"_index":2408,"title":{},"body":{"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["menutyp",{"_index":1867,"title":{},"body":{"injectables/NavigationService.html":{}}}],["messag",{"_index":380,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/GenericValidator.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"components/NotificationsComponent.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"injectables/PatientsEffects.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"injectables/UsersEffects.html":{}}}],["messages[controlkey",{"_index":1483,"title":{},"body":{"classes/GenericValidator.html":{}}}],["metadata",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"directives/FontSizeDirective.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"directives/ScrollToDirective.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["metareduc",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"interfaces/State.html":{}}}],["method",{"_index":126,"title":{},"body":{"directives/AppDropdownDirective.html":{},"injectables/AuthApiService.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"injectables/ConfirmService.html":{},"components/DashboardLayoutComponent.html":{},"directives/DropdownLinkDirective.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"directives/FontSizeDirective.html":{},"components/ForgotPasswordComponent.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/LayoutService.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"classes/NumberValidators.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesService.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsService.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"injectables/ThemeService.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["min",{"_index":1774,"title":{},"body":{"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"classes/NumberValidators.html":{}}}],["miscellan",{"_index":2901,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mobil",{"_index":948,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["mobility.com",{"_index":2953,"title":{},"body":{"index.html":{}}}],["modal",{"_index":1833,"title":{},"body":{"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{}}}],["modalcontrol",{"_index":1997,"title":{},"body":{"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["mode",{"_index":2350,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["model",{"_index":1660,"title":{},"body":{"interfaces/IPatient.html":{}}}],["model_no",{"_index":1654,"title":{},"body":{"interfaces/IDevice.html":{}}}],["models/nurs",{"_index":593,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"interfaces/State-4.html":{}}}],["models/patient.model",{"_index":641,"title":{},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{}}}],["models/user.interfac",{"_index":345,"title":{},"body":{"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"classes/ForgotPassword.html":{},"classes/Login.html":{},"classes/Signup.html":{},"interfaces/State-11.html":{}}}],["models/user.model",{"_index":676,"title":{},"body":{"classes/ClearSelectedUser.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/InitializeUser.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/PatientEditFormComponent.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{},"interfaces/State-10.html":{},"interfaces/State-5.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{}}}],["modul",{"_index":189,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/ErrorsModule.html":{},"modules/ErrorsRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/ErrorsModule.html":{},"modules/ErrorsRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["moduleloadersub",{"_index":896,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["moio",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesService.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsService.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["moio_manag",{"_index":2955,"title":{},"body":{"index.html":{}}}],["moiomanag",{"_index":2924,"title":{},"body":{"index.html":{}}}],["multipl",{"_index":1462,"title":{},"body":{"classes/GenericValidator.html":{}}}],["n.icon",{"_index":1907,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["n.messag",{"_index":1908,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["n.time",{"_index":1909,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["name",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"injectables/ConfirmService.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"components/ForgotPasswordComponent.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"interfaces/ITheme.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"classes/NumberValidators.html":{},"interfaces/NursingHome.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nav",{"_index":717,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"modules/DashboardModule.html":{},"directives/DropdownLinkDirective.html":{},"directives/EgretSideNavToggleDirective.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{}}}],["navig",{"_index":709,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"injectables/NavigationService.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{}}}],["navigationend",{"_index":155,"title":{},"body":{"directives/AppDropdownDirective.html":{},"components/BreadcrumbComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/NotificationsComponent.html":{}}}],["navigationend)).subscribe((ev",{"_index":178,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["navigationpo",{"_index":1562,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"interfaces/State-2.html":{}}}],["navigationservic",{"_index":1627,"title":{"injectables/NavigationService.html":{}},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["navlink",{"_index":125,"title":{},"body":{"directives/AppDropdownDirective.html":{},"directives/DropdownAnchorDirective.html":{}}}],["navposit",{"_index":897,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["navservic",{"_index":2409,"title":{},"body":{"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["nbsp",{"_index":778,"title":{},"body":{"components/ConfirmComponent.html":{}}}],["need",{"_index":164,"title":{},"body":{"directives/AppDropdownDirective.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"directives/EgretSideNavToggleDirective.html":{},"directives/FontSizeDirective.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"components/PatientEditFormComponent.html":{},"directives/ScrollToDirective.html":{},"components/UserEditFormComponent.html":{},"index.html":{}}}],["never",{"_index":2100,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["new",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/DashboardLayoutComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/ITheme.html":{},"injectables/LayoutService.html":{},"injectables/NavigationService.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/State-10.html":{},"interfaces/State-12.html":{},"interfaces/State-4.html":{},"interfaces/State-7.html":{},"injectables/ThemeService.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["newpasswordsendtext",{"_index":1420,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["newpati",{"_index":2187,"title":{},"body":{"components/PatientListComponent.html":{}}}],["newus",{"_index":2750,"title":{},"body":{"components/UserListComponent.html":{}}}],["next",{"_index":2958,"title":{},"body":{"index.html":{}}}],["ng",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["ng2",{"_index":1047,"title":{},"body":{"modules/DashboardModule.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":903,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["ngmodul",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/ErrorsModule.html":{},"modules/ErrorsRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{}}}],["ngondestroy",{"_index":534,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DashboardLayoutComponent.html":{},"directives/DropdownLinkDirective.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/PatientEditFormComponent.html":{},"components/PatientListComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{}}}],["ngoninit",{"_index":131,"title":{},"body":{"directives/AppDropdownDirective.html":{},"components/BreadcrumbComponent.html":{},"components/DashboardLayoutComponent.html":{},"directives/DropdownLinkDirective.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"directives/FontSizeDirective.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"interfaces/IRoutePart.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{}}}],["ngrx",{"_index":368,"title":{},"body":{"injectables/AuthEffects.html":{},"modules/DashboardModule.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"interfaces/State.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["ngrx/effect",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{},"dependencies.html":{}}}],["ngrx/entiti",{"_index":596,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreateNursingHome.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"injectables/PatientsService.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["ngrx/router",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"interfaces/State.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthState.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/FixTopbar.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"components/HeaderSideComponent.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"components/SidebarSideComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-12.html":{},"interfaces/State-2.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"dependencies.html":{}}}],["ngx",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"modules/AuthModule.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"modules/CoreModule.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/ErrorsModule.html":{},"components/HeaderSideComponent.html":{},"injectables/LoaderService.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"components/SigninComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"dependencies.html":{}}}],["ngxdatatablemodul",{"_index":1043,"title":{},"body":{"modules/DashboardModule.html":{}}}],["node",{"_index":2360,"title":{},"body":{"directives/ScrollToDirective.html":{},"index.html":{}}}],["node.offsetpar",{"_index":2361,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["node.offsettop",{"_index":2363,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["nodej",{"_index":2937,"title":{},"body":{"index.html":{}}}],["nopasswordmatch",{"_index":2164,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["note",{"_index":2988,"title":{},"body":{"index.html":{}}}],["notfoundcompon",{"_index":69,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"modules/ErrorsModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["notif",{"_index":1544,"title":{},"body":{"components/HeaderSideComponent.html":{},"components/NotificationsComponent.html":{}}}],["notifications'},{'nam",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["notifications.component.html",{"_index":1880,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications_off",{"_index":1549,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["notificationscompon",{"_index":71,"title":{"components/NotificationsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["notificpanel",{"_index":1500,"title":{},"body":{"components/HeaderSideComponent.html":{},"components/NotificationsComponent.html":{}}}],["now",{"_index":2960,"title":{},"body":{"index.html":{}}}],["npm",{"_index":2938,"title":{},"body":{"index.html":{}}}],["null",{"_index":1658,"title":{},"body":{"interfaces/IDevice.html":{},"interfaces/IPatient.html":{},"classes/NumberValidators.html":{},"interfaces/NursingHome.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/SignupComponent.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-9.html":{},"interfaces/User.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{}}}],["number",{"_index":669,"title":{},"body":{"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IDevice.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IPatient.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"injectables/LayoutService.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/NumberValidators.html":{},"interfaces/NursingHome.html":{},"injectables/PatientsService.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"interfaces/State-10.html":{},"interfaces/State-4.html":{},"interfaces/State-7.html":{},"interfaces/User.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{}}}],["numbervalid",{"_index":1910,"title":{"classes/NumberValidators.html":{}},"body":{"classes/NumberValidators.html":{},"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["nurs",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/ClearSelectedNursingHome.html":{},"components/ConfirmComponent.html":{},"classes/CreateNursingHome.html":{},"components/DashboardLayoutComponent.html":{},"interfaces/DashboardState.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"interfaces/IPatient.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/NursingHome.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/State-1.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["nursing_hom",{"_index":1664,"title":{},"body":{"interfaces/IPatient.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{}}}],["nursing_home_id",{"_index":1655,"title":{},"body":{"interfaces/IDevice.html":{},"interfaces/IPatient.html":{}}}],["nursing_home_key",{"_index":2154,"title":{},"body":{"components/PatientFormComponent.html":{},"interfaces/User.html":{},"components/UserFormComponent.html":{}}}],["nursing_home_nam",{"_index":1665,"title":{},"body":{"interfaces/IPatient.html":{},"components/PatientEditFormComponent.html":{}}}],["nursinghom",{"_index":592,"title":{"interfaces/NursingHome.html":{}},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"interfaces/DashboardState.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"interfaces/IPatient.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"interfaces/NursingHome.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"components/PatientFormComponent.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"interfaces/State-1.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"components/UserFormComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["nursinghome.id",{"_index":2596,"title":{},"body":{"interfaces/State-4.html":{}}}],["nursinghome.nam",{"_index":2180,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["nursinghome/api",{"_index":823,"title":{},"body":{"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["nursinghomeact",{"_index":1940,"title":{},"body":{"components/NursingHomeFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["nursinghomeactions.loadnursinghom",{"_index":1946,"title":{},"body":{"components/NursingHomeFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["nursinghomeformcompon",{"_index":73,"title":{"components/NursingHomeFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["nursinghomekeyrequir",{"_index":2181,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["nursinghomepag",{"_index":1084,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["nursinghomesact",{"_index":1944,"title":{},"body":{"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{}}}],["nursinghomesactions.createnursinghome({nursinghom",{"_index":1953,"title":{},"body":{"components/NursingHomeFormComponent.html":{}}}],["nursinghomesactions.dismisspoppedupnursinghomeform",{"_index":1954,"title":{},"body":{"components/NursingHomeFormComponent.html":{}}}],["nursinghomesactions.loadnursinghom",{"_index":1986,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["nursinghomesactions.nursinghomesactionsunion",{"_index":2584,"title":{},"body":{"interfaces/State-3.html":{},"interfaces/State-4.html":{}}}],["nursinghomesactions.nursinghomesactiontypes.dismisseditnursinghom",{"_index":2590,"title":{},"body":{"interfaces/State-3.html":{}}}],["nursinghomesactions.nursinghomesactiontypes.editnursinghom",{"_index":2586,"title":{},"body":{"interfaces/State-3.html":{}}}],["nursinghomesactions.nursinghomesactiontypes.loadnursinghom",{"_index":2585,"title":{},"body":{"interfaces/State-3.html":{}}}],["nursinghomesactions.nursinghomesactiontypes.resetnursinghomesst",{"_index":2602,"title":{},"body":{"interfaces/State-4.html":{}}}],["nursinghomesactions.nursinghomesactiontypes.selectnursinghom",{"_index":2601,"title":{},"body":{"interfaces/State-4.html":{}}}],["nursinghomesactionsunion",{"_index":635,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"miscellaneous/typealiases.html":{}}}],["nursinghomesactiontyp",{"_index":598,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"miscellaneous/enumerations.html":{}}}],["nursinghomesactiontypes.clearselectednursinghom",{"_index":590,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{}}}],["nursinghomesactiontypes.createnursinghom",{"_index":624,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{}}}],["nursinghomesactiontypes.dismisseditnursinghom",{"_index":632,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{}}}],["nursinghomesactiontypes.dismisspoppedupnursinghomeform",{"_index":626,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{}}}],["nursinghomesactiontypes.editnursinghom",{"_index":631,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{}}}],["nursinghomesactiontypes.initializenursinghom",{"_index":622,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{}}}],["nursinghomesactiontypes.loadnursinghom",{"_index":627,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{}}}],["nursinghomesactiontypes.popupnursinghomeform",{"_index":623,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{}}}],["nursinghomesactiontypes.resetnursinghomesst",{"_index":633,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{}}}],["nursinghomesactiontypes.searchnursinghom",{"_index":628,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{}}}],["nursinghomesactiontypes.searchnursinghomecomplet",{"_index":629,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{}}}],["nursinghomesactiontypes.selectnursinghom",{"_index":619,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{}}}],["nursinghomesapiact",{"_index":1943,"title":{},"body":{"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{}}}],["nursinghomesapiactions.createnursinghomefailur",{"_index":1967,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["nursinghomesapiactions.createnursinghomesuccess",{"_index":1966,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["nursinghomesapiactions.loadnursinghomesfailur",{"_index":1987,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["nursinghomesapiactions.loadnursinghomessuccess({nursinghom",{"_index":1982,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["nursinghomesapiactions.nursinghomesapiactionsunion",{"_index":2583,"title":{},"body":{"interfaces/State-3.html":{},"interfaces/State-4.html":{}}}],["nursinghomesapiactions.nursinghomesapiactiontypes.createnursinghomefailur",{"_index":2592,"title":{},"body":{"interfaces/State-3.html":{}}}],["nursinghomesapiactions.nursinghomesapiactiontypes.createnursinghomesuccess",{"_index":2588,"title":{},"body":{"interfaces/State-3.html":{},"interfaces/State-4.html":{}}}],["nursinghomesapiactions.nursinghomesapiactiontypes.editnursinghomefailur",{"_index":2593,"title":{},"body":{"interfaces/State-3.html":{}}}],["nursinghomesapiactions.nursinghomesapiactiontypes.editnursinghomesuccess",{"_index":2589,"title":{},"body":{"interfaces/State-3.html":{},"interfaces/State-4.html":{}}}],["nursinghomesapiactions.nursinghomesapiactiontypes.loadnursinghomesfailur",{"_index":2591,"title":{},"body":{"interfaces/State-3.html":{}}}],["nursinghomesapiactions.nursinghomesapiactiontypes.loadnursinghomessuccess",{"_index":2587,"title":{},"body":{"interfaces/State-3.html":{},"interfaces/State-4.html":{}}}],["nursinghomesapiactionsunion",{"_index":833,"title":{},"body":{"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["nursinghomesapiactiontyp",{"_index":821,"title":{},"body":{"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["nursinghomesapiactiontypes.createnursinghomefailur",{"_index":819,"title":{},"body":{"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{}}}],["nursinghomesapiactiontypes.createnursinghomesuccess",{"_index":828,"title":{},"body":{"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{}}}],["nursinghomesapiactiontypes.editnursinghomefailur",{"_index":832,"title":{},"body":{"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{}}}],["nursinghomesapiactiontypes.editnursinghomesuccess",{"_index":831,"title":{},"body":{"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{}}}],["nursinghomesapiactiontypes.loadnursinghomesfailur",{"_index":830,"title":{},"body":{"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{}}}],["nursinghomesapiactiontypes.loadnursinghomessuccess",{"_index":829,"title":{},"body":{"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{}}}],["nursinghomeseffect",{"_index":1031,"title":{"injectables/NursingHomesEffects.html":{}},"body":{"modules/DashboardModule.html":{},"injectables/NursingHomesEffects.html":{}}}],["nursinghomesservic",{"_index":1958,"title":{"injectables/NursingHomesService.html":{}},"body":{"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{}}}],["object",{"_index":927,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"components/LockscreenComponent.html":{}}}],["object.assign(messag",{"_index":1481,"title":{},"body":{"classes/GenericValidator.html":{}}}],["object.assign(this.layoutconf",{"_index":1583,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["object.keys(c.errors).map(messagekey",{"_index":1487,"title":{},"body":{"classes/GenericValidator.html":{}}}],["object:ipati",{"_index":2308,"title":{},"body":{"injectables/PatientsService.html":{}}}],["object:us",{"_index":2863,"title":{},"body":{"injectables/UsersService.html":{}}}],["observ",{"_index":343,"title":{},"body":{"injectables/AuthApiService.html":{},"guards/AuthGuard.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"components/HeaderSideComponent.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/LoaderService.html":{},"injectables/NavigationService.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesService.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"components/SigninComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{}}}],["observablemedia",{"_index":908,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"directives/EgretSideNavToggleDirective.html":{}}}],["obtain",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["of('pleas",{"_index":2114,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["of(new",{"_index":382,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["oftyp",{"_index":388,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["oftype(authactions.authactiontypes.logout",{"_index":400,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(authactions.authactiontypes.logoutconfirm",{"_index":421,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(authapiactions.authapiactiontypes.loginsuccess",{"_index":396,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(authpageactions.authpageactiontypes.login",{"_index":371,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(nursinghomesactions.nursinghomesactiontypes.createnursinghom",{"_index":1960,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["oftype(nursinghomesactions.nursinghomesactiontypes.dismisspoppedupnursinghomeform",{"_index":1974,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["oftype(nursinghomesactions.nursinghomesactiontypes.loadnursinghom",{"_index":1978,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["oftype(nursinghomesactions.nursinghomesactiontypes.popupnursinghomeform",{"_index":1990,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["oftype(patientsactions.patientsactiontypes.createpati",{"_index":2251,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["oftype(patientsactions.patientsactiontypes.createpatientformdialog",{"_index":2290,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["oftype(patientsactions.patientsactiontypes.dismisspatientformdialog",{"_index":2266,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["oftype(patientsactions.patientsactiontypes.editpati",{"_index":2270,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["oftype(patientsactions.patientsactiontypes.loadpati",{"_index":2281,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["oftype(patientsapiactions.patientsapiactiontypes.createpatientsuccess",{"_index":2260,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["oftype(usersactions.usersactiontypes.createus",{"_index":2799,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["oftype(usersactions.usersactiontypes.createuserformdialog",{"_index":2843,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["oftype(usersactions.usersactiontypes.dismissuserformdialog",{"_index":2810,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["oftype(usersactions.usersactiontypes.editus",{"_index":2813,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["oftype(usersactions.usersactiontypes.loadus",{"_index":2837,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["oftype(usersactions.usersactiontypes.loaduserpati",{"_index":2826,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["oftype(usersapiactions.usersapiactiontypes.createusersuccess",{"_index":2807,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["oftype(usersapiactions.usersapiactiontypes.editusersuccess",{"_index":2823,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["ok",{"_index":777,"title":{},"body":{"components/ConfirmComponent.html":{}}}],["onclick(",{"_index":1259,"title":{},"body":{"directives/DropdownAnchorDirective.html":{}}}],["onconfirmlogout",{"_index":1495,"title":{},"body":{"components/HeaderSideComponent.html":{},"components/SidebarSideComponent.html":{}}}],["ondestroy",{"_index":528,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DashboardLayoutComponent.html":{},"directives/DropdownLinkDirective.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/PatientEditFormComponent.html":{},"components/PatientListComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{}}}],["onformsubmit",{"_index":1926,"title":{},"body":{"components/NursingHomeFormComponent.html":{}}}],["onformsubmitted(nursinghom",{"_index":1935,"title":{},"body":{"components/NursingHomeFormComponent.html":{}}}],["oninit",{"_index":119,"title":{},"body":{"directives/AppDropdownDirective.html":{},"components/BreadcrumbComponent.html":{},"components/DashboardLayoutComponent.html":{},"directives/DropdownLinkDirective.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"directives/FontSizeDirective.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"interfaces/IRoutePart.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{}}}],["onresize(ev",{"_index":976,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["onselectrow",{"_index":2188,"title":{},"body":{"components/PatientListComponent.html":{},"components/UserListComponent.html":{}}}],["onselectrow(undefin",{"_index":2194,"title":{},"body":{"components/PatientListComponent.html":{},"components/UserListComponent.html":{}}}],["onselectrow({select",{"_index":2225,"title":{},"body":{"components/PatientListComponent.html":{},"components/UserListComponent.html":{}}}],["open",{"_index":716,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"directives/DropdownLinkDirective.html":{},"classes/FixTopbar.html":{},"injectables/LoaderService.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"components/PatientFormComponent.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"components/UserFormComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["open(loadercompon",{"_index":1790,"title":{},"body":{"injectables/LoaderService.html":{}}}],["open(titl",{"_index":1783,"title":{},"body":{"injectables/LoaderService.html":{}}}],["open(valu",{"_index":1283,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["openlink",{"_index":146,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["openpopup",{"_index":2236,"title":{},"body":{"components/PatientsComponent.html":{},"components/UsersComponent.html":{}}}],["opensidenav",{"_index":715,"title":{"classes/OpenSideNav.html":{}},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["opera",{"_index":2343,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["opt",{"_index":1578,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["opt.dur",{"_index":1580,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["opt.transitionclass",{"_index":1582,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["option",{"_index":138,"title":{},"body":{"directives/AppDropdownDirective.html":{},"modules/AppModule.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"directives/EgretSideNavToggleDirective.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IChildItem.html":{},"interfaces/IDevice.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IPatient.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"interfaces/IUser.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"injectables/NavigationService.html":{},"components/NotificationsComponent.html":{},"classes/NumberValidators.html":{},"interfaces/NursingHome.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["options.rout",{"_index":1600,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["origin",{"_index":2104,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["out",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthApiService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/ErrorsModule.html":{},"overview.html":{}}}],["over",{"_index":808,"title":{},"body":{"modules/CoreModule.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["overview",{"_index":3028,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrit",{"_index":3013,"title":{},"body":{"index.html":{}}}],["p",{"_index":2107,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["packag",{"_index":2871,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["package.json",{"_index":2967,"title":{},"body":{"index.html":{}}}],["page",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"interfaces/DashboardState.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"classes/ForgotPassword.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"interfaces/State-1.html":{},"interfaces/State-3.html":{},"interfaces/State-6.html":{},"interfaces/State-9.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["page'},{'nam",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["page.actions.t",{"_index":1386,"title":{},"body":{"classes/ForgotPassword.html":{},"classes/Login.html":{},"classes/Signup.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["page.actions.ts:17",{"_index":1819,"title":{},"body":{"classes/Login.html":{}}}],["page.actions.ts:19",{"_index":1820,"title":{},"body":{"classes/Login.html":{}}}],["page.actions.ts:27",{"_index":2491,"title":{},"body":{"classes/Signup.html":{}}}],["page.actions.ts:29",{"_index":2492,"title":{},"body":{"classes/Signup.html":{}}}],["page.actions.ts:37",{"_index":1388,"title":{},"body":{"classes/ForgotPassword.html":{}}}],["page.actions.ts:39",{"_index":1389,"title":{},"body":{"classes/ForgotPassword.html":{}}}],["page.reduc",{"_index":1099,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["page.reducer.t",{"_index":2582,"title":{},"body":{"interfaces/State-3.html":{},"interfaces/State-6.html":{},"interfaces/State-9.html":{},"miscellaneous/functions.html":{}}}],["pagetitl",{"_index":2019,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["pane",{"_index":1050,"title":{},"body":{"modules/DashboardModule.html":{},"dependencies.html":{}}}],["pane/lib/ng2",{"_index":1049,"title":{},"body":{"modules/DashboardModule.html":{}}}],["param",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IRoutePart.html":{},"injectables/LayoutService.html":{},"injectables/LoaderService.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"injectables/RoutePartsService.html":{},"interfaces/State-10.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["paramet",{"_index":137,"title":{},"body":{"directives/AppDropdownDirective.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"injectables/ConfirmService.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"directives/EgretSideNavToggleDirective.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"injectables/NavigationService.html":{},"components/NotificationsComponent.html":{},"classes/NumberValidators.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["parsetext",{"_index":535,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["parsetext(part",{"_index":543,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["part",{"_index":545,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["part.breadcrumb",{"_index":576,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["part.breadcrumb.replace(/{{([^{}]*)}}/g",{"_index":577,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["part.params[b",{"_index":580,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["parts.servic",{"_index":549,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["parts.service.t",{"_index":1676,"title":{},"body":{"interfaces/IRoutePart.html":{},"injectables/RoutePartsService.html":{}}}],["parts.service.ts:16",{"_index":2321,"title":{},"body":{"injectables/RoutePartsService.html":{}}}],["parts.service.ts:21",{"_index":2323,"title":{},"body":{"injectables/RoutePartsService.html":{}}}],["parts.service.ts:24",{"_index":2322,"title":{},"body":{"injectables/RoutePartsService.html":{}}}],["pass",{"_index":2056,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["password",{"_index":1387,"title":{},"body":{"classes/ForgotPassword.html":{},"components/ForgotPasswordComponent.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"interfaces/ICredentials.html":{},"interfaces/IUser.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"components/PatientFormComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"interfaces/User.html":{},"components/UserFormComponent.html":{},"miscellaneous/enumerations.html":{}}}],["password'},{'nam",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["password.compon",{"_index":469,"title":{},"body":{"modules/AuthModule.html":{}}}],["password.component.html",{"_index":1402,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.t",{"_index":1401,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:10",{"_index":1412,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:11",{"_index":1407,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:16",{"_index":1408,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:19",{"_index":1409,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:9",{"_index":1415,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password/forgot",{"_index":468,"title":{},"body":{"modules/AuthModule.html":{},"components/ForgotPasswordComponent.html":{}}}],["password_confirm",{"_index":2153,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["passwordconfirm",{"_index":2158,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["passwordmatchvalid",{"_index":2128,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["passwordmatchvalidator(control",{"_index":2133,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["passwordrequri",{"_index":2178,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["path",{"_index":1075,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["pathmatch",{"_index":1078,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["patient",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"components/ConfirmComponent.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardRoutingModule.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"interfaces/IPatient.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/State-1.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["patient.firstnam",{"_index":2082,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["patient.gend",{"_index":2084,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["patient.id",{"_index":2081,"title":{},"body":{"components/PatientEditFormComponent.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{}}}],["patient.lastnam",{"_index":2083,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["patient.model",{"_index":2690,"title":{},"body":{"interfaces/User.html":{}}}],["patient.nursing_home.nam",{"_index":2085,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["patient.us",{"_index":2066,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["patient.users.filter(us",{"_index":2829,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["patient.users.length",{"_index":2286,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["patient/api",{"_index":845,"title":{},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["patient[\"permiss",{"_index":2833,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["patient[\"users_count",{"_index":2285,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["patient_profil",{"_index":2687,"title":{},"body":{"interfaces/User.html":{},"components/UserListComponent.html":{}}}],["patientcreationform",{"_index":2244,"title":{},"body":{"components/PatientsComponent.html":{}}}],["patienteditform",{"_index":2020,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["patienteditformcompon",{"_index":77,"title":{"components/PatientEditFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["patientform",{"_index":2126,"title":{},"body":{"components/PatientFormComponent.html":{}}}],["patientformcompon",{"_index":80,"title":{"components/PatientFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["patientlistcompon",{"_index":81,"title":{"components/PatientListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["patientnam",{"_index":2054,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{}}}],["patientnamerequir",{"_index":2176,"title":{},"body":{"components/PatientFormComponent.html":{}}}],["patientpag",{"_index":1085,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["patients.component.html",{"_index":2234,"title":{},"body":{"components/PatientsComponent.html":{}}}],["patients.reduc",{"_index":1105,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["patients.reducer.t",{"_index":2644,"title":{},"body":{"interfaces/State-8.html":{},"miscellaneous/functions.html":{}}}],["patients[key",{"_index":2284,"title":{},"body":{"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["patientsact",{"_index":2047,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"injectables/PatientsEffects.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{}}}],["patientsactions.createpatient({pati",{"_index":2170,"title":{},"body":{"components/PatientFormComponent.html":{}}}],["patientsactions.deletepatient(this.patient.id",{"_index":2099,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["patientsactions.dismisseditpati",{"_index":2091,"title":{},"body":{"components/PatientEditFormComponent.html":{},"injectables/PatientsEffects.html":{}}}],["patientsactions.dismisspatientformdialog",{"_index":2173,"title":{},"body":{"components/PatientFormComponent.html":{}}}],["patientsactions.editpatient(p",{"_index":2113,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["patientsactions.editpatient(pati",{"_index":2277,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["patientsactions.initializepati",{"_index":2222,"title":{},"body":{"components/PatientListComponent.html":{}}}],["patientsactions.loadpati",{"_index":2215,"title":{},"body":{"components/PatientListComponent.html":{},"injectables/PatientsEffects.html":{}}}],["patientsactions.loadpatientusers(patient.id",{"_index":2228,"title":{},"body":{"components/PatientListComponent.html":{}}}],["patientsactions.patientsactionsunion",{"_index":2608,"title":{},"body":{"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{}}}],["patientsactions.patientsactiontypes.createpati",{"_index":2621,"title":{},"body":{"interfaces/State-6.html":{}}}],["patientsactions.patientsactiontypes.dismisseditpati",{"_index":2610,"title":{},"body":{"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{}}}],["patientsactions.patientsactiontypes.editpati",{"_index":2620,"title":{},"body":{"interfaces/State-6.html":{}}}],["patientsactions.patientsactiontypes.loadpati",{"_index":2619,"title":{},"body":{"interfaces/State-6.html":{}}}],["patientsactions.patientsactiontypes.resetpatientsst",{"_index":2613,"title":{},"body":{"interfaces/State-5.html":{},"interfaces/State-7.html":{}}}],["patientsactions.patientsactiontypes.selectpati",{"_index":2612,"title":{},"body":{"interfaces/State-5.html":{},"interfaces/State-7.html":{}}}],["patientsactions.selectpatient(pati",{"_index":2223,"title":{},"body":{"components/PatientListComponent.html":{}}}],["patientsactionsunion",{"_index":671,"title":{},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{},"miscellaneous/typealiases.html":{}}}],["patientsactiontyp",{"_index":642,"title":{},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{},"miscellaneous/enumerations.html":{}}}],["patientsactiontypes.clearselectedpati",{"_index":638,"title":{},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{}}}],["patientsactiontypes.createpati",{"_index":660,"title":{},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{}}}],["patientsactiontypes.createpatientformdialog",{"_index":659,"title":{},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{}}}],["patientsactiontypes.deletepati",{"_index":668,"title":{},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{}}}],["patientsactiontypes.dismisseditpati",{"_index":666,"title":{},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{}}}],["patientsactiontypes.dismisspatientformdialog",{"_index":661,"title":{},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{}}}],["patientsactiontypes.editpati",{"_index":665,"title":{},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{}}}],["patientsactiontypes.initializepati",{"_index":658,"title":{},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{}}}],["patientsactiontypes.loadpati",{"_index":662,"title":{},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{}}}],["patientsactiontypes.loadpatientus",{"_index":670,"title":{},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{}}}],["patientsactiontypes.resetpatientsst",{"_index":667,"title":{},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{}}}],["patientsactiontypes.searchpati",{"_index":663,"title":{},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{}}}],["patientsactiontypes.searchpatientcomplet",{"_index":664,"title":{},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{}}}],["patientsactiontypes.selectpati",{"_index":657,"title":{},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{}}}],["patientsapiact",{"_index":2147,"title":{},"body":{"components/PatientFormComponent.html":{},"injectables/PatientsEffects.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{}}}],["patientsapiactions.createpatientfailure({messag",{"_index":2258,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["patientsapiactions.createpatientsuccess({pati",{"_index":2256,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["patientsapiactions.editpatientsuccess({pati",{"_index":2275,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["patientsapiactions.loadpatientsfailure({messag",{"_index":2288,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["patientsapiactions.loadpatientssuccess({pati",{"_index":2287,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["patientsapiactions.loadpatientusersfailure({messag",{"_index":2279,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["patientsapiactions.patientsapiactionsunion",{"_index":2607,"title":{},"body":{"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{}}}],["patientsapiactions.patientsapiactiontypes.createpatientfailur",{"_index":2622,"title":{},"body":{"interfaces/State-6.html":{}}}],["patientsapiactions.patientsapiactiontypes.createpatientsuccess",{"_index":2623,"title":{},"body":{"interfaces/State-6.html":{},"interfaces/State-7.html":{}}}],["patientsapiactions.patientsapiactiontypes.editpatientfailur",{"_index":2627,"title":{},"body":{"interfaces/State-6.html":{}}}],["patientsapiactions.patientsapiactiontypes.editpatientsuccess",{"_index":2625,"title":{},"body":{"interfaces/State-6.html":{},"interfaces/State-7.html":{}}}],["patientsapiactions.patientsapiactiontypes.loadpatientsfailur",{"_index":2626,"title":{},"body":{"interfaces/State-6.html":{}}}],["patientsapiactions.patientsapiactiontypes.loadpatientssuccess",{"_index":2624,"title":{},"body":{"interfaces/State-6.html":{},"interfaces/State-7.html":{}}}],["patientsapiactions.patientsapiactiontypes.loadpatientuserssuccess",{"_index":2609,"title":{},"body":{"interfaces/State-5.html":{}}}],["patientsapiactionsunion",{"_index":860,"title":{},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["patientsapiactiontyp",{"_index":843,"title":{},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["patientsapiactiontypes.createpatientfailur",{"_index":842,"title":{},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{}}}],["patientsapiactiontypes.createpatientsuccess",{"_index":853,"title":{},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{}}}],["patientsapiactiontypes.editpatientfailur",{"_index":857,"title":{},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{}}}],["patientsapiactiontypes.editpatientsuccess",{"_index":856,"title":{},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{}}}],["patientsapiactiontypes.loadpatientsfailur",{"_index":855,"title":{},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{}}}],["patientsapiactiontypes.loadpatientssuccess",{"_index":854,"title":{},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{}}}],["patientsapiactiontypes.loadpatientusersfailur",{"_index":859,"title":{},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{}}}],["patientsapiactiontypes.loadpatientuserssuccess",{"_index":858,"title":{},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{}}}],["patientscompon",{"_index":83,"title":{"components/PatientsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["patientseffect",{"_index":1029,"title":{"injectables/PatientsEffects.html":{}},"body":{"modules/DashboardModule.html":{},"injectables/PatientsEffects.html":{}}}],["patientsservic",{"_index":2249,"title":{"injectables/PatientsService.html":{}},"body":{"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{}}}],["patientus",{"_index":1086,"title":{},"body":{"interfaces/DashboardState.html":{},"components/PatientEditFormComponent.html":{},"interfaces/State-1.html":{}}}],["payload",{"_index":621,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/FixTopbar.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"classes/Signup.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["pend",{"_index":1129,"title":{},"body":{"interfaces/DashboardState.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/SigninComponent.html":{},"interfaces/State-1.html":{},"interfaces/State-13.html":{},"interfaces/State-3.html":{},"interfaces/State-6.html":{},"interfaces/State-9.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{}}}],["perfect",{"_index":1012,"title":{},"body":{"modules/DashboardModule.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"dependencies.html":{}}}],["perfectscrollbar",{"_index":942,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["perfectscrollbar('#scrol",{"_index":2429,"title":{},"body":{"components/SidebarSideComponent.html":{}}}],["perfectscrollbar('#sidebar",{"_index":2446,"title":{},"body":{"components/SidebarTopComponent.html":{}}}],["perfectscrollbar('.main",{"_index":994,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["perfectscrollbar('.rightsid",{"_index":989,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["perfectscrollbarmodul",{"_index":1011,"title":{},"body":{"modules/DashboardModule.html":{}}}],["permiss",{"_index":2830,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["phone",{"_index":1666,"title":{},"body":{"interfaces/IPatient.html":{}}}],["pink",{"_index":1699,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["pipe",{"_index":370,"title":{},"body":{"injectables/AuthEffects.html":{},"components/DashboardLayoutComponent.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientListComponent.html":{},"injectables/PatientsEffects.html":{},"components/UserListComponent.html":{},"injectables/UsersEffects.html":{}}}],["pipe(filter(ev",{"_index":555,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["pleas",{"_index":1785,"title":{},"body":{"injectables/LoaderService.html":{}}}],["po",{"_index":2948,"title":{},"body":{"index.html":{}}}],["pop",{"_index":603,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreateNursingHome.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"injectables/UsersEffects.html":{},"miscellaneous/enumerations.html":{}}}],["popupnursinghomeform",{"_index":602,"title":{"classes/PopUpNursingHomeForm.html":{}},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"injectables/NursingHomesEffects.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["popuppatientform",{"_index":2248,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["popupuserform",{"_index":2796,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["port",{"_index":2998,"title":{},"body":{"index.html":{}}}],["posit",{"_index":720,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{}}}],["possibl",{"_index":1615,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["post(`${environment.apihost}/api/auth/loginmanag",{"_index":348,"title":{},"body":{"injectables/AuthApiService.html":{}}}],["post(`${environment.apihost}/api/nursinghom",{"_index":2009,"title":{},"body":{"injectables/NursingHomesService.html":{}}}],["pre",{"_index":2935,"title":{},"body":{"index.html":{}}}],["prefer",{"_index":298,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["prepend",{"_index":570,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["present",{"_index":1633,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["pretti",{"_index":1378,"title":{},"body":{"directives/FontSizeDirective.html":{}}}],["previou",{"_index":571,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["primari",{"_index":1892,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["primary/accent/warn/hex",{"_index":1625,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["privat",{"_index":122,"title":{},"body":{"directives/AppDropdownDirective.html":{},"injectables/AuthEffects.html":{},"components/BreadcrumbComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"components/DashboardLayoutComponent.html":{},"directives/EgretSideNavToggleDirective.html":{},"directives/FontSizeDirective.html":{},"components/HeaderSideComponent.html":{},"interfaces/ITheme.html":{},"injectables/LoaderService.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"directives/ScrollToDirective.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SigninComponent.html":{},"injectables/ThemeService.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{}}}],["problem",{"_index":1347,"title":{},"body":{"components/ErrorComponent.html":{}}}],["process",{"_index":418,"title":{},"body":{"injectables/AuthEffects.html":{},"classes/GenericValidator.html":{}}}],["processmessag",{"_index":1451,"title":{},"body":{"classes/GenericValidator.html":{}}}],["processmessages(contain",{"_index":1455,"title":{},"body":{"classes/GenericValidator.html":{}}}],["prod",{"_index":2970,"title":{},"body":{"index.html":{}}}],["product",{"_index":2932,"title":{},"body":{"index.html":{}}}],["program",{"_index":3019,"title":{},"body":{"index.html":{}}}],["programmat",{"_index":1782,"title":{},"body":{"injectables/LoaderService.html":{}}}],["progressbar",{"_index":1403,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LockscreenComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["project",{"_index":2986,"title":{},"body":{"index.html":{}}}],["prop",{"_index":2758,"title":{},"body":{"components/UserListComponent.html":{},"miscellaneous/functions.html":{}}}],["properti",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/BreadcrumbComponent.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"directives/EgretSideNavToggleDirective.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"components/ForgotPasswordComponent.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ICredentials.html":{},"interfaces/IDevice.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IPatient.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"interfaces/IUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"injectables/NavigationService.html":{},"components/NotificationsComponent.html":{},"interfaces/NursingHome.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-9.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"miscellaneous/functions.html":{}}}],["protect",{"_index":124,"title":{},"body":{"directives/AppDropdownDirective.html":{},"modules/DashboardRoutingModule.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{}}}],["protractor",{"_index":2892,"title":{},"body":{"dependencies.html":{}}}],["provid",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/ErrorsModule.html":{},"classes/GenericValidator.html":{},"overview.html":{}}}],["providedin",{"_index":346,"title":{},"body":{"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"injectables/LayoutService.html":{},"injectables/LoaderService.html":{},"injectables/NavigationService.html":{},"injectables/NursingHomesService.html":{},"injectables/PatientsService.html":{},"injectables/RoutePartsService.html":{},"injectables/ThemeService.html":{},"injectables/UsersService.html":{}}}],["public",{"_index":127,"title":{},"body":{"directives/AppDropdownDirective.html":{},"injectables/AuthEffects.html":{},"components/BreadcrumbComponent.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"directives/EgretSideNavToggleDirective.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"classes/Signup.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"injectables/UsersEffects.html":{}}}],["publish",{"_index":1575,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["publishlayoutchang",{"_index":1738,"title":{},"body":{"injectables/LayoutService.html":{}}}],["publishlayoutchange(lc",{"_index":1579,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["publishnavigationchang",{"_index":1864,"title":{},"body":{"injectables/NavigationService.html":{}}}],["publishnavigationchange(menutyp",{"_index":1643,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["purpl",{"_index":1697,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["put(`${environment.apihost}/api/patients/${changed.id",{"_index":2314,"title":{},"body":{"injectables/PatientsService.html":{}}}],["put(`${environment.apihost}/api/users/${changed.id",{"_index":2870,"title":{},"body":{"injectables/UsersService.html":{}}}],["queri",{"_index":1585,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"miscellaneous/functions.html":{}}}],["r",{"_index":579,"title":{},"body":{"components/BreadcrumbComponent.html":{},"injectables/ThemeService.html":{}}}],["r.addclass(this.document.bodi",{"_index":1722,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["r.removeclass(this.document.bodi",{"_index":1720,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["rang",{"_index":1913,"title":{},"body":{"classes/NumberValidators.html":{}}}],["range(min",{"_index":1914,"title":{},"body":{"classes/NumberValidators.html":{}}}],["re",{"_index":2096,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["reactiv",{"_index":1460,"title":{},"body":{"classes/GenericValidator.html":{}}}],["reactiveformsmodul",{"_index":471,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/SharedModule.html":{}}}],["read",{"_index":2510,"title":{},"body":{"components/SignupComponent.html":{},"injectables/UsersEffects.html":{}}}],["readi",{"_index":2961,"title":{},"body":{"index.html":{}}}],["readonli",{"_index":589,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/FixTopbar.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"classes/Signup.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["readonly_cod",{"_index":1656,"title":{},"body":{"interfaces/IDevice.html":{}}}],["reboot",{"_index":1896,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["redirect",{"_index":395,"title":{},"body":{"injectables/AuthEffects.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["redirectto",{"_index":1077,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["redisplay",{"_index":2088,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["reduc",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthState.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"components/HeaderSideComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SigninComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/functions.html":{}}}],["reducer(st",{"_index":2525,"title":{},"body":{"interfaces/State.html":{},"interfaces/State-2.html":{},"miscellaneous/functions.html":{}}}],["refer",{"_index":771,"title":{},"body":{"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{}}}],["regist",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["registered_on",{"_index":2688,"title":{},"body":{"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{}}}],["registerlocaledata",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["registerlocaledata(d",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["rehydr",{"_index":2527,"title":{},"body":{"interfaces/State.html":{}}}],["reload",{"_index":2825,"title":{},"body":{"injectables/UsersEffects.html":{},"dependencies.html":{}}}],["remot",{"_index":3008,"title":{},"body":{"index.html":{}}}],["remov",{"_index":1640,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{},"index.html":{}}}],["removegroup",{"_index":132,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["removegroup(link",{"_index":149,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["render",{"_index":1502,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["renderer2",{"_index":1503,"title":{},"body":{"components/HeaderSideComponent.html":{},"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["replac",{"_index":2089,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{},"index.html":{}}}],["repo",{"_index":2944,"title":{},"body":{"index.html":{}}}],["report",{"_index":1346,"title":{},"body":{"components/ErrorComponent.html":{}}}],["repr",{"_index":772,"title":{},"body":{"components/ConfirmComponent.html":{}}}],["repres",{"_index":2931,"title":{},"body":{"index.html":{}}}],["requir",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"components/LockscreenComponent.html":{},"components/PatientEditFormComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{}}}],["requisit",{"_index":2936,"title":{},"body":{"index.html":{}}}],["reselect",{"_index":2897,"title":{},"body":{"dependencies.html":{}}}],["reset",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"modules/CoreModule.html":{},"classes/CreateNursingHome.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"modules/ErrorsModule.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"interfaces/State-10.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["resetnursinghomesst",{"_index":618,"title":{"classes/ResetNursingHomesState.html":{}},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["resetpatientsst",{"_index":653,"title":{"classes/ResetPatientsState.html":{}},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["resetusersst",{"_index":688,"title":{"classes/ResetUsersState.html":{}},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["resolveend",{"_index":933,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["resolvestart",{"_index":934,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["respons",{"_index":1436,"title":{},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{}}}],["response.statustext.tolowercas",{"_index":381,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["result",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interfaces/AuthState.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"modules/CoreModule.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"modules/ErrorsModule.html":{},"modules/ErrorsRoutingModule.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"components/ForgotPasswordComponent.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ICredentials.html":{},"interfaces/IDevice.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IPatient.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"interfaces/IUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"modules/MaterialModule.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"classes/NumberValidators.html":{},"interfaces/NursingHome.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"modules/SharedModule.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["retain",{"_index":1461,"title":{},"body":{"classes/GenericValidator.html":{},"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["retriev",{"_index":2051,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["return",{"_index":142,"title":{},"body":{"directives/AppDropdownDirective.html":{},"modules/AppModule.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"interfaces/AuthState.html":{},"components/BreadcrumbComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"components/DashboardLayoutComponent.html":{},"directives/DropdownLinkDirective.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"directives/FontSizeDirective.html":{},"components/ForgotPasswordComponent.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IRoutePart.html":{},"injectables/LayoutService.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"classes/NumberValidators.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/State.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/ThemeService.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{}}}],["right",{"_index":745,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["root",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"injectables/LayoutService.html":{},"injectables/LoaderService.html":{},"injectables/NavigationService.html":{},"injectables/NursingHomesService.html":{},"injectables/PatientsService.html":{},"injectables/RoutePartsService.html":{},"injectables/ThemeService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["root'},{'nam",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["rootrout",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["rout",{"_index":946,"title":{"routes.html":{}},"body":{"components/DashboardLayoutComponent.html":{},"modules/DashboardRoutingModule.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"components/NotificationsComponent.html":{},"overview.html":{},"routes.html":{}}}],["routechang",{"_index":1903,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["routechange.url",{"_index":952,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["routeconfigloadend",{"_index":935,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["routeconfigloadstart",{"_index":936,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["routepart",{"_index":532,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IRoutePart.html":{},"injectables/RoutePartsService.html":{}}}],["routeparts.concat(this.generaterouteparts(snapshot.firstchild",{"_index":1682,"title":{},"body":{"interfaces/IRoutePart.html":{},"injectables/RoutePartsService.html":{}}}],["routeparts.push",{"_index":1687,"title":{},"body":{"interfaces/IRoutePart.html":{},"injectables/RoutePartsService.html":{}}}],["routeparts[routeparts.length",{"_index":581,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["routepartsservic",{"_index":536,"title":{"injectables/RoutePartsService.html":{}},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IRoutePart.html":{},"injectables/RoutePartsService.html":{}}}],["router",{"_index":135,"title":{},"body":{"directives/AppDropdownDirective.html":{},"injectables/AuthEffects.html":{},"components/BreadcrumbComponent.html":{},"components/DashboardLayoutComponent.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"interfaces/IRoutePart.html":{},"injectables/NavigationService.html":{},"components/NotificationsComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/RoutePartsService.html":{},"interfaces/State.html":{},"injectables/UsersEffects.html":{}}}],["router.ev",{"_index":949,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["routereventsub",{"_index":533,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DashboardLayoutComponent.html":{}}}],["routermodul",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/ErrorsRoutingModule.html":{}}}],["routermodule.forchild(authrout",{"_index":485,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["routermodule.forchild(dashboardrout",{"_index":1080,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["routermodule.forchild(errorsrout",{"_index":1362,"title":{},"body":{"modules/ErrorsRoutingModule.html":{}}}],["routermodule.forroot(rootrout",{"_index":309,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["routeurl",{"_index":180,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["routeurl.split",{"_index":183,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["routing.modul",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/ErrorsModule.html":{}}}],["routing.module.t",{"_index":327,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/ErrorsRoutingModule.html":{}}}],["row?.device.serial_no",{"_index":2229,"title":{},"body":{"components/PatientListComponent.html":{}}}],["row?.firstnam",{"_index":2120,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/PatientListComponent.html":{},"components/UserEditFormComponent.html":{}}}],["row?.last_login_at",{"_index":2122,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["row?.lastnam",{"_index":2121,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/PatientListComponent.html":{},"components/UserEditFormComponent.html":{}}}],["row?.nursing_home.nam",{"_index":2735,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["row?.permiss",{"_index":2734,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["row?.users_count",{"_index":2230,"title":{},"body":{"components/PatientListComponent.html":{}}}],["rtl",{"_index":1564,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"interfaces/State-2.html":{}}}],["rtr",{"_index":728,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{}}}],["run",{"_index":2946,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":158,"title":{},"body":{"directives/AppDropdownDirective.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"components/DashboardLayoutComponent.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"injectables/LayoutService.html":{},"injectables/LoaderService.html":{},"injectables/NavigationService.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SigninComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":160,"title":{},"body":{"directives/AppDropdownDirective.html":{},"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/DashboardLayoutComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"components/PatientEditFormComponent.html":{},"components/PatientListComponent.html":{},"injectables/PatientsEffects.html":{},"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{},"injectables/UsersEffects.html":{}}}],["rückert",{"_index":2951,"title":{},"body":{"index.html":{}}}],["safari",{"_index":2344,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["same",{"_index":2985,"title":{},"body":{"index.html":{}}}],["save",{"_index":1955,"title":{},"body":{"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"interfaces/State.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["savedpati",{"_index":2276,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["savedus",{"_index":2818,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["savepatienterrormessag",{"_index":2127,"title":{},"body":{"components/PatientFormComponent.html":{}}}],["saveusererrormessag",{"_index":2736,"title":{},"body":{"components/UserFormComponent.html":{}}}],["scp",{"_index":3010,"title":{},"body":{"index.html":{}}}],["scp2",{"_index":3006,"title":{},"body":{"index.html":{}}}],["screen",{"_index":1596,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"components/LockscreenComponent.html":{}}}],["screensizewatch",{"_index":1307,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["script",{"_index":2966,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":2326,"title":{},"body":{"directives/ScrollToDirective.html":{},"components/SidebarTopComponent.html":{}}}],["scrollbar",{"_index":1013,"title":{},"body":{"modules/DashboardModule.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"dependencies.html":{}}}],["scrollconfig",{"_index":898,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["scrollto",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"directives/ScrollToDirective.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["scrolltodirect",{"_index":111,"title":{"directives/ScrollToDirective.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"directives/ScrollToDirective.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["scrolltotop",{"_index":904,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["scrolltotop(selector",{"_index":917,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["search",{"_index":613,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreateNursingHome.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"components/HeaderSideComponent.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"miscellaneous/enumerations.html":{}}}],["searchnursinghom",{"_index":612,"title":{"classes/SearchNursingHome.html":{}},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["searchnursinghomecomplet",{"_index":614,"title":{"classes/SearchNursingHomeComplete.html":{}},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["searchpati",{"_index":649,"title":{"classes/SearchPatient.html":{}},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["searchpatientcomplet",{"_index":650,"title":{"classes/SearchPatientComplete.html":{}},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["searchus",{"_index":684,"title":{"classes/SearchUser.html":{}},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["searchusercomplet",{"_index":685,"title":{"classes/SearchUserComplete.html":{}},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["section",{"_index":2233,"title":{},"body":{"components/PatientsComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["seen",{"_index":1815,"title":{},"body":{"components/LockscreenComponent.html":{}}}],["select",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreateNursingHome.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"components/DashboardLayoutComponent.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"components/HeaderSideComponent.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"components/SidebarSideComponent.html":{},"components/SigninComponent.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["select(fromauth.getaccesstoken",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["select(fromauth.geterror",{"_index":2473,"title":{},"body":{"components/SigninComponent.html":{}}}],["select(fromauth.getpend",{"_index":2480,"title":{},"body":{"components/SigninComponent.html":{}}}],["select(fromauth.isloggedin",{"_index":451,"title":{},"body":{"guards/AuthGuard.html":{}}}],["select(fromdashboard.getallnursinghom",{"_index":2143,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["select(fromdashboard.getallpati",{"_index":2211,"title":{},"body":{"components/PatientListComponent.html":{}}}],["select(fromdashboard.getallpatientus",{"_index":2049,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["select(fromdashboard.getallus",{"_index":2774,"title":{},"body":{"components/UserListComponent.html":{}}}],["select(fromdashboard.getalluserpati",{"_index":2702,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["select(fromdashboard.getloadpatientuserserror",{"_index":2035,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["select(fromdashboard.getloadpatientuserspend",{"_index":2037,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["select(fromdashboard.getloaduserpatientserror",{"_index":2700,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["select(fromdashboard.getloaduserpatientspend",{"_index":2701,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["select(fromdashboard.getnursinghomepageerror",{"_index":2145,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["select(fromdashboard.getnursinghomepagepend",{"_index":2142,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["select(fromdashboard.getpatientcreationerror",{"_index":2140,"title":{},"body":{"components/PatientFormComponent.html":{}}}],["select(fromdashboard.getpatientcreationpend",{"_index":2137,"title":{},"body":{"components/PatientFormComponent.html":{}}}],["select(fromdashboard.getpatientpageerror",{"_index":2204,"title":{},"body":{"components/PatientListComponent.html":{}}}],["select(fromdashboard.getpatientpagepend",{"_index":2207,"title":{},"body":{"components/PatientListComponent.html":{}}}],["select(fromdashboard.getselectedpati",{"_index":2062,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/PatientListComponent.html":{}}}],["select(fromdashboard.getselectedpatientid",{"_index":2239,"title":{},"body":{"components/PatientsComponent.html":{}}}],["select(fromdashboard.getselectedus",{"_index":2706,"title":{},"body":{"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{}}}],["select(fromdashboard.getselecteduserid",{"_index":2789,"title":{},"body":{"components/UsersComponent.html":{}}}],["select(fromdashboard.getusercreationerror",{"_index":2739,"title":{},"body":{"components/UserFormComponent.html":{}}}],["select(fromdashboard.getusercreationpend",{"_index":2738,"title":{},"body":{"components/UserFormComponent.html":{}}}],["select(fromdashboard.getuserpageerror",{"_index":2767,"title":{},"body":{"components/UserListComponent.html":{}}}],["select(fromdashboard.getuserpagepend",{"_index":2770,"title":{},"body":{"components/UserListComponent.html":{}}}],["selectal",{"_index":1154,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["selectauthst",{"_index":505,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-12.html":{}}}],["selectauthuserst",{"_index":507,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-12.html":{}}}],["selectauthviewsst",{"_index":509,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-12.html":{}}}],["selected[0",{"_index":2227,"title":{},"body":{"components/PatientListComponent.html":{},"components/UserListComponent.html":{}}}],["selectednursinghomeid",{"_index":2595,"title":{},"body":{"interfaces/State-4.html":{}}}],["selectedpati",{"_index":2186,"title":{},"body":{"components/PatientListComponent.html":{}}}],["selectedpatientid",{"_index":2235,"title":{},"body":{"components/PatientsComponent.html":{},"interfaces/State-7.html":{}}}],["selectedus",{"_index":2749,"title":{},"body":{"components/UserListComponent.html":{}}}],["selecteduserid",{"_index":2531,"title":{},"body":{"interfaces/State-10.html":{},"components/UsersComponent.html":{}}}],["selectent",{"_index":1152,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["selectid",{"_index":1150,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{}}}],["selectiontyp",{"_index":2197,"title":{},"body":{"components/PatientListComponent.html":{},"components/UserListComponent.html":{}}}],["selectnursinghom",{"_index":599,"title":{"classes/SelectNursingHome.html":{}},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"interfaces/DashboardState.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"directives/FontSizeDirective.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"directives/ScrollToDirective.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/State-1.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["selectpati",{"_index":643,"title":{"classes/SelectPatient.html":{}},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"components/PatientListComponent.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectpatient(pati",{"_index":2201,"title":{},"body":{"components/PatientListComponent.html":{}}}],["selecttot",{"_index":1156,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["selectus",{"_index":678,"title":{"classes/SelectUser.html":{}},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{},"components/UserListComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectuser(us",{"_index":2756,"title":{},"body":{"components/UserListComponent.html":{}}}],["self",{"_index":1321,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["self.ismobil",{"_index":1328,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["self.pageyoffset",{"_index":2345,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["self.sidenav.mod",{"_index":1329,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["self.sidenav.open",{"_index":1327,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["send",{"_index":1972,"title":{},"body":{"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["separ",{"_index":1618,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{},"components/SidebarTopComponent.html":{}}}],["ser",{"_index":588,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreateNursingHome.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{}}}],["serial_no",{"_index":1657,"title":{},"body":{"interfaces/IDevice.html":{}}}],["serv",{"_index":2968,"title":{},"body":{"index.html":{}}}],["server",{"_index":1344,"title":{},"body":{"components/ErrorComponent.html":{},"components/NotificationsComponent.html":{},"index.html":{}}}],["servic",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"modules/CoreModule.html":{},"classes/GenericValidator.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"injectables/LoaderService.html":{},"injectables/PatientsService.html":{},"components/SignupComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["services/auth",{"_index":433,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["services/nurs",{"_index":1995,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["services/patients.servic",{"_index":2293,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["services/users.servic",{"_index":2846,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["set",{"_index":722,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"directives/DropdownLinkDirective.html":{},"classes/FixTopbar.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/ITheme.html":{},"injectables/LayoutService.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"injectables/NavigationService.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"components/SidebarSideComponent.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"miscellaneous/enumerations.html":{}}}],["setapplayout",{"_index":1573,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["setdirectionltr",{"_index":725,"title":{"classes/SetDirectionLtr.html":{}},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["setdirectionrtr",{"_index":727,"title":{"classes/SetDirectionRtr.html":{}},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["setlang",{"_index":1496,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["setlang(ev",{"_index":1512,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["setlayoutfromqueri",{"_index":1586,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["setnavigationpositionsid",{"_index":721,"title":{"classes/SetNavigationPositionSide.html":{}},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["setnavigationpositiontop",{"_index":723,"title":{"classes/SetNavigationPositionTop.html":{}},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["setopen(valu",{"_index":1277,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["setthemefromqueri",{"_index":1729,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["settimeout",{"_index":1326,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["settimeout('window.scrollto(0",{"_index":2378,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["settings_backup_restor",{"_index":1897,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["setup",{"_index":2925,"title":{},"body":{"index.html":{}}}],["sever",{"_index":1149,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["share",{"_index":807,"title":{},"body":{"modules/CoreModule.html":{}}}],["shared/gener",{"_index":2044,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["shared/numb",{"_index":2045,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["shared/shared.modul",{"_index":1034,"title":{},"body":{"modules/DashboardModule.html":{}}}],["sharedmodul",{"_index":1009,"title":{"modules/SharedModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["shop",{"_index":1571,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["show",{"_index":428,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["shown",{"_index":2265,"title":{},"body":{"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["side",{"_index":708,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"directives/EgretSideNavToggleDirective.html":{},"classes/FixTopbar.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"components/SidebarSideComponent.html":{},"interfaces/State-2.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{}}}],["side'},{'nam",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["side.compon",{"_index":1019,"title":{},"body":{"modules/DashboardModule.html":{}}}],["side.component.html",{"_index":2406,"title":{},"body":{"components/SidebarSideComponent.html":{}}}],["side.component.t",{"_index":1489,"title":{},"body":{"components/HeaderSideComponent.html":{},"components/SidebarSideComponent.html":{}}}],["side.component.ts:18",{"_index":1506,"title":{},"body":{"components/HeaderSideComponent.html":{},"components/SidebarSideComponent.html":{}}}],["side.component.ts:19",{"_index":1522,"title":{},"body":{"components/HeaderSideComponent.html":{},"components/SidebarSideComponent.html":{}}}],["side.component.ts:20",{"_index":2415,"title":{},"body":{"components/SidebarSideComponent.html":{}}}],["side.component.ts:21",{"_index":1521,"title":{},"body":{"components/HeaderSideComponent.html":{},"components/SidebarSideComponent.html":{}}}],["side.component.ts:22",{"_index":2410,"title":{},"body":{"components/SidebarSideComponent.html":{}}}],["side.component.ts:28",{"_index":1523,"title":{},"body":{"components/HeaderSideComponent.html":{},"components/SidebarSideComponent.html":{}}}],["side.component.ts:29",{"_index":1504,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["side.component.ts:32",{"_index":2413,"title":{},"body":{"components/SidebarSideComponent.html":{}}}],["side.component.ts:36",{"_index":1524,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["side.component.ts:41",{"_index":1510,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["side.component.ts:45",{"_index":2411,"title":{},"body":{"components/SidebarSideComponent.html":{}}}],["side.component.ts:52",{"_index":1513,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["side.component.ts:56",{"_index":2414,"title":{},"body":{"components/SidebarSideComponent.html":{}}}],["side.component.ts:58",{"_index":1508,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["side.component.ts:60",{"_index":2412,"title":{},"body":{"components/SidebarSideComponent.html":{}}}],["side.component.ts:62",{"_index":1515,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["side.component.ts:66",{"_index":1516,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["side.component.ts:75",{"_index":1514,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["side.component.ts:93",{"_index":1511,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["side.template.html",{"_index":1490,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["side/head",{"_index":1018,"title":{},"body":{"modules/DashboardModule.html":{},"components/HeaderSideComponent.html":{}}}],["side/sidebar",{"_index":1021,"title":{},"body":{"modules/DashboardModule.html":{},"components/SidebarSideComponent.html":{}}}],["sidebar",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["sidebarp",{"_index":941,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["sidebarsidecompon",{"_index":85,"title":{"components/SidebarSideComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["sidebarstyl",{"_index":899,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["sidebarstyle:str",{"_index":1531,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["sidebartopcompon",{"_index":87,"title":{"components/SidebarTopComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["sidenav",{"_index":945,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"directives/EgretSideNavToggleDirective.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{},"components/SidenavComponent.html":{}}}],["sidenav'},{'nam",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["sidenav.template.html",{"_index":2448,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenavcompon",{"_index":89,"title":{"components/SidenavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["sidenavstyl",{"_index":958,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"components/HeaderSideComponent.html":{},"interfaces/State-2.html":{}}}],["sign",{"_index":1424,"title":{},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SignupComponent.html":{},"miscellaneous/enumerations.html":{}}}],["signin",{"_index":2467,"title":{},"body":{"components/SigninComponent.html":{}}}],["signin'},{'nam",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["signin.component.html",{"_index":2468,"title":{},"body":{"components/SigninComponent.html":{}}}],["signincompon",{"_index":91,"title":{"components/SigninComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["signindata",{"_index":2485,"title":{},"body":{"components/SigninComponent.html":{}}}],["signinform",{"_index":2469,"title":{},"body":{"components/SigninComponent.html":{}}}],["signup",{"_index":1393,"title":{"classes/Signup.html":{}},"body":{"classes/ForgotPassword.html":{},"classes/Login.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["signup'},{'nam",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["signup.component.html",{"_index":2494,"title":{},"body":{"components/SignupComponent.html":{}}}],["signupcompon",{"_index":93,"title":{"components/SignupComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["signupfailur",{"_index":1433,"title":{"classes/SignUpFailure.html":{}},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["signupform",{"_index":2495,"title":{},"body":{"components/SignupComponent.html":{}}}],["signupsuccess",{"_index":1432,"title":{"classes/SignUpSuccess.html":{}},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["simpl",{"_index":735,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-2.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{}}}],["singl",{"_index":2198,"title":{},"body":{"components/PatientListComponent.html":{},"components/UserListComponent.html":{}}}],["situat",{"_index":1594,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["size",{"_index":1368,"title":{},"body":{"directives/FontSizeDirective.html":{}}}],["size.direct",{"_index":1064,"title":{},"body":{"modules/DashboardModule.html":{}}}],["size.directive.t",{"_index":1366,"title":{},"body":{"directives/FontSizeDirective.html":{}}}],["size.directive.ts:12",{"_index":1374,"title":{},"body":{"directives/FontSizeDirective.html":{}}}],["size.directive.ts:8",{"_index":1373,"title":{},"body":{"directives/FontSizeDirective.html":{}}}],["size.directive.ts:9",{"_index":1376,"title":{},"body":{"directives/FontSizeDirective.html":{}}}],["skipwhenexpir",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["sm",{"_index":1337,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["smoothscrol",{"_index":2364,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["snack",{"_index":2189,"title":{},"body":{"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["snackbar",{"_index":358,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["snackbardismiss.dismissedbyact",{"_index":411,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["snackbarref",{"_index":405,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["snackbarref.afterdismissed().subscribe(snackbardismiss",{"_index":410,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["snapshot",{"_index":1680,"title":{},"body":{"interfaces/IRoutePart.html":{},"injectables/RoutePartsService.html":{}}}],["snapshot.data['breadcrumb",{"_index":1688,"title":{},"body":{"interfaces/IRoutePart.html":{},"injectables/RoutePartsService.html":{}}}],["snapshot.data['titl",{"_index":1683,"title":{},"body":{"interfaces/IRoutePart.html":{},"injectables/RoutePartsService.html":{}}}],["snapshot.firstchild",{"_index":1681,"title":{},"body":{"interfaces/IRoutePart.html":{},"injectables/RoutePartsService.html":{}}}],["snapshot.param",{"_index":1690,"title":{},"body":{"interfaces/IRoutePart.html":{},"injectables/RoutePartsService.html":{}}}],["snapshot.url",{"_index":1686,"title":{},"body":{"interfaces/IRoutePart.html":{},"injectables/RoutePartsService.html":{}}}],["snapshot.url.length",{"_index":1684,"title":{},"body":{"interfaces/IRoutePart.html":{},"injectables/RoutePartsService.html":{}}}],["snapshot.url[0].path",{"_index":1689,"title":{},"body":{"interfaces/IRoutePart.html":{},"injectables/RoutePartsService.html":{}}}],["someth",{"_index":3021,"title":{},"body":{"index.html":{}}}],["sortcompar",{"_index":2538,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interfaces/AuthState.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"modules/CoreModule.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"modules/ErrorsModule.html":{},"modules/ErrorsRoutingModule.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"components/ForgotPasswordComponent.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ICredentials.html":{},"interfaces/IDevice.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IPatient.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"interfaces/IUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"modules/MaterialModule.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"classes/NumberValidators.html":{},"interfaces/NursingHome.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"modules/SharedModule.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{}}}],["speed",{"_index":2372,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["split",{"_index":1048,"title":{},"body":{"modules/DashboardModule.html":{},"dependencies.html":{}}}],["splitpanemodul",{"_index":1046,"title":{},"body":{"modules/DashboardModule.html":{}}}],["src/.../app.module.t",{"_index":2911,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../auth",{"_index":2904,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../auth.actions.t",{"_index":2903,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../auth.reducer.t",{"_index":2918,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../index.t",{"_index":2913,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../layout.actions.t",{"_index":2905,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../layout.reducer.t",{"_index":2914,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../nurs",{"_index":2906,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../patient",{"_index":2908,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../patients.actions.t",{"_index":2907,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../patients.reducer.t",{"_index":2916,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../url.helper.t",{"_index":2912,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user",{"_index":2910,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../users.actions.t",{"_index":2909,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../users.reducer.t",{"_index":2917,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../views.reducer.t",{"_index":2915,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":326,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.module.t",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["src/app/auth/actions/auth",{"_index":1385,"title":{},"body":{"classes/ForgotPassword.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"classes/Signup.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/auth/actions/auth.actions.t",{"_index":1826,"title":{},"body":{"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/auth/actions/auth.actions.ts:13",{"_index":1828,"title":{},"body":{"classes/Logout.html":{}}}],["src/app/auth/actions/auth.actions.ts:20",{"_index":1836,"title":{},"body":{"classes/LogoutConfirmation.html":{}}}],["src/app/auth/actions/auth.actions.ts:27",{"_index":1837,"title":{},"body":{"classes/LogoutConfirmationDismiss.html":{}}}],["src/app/auth/auth",{"_index":482,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/auth/auth.module.t",{"_index":462,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/components/forgot",{"_index":1400,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["src/app/auth/components/lockscreen/lockscreen.component.t",{"_index":1799,"title":{},"body":{"components/LockscreenComponent.html":{}}}],["src/app/auth/components/lockscreen/lockscreen.component.ts:12",{"_index":1809,"title":{},"body":{"components/LockscreenComponent.html":{}}}],["src/app/auth/components/lockscreen/lockscreen.component.ts:13",{"_index":1810,"title":{},"body":{"components/LockscreenComponent.html":{}}}],["src/app/auth/components/lockscreen/lockscreen.component.ts:15",{"_index":1808,"title":{},"body":{"components/LockscreenComponent.html":{}}}],["src/app/auth/components/lockscreen/lockscreen.component.ts:17",{"_index":1805,"title":{},"body":{"components/LockscreenComponent.html":{}}}],["src/app/auth/components/lockscreen/lockscreen.component.ts:21",{"_index":1806,"title":{},"body":{"components/LockscreenComponent.html":{}}}],["src/app/auth/components/lockscreen/lockscreen.component.ts:27",{"_index":1807,"title":{},"body":{"components/LockscreenComponent.html":{}}}],["src/app/auth/components/signin/signin.component.t",{"_index":2466,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/auth/components/signin/signin.component.ts:16",{"_index":2475,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/auth/components/signin/signin.component.ts:17",{"_index":2477,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/auth/components/signin/signin.component.ts:19",{"_index":2476,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/auth/components/signin/signin.component.ts:22",{"_index":2474,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/auth/components/signin/signin.component.ts:24",{"_index":2470,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/auth/components/signin/signin.component.ts:30",{"_index":2471,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/auth/components/signin/signin.component.ts:53",{"_index":2472,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/auth/components/signup/signup.component.t",{"_index":2493,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/components/signup/signup.component.ts:13",{"_index":2502,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/components/signup/signup.component.ts:14",{"_index":2503,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/components/signup/signup.component.ts:16",{"_index":2496,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/components/signup/signup.component.ts:27",{"_index":2497,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/components/signup/signup.component.ts:48",{"_index":2501,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/containers/auth",{"_index":454,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["src/app/auth/effects/auth.effects.t",{"_index":351,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/auth/effects/auth.effects.ts:120",{"_index":427,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/auth/effects/auth.effects.ts:132",{"_index":365,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/auth/effects/auth.effects.ts:150",{"_index":430,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/auth/effects/auth.effects.ts:29",{"_index":385,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/auth/effects/auth.effects.ts:53",{"_index":398,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/auth/effects/auth.effects.ts:68",{"_index":394,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/auth/effects/auth.effects.ts:85",{"_index":416,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/auth/guards/auth.guard.t",{"_index":443,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/guards/auth.guard.ts:16",{"_index":448,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/guards/auth.guard.ts:19",{"_index":449,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/models/user.interface.t",{"_index":1645,"title":{},"body":{"interfaces/ICredentials.html":{},"interfaces/IUser.html":{}}}],["src/app/auth/reducers/auth.reducer.t",{"_index":2558,"title":{},"body":{"interfaces/State-11.html":{},"miscellaneous/functions.html":{}}}],["src/app/auth/reducers/index.t",{"_index":488,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-12.html":{}}}],["src/app/auth/reducers/views.reducer.t",{"_index":2565,"title":{},"body":{"interfaces/State-13.html":{},"miscellaneous/functions.html":{}}}],["src/app/auth/services/auth",{"_index":331,"title":{},"body":{"injectables/AuthApiService.html":{}}}],["src/app/core/components/confirm/confirm.component.t",{"_index":758,"title":{},"body":{"components/ConfirmComponent.html":{}}}],["src/app/core/components/confirm/confirm.component.ts:19",{"_index":765,"title":{},"body":{"components/ConfirmComponent.html":{}}}],["src/app/core/components/confirm/confirm.component.ts:21",{"_index":768,"title":{},"body":{"components/ConfirmComponent.html":{}}}],["src/app/core/components/confirm/confirm.component.ts:22",{"_index":767,"title":{},"body":{"components/ConfirmComponent.html":{}}}],["src/app/core/components/confirm/confirm.component.ts:23",{"_index":769,"title":{},"body":{"components/ConfirmComponent.html":{}}}],["src/app/core/components/loader/loader.component.t",{"_index":1765,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/core/components/loader/loader.component.ts:10",{"_index":1772,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/core/components/loader/loader.component.ts:11",{"_index":1769,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/core/components/loader/loader.component.ts:13",{"_index":1771,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/core/components/loader/loader.component.ts:16",{"_index":1770,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/core/containers/app/app.component.t",{"_index":7,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/core/containers/app/app.component.ts:14",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/core/core.module.t",{"_index":806,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/directives/dropdown",{"_index":1248,"title":{},"body":{"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{}}}],["src/app/core/directives/dropdown.directive.t",{"_index":116,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["src/app/core/directives/dropdown.directive.ts:15",{"_index":154,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["src/app/core/directives/dropdown.directive.ts:17",{"_index":152,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["src/app/core/directives/dropdown.directive.ts:19",{"_index":145,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["src/app/core/directives/dropdown.directive.ts:27",{"_index":140,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["src/app/core/directives/dropdown.directive.ts:31",{"_index":150,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["src/app/core/directives/dropdown.directive.ts:38",{"_index":147,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["src/app/core/directives/dropdown.directive.ts:42",{"_index":148,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["src/app/core/directives/dropdown.directive.ts:55",{"_index":136,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["src/app/core/directives/egret",{"_index":1304,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["src/app/core/directives/font",{"_index":1365,"title":{},"body":{"directives/FontSizeDirective.html":{}}}],["src/app/core/directives/scrol",{"_index":2324,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["src/app/core/helpers/url.helper.t",{"_index":2919,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/core/services/confirm.service.t",{"_index":781,"title":{},"body":{"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{}}}],["src/app/core/services/confirm.service.ts:25",{"_index":799,"title":{},"body":{"injectables/ConfirmService.html":{}}}],["src/app/core/services/confirm.service.ts:47",{"_index":800,"title":{},"body":{"injectables/ConfirmService.html":{}}}],["src/app/core/services/layout.service.t",{"_index":1555,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:107",{"_index":1740,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:131",{"_index":1741,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:40",{"_index":1747,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:41",{"_index":1749,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:42",{"_index":1748,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:43",{"_index":1746,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:44",{"_index":1745,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:45",{"_index":1739,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:57",{"_index":1743,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:74",{"_index":1742,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:94",{"_index":1744,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/loader.service.t",{"_index":1778,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/core/services/loader.service.ts:16",{"_index":1780,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/core/services/loader.service.ts:34",{"_index":1784,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/core/services/loader.service.ts:46",{"_index":1781,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/core/services/navigation.service.t",{"_index":1612,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["src/app/core/services/navigation.service.ts:31",{"_index":1865,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/services/navigation.service.ts:35",{"_index":1868,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/services/navigation.service.ts:61",{"_index":1869,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/services/navigation.service.ts:63",{"_index":1870,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/services/navigation.service.ts:65",{"_index":1871,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/services/navigation.service.ts:71",{"_index":1866,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/services/rout",{"_index":1675,"title":{},"body":{"interfaces/IRoutePart.html":{},"injectables/RoutePartsService.html":{}}}],["src/app/core/services/theme.service.t",{"_index":1692,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["src/app/core/services/theme.service.ts:15",{"_index":2679,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/services/theme.service.ts:32",{"_index":2674,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/services/theme.service.ts:40",{"_index":2675,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/services/theme.service.ts:57",{"_index":2676,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/services/theme.service.ts:63",{"_index":2677,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/services/theme.service.ts:74",{"_index":2678,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/dashboard/actions/layout.actions.t",{"_index":706,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:106",{"_index":1841,"title":{},"body":{"classes/MakeBreadcrumbSimple.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:107",{"_index":1842,"title":{},"body":{"classes/MakeBreadcrumbSimple.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:115",{"_index":1843,"title":{},"body":{"classes/MakeBreadcrumbTitle.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:116",{"_index":1844,"title":{},"body":{"classes/MakeBreadcrumbTitle.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:124",{"_index":1363,"title":{},"body":{"classes/FixTopbar.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:125",{"_index":1364,"title":{},"body":{"classes/FixTopbar.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:25",{"_index":2010,"title":{},"body":{"classes/OpenSideNav.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:26",{"_index":2011,"title":{},"body":{"classes/OpenSideNav.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:34",{"_index":711,"title":{},"body":{"classes/CloseSideNav.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:35",{"_index":712,"title":{},"body":{"classes/CloseSideNav.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:43",{"_index":756,"title":{},"body":{"classes/CompactSideNav.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:44",{"_index":757,"title":{},"body":{"classes/CompactSideNav.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:52",{"_index":2401,"title":{},"body":{"classes/SetNavigationPositionSide.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:53",{"_index":2402,"title":{},"body":{"classes/SetNavigationPositionSide.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:61",{"_index":2403,"title":{},"body":{"classes/SetNavigationPositionTop.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:62",{"_index":2404,"title":{},"body":{"classes/SetNavigationPositionTop.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:70",{"_index":2397,"title":{},"body":{"classes/SetDirectionLtr.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:71",{"_index":2398,"title":{},"body":{"classes/SetDirectionLtr.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:79",{"_index":2399,"title":{},"body":{"classes/SetDirectionRtr.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:80",{"_index":2400,"title":{},"body":{"classes/SetDirectionRtr.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:88",{"_index":2680,"title":{},"body":{"classes/TransitioningLayout.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:89",{"_index":2681,"title":{},"body":{"classes/TransitioningLayout.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:97",{"_index":2682,"title":{},"body":{"classes/UseBreadcrumb.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:98",{"_index":2683,"title":{},"body":{"classes/UseBreadcrumb.html":{}}}],["src/app/dashboard/actions/nurs",{"_index":585,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/dashboard/actions/pati",{"_index":839,"title":{},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/dashboard/actions/patients.actions.t",{"_index":637,"title":{},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:100",{"_index":1297,"title":{},"body":{"classes/EditPatient.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:108",{"_index":1243,"title":{},"body":{"classes/DismissEditPatient.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:115",{"_index":2318,"title":{},"body":{"classes/ResetPatientsState.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:122",{"_index":1238,"title":{},"body":{"classes/DeletePatient.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:124",{"_index":1239,"title":{},"body":{"classes/DeletePatient.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:132",{"_index":1755,"title":{},"body":{"classes/LoadPatientUsers.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:133",{"_index":1756,"title":{},"body":{"classes/LoadPatientUsers.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:27",{"_index":2393,"title":{},"body":{"classes/SelectPatient.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:29",{"_index":2394,"title":{},"body":{"classes/SelectPatient.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:36",{"_index":639,"title":{},"body":{"classes/ClearSelectedPatient.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:43",{"_index":1735,"title":{},"body":{"classes/InitializePatient.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:50",{"_index":861,"title":{},"body":{"classes/CreatePatientFormDialog.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:57",{"_index":836,"title":{},"body":{"classes/CreatePatient.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:59",{"_index":837,"title":{},"body":{"classes/CreatePatient.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:66",{"_index":1245,"title":{},"body":{"classes/DismissPatientFormDialog.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:73",{"_index":1757,"title":{},"body":{"classes/LoadPatients.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:80",{"_index":2383,"title":{},"body":{"classes/SearchPatient.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:82",{"_index":2384,"title":{},"body":{"classes/SearchPatient.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:89",{"_index":2385,"title":{},"body":{"classes/SearchPatientComplete.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:91",{"_index":2386,"title":{},"body":{"classes/SearchPatientComplete.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:98",{"_index":1296,"title":{},"body":{"classes/EditPatient.html":{}}}],["src/app/dashboard/actions/us",{"_index":867,"title":{},"body":{"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/dashboard/actions/users.actions.t",{"_index":673,"title":{},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/dashboard/actions/users.actions.ts:100",{"_index":1303,"title":{},"body":{"classes/EditUser.html":{}}}],["src/app/dashboard/actions/users.actions.ts:108",{"_index":1244,"title":{},"body":{"classes/DismissEditUser.html":{}}}],["src/app/dashboard/actions/users.actions.ts:115",{"_index":2319,"title":{},"body":{"classes/ResetUsersState.html":{}}}],["src/app/dashboard/actions/users.actions.ts:122",{"_index":1240,"title":{},"body":{"classes/DeleteUser.html":{}}}],["src/app/dashboard/actions/users.actions.ts:124",{"_index":1241,"title":{},"body":{"classes/DeleteUser.html":{}}}],["src/app/dashboard/actions/users.actions.ts:132",{"_index":1762,"title":{},"body":{"classes/LoadUserPatients.html":{}}}],["src/app/dashboard/actions/users.actions.ts:133",{"_index":1763,"title":{},"body":{"classes/LoadUserPatients.html":{}}}],["src/app/dashboard/actions/users.actions.ts:27",{"_index":2395,"title":{},"body":{"classes/SelectUser.html":{}}}],["src/app/dashboard/actions/users.actions.ts:29",{"_index":2396,"title":{},"body":{"classes/SelectUser.html":{}}}],["src/app/dashboard/actions/users.actions.ts:36",{"_index":675,"title":{},"body":{"classes/ClearSelectedUser.html":{}}}],["src/app/dashboard/actions/users.actions.ts:43",{"_index":1736,"title":{},"body":{"classes/InitializeUser.html":{}}}],["src/app/dashboard/actions/users.actions.ts:50",{"_index":885,"title":{},"body":{"classes/CreateUserFormDialog.html":{}}}],["src/app/dashboard/actions/users.actions.ts:57",{"_index":864,"title":{},"body":{"classes/CreateUser.html":{}}}],["src/app/dashboard/actions/users.actions.ts:59",{"_index":865,"title":{},"body":{"classes/CreateUser.html":{}}}],["src/app/dashboard/actions/users.actions.ts:66",{"_index":1247,"title":{},"body":{"classes/DismissUserFormDialog.html":{}}}],["src/app/dashboard/actions/users.actions.ts:73",{"_index":1764,"title":{},"body":{"classes/LoadUsers.html":{}}}],["src/app/dashboard/actions/users.actions.ts:80",{"_index":2387,"title":{},"body":{"classes/SearchUser.html":{}}}],["src/app/dashboard/actions/users.actions.ts:82",{"_index":2388,"title":{},"body":{"classes/SearchUser.html":{}}}],["src/app/dashboard/actions/users.actions.ts:89",{"_index":2389,"title":{},"body":{"classes/SearchUserComplete.html":{}}}],["src/app/dashboard/actions/users.actions.ts:91",{"_index":2390,"title":{},"body":{"classes/SearchUserComplete.html":{}}}],["src/app/dashboard/actions/users.actions.ts:98",{"_index":1302,"title":{},"body":{"classes/EditUser.html":{}}}],["src/app/dashboard/components/blank/blank.component.t",{"_index":524,"title":{},"body":{"components/BlankComponent.html":{}}}],["src/app/dashboard/components/nurs",{"_index":1921,"title":{},"body":{"components/NursingHomeFormComponent.html":{}}}],["src/app/dashboard/components/patients/pati",{"_index":2012,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{}}}],["src/app/dashboard/components/patients/patients.component.t",{"_index":2231,"title":{},"body":{"components/PatientsComponent.html":{}}}],["src/app/dashboard/components/patients/patients.component.ts:21",{"_index":2240,"title":{},"body":{"components/PatientsComponent.html":{}}}],["src/app/dashboard/components/patients/patients.component.ts:23",{"_index":2237,"title":{},"body":{"components/PatientsComponent.html":{}}}],["src/app/dashboard/components/patients/patients.component.ts:38",{"_index":2238,"title":{},"body":{"components/PatientsComponent.html":{}}}],["src/app/dashboard/components/users/us",{"_index":2691,"title":{},"body":{"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{}}}],["src/app/dashboard/components/users/users.component.t",{"_index":2785,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/dashboard/components/users/users.component.ts:21",{"_index":2790,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/dashboard/components/users/users.component.ts:23",{"_index":2787,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/dashboard/components/users/users.component.ts:38",{"_index":2788,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/dashboard/containers/dashboard",{"_index":886,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["src/app/dashboard/containers/layout",{"_index":526,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/HeaderSideComponent.html":{},"components/NotificationsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{}}}],["src/app/dashboard/dashboard",{"_index":1072,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["src/app/dashboard/dashboard.module.t",{"_index":1010,"title":{},"body":{"modules/DashboardModule.html":{}}}],["src/app/dashboard/effects/nurs",{"_index":1956,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["src/app/dashboard/effects/patients.effects.t",{"_index":2247,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["src/app/dashboard/effects/patients.effects.ts:107",{"_index":2289,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["src/app/dashboard/effects/patients.effects.ts:151",{"_index":2291,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["src/app/dashboard/effects/patients.effects.ts:173",{"_index":2268,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["src/app/dashboard/effects/patients.effects.ts:179",{"_index":2250,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["src/app/dashboard/effects/patients.effects.ts:195",{"_index":2292,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["src/app/dashboard/effects/patients.effects.ts:25",{"_index":2259,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["src/app/dashboard/effects/patients.effects.ts:52",{"_index":2280,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["src/app/dashboard/effects/patients.effects.ts:94",{"_index":2262,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["src/app/dashboard/effects/users.effects.t",{"_index":2795,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["src/app/dashboard/effects/users.effects.ts:111",{"_index":2824,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["src/app/dashboard/effects/users.effects.ts:123",{"_index":2842,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["src/app/dashboard/effects/users.effects.ts:162",{"_index":2836,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["src/app/dashboard/effects/users.effects.ts:215",{"_index":2844,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["src/app/dashboard/effects/users.effects.ts:237",{"_index":2812,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["src/app/dashboard/effects/users.effects.ts:243",{"_index":2798,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["src/app/dashboard/effects/users.effects.ts:259",{"_index":2845,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["src/app/dashboard/effects/users.effects.ts:27",{"_index":2806,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["src/app/dashboard/effects/users.effects.ts:54",{"_index":2822,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["src/app/dashboard/effects/users.effects.ts:96",{"_index":2809,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["src/app/dashboard/models/device.model.t",{"_index":1651,"title":{},"body":{"interfaces/IDevice.html":{}}}],["src/app/dashboard/models/nurs",{"_index":1919,"title":{},"body":{"interfaces/NursingHome.html":{},"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["src/app/dashboard/models/patient.model",{"_index":2705,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["src/app/dashboard/models/patient.model.t",{"_index":1659,"title":{},"body":{"interfaces/IPatient.html":{}}}],["src/app/dashboard/models/user.model.t",{"_index":2684,"title":{},"body":{"interfaces/User.html":{}}}],["src/app/dashboard/reducers/index.t",{"_index":1082,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["src/app/dashboard/reducers/layout.reducer.t",{"_index":2572,"title":{},"body":{"interfaces/State-2.html":{},"miscellaneous/functions.html":{}}}],["src/app/dashboard/reducers/nurs",{"_index":2581,"title":{},"body":{"interfaces/State-3.html":{},"interfaces/State-4.html":{},"miscellaneous/functions.html":{}}}],["src/app/dashboard/reducers/pati",{"_index":2605,"title":{},"body":{"interfaces/State-5.html":{},"interfaces/State-6.html":{},"miscellaneous/functions.html":{}}}],["src/app/dashboard/reducers/patients.reducer.t",{"_index":2638,"title":{},"body":{"interfaces/State-7.html":{},"miscellaneous/functions.html":{}}}],["src/app/dashboard/reducers/us",{"_index":2643,"title":{},"body":{"interfaces/State-8.html":{},"interfaces/State-9.html":{},"miscellaneous/functions.html":{}}}],["src/app/dashboard/reducers/users.reducer.t",{"_index":2529,"title":{},"body":{"interfaces/State-10.html":{},"miscellaneous/functions.html":{}}}],["src/app/dashboard/services/nurs",{"_index":1998,"title":{},"body":{"injectables/NursingHomesService.html":{}}}],["src/app/dashboard/services/patients.service.t",{"_index":2294,"title":{},"body":{"injectables/PatientsService.html":{}}}],["src/app/dashboard/services/patients.service.ts:18",{"_index":2298,"title":{},"body":{"injectables/PatientsService.html":{}}}],["src/app/dashboard/services/patients.service.ts:26",{"_index":2305,"title":{},"body":{"injectables/PatientsService.html":{}}}],["src/app/dashboard/services/patients.service.ts:35",{"_index":2300,"title":{},"body":{"injectables/PatientsService.html":{}}}],["src/app/dashboard/services/patients.service.ts:43",{"_index":2302,"title":{},"body":{"injectables/PatientsService.html":{}}}],["src/app/dashboard/services/patients.service.ts:51",{"_index":2307,"title":{},"body":{"injectables/PatientsService.html":{}}}],["src/app/dashboard/services/patients.service.ts:59",{"_index":2304,"title":{},"body":{"injectables/PatientsService.html":{}}}],["src/app/dashboard/services/users.service.t",{"_index":2847,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/dashboard/services/users.service.ts:19",{"_index":2850,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/dashboard/services/users.service.ts:27",{"_index":2860,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/dashboard/services/users.service.ts:35",{"_index":2858,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/dashboard/services/users.service.ts:43",{"_index":2852,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/dashboard/services/users.service.ts:51",{"_index":2854,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/dashboard/services/users.service.ts:59",{"_index":2862,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/dashboard/services/users.service.ts:68",{"_index":2856,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/dashboard/shared/gener",{"_index":1449,"title":{},"body":{"classes/GenericValidator.html":{}}}],["src/app/dashboard/shared/numb",{"_index":1911,"title":{},"body":{"classes/NumberValidators.html":{}}}],["src/app/dashboard/shared/shared.module.t",{"_index":2405,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/errors/components/error/error.component.t",{"_index":1338,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/errors/components/error/error.component.ts:12",{"_index":1341,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/errors/components/error/error.component.ts:7",{"_index":1340,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/errors/components/not",{"_index":1872,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["src/app/errors/containers/error",{"_index":1348,"title":{},"body":{"components/ErrorLayoutComponent.html":{}}}],["src/app/errors/error",{"_index":1359,"title":{},"body":{"modules/ErrorsRoutingModule.html":{}}}],["src/app/errors/errors.module.t",{"_index":1353,"title":{},"body":{"modules/ErrorsModule.html":{}}}],["src/app/material/material.module.t",{"_index":1845,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/reducers/index.t",{"_index":2514,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/functions.html":{}}}],["src/environments/environment.calvin.t",{"_index":2994,"title":{},"body":{"index.html":{}}}],["src/environments/environment.stage.t",{"_index":3022,"title":{},"body":{"index.html":{}}}],["src/environments/environment.t",{"_index":2993,"title":{},"body":{"index.html":{}}}],["stage",{"_index":3004,"title":{},"body":{"index.html":{}}}],["stage.j",{"_index":2975,"title":{},"body":{"index.html":{}}}],["standard",{"_index":2349,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["start",{"_index":417,"title":{"index.html":{}},"body":{"injectables/AuthEffects.html":{},"index.html":{}}}],["start:calvin",{"_index":2996,"title":{},"body":{"index.html":{}}}],["starti",{"_index":2366,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["startup",{"_index":1709,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["state",{"_index":501,"title":{"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{}},"body":{"interfaces/AuthState.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreateNursingHome.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"classes/GenericValidator.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"injectables/NavigationService.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["state.access_token",{"_index":518,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{}}}],["state.breadcrumb",{"_index":2579,"title":{},"body":{"interfaces/State-2.html":{}}}],["state.createpatienterror",{"_index":2629,"title":{},"body":{"interfaces/State-6.html":{}}}],["state.createpatientpend",{"_index":2631,"title":{},"body":{"interfaces/State-6.html":{}}}],["state.createusererror",{"_index":2662,"title":{},"body":{"interfaces/State-9.html":{}}}],["state.createuserpend",{"_index":2664,"title":{},"body":{"interfaces/State-9.html":{}}}],["state.direct",{"_index":2575,"title":{},"body":{"interfaces/State-2.html":{}}}],["state.editpatienterror",{"_index":2633,"title":{},"body":{"interfaces/State-6.html":{}}}],["state.editpatientpend",{"_index":2635,"title":{},"body":{"interfaces/State-6.html":{}}}],["state.editusererror",{"_index":2666,"title":{},"body":{"interfaces/State-9.html":{}}}],["state.edituserpend",{"_index":2668,"title":{},"body":{"interfaces/State-9.html":{}}}],["state.error",{"_index":2570,"title":{},"body":{"interfaces/State-13.html":{},"interfaces/State-3.html":{},"interfaces/State-6.html":{},"interfaces/State-9.html":{}}}],["state.ismobil",{"_index":2577,"title":{},"body":{"interfaces/State-2.html":{}}}],["state.layout",{"_index":1220,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["state.layoutintransit",{"_index":2576,"title":{},"body":{"interfaces/State-2.html":{}}}],["state.loadpatientuserserror",{"_index":2637,"title":{},"body":{"interfaces/State-6.html":{}}}],["state.loadpatientuserspend",{"_index":2636,"title":{},"body":{"interfaces/State-6.html":{}}}],["state.loaduserpatientserror",{"_index":2670,"title":{},"body":{"interfaces/State-9.html":{}}}],["state.loaduserpatientspend",{"_index":2669,"title":{},"body":{"interfaces/State-9.html":{}}}],["state.navigationpo",{"_index":2574,"title":{},"body":{"interfaces/State-2.html":{}}}],["state.nursinghom",{"_index":1176,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["state.nursinghomepag",{"_index":1170,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["state.pati",{"_index":1204,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["state.patientpag",{"_index":1186,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["state.patientus",{"_index":1214,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["state.pend",{"_index":2571,"title":{},"body":{"interfaces/State-13.html":{},"interfaces/State-3.html":{},"interfaces/State-6.html":{},"interfaces/State-9.html":{}}}],["state.selectednursinghomeid",{"_index":2603,"title":{},"body":{"interfaces/State-4.html":{}}}],["state.selectedpatientid",{"_index":2642,"title":{},"body":{"interfaces/State-7.html":{}}}],["state.selecteduserid",{"_index":2556,"title":{},"body":{"interfaces/State-10.html":{}}}],["state.sidenavstyl",{"_index":2573,"title":{},"body":{"interfaces/State-2.html":{}}}],["state.topbarfix",{"_index":2580,"title":{},"body":{"interfaces/State-2.html":{}}}],["state.us",{"_index":517,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/DashboardState.html":{},"interfaces/State-1.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{}}}],["state.usebreadcrumb",{"_index":2578,"title":{},"body":{"interfaces/State-2.html":{}}}],["state.userpag",{"_index":1126,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["state.userpati",{"_index":1164,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["state.userst",{"_index":508,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-12.html":{}}}],["state.view",{"_index":510,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-12.html":{}}}],["static",{"_index":1912,"title":{},"body":{"classes/NumberValidators.html":{}}}],["statu",{"_index":2214,"title":{},"body":{"components/PatientListComponent.html":{},"components/UserListComponent.html":{}}}],["step",{"_index":2373,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["stopi",{"_index":2368,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["store",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/DashboardLayoutComponent.html":{},"interfaces/DashboardState.html":{},"components/HeaderSideComponent.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"components/SidebarSideComponent.html":{},"components/SigninComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["store.pip",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["storedevtoolsmodul",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["storedevtoolsmodule.instru",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodul",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{}}}],["storemodule.forfeature('auth",{"_index":476,"title":{},"body":{"modules/AuthModule.html":{}}}],["storemodule.forfeature('dashboard",{"_index":1067,"title":{},"body":{"modules/DashboardModule.html":{}}}],["storemodule.forroot(reduc",{"_index":317,"title":{},"body":{"modules/AppModule.html":{}}}],["storerouterconnectingmodul",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["storerouterconnectingmodule.forroot",{"_index":318,"title":{},"body":{"modules/AppModule.html":{}}}],["string",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ICredentials.html":{},"interfaces/IDevice.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IPatient.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"interfaces/IUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"injectables/LoaderService.html":{},"classes/Login.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"injectables/NavigationService.html":{},"classes/NumberValidators.html":{},"interfaces/NursingHome.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"components/SidebarSideComponent.html":{},"components/SidenavComponent.html":{},"classes/Signup.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-6.html":{},"interfaces/State-9.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{}}}],["strip",{"_index":297,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["structur",{"_index":1473,"title":{},"body":{"classes/GenericValidator.html":{}}}],["stuctur",{"_index":1463,"title":{},"body":{"classes/GenericValidator.html":{}}}],["style",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/LoaderComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientListComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{}}}],["styleurl",{"_index":1766,"title":{},"body":{"components/LoaderComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientListComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{}}}],["sub",{"_index":1622,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["submit",{"_index":630,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreateNursingHome.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"components/ForgotPasswordComponent.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientFormComponent.html":{},"injectables/PatientsEffects.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserFormComponent.html":{},"injectables/UsersEffects.html":{}}}],["submitbutton",{"_index":1404,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LockscreenComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["submitemail",{"_index":1406,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["subscrib",{"_index":787,"title":{},"body":{"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"components/HeaderSideComponent.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{},"components/PatientEditFormComponent.html":{},"components/PatientListComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{}}}],["subscribe((id",{"_index":2218,"title":{},"body":{"components/PatientListComponent.html":{},"components/UserListComponent.html":{}}}],["subscribe((routechang",{"_index":556,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DashboardLayoutComponent.html":{}}}],["subscribe(pend",{"_index":2481,"title":{},"body":{"components/SigninComponent.html":{}}}],["subscribe(r",{"_index":2095,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["subscript",{"_index":151,"title":{},"body":{"directives/AppDropdownDirective.html":{},"components/BreadcrumbComponent.html":{},"components/DashboardLayoutComponent.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["succe",{"_index":2263,"title":{},"body":{"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["success",{"_index":399,"title":{},"body":{"injectables/AuthEffects.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"interfaces/State-10.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"miscellaneous/enumerations.html":{}}}],["such",{"_index":2106,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["suppli",{"_index":1641,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["support",{"_index":3023,"title":{},"body":{"modules.html":{}}}],["suppressscrollx",{"_index":992,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["sure",{"_index":163,"title":{},"body":{"directives/AppDropdownDirective.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"directives/EgretSideNavToggleDirective.html":{},"directives/FontSizeDirective.html":{},"directives/ScrollToDirective.html":{},"index.html":{}}}],["svg",{"_index":3024,"title":{},"body":{"modules.html":{}}}],["swimlane/ngx",{"_index":1044,"title":{},"body":{"modules/DashboardModule.html":{},"dependencies.html":{}}}],["switch",{"_index":2544,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{}}}],["t.isact",{"_index":1727,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["t.name",{"_index":1728,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["tab",{"_index":2071,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["tabl",{"_index":2766,"title":{},"body":{"components/UserListComponent.html":{}}}],["take",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"index.html":{}}}],["take(1",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{}}}],["takewhil",{"_index":2046,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/PatientListComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{}}}],["tap",{"_index":391,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["tasks/deploy",{"_index":2974,"title":{},"body":{"index.html":{}}}],["templat",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["templateurl",{"_index":530,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["term",{"_index":2511,"title":{},"body":{"components/SignupComponent.html":{}}}],["test",{"_index":2933,"title":{},"body":{"index.html":{}}}],["text",{"_index":1617,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["that'",{"_index":2959,"title":{},"body":{"index.html":{}}}],["theme",{"_index":1509,"title":{},"body":{"components/HeaderSideComponent.html":{},"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["theme.nam",{"_index":1723,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["themeservic",{"_index":900,"title":{"injectables/ThemeService.html":{}},"body":{"components/DashboardLayoutComponent.html":{},"components/HeaderSideComponent.html":{},"interfaces/ITheme.html":{},"components/SidebarSideComponent.html":{},"injectables/ThemeService.html":{}}}],["themestr",{"_index":1730,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["therefor",{"_index":2199,"title":{},"body":{"components/PatientListComponent.html":{},"components/UserListComponent.html":{}}}],["this._open",{"_index":1282,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["this._rout",{"_index":174,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["this.act",{"_index":369,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["this.actions$.pip",{"_index":2269,"title":{},"body":{"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["this.activatedthem",{"_index":1711,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["this.activatedtheme.nam",{"_index":1721,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["this.authapiservic",{"_index":376,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.authstore.dispatch(new",{"_index":1538,"title":{},"body":{"components/HeaderSideComponent.html":{},"components/SidebarSideComponent.html":{}}}],["this.bodyp",{"_index":985,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.bodyps.destroy",{"_index":986,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.builditemform(this.data.payload",{"_index":1945,"title":{},"body":{"components/NursingHomeFormComponent.html":{}}}],["this.changetheme(r",{"_index":1718,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["this.closeotherlinks(link",{"_index":187,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["this.componentact",{"_index":2063,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/PatientListComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{}}}],["this.confirmservice.confirm({titl",{"_index":422,"title":{},"body":{"injectables/AuthEffects.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["this.currentrout",{"_index":1599,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["this.currentroute.indexof(rout",{"_index":1603,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["this.currentyposit",{"_index":2367,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["this.dialog",{"_index":1789,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.dialog.closeal",{"_index":1975,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["this.dialog.getdialogbyid(\"patientcreationform\").clos",{"_index":2261,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["this.dialog.getdialogbyid(\"usercreationform\").clos",{"_index":2808,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["this.dialog.getdialogbyid('patientcreationform').clos",{"_index":2267,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["this.dialog.getdialogbyid('usercreationform').clos",{"_index":2811,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["this.dialog.open(confirmcompon",{"_index":793,"title":{},"body":{"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{}}}],["this.dialog.open(nursinghomeformcompon",{"_index":1991,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["this.dialog.open(patientformcompon",{"_index":2243,"title":{},"body":{"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{}}}],["this.dialog.open(userformcompon",{"_index":2793,"title":{},"body":{"components/UsersComponent.html":{},"injectables/UsersEffects.html":{}}}],["this.dialogref",{"_index":1788,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.dialogref.afterclos",{"_index":1797,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.dialogref.clos",{"_index":1798,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.dialogref.close(this.itemform.valu",{"_index":1952,"title":{},"body":{"components/NursingHomeFormComponent.html":{}}}],["this.dialogref.close(this.patientform.valu",{"_index":2171,"title":{},"body":{"components/PatientFormComponent.html":{}}}],["this.dialogref.close(this.userform.valu",{"_index":2745,"title":{},"body":{"components/UserFormComponent.html":{}}}],["this.dialogref.componentinstance.titl",{"_index":1795,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.dialogref.updatesize('200px",{"_index":1794,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.displaymessag",{"_index":2074,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["this.displaypatient(this.pati",{"_index":2067,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["this.displayuser(this.us",{"_index":2707,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["this.egretthem",{"_index":1526,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["this.egretthemes.foreach((t",{"_index":1726,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["this.egretthemes[0",{"_index":1712,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["this.egretthemes[1",{"_index":1713,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["this.egretthemes[2",{"_index":1714,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["this.egretthemes[3",{"_index":1715,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["this.el.nativeelement.fonts",{"_index":1382,"title":{},"body":{"directives/FontSizeDirective.html":{}}}],["this.elmid",{"_index":2365,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["this.elmyposition(this.elmid",{"_index":2369,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["this.errormessag",{"_index":2068,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["this.fb.group",{"_index":1948,"title":{},"body":{"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["this.flipactiveflag(them",{"_index":1724,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["this.flipactiveflag(this.activatedthem",{"_index":1733,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["this.fonts",{"_index":1383,"title":{},"body":{"directives/FontSizeDirective.html":{}}}],["this.fullwidthroutes.foreach(rout",{"_index":1602,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["this.genericvalid",{"_index":2058,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["this.genericvalidator.processmessages(this.patienteditform",{"_index":2075,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["this.genericvalidator.processmessages(this.usereditform",{"_index":2709,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["this.getismobil",{"_index":968,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.geturl",{"_index":181,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["this.hasicontypemenuitem",{"_index":2422,"title":{},"body":{"components/SidebarSideComponent.html":{}}}],["this.headerfixedbodyp",{"_index":987,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.headerfixedbodyps.destroy",{"_index":988,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.http",{"_index":347,"title":{},"body":{"injectables/AuthApiService.html":{},"injectables/NursingHomesService.html":{},"injectables/PatientsService.html":{},"injectables/UsersService.html":{}}}],["this.http.delete(`${environment.apihost}/api/patients/${id",{"_index":2312,"title":{},"body":{"injectables/PatientsService.html":{}}}],["this.http.delete(`${environment.apihost}/api/users/${id",{"_index":2867,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.http.get(`${environment.apihost}/api/auth/logout",{"_index":349,"title":{},"body":{"injectables/AuthApiService.html":{}}}],["this.http.get(`${environment.apihost}/api/nursinghom",{"_index":2008,"title":{},"body":{"injectables/NursingHomesService.html":{}}}],["this.http.get(`${environment.apihost}/api/pati",{"_index":2310,"title":{},"body":{"injectables/PatientsService.html":{}}}],["this.http.get(`${environment.apihost}/api/usermanag",{"_index":2864,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.http.get(`${environment.apihost}/api/users/${id}/pati",{"_index":2865,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.http.post(`${environment.apihost}/api/appus",{"_index":2866,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.http.post(`${environment.apihost}/api/pati",{"_index":2311,"title":{},"body":{"injectables/PatientsService.html":{}}}],["this.http.put(`${environment.apihost}/api/patients/${patient.id",{"_index":2313,"title":{},"body":{"injectables/PatientsService.html":{}}}],["this.http.put(`${environment.apihost}/api/users/${user.id",{"_index":2868,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.icontypemenutitl",{"_index":2417,"title":{},"body":{"components/SidebarSideComponent.html":{}}}],["this.id",{"_index":2219,"title":{},"body":{"components/PatientListComponent.html":{},"components/UserListComponent.html":{}}}],["this.initbodyps(chang",{"_index":981,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.initsidenav",{"_index":1323,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["this.ismobil",{"_index":1330,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["this.ismoduleload",{"_index":974,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.issm",{"_index":1598,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["this.itemform",{"_index":1947,"title":{},"body":{"components/NursingHomeFormComponent.html":{}}}],["this.layout",{"_index":979,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.layout.adjustlayout(ev",{"_index":977,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.layout.adjustlayout({rout",{"_index":951,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.layout.layoutconf",{"_index":970,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.layout.publishlayoutchang",{"_index":1536,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["this.layoutconf",{"_index":969,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["this.layoutconf.sidebarstyl",{"_index":1601,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["this.layoutconfsub",{"_index":978,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.layoutconfsub.unsubscrib",{"_index":1001,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.layoutconfsubject.asobserv",{"_index":1568,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["this.layoutconfsubject.next(this.layoutconf",{"_index":1584,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["this.layoutintransit",{"_index":963,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.media.isactive('sm",{"_index":1332,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["this.media.isactive('x",{"_index":1331,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["this.media.subscribe((chang",{"_index":1334,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["this.menuitem",{"_index":2421,"title":{},"body":{"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["this.menuitems.asobserv",{"_index":1638,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["this.menuitems.filter(item",{"_index":2423,"title":{},"body":{"components/SidebarSideComponent.html":{}}}],["this.menuitems.next(this.iconmenu",{"_index":1644,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["this.menuitemssub",{"_index":2419,"title":{},"body":{"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["this.menuitemssub.unsubscrib",{"_index":2433,"title":{},"body":{"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["this.moduleloadersub",{"_index":972,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.moduleloadersub.unsubscrib",{"_index":1000,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.nav",{"_index":1286,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["this.nav.addlink(thi",{"_index":1287,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["this.nav.closeotherlinks(thi",{"_index":1284,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["this.nav.removegroup(thi",{"_index":1288,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["this.navlink",{"_index":1257,"title":{},"body":{"directives/DropdownAnchorDirective.html":{}}}],["this.navlink.toggl",{"_index":1260,"title":{},"body":{"directives/DropdownAnchorDirective.html":{}}}],["this.navlinks.foreach((link",{"_index":165,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["this.navlinks.indexof(link",{"_index":170,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["this.navlinks.push(link",{"_index":168,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["this.navlinks.splice(index",{"_index":172,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["this.navposit",{"_index":961,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.navservice.icontypemenutitl",{"_index":2418,"title":{},"body":{"components/SidebarSideComponent.html":{}}}],["this.navservice.menuitems$.subscribe(menuitem",{"_index":2420,"title":{},"body":{"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["this.notif",{"_index":1906,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notificpanel.clos",{"_index":1904,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notificpanel.toggl",{"_index":1534,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["this.nursinghomesservice.createnursinghome(nursinghomedata",{"_index":1963,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["this.nursinghomesservice.getnursinghom",{"_index":1979,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["this.open",{"_index":1289,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["this.pagetitl",{"_index":2077,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["this.parsetext(item",{"_index":564,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["this.passwordmatchvalid",{"_index":2156,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["this.pati",{"_index":2064,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/PatientListComponent.html":{}}}],["this.patient.firstnam",{"_index":2078,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["this.patient.id",{"_index":2097,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["this.patient.lastnam",{"_index":2079,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["this.patienteditform",{"_index":2080,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["this.patienteditform.dirti",{"_index":2094,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["this.patienteditform.get('firstname').valu",{"_index":2109,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["this.patienteditform.get('gender').valu",{"_index":2111,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["this.patienteditform.get('id').valu",{"_index":2108,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["this.patienteditform.get('lastname').valu",{"_index":2110,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["this.patienteditform.valid",{"_index":2102,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["this.patienteditform.valuechanges.subscrib",{"_index":2087,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["this.patientform",{"_index":2151,"title":{},"body":{"components/PatientFormComponent.html":{}}}],["this.patientform.dirti",{"_index":2172,"title":{},"body":{"components/PatientFormComponent.html":{}}}],["this.patientform.valid",{"_index":2167,"title":{},"body":{"components/PatientFormComponent.html":{}}}],["this.patientform.valu",{"_index":2168,"title":{},"body":{"components/PatientFormComponent.html":{}}}],["this.patientselected.emit(selected[0",{"_index":2226,"title":{},"body":{"components/PatientListComponent.html":{}}}],["this.patientsservice.createpatient(patientdata",{"_index":2254,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["this.patientsservice.getpati",{"_index":2282,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["this.patientsservice.updatepatient(pati",{"_index":2273,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["this.patientus",{"_index":2065,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["this.processmessages(c",{"_index":1480,"title":{},"body":{"classes/GenericValidator.html":{}}}],["this.progressbar.mod",{"_index":1418,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LockscreenComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this.publishlayoutchang",{"_index":1604,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["this.routepart",{"_index":557,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["this.routeparts.reverse().map((item",{"_index":562,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["this.routeparts[i",{"_index":573,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["this.routepartsservice.generaterouteparts(this.activeroute.snapshot",{"_index":558,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["this.router.ev",{"_index":554,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["this.router.events.pipe(filter(ev",{"_index":175,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["this.router.events.subscribe((routechang",{"_index":1902,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.router.events.subscribe(ev",{"_index":973,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.router.navig",{"_index":397,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.router.navigate(['/auth/signin",{"_index":392,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.router.navigate(['/dashboard",{"_index":414,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["this.router.navigate(['/dashboard/pati",{"_index":2278,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["this.router.navigate(['/dashboard/us",{"_index":2820,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["this.router.url",{"_index":173,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["this.routereventsub",{"_index":553,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DashboardLayoutComponent.html":{}}}],["this.routereventsub.unsubscrib",{"_index":575,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DashboardLayoutComponent.html":{}}}],["this.screensizewatch",{"_index":1324,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["this.screensizewatcher.unsubscrib",{"_index":1325,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["this.scrolltotop('.main",{"_index":996,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.scrolltotop('.rightsid",{"_index":993,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.selectedpati",{"_index":2221,"title":{},"body":{"components/PatientListComponent.html":{}}}],["this.selectedus",{"_index":2780,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.setapplayout",{"_index":1572,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["this.setthemefromqueri",{"_index":1717,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["this.sidebarp",{"_index":2428,"title":{},"body":{"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["this.sidebarps.destroy",{"_index":2432,"title":{},"body":{"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["this.sidebarstyl",{"_index":959,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"components/HeaderSideComponent.html":{}}}],["this.signinform",{"_index":2479,"title":{},"body":{"components/SigninComponent.html":{}}}],["this.signinform.dis",{"_index":2482,"title":{},"body":{"components/SigninComponent.html":{}}}],["this.signinform.en",{"_index":2484,"title":{},"body":{"components/SigninComponent.html":{}}}],["this.signinform.valu",{"_index":2486,"title":{},"body":{"components/SigninComponent.html":{}}}],["this.signupform",{"_index":2505,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.snackbar.open(this.translate.instant(messag",{"_index":406,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["this.store.dispatch(new",{"_index":412,"title":{},"body":{"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/DashboardLayoutComponent.html":{},"components/HeaderSideComponent.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"injectables/PatientsEffects.html":{},"components/SigninComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"injectables/UsersEffects.html":{}}}],["this.store.pip",{"_index":450,"title":{},"body":{"guards/AuthGuard.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SigninComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["this.store.pipe(select(fromauth.getuser)).subscrib",{"_index":2426,"title":{},"body":{"components/SidebarSideComponent.html":{}}}],["this.store.pipe(select(fromdashboard.getallpati",{"_index":2216,"title":{},"body":{"components/PatientListComponent.html":{}}}],["this.store.pipe(select(fromdashboard.getallus",{"_index":2777,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.store.pipe(select(fromdashboard.getismobile)).subscrib",{"_index":966,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.store.pipe(select(fromdashboard.getlayoutintransition)).subscrib",{"_index":962,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.store.pipe(select(fromdashboard.getnavposition)).subscrib",{"_index":960,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.store.pipe(select(fromdashboard.getpatienteditionerror",{"_index":2069,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["this.store.pipe(select(fromdashboard.getpatientsid",{"_index":2217,"title":{},"body":{"components/PatientListComponent.html":{}}}],["this.store.pipe(select(fromdashboard.getsidenav)).subscrib",{"_index":957,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"components/HeaderSideComponent.html":{}}}],["this.store.pipe(select(fromdashboard.gettopbarfixed)).subscrib",{"_index":964,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.store.pipe(select(fromdashboard.getusereditionerror",{"_index":2708,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["this.store.pipe(select(fromdashboard.getusersid",{"_index":2778,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.submitbutton.dis",{"_index":1417,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LockscreenComponent.html":{},"components/SignupComponent.html":{}}}],["this.themeservice.changetheme(this.render",{"_index":1533,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["this.themeservice.egretthem",{"_index":1527,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["this.topbarfix",{"_index":965,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.translate.instant(\"auth.confirmlogoutmessag",{"_index":424,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.translate.instant(\"closeunsavedform.messag",{"_index":2093,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["this.translate.instant(\"closeunsavedform.titl",{"_index":2092,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["this.translate.instant(\"logout",{"_index":423,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.translate.instant('ar",{"_index":792,"title":{},"body":{"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{}}}],["this.translate.instant('confirm",{"_index":791,"title":{},"body":{"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{}}}],["this.translate.instant('lastloginon",{"_index":2763,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.translate.instant('nam",{"_index":2760,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.translate.instant('nursinghom",{"_index":2761,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.translate.instant('patientformtitl",{"_index":2242,"title":{},"body":{"components/PatientsComponent.html":{}}}],["this.translate.instant('patientprofil",{"_index":2764,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.translate.instant('registeredon",{"_index":2762,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.translate.instant('retri",{"_index":407,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["this.translate.instant('userformtitl",{"_index":2792,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.translate.instant(titl",{"_index":1796,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.translate.setdefaultlang('d",{"_index":2060,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/PatientListComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{}}}],["this.translate.use(this.currentlang",{"_index":1528,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["this.updatesidenav",{"_index":1333,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["this.us",{"_index":2427,"title":{},"body":{"components/SidebarSideComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{}}}],["this.user.firstnam",{"_index":2710,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["this.user.id",{"_index":2721,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["this.user.lastnam",{"_index":2711,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["this.usereditform",{"_index":2712,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["this.usereditform.dirti",{"_index":2720,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["this.usereditform.get('email').valu",{"_index":2728,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["this.usereditform.get('firstname').valu",{"_index":2726,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["this.usereditform.get('id').valu",{"_index":2725,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["this.usereditform.get('lastname').valu",{"_index":2727,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["this.usereditform.get('username').valu",{"_index":2729,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["this.usereditform.valid",{"_index":2724,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["this.usereditform.valuechanges.subscrib",{"_index":2718,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["this.userform",{"_index":2740,"title":{},"body":{"components/UserFormComponent.html":{}}}],["this.userform.dirti",{"_index":2746,"title":{},"body":{"components/UserFormComponent.html":{}}}],["this.userform.valid",{"_index":2741,"title":{},"body":{"components/UserFormComponent.html":{}}}],["this.userform.valu",{"_index":2742,"title":{},"body":{"components/UserFormComponent.html":{}}}],["this.userselected.emit(selected[0",{"_index":2783,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.usersservice.createuser(userdata",{"_index":2802,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["this.usersservice.getus",{"_index":2838,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["this.usersservice.getuserpatients(id",{"_index":2828,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["this.usersservice.updateuser(us",{"_index":2815,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["this.validationmessag",{"_index":2053,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["this.validationmessages[controlkey",{"_index":1482,"title":{},"body":{"classes/GenericValidator.html":{}}}],["this.validationmessages[controlkey][messagekey",{"_index":1488,"title":{},"body":{"classes/GenericValidator.html":{}}}],["through",{"_index":2072,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["throwerror",{"_index":2007,"title":{},"body":{"injectables/NursingHomesService.html":{}}}],["time",{"_index":1890,"title":{},"body":{"components/NotificationsComponent.html":{},"index.html":{}}}],["timer",{"_index":2377,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["titl",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"modules/DashboardRoutingModule.html":{},"classes/FixTopbar.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IRoutePart.html":{},"injectables/LayoutService.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"injectables/NavigationService.html":{},"injectables/NursingHomesEffects.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/RoutePartsService.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-2.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"miscellaneous/enumerations.html":{}}}],["to.direct",{"_index":1066,"title":{},"body":{"modules/DashboardModule.html":{}}}],["to.directive.t",{"_index":2325,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["to.directive.ts:12",{"_index":2337,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["to.directive.ts:15",{"_index":2333,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["to.directive.ts:31",{"_index":2335,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["to.directive.ts:43",{"_index":2332,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["to.directive.ts:8",{"_index":2331,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["to.directive.ts:9",{"_index":2339,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["todo",{"_index":1529,"title":{},"body":{"components/HeaderSideComponent.html":{},"components/SidebarSideComponent.html":{}}}],["toggl",{"_index":1265,"title":{},"body":{"directives/DropdownLinkDirective.html":{},"directives/EgretSideNavToggleDirective.html":{}}}],["toggle.direct",{"_index":1062,"title":{},"body":{"modules/DashboardModule.html":{}}}],["toggle.directive.t",{"_index":1305,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["toggle.directive.ts:14",{"_index":1317,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["toggle.directive.ts:15",{"_index":1312,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["toggle.directive.ts:19",{"_index":1319,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["toggle.directive.ts:23",{"_index":1315,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["toggle.directive.ts:27",{"_index":1314,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["toggle.directive.ts:33",{"_index":1316,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["toggle.directive.ts:41",{"_index":1313,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["togglecollaps",{"_index":1497,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["togglenotif",{"_index":1498,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["togglesidenav",{"_index":1499,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["token",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["tokengett",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["tooltip",{"_index":1620,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["top",{"_index":724,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"injectables/LayoutService.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"injectables/NavigationService.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"components/SidebarTopComponent.html":{},"interfaces/State-2.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{}}}],["top'},{'nam",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["top.compon",{"_index":1023,"title":{},"body":{"modules/DashboardModule.html":{}}}],["top.component.html",{"_index":2437,"title":{},"body":{"components/SidebarTopComponent.html":{}}}],["top.component.t",{"_index":2436,"title":{},"body":{"components/SidebarTopComponent.html":{}}}],["top.component.ts:11",{"_index":2444,"title":{},"body":{"components/SidebarTopComponent.html":{}}}],["top.component.ts:12",{"_index":2443,"title":{},"body":{"components/SidebarTopComponent.html":{}}}],["top.component.ts:13",{"_index":2439,"title":{},"body":{"components/SidebarTopComponent.html":{}}}],["top.component.ts:20",{"_index":2442,"title":{},"body":{"components/SidebarTopComponent.html":{}}}],["top.component.ts:26",{"_index":2440,"title":{},"body":{"components/SidebarTopComponent.html":{}}}],["top.component.ts:34",{"_index":2441,"title":{},"body":{"components/SidebarTopComponent.html":{}}}],["top/sidebar",{"_index":1022,"title":{},"body":{"modules/DashboardModule.html":{},"components/SidebarTopComponent.html":{}}}],["topbar",{"_index":739,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{}}}],["topbarfix",{"_index":901,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"interfaces/State-2.html":{}}}],["topromis",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["tranlat",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["transit",{"_index":730,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{}}}],["transitionclass",{"_index":1537,"title":{},"body":{"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["transitioninglayout",{"_index":729,"title":{"classes/TransitioningLayout.html":{}},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["translat",{"_index":362,"title":{},"body":{"injectables/AuthEffects.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"components/DashboardLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"injectables/LoaderService.html":{},"components/NotFoundComponent.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"components/SidebarSideComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{}}}],["translate.getbrowserlang",{"_index":955,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["translate.setdefaultlang('d",{"_index":2149,"title":{},"body":{"components/PatientFormComponent.html":{},"components/SigninComponent.html":{},"components/UserFormComponent.html":{}}}],["translate.use(browserlang.match(/en|d",{"_index":956,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["translate/cor",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"modules/AuthModule.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"modules/CoreModule.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/ErrorsModule.html":{},"components/HeaderSideComponent.html":{},"injectables/LoaderService.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"components/SigninComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"dependencies.html":{}}}],["translate/http",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translatehttpload",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["translatehttploader(http",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["translateload",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodul",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/ErrorsModule.html":{}}}],["translatemodule.forroot",{"_index":310,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservic",{"_index":363,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"components/DashboardLayoutComponent.html":{},"components/HeaderSideComponent.html":{},"injectables/LoaderService.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"components/SigninComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{}}}],["tree",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["tri",{"_index":1589,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/ITheme.html":{},"injectables/LayoutService.html":{},"injectables/ThemeService.html":{},"index.html":{}}}],["trigger",{"_index":387,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["true",{"_index":186,"title":{},"body":{"directives/AppDropdownDirective.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"components/DashboardLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/ITheme.html":{},"injectables/LayoutService.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"injectables/NavigationService.html":{},"classes/NumberValidators.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SignupComponent.html":{},"interfaces/State.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-6.html":{},"interfaces/State-9.html":{},"injectables/ThemeService.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{}}}],["type",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"interfaces/AuthState.html":{},"components/BreadcrumbComponent.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"directives/EgretSideNavToggleDirective.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"components/ForgotPasswordComponent.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ICredentials.html":{},"interfaces/IDevice.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IPatient.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"interfaces/IUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"injectables/NavigationService.html":{},"components/NotificationsComponent.html":{},"classes/NumberValidators.html":{},"interfaces/NursingHome.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-9.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["typealias",{"_index":3034,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":301,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbComponent.html":{}}}],["ui",{"_index":784,"title":{},"body":{"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{}}}],["undefin",{"_index":303,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["under",{"_index":2965,"title":{},"body":{"index.html":{}}}],["union",{"_index":634,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreateNursingHome.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"miscellaneous/typealiases.html":{}}}],["uniqu",{"_index":2983,"title":{},"body":{"index.html":{}}}],["unlock",{"_index":1804,"title":{},"body":{"components/LockscreenComponent.html":{}}}],["unsav",{"_index":2131,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["unsubscrib",{"_index":1530,"title":{},"body":{"components/HeaderSideComponent.html":{},"components/PatientListComponent.html":{},"components/SidebarSideComponent.html":{},"components/UserListComponent.html":{}}}],["up",{"_index":604,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreateNursingHome.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SignupComponent.html":{},"injectables/UsersEffects.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["updat",{"_index":595,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreateNursingHome.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"injectables/PatientsService.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["updatepati",{"_index":2297,"title":{},"body":{"injectables/PatientsService.html":{}}}],["updatepatient(pati",{"_index":2306,"title":{},"body":{"injectables/PatientsService.html":{}}}],["updatesidenav",{"_index":1309,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["updateus",{"_index":2849,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuser(us",{"_index":2861,"title":{},"body":{"injectables/UsersService.html":{}}}],["upload",{"_index":3011,"title":{},"body":{"index.html":{}}}],["url",{"_index":560,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IPatient.html":{},"interfaces/IRoutePart.html":{},"injectables/RoutePartsService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["urlseg",{"_index":1677,"title":{},"body":{"interfaces/IRoutePart.html":{},"injectables/RoutePartsService.html":{}}}],["urlsegment.path",{"_index":568,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["us",{"_index":732,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"classes/FixTopbar.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"injectables/NavigationService.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientListComponent.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"components/SignupComponent.html":{},"interfaces/State.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["usebreadcrumb",{"_index":731,"title":{"classes/UseBreadcrumb.html":{}},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-2.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["usefactori",{"_index":311,"title":{},"body":{"modules/AppModule.html":{}}}],["usehash",{"_index":328,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["user",{"_index":96,"title":{"interfaces/User.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthApiService.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"components/ConfirmComponent.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardRoutingModule.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"interfaces/IPatient.html":{},"interfaces/IUser.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["user.email,[validators.email",{"_index":2713,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["user.firstnam",{"_index":2434,"title":{},"body":{"components/SidebarSideComponent.html":{},"components/UserEditFormComponent.html":{}}}],["user.id",{"_index":2537,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-5.html":{},"components/UserEditFormComponent.html":{},"injectables/UsersEffects.html":{}}}],["user.last_login",{"_index":2717,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["user.lastnam",{"_index":2435,"title":{},"body":{"components/SidebarSideComponent.html":{},"components/UserEditFormComponent.html":{}}}],["user.model",{"_index":1669,"title":{},"body":{"interfaces/IPatient.html":{}}}],["user.nursing_hom",{"_index":2715,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["user.registered_on",{"_index":2716,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["user.usernam",{"_index":2714,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["user/api",{"_index":851,"title":{},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["user_patient_permiss",{"_index":2689,"title":{},"body":{"interfaces/User.html":{}}}],["usercreationform",{"_index":2794,"title":{},"body":{"components/UsersComponent.html":{}}}],["usereditform",{"_index":2692,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["usereditformcompon",{"_index":95,"title":{"components/UserEditFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["useremail",{"_index":1405,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["userform",{"_index":2737,"title":{},"body":{"components/UserFormComponent.html":{}}}],["userformcompon",{"_index":97,"title":{"components/UserFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{}}}],["userlistcompon",{"_index":98,"title":{"components/UserListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["usernam",{"_index":1646,"title":{},"body":{"interfaces/ICredentials.html":{},"interfaces/IUser.html":{},"components/SigninComponent.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["usernamerequir",{"_index":2732,"title":{},"body":{"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["userpag",{"_index":1087,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["userpati",{"_index":1088,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{},"components/UserEditFormComponent.html":{}}}],["users.component.html",{"_index":2786,"title":{},"body":{"components/UsersComponent.html":{}}}],["users.reduc",{"_index":1103,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-1.html":{}}}],["users.reducer.t",{"_index":2606,"title":{},"body":{"interfaces/State-5.html":{},"miscellaneous/functions.html":{}}}],["users_count",{"_index":1667,"title":{},"body":{"interfaces/IPatient.html":{}}}],["usersact",{"_index":2533,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"injectables/UsersEffects.html":{}}}],["usersactions.createuser({us",{"_index":2744,"title":{},"body":{"components/UserFormComponent.html":{}}}],["usersactions.deleteuser(this.user.id",{"_index":2722,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["usersactions.dismisseditus",{"_index":2719,"title":{},"body":{"components/UserEditFormComponent.html":{},"injectables/UsersEffects.html":{}}}],["usersactions.dismissuserformdialog",{"_index":2747,"title":{},"body":{"components/UserFormComponent.html":{}}}],["usersactions.edituser(p",{"_index":2730,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["usersactions.edituser(us",{"_index":2819,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["usersactions.initializeus",{"_index":2781,"title":{},"body":{"components/UserListComponent.html":{}}}],["usersactions.loadus",{"_index":2776,"title":{},"body":{"components/UserListComponent.html":{},"injectables/UsersEffects.html":{}}}],["usersactions.loaduserpatients(id",{"_index":2835,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["usersactions.loaduserpatients(user.id",{"_index":2784,"title":{},"body":{"components/UserListComponent.html":{}}}],["usersactions.selectuser(us",{"_index":2782,"title":{},"body":{"components/UserListComponent.html":{}}}],["usersactions.usersactionsunion",{"_index":2542,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{}}}],["usersactions.usersactiontypes.createus",{"_index":2656,"title":{},"body":{"interfaces/State-9.html":{}}}],["usersactions.usersactiontypes.dismisseditus",{"_index":2554,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{}}}],["usersactions.usersactiontypes.editus",{"_index":2654,"title":{},"body":{"interfaces/State-9.html":{}}}],["usersactions.usersactiontypes.loadus",{"_index":2653,"title":{},"body":{"interfaces/State-9.html":{}}}],["usersactions.usersactiontypes.loaduserpati",{"_index":2655,"title":{},"body":{"interfaces/State-9.html":{}}}],["usersactions.usersactiontypes.resetusersst",{"_index":2555,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-8.html":{}}}],["usersactions.usersactiontypes.selectus",{"_index":2552,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-8.html":{}}}],["usersactionsunion",{"_index":704,"title":{},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{},"miscellaneous/typealiases.html":{}}}],["usersactiontyp",{"_index":677,"title":{},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{},"miscellaneous/enumerations.html":{}}}],["usersactiontypes.clearselectedus",{"_index":674,"title":{},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{}}}],["usersactiontypes.createus",{"_index":694,"title":{},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{}}}],["usersactiontypes.createuserformdialog",{"_index":693,"title":{},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{}}}],["usersactiontypes.deleteus",{"_index":702,"title":{},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{}}}],["usersactiontypes.dismisseditus",{"_index":700,"title":{},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{}}}],["usersactiontypes.dismissuserformdialog",{"_index":695,"title":{},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{}}}],["usersactiontypes.editus",{"_index":699,"title":{},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{}}}],["usersactiontypes.initializeus",{"_index":692,"title":{},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{}}}],["usersactiontypes.loadus",{"_index":696,"title":{},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{}}}],["usersactiontypes.loaduserpati",{"_index":703,"title":{},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{}}}],["usersactiontypes.resetusersst",{"_index":701,"title":{},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{}}}],["usersactiontypes.searchus",{"_index":697,"title":{},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{}}}],["usersactiontypes.searchusercomplet",{"_index":698,"title":{},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{}}}],["usersactiontypes.selectus",{"_index":691,"title":{},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{}}}],["usersapiact",{"_index":2532,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"components/UserFormComponent.html":{},"injectables/UsersEffects.html":{}}}],["usersapiactions.createuserfailure({messag",{"_index":2805,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["usersapiactions.createusersuccess({us",{"_index":2804,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["usersapiactions.editusersuccess({us",{"_index":2817,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["usersapiactions.loaduserpatientsfailure({messag",{"_index":2821,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["usersapiactions.loaduserpatientssuccess({pati",{"_index":2834,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["usersapiactions.loadusersfailure({messag",{"_index":2841,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["usersapiactions.loaduserssuccess({us",{"_index":2840,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["usersapiactions.usersapiactionsunion",{"_index":2541,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{}}}],["usersapiactions.usersapiactiontypes.createuserfailur",{"_index":2657,"title":{},"body":{"interfaces/State-9.html":{}}}],["usersapiactions.usersapiactiontypes.createusersuccess",{"_index":2548,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-9.html":{}}}],["usersapiactions.usersapiactiontypes.edituserfailur",{"_index":2660,"title":{},"body":{"interfaces/State-9.html":{}}}],["usersapiactions.usersapiactiontypes.editusersuccess",{"_index":2550,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-9.html":{}}}],["usersapiactions.usersapiactiontypes.loaduserpatientsfailur",{"_index":2658,"title":{},"body":{"interfaces/State-9.html":{}}}],["usersapiactions.usersapiactiontypes.loaduserpatientssuccess",{"_index":2645,"title":{},"body":{"interfaces/State-8.html":{},"interfaces/State-9.html":{}}}],["usersapiactions.usersapiactiontypes.loadusersfailur",{"_index":2659,"title":{},"body":{"interfaces/State-9.html":{}}}],["usersapiactions.usersapiactiontypes.loaduserssuccess",{"_index":2546,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-9.html":{}}}],["usersapiactionsunion",{"_index":884,"title":{},"body":{"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["usersapiactiontyp",{"_index":869,"title":{},"body":{"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["usersapiactiontypes.createuserfailur",{"_index":868,"title":{},"body":{"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{}}}],["usersapiactiontypes.createusersuccess",{"_index":877,"title":{},"body":{"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{}}}],["usersapiactiontypes.edituserfailur",{"_index":881,"title":{},"body":{"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{}}}],["usersapiactiontypes.editusersuccess",{"_index":880,"title":{},"body":{"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{}}}],["usersapiactiontypes.loaduserpatientsfailur",{"_index":883,"title":{},"body":{"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{}}}],["usersapiactiontypes.loaduserpatientssuccess",{"_index":882,"title":{},"body":{"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{}}}],["usersapiactiontypes.loadusersfailur",{"_index":879,"title":{},"body":{"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{}}}],["usersapiactiontypes.loaduserssuccess",{"_index":878,"title":{},"body":{"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{}}}],["userscompon",{"_index":99,"title":{"components/UsersComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["userseffect",{"_index":1027,"title":{"injectables/UsersEffects.html":{}},"body":{"modules/DashboardModule.html":{},"injectables/UsersEffects.html":{}}}],["usersservic",{"_index":2797,"title":{"injectables/UsersService.html":{}},"body":{"injectables/UsersEffects.html":{},"injectables/UsersService.html":{}}}],["userst",{"_index":489,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-12.html":{}}}],["usevalu",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["valid",{"_index":1459,"title":{},"body":{"classes/GenericValidator.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["validationmessag",{"_index":1454,"title":{},"body":{"classes/GenericValidator.html":{},"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["validationrulename1",{"_index":1465,"title":{},"body":{"classes/GenericValidator.html":{}}}],["validationrulename2",{"_index":1466,"title":{},"body":{"classes/GenericValidator.html":{}}}],["validator.t",{"_index":1450,"title":{},"body":{"classes/GenericValidator.html":{},"classes/NumberValidators.html":{}}}],["validator.ts:26",{"_index":1457,"title":{},"body":{"classes/GenericValidator.html":{}}}],["validator.ts:5",{"_index":1453,"title":{},"body":{"classes/GenericValidator.html":{},"classes/NumberValidators.html":{}}}],["validatorfn",{"_index":1915,"title":{},"body":{"classes/NumberValidators.html":{}}}],["validators.email",{"_index":2152,"title":{},"body":{"components/PatientFormComponent.html":{},"components/SignupComponent.html":{},"components/UserFormComponent.html":{}}}],["validators.requir",{"_index":1950,"title":{},"body":{"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["valu",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"injectables/AuthEffects.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"injectables/ConfirmService.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/FixTopbar.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"components/HeaderSideComponent.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"injectables/NavigationService.html":{},"components/NotificationsComponent.html":{},"injectables/NursingHomesEffects.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"components/SidenavComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"miscellaneous/enumerations.html":{}}}],["var",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["veri",{"_index":1632,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["via",{"_index":3009,"title":{},"body":{"index.html":{}}}],["view",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthState.html":{},"interfaces/State-12.html":{}}}],["viewchild",{"_index":1416,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LockscreenComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["viewchild(matbutton",{"_index":1414,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LockscreenComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["viewchild(matprogressbar",{"_index":1411,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LockscreenComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["views.reduc",{"_index":494,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-12.html":{}}}],["void",{"_index":143,"title":{},"body":{"directives/AppDropdownDirective.html":{},"components/BreadcrumbComponent.html":{},"components/DashboardLayoutComponent.html":{},"directives/DropdownLinkDirective.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"directives/FontSizeDirective.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"injectables/LayoutService.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"injectables/ThemeService.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["wait",{"_index":1786,"title":{},"body":{"injectables/LoaderService.html":{}}}],["want",{"_index":2945,"title":{},"body":{"index.html":{}}}],["warn",{"_index":1342,"title":{},"body":{"components/ErrorComponent.html":{},"components/NotificationsComponent.html":{}}}],["watch",{"_index":2061,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["whether",{"_index":2155,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["whitelisteddomain",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["width",{"_index":794,"title":{},"body":{"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{}}}],["window",{"_index":625,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreateNursingHome.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{}}}],["window.matchmedia(`(max",{"_index":1609,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["window.navigator.languag",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["window:res",{"_index":906,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["window:resize(ev",{"_index":911,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["window['intl",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["window['intl'].getcanonicallocales(window.navigator.language)[0",{"_index":305,"title":{},"body":{"modules/AppModule.html":{}}}],["within",{"_index":1471,"title":{},"body":{"classes/GenericValidator.html":{}}}],["work",{"_index":2295,"title":{},"body":{"injectables/PatientsService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["wrap",{"_index":995,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["xs",{"_index":1336,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["y",{"_index":2358,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["zone.j",{"_index":2899,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/ErrorsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/containers/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        App Component\nA view component for the app\nto allow individual styling for the view\nand all of it's child views\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-root\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'moio-management'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/containers/app/app.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * App Component\n * A view component for the app\n * to allow individual styling for the view\n * and all of it's child views\n */\n@Component({\n  selector: 'moio-root',\n  template: ``\n})\nexport class AppComponent {\n  title = 'moio-management';\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AppDropdownDirective.html":{"url":"directives/AppDropdownDirective.html","title":"directive - AppDropdownDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AppDropdownDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/directives/dropdown.directive.ts\n        \n\n            \n                Description\n            \n            \n                DropDown directive\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appDropdown]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _router\n                            \n                            \n                                    Protected\n                                navlinks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addLink\n                            \n                            \n                                    Public\n                                closeOtherLinks\n                            \n                            \n                                    Public\n                                getUrl\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                removeGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/directives/dropdown.directive.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addLink\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addLink(link: DropdownLinkDirective)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/directives/dropdown.directive.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        link\n                                                        \n                                                                    DropdownLinkDirective\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            closeOtherLinks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        closeOtherLinks(openLink: DropdownLinkDirective)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/directives/dropdown.directive.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        openLink\n                                                        \n                                                                    DropdownLinkDirective\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getUrl()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/directives/dropdown.directive.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/directives/dropdown.directive.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeGroup(link: DropdownLinkDirective)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/directives/dropdown.directive.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        link\n                                                        \n                                                                    DropdownLinkDirective\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _router:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/directives/dropdown.directive.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            navlinks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navlinks:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/directives/dropdown.directive.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, OnInit } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { DropdownLinkDirective } from './dropdown-link.directive';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n/**\n * DropDown directive\n * @deprecated (cvb) Not sure if we need it.\n */\n@Directive({\n  selector: '[appDropdown]'\n})\nexport class AppDropdownDirective implements OnInit {\n  protected navlinks: Array = [];\n\n  private _router: Subscription;\n\n  public closeOtherLinks(openLink: DropdownLinkDirective): void {\n    this.navlinks.forEach((link: DropdownLinkDirective) => {\n      if (link !== openLink) {\n        link.open = false;\n      }\n    });\n  }\n\n  public addLink(link: DropdownLinkDirective): void {\n    this.navlinks.push(link);\n  }\n\n  public removeGroup(link: DropdownLinkDirective): void {\n    const index = this.navlinks.indexOf(link);\n    if (index !== -1) {\n      this.navlinks.splice(index, 1);\n    }\n  }\n\n  public getUrl() {\n    return this.router.url;\n  }\n\n  public ngOnInit(): any {\n    this._router = this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe((event: NavigationEnd) => {\n      this.navlinks.forEach((link: DropdownLinkDirective) => {\n        if (link.group) {\n          const routeUrl = this.getUrl();\n          const currentUrl = routeUrl.split('/');\n          if (currentUrl.indexOf(link.group) > 0) {\n            link.open = true;\n            this.closeOtherLinks(link);\n          }\n        }\n      });\n    });\n  }\n\n  constructor(private router: Router) {\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDashboardModule\n\nDashboardModule\n\nAppModule -->\n\nDashboardModule->AppModule\n\n\n\n\n\nErrorsModule\n\nErrorsModule\n\nAppModule -->\n\nErrorsModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            DashboardModule\n                        \n                        \n                            ErrorsModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { LOCALE_ID, NgModule } from '@angular/core';\nimport { AppComponent } from './core/containers/app/app.component';\nimport { registerLocaleData } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { AppRoutingModule } from './app-routing.module';\nimport { rootRoutes } from './app.routes';\nimport de from '@angular/common/locales/de';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { environment } from '../environments/environment';\nimport { map, take } from 'rxjs/operators';\nimport { JWT_OPTIONS, JwtModule } from '@auth0/angular-jwt';\nimport { select, Store, StoreModule } from '@ngrx/store';\nimport { StoreRouterConnectingModule } from '@ngrx/router-store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { EffectsModule } from '@ngrx/effects';\nimport { reducers, metaReducers } from './reducers';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AuthModule } from './auth/auth.module';\nimport { ErrorsModule } from './errors/errors.module';\nimport { DashboardModule } from './dashboard/dashboard.module';\nimport * as fromAuth from './auth/reducers';\n/**\n * Angular material\n */\n\nimport {\n  MatInputModule, MatPaginatorModule, MatProgressSpinnerModule,\n  MatSortModule, MatTableModule\n} from '@angular/material';\n\n/**\n * register locales\n * all required locales have to be imported\n */\nregisterLocaleData(de);\n\n/**\n * factory function to instantiate and config\n * the tranlation service\n * @param http ng http client\n */\nexport function createTanslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n/**\n * jwt options factory to obtain token from the\n * store\n * @param store Store\n */\nexport function jwtOptionsFactory(store) {\n  return {\n    whitelistedDomains: environment.whitelistedDomains,\n    skipWhenExpired: true,\n    tokenGetter: () => {\n      return store.pipe(\n        select(fromAuth.getAccessToken),\n        map(token => token),\n        take(1)\n      ).toPromise();\n    }\n  };\n}\n\n/**\n * strip the preferred language from the browser\n */\nfunction getBrowserLanguage() {\n  let locale = 'de';\n\n  if (typeof window['Intl'] !== 'undefined' && window.navigator.language) {\n    locale = window['Intl'].getCanonicalLocales(window.navigator.language)[0];\n\n    if (locale.indexOf('-') !== -1) {\n      locale = locale.substr(0, 2);\n    }\n  }\n\n  return locale;\n}\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    RouterModule.forRoot(rootRoutes),\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: (createTanslateLoader),\n        deps: [HttpClient]\n      }\n    }),\n    JwtModule.forRoot({\n      jwtOptionsProvider: {\n        provide: JWT_OPTIONS,\n        useFactory: jwtOptionsFactory,\n        deps: [Store]\n      }\n    }),\n    AuthModule,\n    ErrorsModule,\n    DashboardModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSortModule,\n    MatTableModule,\n    StoreModule.forRoot(reducers, {metaReducers}),\n    StoreRouterConnectingModule.forRoot(),\n    StoreDevtoolsModule.instrument({\n      maxAge: 10,\n      logOnly: environment.production\n    }),\n    EffectsModule.forRoot([]),\n    AppRoutingModule\n  ],\n  exports: [RouterModule],\n  providers: [\n    {provide: LOCALE_ID, useValue: getBrowserLanguage()}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { rootRoutes } from './app.routes';\n\n@NgModule({\n  imports: [RouterModule.forRoot(rootRoutes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthApiService.html":{"url":"injectables/AuthApiService.html","title":"injectable - AuthApiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/services/auth-api.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/services/auth-api.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(credentials: ICredentials)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/services/auth-api.service.ts:16\n                            \n                        \n\n\n                \n                    \n                            log user in to API\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        credentials\n                                                        \n                                                                    ICredentials\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                user credentials\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/services/auth-api.service.ts:24\n                            \n                        \n\n\n                \n                    \n                            log user out of the API\n\n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ICredentials } from '../models/user.interface';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthApiService {\n\n  /**\n   * log user in to API\n   * @param credentials user credentials\n   */\n  login(credentials: ICredentials): Observable {\n    return this.http\n      .post(`${environment.apiHost}/api/auth/loginmanagement`, credentials);\n  }\n\n  /**\n   * log user out of the API\n   */\n  logout(): Observable {\n    return this.http.get(`${environment.apiHost}/api/auth/logout`);\n  }\n\n  constructor(private http: HttpClient) {\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthEffects.html":{"url":"injectables/AuthEffects.html","title":"injectable - AuthEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/effects/auth.effects.ts\n        \n\n            \n                Description\n            \n            \n                Authentication effects\nprovided in root\nbundles effects for the Authentication Module\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                login$\n                            \n                            \n                                loginRedirect$\n                            \n                            \n                                loginSuccess$\n                            \n                            \n                                logout$\n                            \n                            \n                                logoutConfirmation$\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, authApiService: AuthApiService, router: Router, store: Store, snackBar: MatSnackBar, translate: TranslateService, confirmService: ConfirmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/effects/auth.effects.ts:132\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                actions\n\n                                                        \n                                                \n                                                \n                                                        authApiService\n                                                  \n                                                        \n                                                                    AuthApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service encapsulating api calls\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the router\n\n                                                        \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ngrx store\n\n                                                        \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                material snackbar\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                translate service\n\n                                                        \n                                                \n                                                \n                                                        confirmService\n                                                  \n                                                        \n                                                                    ConfirmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ConfirmService\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        login$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(AuthPageActions.AuthPageActionTypes.Login),\n      delay(3000),\n      map(action => action.payload.credentials),\n      exhaustMap((credentials: ICredentials) => {\n        return this.authApiService\n          .login(credentials)\n          .pipe(\n            map(response => new AuthApiActions.LoginSuccess({response})),\n            catchError(response => {\n              const message = response.statusText.toLowerCase();\n              return of(new AuthApiActions.LoginFailure({message}));\n            })\n          );\n      })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/effects/auth.effects.ts:29\n                            \n                        \n\n                \n                    \n                        login effect\nlisten to action Login. Will trigger the login API\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginRedirect$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginRedirect$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(\n        AuthApiActions.AuthApiActionTypes.LoginRedirect,\n        AuthApiActions.AuthApiActionTypes.LogoutSuccess\n      ),\n      tap(() => {\n        this.router.navigate(['/auth/signin']);\n      })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect({dispatch: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/effects/auth.effects.ts:68\n                            \n                        \n\n                \n                    \n                        effect on login redirect\nredirect to the login page\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginSuccess$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginSuccess$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(AuthApiActions.AuthApiActionTypes.LoginSuccess),\n      tap(() => {\n        this.router.navigate(['/']);\n      })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect({dispatch: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/effects/auth.effects.ts:53\n                            \n                        \n\n                \n                    \n                        effect when API returns a successful login\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        logout$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(AuthActions.AuthActionTypes.Logout),\n      exhaustMap(() => {\n\n        return this.authApiService\n          .logout()\n          .pipe(\n            map(() => new AuthApiActions.LogoutSuccess()),\n            catchError(httpResponse => {\n              const message = httpResponse.statusText.toLowerCase();\n\n              const snackBarRef = this.snackBar.open(this.translate.instant(message), this.translate.instant('Retry'), {\n                duration: 10000\n              });\n\n              snackBarRef.afterDismissed().subscribe(snackBarDismiss => {\n\n                if (snackBarDismiss.dismissedByAction) {\n                  this.store.dispatch(new AuthActions.Logout());\n                } else {\n                  this.router.navigate(['/dashboard']);\n                }\n              });\n\n              return of(new AuthApiActions.LogoutFailure({message}));\n            })\n          );\n      })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/effects/auth.effects.ts:85\n                            \n                        \n\n                \n                    \n                        logout effect\nstarts the logout process from the API\nin case of LogoutSuccess\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logoutConfirmation$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        logoutConfirmation$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(AuthActions.AuthActionTypes.LogoutConfirmation),\n      exhaustMap(() => {\n        return this.confirmService.confirm({title: this.translate.instant(\"Logout\"), \n          message: this.translate.instant(\"Auth.ConfirmLogoutMessage\")});\n      }),\n      map(result =>\n        result\n          ? new AuthActions.Logout()\n          : new AuthActions.LogoutConfirmationDismiss()\n      )\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/effects/auth.effects.ts:120\n                            \n                        \n\n                \n                    \n                        show a dialog to logout\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        snackBar:     MatSnackBar\n\n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/effects/auth.effects.ts:150\n                            \n                        \n\n                \n                    \n                        material snackbar\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { catchError, delay, exhaustMap, map, tap } from 'rxjs/operators';\nimport { ICredentials } from '../models/user.interface';\nimport { AuthApiService } from '../services/auth-api.service';\nimport { AuthApiActions, AuthActions, AuthPageActions } from '../actions';\nimport { of } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ConfirmService } from '../../core/services/confirm.service';\n\n/**\n * Authentication effects\n * provided in root\n * bundles effects for the Authentication Module\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthEffects {\n\n  /**\n   * login effect\n   * listen to action Login. Will trigger the login API\n   */\n  @Effect()\n  login$ = this.actions$\n    .pipe(\n      ofType(AuthPageActions.AuthPageActionTypes.Login),\n      delay(3000),\n      map(action => action.payload.credentials),\n      exhaustMap((credentials: ICredentials) => {\n        return this.authApiService\n          .login(credentials)\n          .pipe(\n            map(response => new AuthApiActions.LoginSuccess({response})),\n            catchError(response => {\n              const message = response.statusText.toLowerCase();\n              return of(new AuthApiActions.LoginFailure({message}));\n            })\n          );\n      })\n    );\n\n  /**\n   * effect when API returns a successful login\n   */\n  @Effect({\n    dispatch: false\n  })\n  loginSuccess$ = this.actions$\n    .pipe(\n      ofType(AuthApiActions.AuthApiActionTypes.LoginSuccess),\n      tap(() => {\n        this.router.navigate(['/']);\n      })\n    );\n\n  /**\n   * effect on login redirect\n   * redirect to the login page\n   */\n  @Effect({\n    dispatch: false\n  })\n  loginRedirect$ = this.actions$\n    .pipe(\n      ofType(\n        AuthApiActions.AuthApiActionTypes.LoginRedirect,\n        AuthApiActions.AuthApiActionTypes.LogoutSuccess\n      ),\n      tap(() => {\n        this.router.navigate(['/auth/signin']);\n      })\n    );\n\n  /**\n   * logout effect\n   * starts the logout process from the API\n   * in case of LogoutSuccess\n   */\n  @Effect()\n  logout$ = this.actions$\n    .pipe(\n      ofType(AuthActions.AuthActionTypes.Logout),\n      exhaustMap(() => {\n\n        return this.authApiService\n          .logout()\n          .pipe(\n            map(() => new AuthApiActions.LogoutSuccess()),\n            catchError(httpResponse => {\n              const message = httpResponse.statusText.toLowerCase();\n\n              const snackBarRef = this.snackBar.open(this.translate.instant(message), this.translate.instant('Retry'), {\n                duration: 10000\n              });\n\n              snackBarRef.afterDismissed().subscribe(snackBarDismiss => {\n\n                if (snackBarDismiss.dismissedByAction) {\n                  this.store.dispatch(new AuthActions.Logout());\n                } else {\n                  this.router.navigate(['/dashboard']);\n                }\n              });\n\n              return of(new AuthApiActions.LogoutFailure({message}));\n            })\n          );\n      })\n    );\n\n  /**\n   * show a dialog to logout\n   */\n  @Effect()\n  logoutConfirmation$ = this.actions$\n    .pipe(\n      ofType(AuthActions.AuthActionTypes.LogoutConfirmation),\n      exhaustMap(() => {\n        return this.confirmService.confirm({title: this.translate.instant(\"Logout\"), \n          message: this.translate.instant(\"Auth.ConfirmLogoutMessage\")});\n      }),\n      map(result =>\n        result\n          ? new AuthActions.Logout()\n          : new AuthActions.LogoutConfirmationDismiss()\n      )\n    );\n\n  /**\n   * constructor\n   * @param actions$ actions\n   * @param authApiService service encapsulating api calls\n   * @param router the router\n   * @param store ngrx store\n   * @param snackBar material snackbar\n   * @param translate translate service\n   * @param confirmService ConfirmService\n\n   */\n  constructor(\n    private actions$: Actions,\n    private authApiService: AuthApiService,\n    private router: Router,\n    private store: Store,\n    public snackBar: MatSnackBar,\n    private translate: TranslateService,\n    private confirmService: ConfirmService) {\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/guards/auth.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Gaurd to check if a user\nis logged in\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/guards/auth.guard.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/guards/auth.guard.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport * as fromAuth from '../reducers';\nimport { AuthApiActions } from '../actions';\n\n/**\n * Gaurd to check if a user\n * is logged in\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private store: Store) {}\n\n  canActivate(): Observable {\n    return this.store.pipe(\n      select(fromAuth.isLoggedIn),\n      map(authed => {\n\n        if (!authed) {\n          this.store.dispatch(new AuthApiActions.LoginRedirect());\n          return false;\n        }\n\n        return true;\n      }),\n      take(1)\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthLayoutComponent.html":{"url":"components/AuthLayoutComponent.html","title":"component - AuthLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AuthLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/containers/auth-layout.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-auth-layout\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'moio-auth-layout',\n  template: ``\n})\nexport class AuthLayoutComponent {\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'AuthLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nConfirmComponent\n\nConfirmComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nConfirmComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAuthModule -->\n\nMaterialModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ConfirmComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { MaterialModule } from '../material';\nimport { SigninComponent } from './components/signin/signin.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { LockscreenComponent } from './components/lockscreen/lockscreen.component';\nimport { ForgotPasswordComponent } from './components/forgot-password/forgot-password.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AuthLayoutComponent } from './containers/auth-layout.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { EffectsModule } from '@ngrx/effects';\nimport { AuthEffects } from './effects/auth.effects';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromAuth from './reducers';\n\nexport const COMPONENTS = [\n  AuthLayoutComponent,\n  ForgotPasswordComponent,\n  LockscreenComponent,\n  SigninComponent,\n  SignupComponent\n];\n\n@NgModule({\n  declarations: [\n    COMPONENTS\n  ],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    HttpClientModule,\n    StoreModule.forFeature('auth', fromAuth.reducers),\n    EffectsModule.forFeature([AuthEffects]),\n  ],\n  entryComponents: []\n})\nexport class AuthModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthRoutingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthRoutingModule\n\n\n\ncluster_AuthRoutingModule_imports\n\n\n\n\nMaterialModule\n\nMaterialModule\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthRoutingModule -->\n\nMaterialModule->AuthRoutingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth-routing.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { authRoutes } from './auth.routes';\nimport { MaterialModule } from '../material';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(authRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AuthRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthState.html":{"url":"interfaces/AuthState.html","title":"interface - AuthState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/reducers/index.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        userState\n                                \n                                \n                                        views\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        userState\n                                    \n                                \n                                \n                                    \n                                        userState:     fromAuth.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromAuth.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        views\n                                    \n                                \n                                \n                                    \n                                        views:     fromViews.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromViews.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as fromAuth from './auth.reducer';\nimport * as fromViews from './views.reducer';\nimport * as fromRoot from '../../reducers';\nimport { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { AuthApiActions } from '../actions';\n\nconst jwtHelper = new JwtHelperService();\n\nexport interface AuthState {\n  userState: fromAuth.State;\n  views: fromViews.State;\n}\n\nexport interface State extends fromRoot.State {\n  auth: AuthState;\n}\n\nexport const reducers: ActionReducerMap = {\n  userState: fromAuth.reducer,\n  views: fromViews.reducer\n};\n\nexport const selectAuthState = createFeatureSelector('auth');\n\nexport const selectAuthUserState = createSelector(\n  selectAuthState,\n  (state: AuthState) => state.userState\n);\n\nexport const selectAuthViewsState = createSelector(\n  selectAuthState,\n  (state: AuthState) => state.views\n);\n\nexport const getUser = createSelector(selectAuthUserState, fromAuth.getUser);\nexport const getAccessToken = createSelector(selectAuthUserState, fromAuth.getAccessToken);\n\nexport const isLoggedIn = createSelector(selectAuthUserState, state => {\n  return state.user && state.access_token && !jwtHelper.isTokenExpired(state.access_token);\n});\n\nexport const getPending = createSelector(\n  selectAuthViewsState,\n  fromViews.getPending\n);\n\nexport const getError = createSelector(\n  selectAuthViewsState,\n  fromViews.getError\n);\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlankComponent.html":{"url":"components/BlankComponent.html","title":"component - BlankComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BlankComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/components/blank/blank.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-blank\n            \n\n\n\n            \n                template\n                \n  This is a blank component.\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'moio-blank',\n  template: `\n    \n      This is a blank component.\n    \n  `\n})\nexport class BlankComponent {\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  This is a blank component.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'BlankComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BreadcrumbComponent.html":{"url":"components/BreadcrumbComponent.html","title":"component - BreadcrumbComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BreadcrumbComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/containers/layout-components/breadcrumb/breadcrumb.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-breadcrumb\n            \n\n\n\n\n            \n                templateUrl\n                ./breadcrumb.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                layout\n                            \n                            \n                                routeParts\n                            \n                            \n                                routerEventSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                parseText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, routePartsService: RoutePartsService, activeRoute: ActivatedRoute, layout: LayoutService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/containers/layout-components/breadcrumb/breadcrumb.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        routePartsService\n                                                  \n                                                        \n                                                                    RoutePartsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activeRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        layout\n                                                  \n                                                        \n                                                                    LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/breadcrumb/breadcrumb.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/breadcrumb/breadcrumb.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parseText\n                            \n                            \n                        \n                    \n                \n                \n                    \nparseText(part)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/breadcrumb/breadcrumb.component.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        part\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            layout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layout:     LayoutService\n\n                    \n                \n                    \n                        \n                            Type :     LayoutService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/breadcrumb/breadcrumb.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            routeParts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        routeParts:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/breadcrumb/breadcrumb.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            routerEventSub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        routerEventSub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/breadcrumb/breadcrumb.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { RoutePartsService } from '../../../../core/services/route-parts.service';\nimport { LayoutService } from '../../../../core/services/layout.service';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'moio-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n})\nexport class BreadcrumbComponent implements OnInit, OnDestroy {\n  routeParts: any[];\n  routerEventSub: Subscription;\n\n  // public isEnabled: boolean = true;\n  constructor(\n    private router: Router,\n    private routePartsService: RoutePartsService,\n    private activeRoute: ActivatedRoute,\n    public layout: LayoutService\n  ) {\n    this.routerEventSub = this.router.events\n      .pipe(filter(event => event instanceof NavigationEnd))\n      .subscribe((routeChange) => {\n        this.routeParts = this.routePartsService.generateRouteParts(this.activeRoute.snapshot);\n        // generate url from parts\n\n        // console.log(this.routeParts);\n\n        this.routeParts.reverse().map((item, i) => {\n          item.breadcrumb = this.parseText(item);\n          item.urlSegments.forEach((urlSegment, j) => {\n            if (j === 0) {\n              return item.url = `${urlSegment.path}`;\n            }\n            item.url += `/${urlSegment.path}`;\n          });\n          if (i === 0) {\n            return item;\n          }\n          // prepend previous part to current part\n          item.url = `${this.routeParts[i - 1].url}/${item.url}`;\n          return item;\n        });\n      });\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n    if (this.routerEventSub) {\n      this.routerEventSub.unsubscribe();\n    }\n  }\n\n  parseText(part) {\n    part.breadcrumb = part.breadcrumb.replace(/{{([^{}]*)}}/g, function (a, b) {\n      const r = part.params[b];\n      return typeof r === 'string' ? r : a;\n    });\n    return part.breadcrumb;\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{part.breadcrumb | translate}}\n  \n\n\n\n  {{routeParts[routeParts.length -1]['breadcrumb'] | translate}}\n  Moio Management\n   1\">\n    \n      {{part.breadcrumb | translate}}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{part.breadcrumb | translate}}    {{routeParts[routeParts.length -1][\\'breadcrumb\\'] | translate}}  Moio Management   1\">          {{part.breadcrumb | translate}}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'BreadcrumbComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearSelectedNursingHome.html":{"url":"classes/ClearSelectedNursingHome.html","title":"class - ClearSelectedNursingHome","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearSelectedNursingHome\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/nursing-homes.actions.ts\n        \n\n            \n                Description\n            \n            \n                Clear selected ser Action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : NursingHomesActionTypes.ClearSelectedNursingHome\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes.actions.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { NursingHome } from '../models/nursing-home.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum NursingHomesActionTypes {\n  SelectNursingHome = '[NursingHome] Select Current NursingHome',\n  ClearSelectedNursingHome = '[NursingHome] Clear Current NursingHome',\n  InitializeNursingHome = '[NursingHome] Initialize Current NursingHome',\n  PopUpNursingHomeForm = '[NursingHome] Pop Up NursingHome Form',\n  CreateNursingHome = '[NursingHome] Create NursingHome',\n  DismissPoppedUpNursingHomeForm = '[NursingHome] Dismiss Create NursingHome',\n  LoadNursingHomes = '[NursingHome] Load Nursing Homes',\n  SearchNursingHome = '[NursingHome] Search NursingHome',\n  SearchNursingHomeComplete = '[NursingHome] Search NursingHome Complete',\n  EditNursingHome = '[NursingHome] Edit NursingHome',\n  DismissEditNursingHome = '[NursingHome] Dismiss Edit NursingHome',\n  ResetNursingHomesState = '[NursingHomes] Reset NursingHomes State'\n}\n\n\n/**\n * Select nursingHome Action\n */\nexport class SelectNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SelectNursingHome;\n\n  constructor(public payload: NursingHome) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.ClearSelectedNursingHome;\n}\n\n/**\n * Initialize nursingHome Action\n */\nexport class InitializeNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.InitializeNursingHome;\n}\n\n/**\n * action to pop up nursingHome form\n */\nexport class PopUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.PopUpNursingHomeForm;\n}\n\n/**\n * Create nursingHome Action\n */\nexport class CreateNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.CreateNursingHome;\n\n  constructor(public payload: { nursingHome: NursingHome }) { }\n}\n\n/**\n * CreateNursingHome Dialog window dismissed\n */\nexport class DismissPoppedUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.DismissPoppedUpNursingHomeForm;\n}\n\n/**\n * Load nursingHomes Action\n */\nexport class LoadNursingHomes implements Action {\n  readonly type = NursingHomesActionTypes.LoadNursingHomes;\n}\n\n/**\n * Search nursingHome Action\n */\nexport class SearchNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHome;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search nursingHome complete Action\n */\nexport class SearchNursingHomeComplete implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHomeComplete;\n\n  constructor(public payload: NursingHome[]) { }\n}\n\n/**\n * action to submit and edit nursingHome\n */\nexport class EditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.EditNursingHome;\n\n  constructor(public payload: Update) {\n  }\n}\n\n/**\n * NursingHome Edit dismissed action\n */\nexport class DismissEditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.DismissEditNursingHome;\n}\n\n/**\n * reset the nursingHome state\n */\nexport class ResetNursingHomesState implements Action {\n  readonly type = NursingHomesActionTypes.ResetNursingHomesState;\n}\n\n/**\n * Export union of nursingHome Action\n */\nexport type NursingHomesActionsUnion\n  = SelectNursingHome\n  | ClearSelectedNursingHome\n  | InitializeNursingHome\n  | PopUpNursingHomeForm\n  | CreateNursingHome\n  | DismissPoppedUpNursingHomeForm\n  | LoadNursingHomes\n  | SearchNursingHome\n  | SearchNursingHomeComplete\n  | EditNursingHome\n  | DismissEditNursingHome\n  | ResetNursingHomesState;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearSelectedPatient.html":{"url":"classes/ClearSelectedPatient.html","title":"class - ClearSelectedPatient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearSelectedPatient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients.actions.ts\n        \n\n            \n                Description\n            \n            \n                Clear selected ser Action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsActionTypes.ClearSelectedPatient\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { IPatient } from '../models/patient.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum PatientsActionTypes {\n  SelectPatient = '[Patient] Select Current Patient',\n  ClearSelectedPatient = '[Patient] Clear Current Patient',\n  InitializePatient = '[Patient] Initialize Current Patient',\n  CreatePatientFormDialog = '[Patients] Pop Up Patient Form',\n  CreatePatient = '[Patient] Create Patient',\n  DismissPatientFormDialog = '[Patient] Dismiss Patient Form Dialog',\n  LoadPatients = '[Patient] Load Patients',\n  SearchPatient = '[Patient] Search Patient',\n  SearchPatientComplete = '[Patient] Search Patient Complete',\n  EditPatient = '[Patient] Edit Patient',\n  DismissEditPatient = '[Patient] Dismiss Edit Patient',\n  ResetPatientsState = '[Patients] Reset Patients State',\n  DeletePatient ='[Patients] Delete Patient',\n  LoadPatientUsers = '[User] Load User Patients'\n}\n\n\n/**\n * Select patient Action\n */\nexport class SelectPatient implements Action {\n  readonly type = PatientsActionTypes.SelectPatient;\n\n  constructor(public payload: IPatient) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedPatient implements Action {\n  readonly type = PatientsActionTypes.ClearSelectedPatient;\n}\n\n/**\n * Initialize patient Action\n */\nexport class InitializePatient implements Action {\n  readonly type = PatientsActionTypes.InitializePatient;\n}\n\n/**\n * action to pop up patient form\n */\nexport class CreatePatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.CreatePatientFormDialog;\n}\n\n/**\n * Create patient Action\n */\nexport class CreatePatient implements Action {\n  readonly type = PatientsActionTypes.CreatePatient;\n\n  constructor(public payload: { patient: IPatient }) { }\n}\n\n/**\n * CreatePatient Dialog window dismissed\n */\nexport class DismissPatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.DismissPatientFormDialog;\n}\n\n/**\n * Load patients Action\n */\nexport class LoadPatients implements Action {\n  readonly type = PatientsActionTypes.LoadPatients;\n}\n\n/**\n * Search patient Action\n */\nexport class SearchPatient implements Action {\n  readonly type = PatientsActionTypes.SearchPatient;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search patient complete Action\n */\nexport class SearchPatientComplete implements Action {\n  readonly type = PatientsActionTypes.SearchPatientComplete;\n\n  constructor(public payload: IPatient[]) { }\n}\n\n/**\n * action to submit and edit patient\n */\nexport class EditPatient implements Action {\n  readonly type = PatientsActionTypes.EditPatient;\n\n  constructor(public payload: IPatient) {\n  }\n}\n\n/**\n * Patient Edit dismissed action\n */\nexport class DismissEditPatient implements Action {\n  readonly type = PatientsActionTypes.DismissEditPatient;\n}\n\n/**\n * reset the patient state\n */\nexport class ResetPatientsState implements Action {\n  readonly type = PatientsActionTypes.ResetPatientsState;\n}\n\n/**\n * action to delete a patient\n */\nexport class DeletePatient implements Action {\n  readonly type = PatientsActionTypes.DeletePatient;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load patient users action\n */\nexport class LoadPatientUsers implements Action {\n  readonly type = PatientsActionTypes.LoadPatientUsers;\n  constructor(public payload: number ) { }\n}\n\n\n/**\n * Export union of patient Action\n */\nexport type PatientsActionsUnion\n  = SelectPatient\n  | ClearSelectedPatient\n  | InitializePatient\n  | CreatePatientFormDialog\n  | CreatePatient\n  | DismissPatientFormDialog\n  | LoadPatients\n  | SearchPatient\n  | SearchPatientComplete\n  | EditPatient\n  | DismissEditPatient\n  | ResetPatientsState\n  | LoadPatientUsers;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearSelectedUser.html":{"url":"classes/ClearSelectedUser.html","title":"class - ClearSelectedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearSelectedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users.actions.ts\n        \n\n            \n                Description\n            \n            \n                Clear selected ser Action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersActionTypes.ClearSelectedUser\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum UsersActionTypes {\n  SelectUser = '[User] Select Current User',\n  ClearSelectedUser = '[User] Clear Current User',\n  InitializeUser = '[User] Initialize Current User',\n  CreateUserFormDialog = '[Users] Pop Up User Form',\n  CreateUser = '[User] Create User',\n  DismissUserFormDialog = '[User] Dismiss User Form Dialog',\n  LoadUsers = '[User] Load Users',\n  SearchUser = '[User] Search User',\n  SearchUserComplete = '[User] Search User Complete',\n  EditUser = '[User] Edit User',\n  DismissEditUser = '[User] Dismiss Edit User',\n  ResetUsersState = '[Users] Reset Users State',\n  DeleteUser = '[Users] Delete User',\n  LoadUserPatients = '[User] Load User Patients'\n}\n\n\n/**\n * Select user Action\n */\nexport class SelectUser implements Action {\n  readonly type = UsersActionTypes.SelectUser;\n\n  constructor(public payload: User) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedUser implements Action {\n  readonly type = UsersActionTypes.ClearSelectedUser;\n}\n\n/**\n * Initialize user Action\n */\nexport class InitializeUser implements Action {\n  readonly type = UsersActionTypes.InitializeUser;\n}\n\n/**\n * action to pop up user form\n */\nexport class CreateUserFormDialog implements Action {\n  readonly type = UsersActionTypes.CreateUserFormDialog;\n}\n\n/**\n * Create user Action\n */\nexport class CreateUser implements Action {\n  readonly type = UsersActionTypes.CreateUser;\n\n  constructor(public payload: { user: User }) { }\n}\n\n/**\n * CreateUser Dialog window dismissed\n */\nexport class DismissUserFormDialog implements Action {\n  readonly type = UsersActionTypes.DismissUserFormDialog;\n}\n\n/**\n * Load users Action\n */\nexport class LoadUsers implements Action {\n  readonly type = UsersActionTypes.LoadUsers;\n}\n\n/**\n * Search user action\n */\nexport class SearchUser implements Action {\n  readonly type = UsersActionTypes.SearchUser;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search user complete action\n */\nexport class SearchUserComplete implements Action {\n  readonly type = UsersActionTypes.SearchUserComplete;\n\n  constructor(public payload: User[]) { }\n}\n\n/**\n * action to submit and edit user\n */\nexport class EditUser implements Action {\n  readonly type = UsersActionTypes.EditUser;\n\n  constructor(public payload: User) {\n  }\n}\n\n/**\n * User Edit dismissed action\n */\nexport class DismissEditUser implements Action {\n  readonly type = UsersActionTypes.DismissEditUser;\n}\n\n/**\n * reset the user state\n */\nexport class ResetUsersState implements Action {\n  readonly type = UsersActionTypes.ResetUsersState;\n}\n\n/**\n * action to delete a user\n */\nexport class DeleteUser implements Action {\n  readonly type = UsersActionTypes.DeleteUser;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load user patients action\n */\nexport class LoadUserPatients implements Action {\n  readonly type = UsersActionTypes.LoadUserPatients;\n  constructor(public payload: number ) { }\n}\n\n/**\n * Export union of user Action\n */\nexport type UsersActionsUnion\n  = SelectUser\n  | ClearSelectedUser\n  | InitializeUser\n  | CreateUserFormDialog\n  | CreateUser\n  | DismissUserFormDialog\n  | LoadUsers\n  | SearchUser\n  | SearchUserComplete\n  | EditUser\n  | DismissEditUser\n  | ResetUsersState\n  | LoadUserPatients;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CloseSideNav.html":{"url":"classes/CloseSideNav.html","title":"class - CloseSideNav","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CloseSideNav\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/layout.actions.ts\n        \n\n            \n                Description\n            \n            \n                close side navigation action\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/layout.actions.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LayoutActionTypes.CloseSideNav\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\n/**\n * layout action types\n */\nexport enum LayoutActionTypes {\n  OpenSideNav = '[Layout] Open Side Nav',\n  CloseSideNav = '[Layout] Close Side Nav',\n  CompactSideNav = '[Layout] Compact Nav position',\n  SetNavigationPositionSide = '[Layout] Set Navigation Position Side',\n  SetNavigationPositionTop = '[Layout] Set Navigation Position Top',\n  SetDirectionLtr = '[Layout] Set Direction Ltr',\n  SetDirectionRtr = '[Layout] Set Direction Rtr',\n  TransitioningLayout = '[Layout] Transitioning Layout',\n  UseBreadcrumb = '[Layout] Use Breadcrumb',\n  MakeBreadcrumbSimple = '[Layout] Make Breadcrumb Simple',\n  MakeBreadcrumbTitle = '[Layout] Make Breadcrumb Title',\n  FixTopbar = '[Layout] Fix Topbar'\n}\n\n/**\n * open side navigation action\n */\nexport class OpenSideNav {\n  readonly type = LayoutActionTypes.OpenSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * close side navigation action\n */\nexport class CloseSideNav {\n  readonly type = LayoutActionTypes.CloseSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * compact side navigation action\n */\nexport class CompactSideNav {\n  readonly type = LayoutActionTypes.CompactSideNav;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to side action\n */\nexport class SetNavigationPositionSide {\n  readonly type = LayoutActionTypes.SetNavigationPositionSide;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to top action\n */\nexport class SetNavigationPositionTop {\n  readonly type = LayoutActionTypes.SetNavigationPositionTop;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to left-to-right action\n */\nexport class SetDirectionLtr {\n  readonly type = LayoutActionTypes.SetDirectionLtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to right-to-left action\n */\nexport class SetDirectionRtr {\n  readonly type = LayoutActionTypes.SetDirectionRtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * transition layout action\n */\nexport class TransitioningLayout {\n  readonly type = LayoutActionTypes.TransitioningLayout;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * Use breadcrumb action\n */\nexport class UseBreadcrumb {\n  readonly type = LayoutActionTypes.UseBreadcrumb;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * make breadcrumb simple action\n */\nexport class MakeBreadcrumbSimple {\n  readonly type = LayoutActionTypes.MakeBreadcrumbSimple;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * make breadcrum title action\n */\nexport class MakeBreadcrumbTitle {\n  readonly type = LayoutActionTypes.MakeBreadcrumbTitle;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * fix top bar action\n */\nexport class FixTopbar {\n  readonly type = LayoutActionTypes.FixTopbar;\n  constructor(public payload: boolean) { \n  }\n}\n\nexport type LayoutActions = \n  | OpenSideNav\n  | CloseSideNav\n  | CompactSideNav\n  | SetNavigationPositionSide\n  | SetNavigationPositionTop\n  | SetDirectionLtr\n  | SetDirectionRtr\n  | TransitioningLayout\n  | UseBreadcrumb\n  | MakeBreadcrumbSimple\n  | MakeBreadcrumbTitle\n  | FixTopbar;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CompactSideNav.html":{"url":"classes/CompactSideNav.html","title":"class - CompactSideNav","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CompactSideNav\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/layout.actions.ts\n        \n\n            \n                Description\n            \n            \n                compact side navigation action\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/layout.actions.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LayoutActionTypes.CompactSideNav\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\n/**\n * layout action types\n */\nexport enum LayoutActionTypes {\n  OpenSideNav = '[Layout] Open Side Nav',\n  CloseSideNav = '[Layout] Close Side Nav',\n  CompactSideNav = '[Layout] Compact Nav position',\n  SetNavigationPositionSide = '[Layout] Set Navigation Position Side',\n  SetNavigationPositionTop = '[Layout] Set Navigation Position Top',\n  SetDirectionLtr = '[Layout] Set Direction Ltr',\n  SetDirectionRtr = '[Layout] Set Direction Rtr',\n  TransitioningLayout = '[Layout] Transitioning Layout',\n  UseBreadcrumb = '[Layout] Use Breadcrumb',\n  MakeBreadcrumbSimple = '[Layout] Make Breadcrumb Simple',\n  MakeBreadcrumbTitle = '[Layout] Make Breadcrumb Title',\n  FixTopbar = '[Layout] Fix Topbar'\n}\n\n/**\n * open side navigation action\n */\nexport class OpenSideNav {\n  readonly type = LayoutActionTypes.OpenSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * close side navigation action\n */\nexport class CloseSideNav {\n  readonly type = LayoutActionTypes.CloseSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * compact side navigation action\n */\nexport class CompactSideNav {\n  readonly type = LayoutActionTypes.CompactSideNav;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to side action\n */\nexport class SetNavigationPositionSide {\n  readonly type = LayoutActionTypes.SetNavigationPositionSide;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to top action\n */\nexport class SetNavigationPositionTop {\n  readonly type = LayoutActionTypes.SetNavigationPositionTop;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to left-to-right action\n */\nexport class SetDirectionLtr {\n  readonly type = LayoutActionTypes.SetDirectionLtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to right-to-left action\n */\nexport class SetDirectionRtr {\n  readonly type = LayoutActionTypes.SetDirectionRtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * transition layout action\n */\nexport class TransitioningLayout {\n  readonly type = LayoutActionTypes.TransitioningLayout;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * Use breadcrumb action\n */\nexport class UseBreadcrumb {\n  readonly type = LayoutActionTypes.UseBreadcrumb;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * make breadcrumb simple action\n */\nexport class MakeBreadcrumbSimple {\n  readonly type = LayoutActionTypes.MakeBreadcrumbSimple;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * make breadcrum title action\n */\nexport class MakeBreadcrumbTitle {\n  readonly type = LayoutActionTypes.MakeBreadcrumbTitle;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * fix top bar action\n */\nexport class FixTopbar {\n  readonly type = LayoutActionTypes.FixTopbar;\n  constructor(public payload: boolean) { \n  }\n}\n\nexport type LayoutActions = \n  | OpenSideNav\n  | CloseSideNav\n  | CompactSideNav\n  | SetNavigationPositionSide\n  | SetNavigationPositionTop\n  | SetDirectionLtr\n  | SetDirectionRtr\n  | TransitioningLayout\n  | UseBreadcrumb\n  | MakeBreadcrumbSimple\n  | MakeBreadcrumbTitle\n  | FixTopbar;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmComponent.html":{"url":"components/ConfirmComponent.html","title":"component - ConfirmComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/components/confirm/confirm.component.ts\n\n\n    \n        Description\n    \n    \n        confirm component\nused by confirm service\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-confirm\n            \n\n\n\n\n            \n                templateUrl\n                ./confirm.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: any, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/components/confirm/confirm.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/components/confirm/confirm.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/components/confirm/confirm.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translate:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/components/confirm/confirm.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Component, Inject } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n/**\n * confirm component\n * used by confirm service\n */\n@Component({\n  selector: 'moio-confirm',\n  templateUrl: './confirm.component.html'\n})\n\n/**\n * constructor\n * @param dialogRef Material Dialog Reference\n * @param data repres. an InjectionToken to access the data in the dialog\n */\nexport class ConfirmComponent {\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public translate: TranslateService\n  ) {\n  }\n}\n\n    \n\n    \n        {{ data.title }}\n{{ data.message }}\n\n   {{'Ok' | translate }}\n  \n  &nbsp;\n  \n  {{'Cancel' | translate }}\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ data.title }}{{ data.message }}   {{\\'Ok\\' | translate }}         {{\\'Cancel\\' | translate }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfirmData.html":{"url":"interfaces/ConfirmData.html","title":"interface - ConfirmData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConfirmData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/confirm.service.ts\n        \n\n            \n                Description\n            \n            \n                confirmation data for this service\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        message\n                                \n                                \n                                            Optional\n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { MatDialogRef, MatDialog } from '@angular/material';\nimport { Injectable } from '@angular/core';\n\nimport { ConfirmComponent } from '../components/confirm/confirm.component';\nimport { TranslateService } from '@ngx-translate/core';\n\n/**\n * confirmation data for this service\n */\ninterface ConfirmData {\n  title?: string;\n  message?: string;\n}\n\n/**\n * Confirmation service\n * allows an easy interface to call a confirmation\n * dialog in the UI\n */\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ConfirmService {\n\n   /**\n   * constructor\n   * @param dialog material dialog reference\n   * @param translate translate service\n   */\n  constructor(\n    private dialog: MatDialog,\n    private translate: TranslateService\n  ) {\n  }\n\n  /**\n   * confirm opens the dialog\n   *\n   * @param data ConfirmData composed from title and message\n   * returns a dialog.afterClosed() Observable.\n   * Subscribe to the returned reference to get true | false from\n   * the clicked button\n   * @return dialogRef MatDialogRef Observable\n   */\n  public confirm(data: ConfirmData = {}): Observable {\n    data.title = data.title || this.translate.instant('Confirm');;\n    data.message = data.message || this.translate.instant('Are you sure?');;\n    let dialogRef: MatDialogRef;\n    dialogRef = this.dialog.open(ConfirmComponent, {\n      width: '380px',\n      disableClose: true,\n      data: {title: data.title, message: data.message}\n    });\n    return dialogRef.afterClosed();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfirmService.html":{"url":"injectables/ConfirmService.html","title":"injectable - ConfirmService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfirmService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/confirm.service.ts\n        \n\n            \n                Description\n            \n            \n                Confirmation service\nallows an easy interface to call a confirmation\ndialog in the UI\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                confirm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/confirm.service.ts:25\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                material dialog reference\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                translate service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            confirm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        confirm(data: ConfirmData)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/confirm.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            confirm opens the dialog\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    ConfirmData\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                        \n                                                                ConfirmData composed from title and message\nreturns a dialog.afterClosed() Observable.\nSubscribe to the returned reference to get true | false from\nthe clicked button\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    dialogRef MatDialogRef Observable\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { MatDialogRef, MatDialog } from '@angular/material';\nimport { Injectable } from '@angular/core';\n\nimport { ConfirmComponent } from '../components/confirm/confirm.component';\nimport { TranslateService } from '@ngx-translate/core';\n\n/**\n * confirmation data for this service\n */\ninterface ConfirmData {\n  title?: string;\n  message?: string;\n}\n\n/**\n * Confirmation service\n * allows an easy interface to call a confirmation\n * dialog in the UI\n */\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ConfirmService {\n\n   /**\n   * constructor\n   * @param dialog material dialog reference\n   * @param translate translate service\n   */\n  constructor(\n    private dialog: MatDialog,\n    private translate: TranslateService\n  ) {\n  }\n\n  /**\n   * confirm opens the dialog\n   *\n   * @param data ConfirmData composed from title and message\n   * returns a dialog.afterClosed() Observable.\n   * Subscribe to the returned reference to get true | false from\n   * the clicked button\n   * @return dialogRef MatDialogRef Observable\n   */\n  public confirm(data: ConfirmData = {}): Observable {\n    data.title = data.title || this.translate.instant('Confirm');;\n    data.message = data.message || this.translate.instant('Are you sure?');;\n    let dialogRef: MatDialogRef;\n    dialogRef = this.dialog.open(ConfirmComponent, {\n      width: '380px',\n      disableClose: true,\n      data: {title: data.title, message: data.message}\n    });\n    return dialogRef.afterClosed();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nConfirmComponent\n\nConfirmComponent\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nConfirmComponent->CoreModule\n\n\n\n\n\nConfirmComponent \n\nConfirmComponent \n\nConfirmComponent  -->\n\nCoreModule->ConfirmComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nCoreModule->MaterialModule \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nCoreModule -->\n\nMaterialModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n        \n            Description\n        \n        \n            bundles components and services\nshared over all modules\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ConfirmComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ConfirmComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConfirmComponent\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ConfirmComponent } from './components/confirm/confirm.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material';\n\n/**\n * list of components in this module\n */\nexport const COMPONENTS = [\n  ConfirmComponent\n];\n\n/**\n * bundles components and services\n * shared over all modules\n */\n@NgModule({\n  declarations: COMPONENTS,\n  imports: [MaterialModule, TranslateModule],\n  exports: [\n    MaterialModule,\n    TranslateModule,\n    COMPONENTS\n  ],\n  providers: [],\n  entryComponents: [ConfirmComponent]\n})\nexport class CoreModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNursingHome.html":{"url":"classes/CreateNursingHome.html","title":"class - CreateNursingHome","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNursingHome\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/nursing-homes.actions.ts\n        \n\n            \n                Description\n            \n            \n                Create nursingHome Action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/nursing-homes.actions.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes.actions.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : NursingHomesActionTypes.CreateNursingHome\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes.actions.ts:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { NursingHome } from '../models/nursing-home.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum NursingHomesActionTypes {\n  SelectNursingHome = '[NursingHome] Select Current NursingHome',\n  ClearSelectedNursingHome = '[NursingHome] Clear Current NursingHome',\n  InitializeNursingHome = '[NursingHome] Initialize Current NursingHome',\n  PopUpNursingHomeForm = '[NursingHome] Pop Up NursingHome Form',\n  CreateNursingHome = '[NursingHome] Create NursingHome',\n  DismissPoppedUpNursingHomeForm = '[NursingHome] Dismiss Create NursingHome',\n  LoadNursingHomes = '[NursingHome] Load Nursing Homes',\n  SearchNursingHome = '[NursingHome] Search NursingHome',\n  SearchNursingHomeComplete = '[NursingHome] Search NursingHome Complete',\n  EditNursingHome = '[NursingHome] Edit NursingHome',\n  DismissEditNursingHome = '[NursingHome] Dismiss Edit NursingHome',\n  ResetNursingHomesState = '[NursingHomes] Reset NursingHomes State'\n}\n\n\n/**\n * Select nursingHome Action\n */\nexport class SelectNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SelectNursingHome;\n\n  constructor(public payload: NursingHome) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.ClearSelectedNursingHome;\n}\n\n/**\n * Initialize nursingHome Action\n */\nexport class InitializeNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.InitializeNursingHome;\n}\n\n/**\n * action to pop up nursingHome form\n */\nexport class PopUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.PopUpNursingHomeForm;\n}\n\n/**\n * Create nursingHome Action\n */\nexport class CreateNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.CreateNursingHome;\n\n  constructor(public payload: { nursingHome: NursingHome }) { }\n}\n\n/**\n * CreateNursingHome Dialog window dismissed\n */\nexport class DismissPoppedUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.DismissPoppedUpNursingHomeForm;\n}\n\n/**\n * Load nursingHomes Action\n */\nexport class LoadNursingHomes implements Action {\n  readonly type = NursingHomesActionTypes.LoadNursingHomes;\n}\n\n/**\n * Search nursingHome Action\n */\nexport class SearchNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHome;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search nursingHome complete Action\n */\nexport class SearchNursingHomeComplete implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHomeComplete;\n\n  constructor(public payload: NursingHome[]) { }\n}\n\n/**\n * action to submit and edit nursingHome\n */\nexport class EditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.EditNursingHome;\n\n  constructor(public payload: Update) {\n  }\n}\n\n/**\n * NursingHome Edit dismissed action\n */\nexport class DismissEditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.DismissEditNursingHome;\n}\n\n/**\n * reset the nursingHome state\n */\nexport class ResetNursingHomesState implements Action {\n  readonly type = NursingHomesActionTypes.ResetNursingHomesState;\n}\n\n/**\n * Export union of nursingHome Action\n */\nexport type NursingHomesActionsUnion\n  = SelectNursingHome\n  | ClearSelectedNursingHome\n  | InitializeNursingHome\n  | PopUpNursingHomeForm\n  | CreateNursingHome\n  | DismissPoppedUpNursingHomeForm\n  | LoadNursingHomes\n  | SearchNursingHome\n  | SearchNursingHomeComplete\n  | EditNursingHome\n  | DismissEditNursingHome\n  | ResetNursingHomesState;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNursingHomeFailure.html":{"url":"classes/CreateNursingHomeFailure.html","title":"class - CreateNursingHomeFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNursingHomeFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/nursing-homes-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                add nursingHome failure action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/nursing-homes-api.actions.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes-api.actions.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : NursingHomesApiActionTypes.CreateNursingHomeFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes-api.actions.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { NursingHome } from '../models/nursing-home.model';\n\n/**\n * definitions for action types\n */\nexport enum NursingHomesApiActionTypes {\n  CreateNursingHomeSuccess = '[NursingHome/Api] Create NursingHome Success',\n  CreateNursingHomeFailure = '[NursingHome/Api] Create NursingHome Failure',\n  LoadNursingHomesSuccess = '[NursingHome/Api] Load NursingHomes Success',\n  LoadNursingHomesFailure = '[NursingHome/Api] Load NursingHomes Failure',\n  EditNursingHomeSuccess = '[NursingHome/Api] Edit NursingHome Success',\n  EditNursingHomeFailure = '[NursingHome/Api] Edit NursingHome Failure',\n}\n\n/**\n * add nursingHome success action\n */\nexport class CreateNursingHomeSuccess implements Action {\n  public readonly type = NursingHomesApiActionTypes.CreateNursingHomeSuccess;\n\n  constructor(public payload: { nursingHome: NursingHome }) {\n  }\n}\n\n/**\n * add nursingHome failure action\n */\nexport class CreateNursingHomeFailure implements Action {\n  public readonly type = NursingHomesApiActionTypes.CreateNursingHomeFailure;\n\n  constructor(public payload: { message: string}) {\n  }\n}\n\n/**\n * load all nursingHomes success action\n */\nexport class LoadNursingHomesSuccess implements Action {\n  public readonly type = NursingHomesApiActionTypes.LoadNursingHomesSuccess;\n\n  constructor(public payload: { nursingHomes: NursingHome[] }) {\n  }\n}\n\n/**\n * load all nursingHomes action\n */\nexport class LoadNursingHomesFailure implements Action {\n  public readonly type = NursingHomesApiActionTypes.LoadNursingHomesFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * edit nursingHome success action\n */\nexport class EditNursingHomeSuccess implements Action {\n  public readonly type = NursingHomesApiActionTypes.EditNursingHomeSuccess;\n\n  constructor(public payload: { nursingHome: NursingHome }) {\n  }\n}\n\n/**\n * edit nursingHome failure action\n */\nexport class EditNursingHomeFailure implements Action {\n  public readonly type = NursingHomesApiActionTypes.EditNursingHomeFailure;\n\n  constructor(public payload: { message: string}) {\n  }\n}\n\n// export types\nexport type NursingHomesApiActionsUnion =\n  | CreateNursingHomeSuccess\n  | CreateNursingHomeFailure\n  | EditNursingHomeSuccess\n  | EditNursingHomeFailure\n  | LoadNursingHomesSuccess\n  | LoadNursingHomesFailure\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNursingHomeSuccess.html":{"url":"classes/CreateNursingHomeSuccess.html","title":"class - CreateNursingHomeSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNursingHomeSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/nursing-homes-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                add nursingHome success action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/nursing-homes-api.actions.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes-api.actions.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : NursingHomesApiActionTypes.CreateNursingHomeSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes-api.actions.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { NursingHome } from '../models/nursing-home.model';\n\n/**\n * definitions for action types\n */\nexport enum NursingHomesApiActionTypes {\n  CreateNursingHomeSuccess = '[NursingHome/Api] Create NursingHome Success',\n  CreateNursingHomeFailure = '[NursingHome/Api] Create NursingHome Failure',\n  LoadNursingHomesSuccess = '[NursingHome/Api] Load NursingHomes Success',\n  LoadNursingHomesFailure = '[NursingHome/Api] Load NursingHomes Failure',\n  EditNursingHomeSuccess = '[NursingHome/Api] Edit NursingHome Success',\n  EditNursingHomeFailure = '[NursingHome/Api] Edit NursingHome Failure',\n}\n\n/**\n * add nursingHome success action\n */\nexport class CreateNursingHomeSuccess implements Action {\n  public readonly type = NursingHomesApiActionTypes.CreateNursingHomeSuccess;\n\n  constructor(public payload: { nursingHome: NursingHome }) {\n  }\n}\n\n/**\n * add nursingHome failure action\n */\nexport class CreateNursingHomeFailure implements Action {\n  public readonly type = NursingHomesApiActionTypes.CreateNursingHomeFailure;\n\n  constructor(public payload: { message: string}) {\n  }\n}\n\n/**\n * load all nursingHomes success action\n */\nexport class LoadNursingHomesSuccess implements Action {\n  public readonly type = NursingHomesApiActionTypes.LoadNursingHomesSuccess;\n\n  constructor(public payload: { nursingHomes: NursingHome[] }) {\n  }\n}\n\n/**\n * load all nursingHomes action\n */\nexport class LoadNursingHomesFailure implements Action {\n  public readonly type = NursingHomesApiActionTypes.LoadNursingHomesFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * edit nursingHome success action\n */\nexport class EditNursingHomeSuccess implements Action {\n  public readonly type = NursingHomesApiActionTypes.EditNursingHomeSuccess;\n\n  constructor(public payload: { nursingHome: NursingHome }) {\n  }\n}\n\n/**\n * edit nursingHome failure action\n */\nexport class EditNursingHomeFailure implements Action {\n  public readonly type = NursingHomesApiActionTypes.EditNursingHomeFailure;\n\n  constructor(public payload: { message: string}) {\n  }\n}\n\n// export types\nexport type NursingHomesApiActionsUnion =\n  | CreateNursingHomeSuccess\n  | CreateNursingHomeFailure\n  | EditNursingHomeSuccess\n  | EditNursingHomeFailure\n  | LoadNursingHomesSuccess\n  | LoadNursingHomesFailure\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePatient.html":{"url":"classes/CreatePatient.html","title":"class - CreatePatient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePatient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients.actions.ts\n        \n\n            \n                Description\n            \n            \n                Create patient Action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/patients.actions.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsActionTypes.CreatePatient\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:57\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { IPatient } from '../models/patient.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum PatientsActionTypes {\n  SelectPatient = '[Patient] Select Current Patient',\n  ClearSelectedPatient = '[Patient] Clear Current Patient',\n  InitializePatient = '[Patient] Initialize Current Patient',\n  CreatePatientFormDialog = '[Patients] Pop Up Patient Form',\n  CreatePatient = '[Patient] Create Patient',\n  DismissPatientFormDialog = '[Patient] Dismiss Patient Form Dialog',\n  LoadPatients = '[Patient] Load Patients',\n  SearchPatient = '[Patient] Search Patient',\n  SearchPatientComplete = '[Patient] Search Patient Complete',\n  EditPatient = '[Patient] Edit Patient',\n  DismissEditPatient = '[Patient] Dismiss Edit Patient',\n  ResetPatientsState = '[Patients] Reset Patients State',\n  DeletePatient ='[Patients] Delete Patient',\n  LoadPatientUsers = '[User] Load User Patients'\n}\n\n\n/**\n * Select patient Action\n */\nexport class SelectPatient implements Action {\n  readonly type = PatientsActionTypes.SelectPatient;\n\n  constructor(public payload: IPatient) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedPatient implements Action {\n  readonly type = PatientsActionTypes.ClearSelectedPatient;\n}\n\n/**\n * Initialize patient Action\n */\nexport class InitializePatient implements Action {\n  readonly type = PatientsActionTypes.InitializePatient;\n}\n\n/**\n * action to pop up patient form\n */\nexport class CreatePatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.CreatePatientFormDialog;\n}\n\n/**\n * Create patient Action\n */\nexport class CreatePatient implements Action {\n  readonly type = PatientsActionTypes.CreatePatient;\n\n  constructor(public payload: { patient: IPatient }) { }\n}\n\n/**\n * CreatePatient Dialog window dismissed\n */\nexport class DismissPatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.DismissPatientFormDialog;\n}\n\n/**\n * Load patients Action\n */\nexport class LoadPatients implements Action {\n  readonly type = PatientsActionTypes.LoadPatients;\n}\n\n/**\n * Search patient Action\n */\nexport class SearchPatient implements Action {\n  readonly type = PatientsActionTypes.SearchPatient;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search patient complete Action\n */\nexport class SearchPatientComplete implements Action {\n  readonly type = PatientsActionTypes.SearchPatientComplete;\n\n  constructor(public payload: IPatient[]) { }\n}\n\n/**\n * action to submit and edit patient\n */\nexport class EditPatient implements Action {\n  readonly type = PatientsActionTypes.EditPatient;\n\n  constructor(public payload: IPatient) {\n  }\n}\n\n/**\n * Patient Edit dismissed action\n */\nexport class DismissEditPatient implements Action {\n  readonly type = PatientsActionTypes.DismissEditPatient;\n}\n\n/**\n * reset the patient state\n */\nexport class ResetPatientsState implements Action {\n  readonly type = PatientsActionTypes.ResetPatientsState;\n}\n\n/**\n * action to delete a patient\n */\nexport class DeletePatient implements Action {\n  readonly type = PatientsActionTypes.DeletePatient;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load patient users action\n */\nexport class LoadPatientUsers implements Action {\n  readonly type = PatientsActionTypes.LoadPatientUsers;\n  constructor(public payload: number ) { }\n}\n\n\n/**\n * Export union of patient Action\n */\nexport type PatientsActionsUnion\n  = SelectPatient\n  | ClearSelectedPatient\n  | InitializePatient\n  | CreatePatientFormDialog\n  | CreatePatient\n  | DismissPatientFormDialog\n  | LoadPatients\n  | SearchPatient\n  | SearchPatientComplete\n  | EditPatient\n  | DismissEditPatient\n  | ResetPatientsState\n  | LoadPatientUsers;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePatientFailure.html":{"url":"classes/CreatePatientFailure.html","title":"class - CreatePatientFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePatientFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                add patient failure action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/patients-api.actions.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients-api.actions.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsApiActionTypes.CreatePatientFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients-api.actions.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { IPatient } from '../models/patient.model';\n\n/**\n * definitions for action types\n */\nexport enum PatientsApiActionTypes {\n  CreatePatientSuccess = '[Patient/Api] Create Patient Success',\n  CreatePatientFailure = '[Patient/Api] Create Patient Failure',\n  LoadPatientsSuccess = '[Patient/Api] Load Patients Success',\n  LoadPatientsFailure = '[Patient/Api] Load Patients Failure',\n  EditPatientSuccess = '[Patient/Api] Edit Patient Success',\n  EditPatientFailure = '[Patient/Api] Edit Patient Failure',\n  LoadPatientUsersSuccess = '[User/Api] Load Patient Users Success',\n  LoadPatientUsersFailure = '[User/Api] Load Patient Users Failure',\n}\n\n/**\n * add patient success action\n */\nexport class CreatePatientSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.CreatePatientSuccess;\n\n  constructor(public payload: { patient: IPatient }) {\n  }\n}\n\n/**\n * add patient failure action\n */\nexport class CreatePatientFailure implements Action {\n  public readonly type = PatientsApiActionTypes.CreatePatientFailure;\n\n  constructor(public payload: { messages: string }) {\n  }\n}\n\n/**\n * load all patients success action\n */\nexport class LoadPatientsSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientsSuccess;\n\n  constructor(public payload: { patients: IPatient[] }) {\n  }\n}\n\n/**\n * load all patients action\n */\nexport class LoadPatientsFailure implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientsFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * edit patient success action\n */\nexport class EditPatientSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.EditPatientSuccess;\n\n  constructor(public payload: { patient: IPatient }) {\n  }\n}\n\n/**\n * edit patient failure action\n */\nexport class EditPatientFailure implements Action {\n  public readonly type = PatientsApiActionTypes.EditPatientFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * load all patient users success action\n */\nexport class LoadPatientUsersSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientUsersSuccess;\n\n  constructor(public payload: { users: User[] }) {\n  }\n}\n\n/**\n * load all patient users failure action\n */\nexport class LoadPatientUsersFailure implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientUsersFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n// export types\nexport type PatientsApiActionsUnion =\n  | CreatePatientSuccess\n  | CreatePatientFailure\n  | EditPatientSuccess\n  | EditPatientFailure\n  | LoadPatientsSuccess\n  | LoadPatientsFailure\n  | LoadPatientUsersSuccess\n  | LoadPatientUsersFailure;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePatientFormDialog.html":{"url":"classes/CreatePatientFormDialog.html","title":"class - CreatePatientFormDialog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePatientFormDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients.actions.ts\n        \n\n            \n                Description\n            \n            \n                action to pop up patient form\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsActionTypes.CreatePatientFormDialog\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:50\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { IPatient } from '../models/patient.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum PatientsActionTypes {\n  SelectPatient = '[Patient] Select Current Patient',\n  ClearSelectedPatient = '[Patient] Clear Current Patient',\n  InitializePatient = '[Patient] Initialize Current Patient',\n  CreatePatientFormDialog = '[Patients] Pop Up Patient Form',\n  CreatePatient = '[Patient] Create Patient',\n  DismissPatientFormDialog = '[Patient] Dismiss Patient Form Dialog',\n  LoadPatients = '[Patient] Load Patients',\n  SearchPatient = '[Patient] Search Patient',\n  SearchPatientComplete = '[Patient] Search Patient Complete',\n  EditPatient = '[Patient] Edit Patient',\n  DismissEditPatient = '[Patient] Dismiss Edit Patient',\n  ResetPatientsState = '[Patients] Reset Patients State',\n  DeletePatient ='[Patients] Delete Patient',\n  LoadPatientUsers = '[User] Load User Patients'\n}\n\n\n/**\n * Select patient Action\n */\nexport class SelectPatient implements Action {\n  readonly type = PatientsActionTypes.SelectPatient;\n\n  constructor(public payload: IPatient) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedPatient implements Action {\n  readonly type = PatientsActionTypes.ClearSelectedPatient;\n}\n\n/**\n * Initialize patient Action\n */\nexport class InitializePatient implements Action {\n  readonly type = PatientsActionTypes.InitializePatient;\n}\n\n/**\n * action to pop up patient form\n */\nexport class CreatePatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.CreatePatientFormDialog;\n}\n\n/**\n * Create patient Action\n */\nexport class CreatePatient implements Action {\n  readonly type = PatientsActionTypes.CreatePatient;\n\n  constructor(public payload: { patient: IPatient }) { }\n}\n\n/**\n * CreatePatient Dialog window dismissed\n */\nexport class DismissPatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.DismissPatientFormDialog;\n}\n\n/**\n * Load patients Action\n */\nexport class LoadPatients implements Action {\n  readonly type = PatientsActionTypes.LoadPatients;\n}\n\n/**\n * Search patient Action\n */\nexport class SearchPatient implements Action {\n  readonly type = PatientsActionTypes.SearchPatient;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search patient complete Action\n */\nexport class SearchPatientComplete implements Action {\n  readonly type = PatientsActionTypes.SearchPatientComplete;\n\n  constructor(public payload: IPatient[]) { }\n}\n\n/**\n * action to submit and edit patient\n */\nexport class EditPatient implements Action {\n  readonly type = PatientsActionTypes.EditPatient;\n\n  constructor(public payload: IPatient) {\n  }\n}\n\n/**\n * Patient Edit dismissed action\n */\nexport class DismissEditPatient implements Action {\n  readonly type = PatientsActionTypes.DismissEditPatient;\n}\n\n/**\n * reset the patient state\n */\nexport class ResetPatientsState implements Action {\n  readonly type = PatientsActionTypes.ResetPatientsState;\n}\n\n/**\n * action to delete a patient\n */\nexport class DeletePatient implements Action {\n  readonly type = PatientsActionTypes.DeletePatient;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load patient users action\n */\nexport class LoadPatientUsers implements Action {\n  readonly type = PatientsActionTypes.LoadPatientUsers;\n  constructor(public payload: number ) { }\n}\n\n\n/**\n * Export union of patient Action\n */\nexport type PatientsActionsUnion\n  = SelectPatient\n  | ClearSelectedPatient\n  | InitializePatient\n  | CreatePatientFormDialog\n  | CreatePatient\n  | DismissPatientFormDialog\n  | LoadPatients\n  | SearchPatient\n  | SearchPatientComplete\n  | EditPatient\n  | DismissEditPatient\n  | ResetPatientsState\n  | LoadPatientUsers;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePatientSuccess.html":{"url":"classes/CreatePatientSuccess.html","title":"class - CreatePatientSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePatientSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                add patient success action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/patients-api.actions.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients-api.actions.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsApiActionTypes.CreatePatientSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients-api.actions.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { IPatient } from '../models/patient.model';\n\n/**\n * definitions for action types\n */\nexport enum PatientsApiActionTypes {\n  CreatePatientSuccess = '[Patient/Api] Create Patient Success',\n  CreatePatientFailure = '[Patient/Api] Create Patient Failure',\n  LoadPatientsSuccess = '[Patient/Api] Load Patients Success',\n  LoadPatientsFailure = '[Patient/Api] Load Patients Failure',\n  EditPatientSuccess = '[Patient/Api] Edit Patient Success',\n  EditPatientFailure = '[Patient/Api] Edit Patient Failure',\n  LoadPatientUsersSuccess = '[User/Api] Load Patient Users Success',\n  LoadPatientUsersFailure = '[User/Api] Load Patient Users Failure',\n}\n\n/**\n * add patient success action\n */\nexport class CreatePatientSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.CreatePatientSuccess;\n\n  constructor(public payload: { patient: IPatient }) {\n  }\n}\n\n/**\n * add patient failure action\n */\nexport class CreatePatientFailure implements Action {\n  public readonly type = PatientsApiActionTypes.CreatePatientFailure;\n\n  constructor(public payload: { messages: string }) {\n  }\n}\n\n/**\n * load all patients success action\n */\nexport class LoadPatientsSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientsSuccess;\n\n  constructor(public payload: { patients: IPatient[] }) {\n  }\n}\n\n/**\n * load all patients action\n */\nexport class LoadPatientsFailure implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientsFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * edit patient success action\n */\nexport class EditPatientSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.EditPatientSuccess;\n\n  constructor(public payload: { patient: IPatient }) {\n  }\n}\n\n/**\n * edit patient failure action\n */\nexport class EditPatientFailure implements Action {\n  public readonly type = PatientsApiActionTypes.EditPatientFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * load all patient users success action\n */\nexport class LoadPatientUsersSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientUsersSuccess;\n\n  constructor(public payload: { users: User[] }) {\n  }\n}\n\n/**\n * load all patient users failure action\n */\nexport class LoadPatientUsersFailure implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientUsersFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n// export types\nexport type PatientsApiActionsUnion =\n  | CreatePatientSuccess\n  | CreatePatientFailure\n  | EditPatientSuccess\n  | EditPatientFailure\n  | LoadPatientsSuccess\n  | LoadPatientsFailure\n  | LoadPatientUsersSuccess\n  | LoadPatientUsersFailure;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUser.html":{"url":"classes/CreateUser.html","title":"class - CreateUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users.actions.ts\n        \n\n            \n                Description\n            \n            \n                Create user Action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/users.actions.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersActionTypes.CreateUser\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:57\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum UsersActionTypes {\n  SelectUser = '[User] Select Current User',\n  ClearSelectedUser = '[User] Clear Current User',\n  InitializeUser = '[User] Initialize Current User',\n  CreateUserFormDialog = '[Users] Pop Up User Form',\n  CreateUser = '[User] Create User',\n  DismissUserFormDialog = '[User] Dismiss User Form Dialog',\n  LoadUsers = '[User] Load Users',\n  SearchUser = '[User] Search User',\n  SearchUserComplete = '[User] Search User Complete',\n  EditUser = '[User] Edit User',\n  DismissEditUser = '[User] Dismiss Edit User',\n  ResetUsersState = '[Users] Reset Users State',\n  DeleteUser = '[Users] Delete User',\n  LoadUserPatients = '[User] Load User Patients'\n}\n\n\n/**\n * Select user Action\n */\nexport class SelectUser implements Action {\n  readonly type = UsersActionTypes.SelectUser;\n\n  constructor(public payload: User) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedUser implements Action {\n  readonly type = UsersActionTypes.ClearSelectedUser;\n}\n\n/**\n * Initialize user Action\n */\nexport class InitializeUser implements Action {\n  readonly type = UsersActionTypes.InitializeUser;\n}\n\n/**\n * action to pop up user form\n */\nexport class CreateUserFormDialog implements Action {\n  readonly type = UsersActionTypes.CreateUserFormDialog;\n}\n\n/**\n * Create user Action\n */\nexport class CreateUser implements Action {\n  readonly type = UsersActionTypes.CreateUser;\n\n  constructor(public payload: { user: User }) { }\n}\n\n/**\n * CreateUser Dialog window dismissed\n */\nexport class DismissUserFormDialog implements Action {\n  readonly type = UsersActionTypes.DismissUserFormDialog;\n}\n\n/**\n * Load users Action\n */\nexport class LoadUsers implements Action {\n  readonly type = UsersActionTypes.LoadUsers;\n}\n\n/**\n * Search user action\n */\nexport class SearchUser implements Action {\n  readonly type = UsersActionTypes.SearchUser;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search user complete action\n */\nexport class SearchUserComplete implements Action {\n  readonly type = UsersActionTypes.SearchUserComplete;\n\n  constructor(public payload: User[]) { }\n}\n\n/**\n * action to submit and edit user\n */\nexport class EditUser implements Action {\n  readonly type = UsersActionTypes.EditUser;\n\n  constructor(public payload: User) {\n  }\n}\n\n/**\n * User Edit dismissed action\n */\nexport class DismissEditUser implements Action {\n  readonly type = UsersActionTypes.DismissEditUser;\n}\n\n/**\n * reset the user state\n */\nexport class ResetUsersState implements Action {\n  readonly type = UsersActionTypes.ResetUsersState;\n}\n\n/**\n * action to delete a user\n */\nexport class DeleteUser implements Action {\n  readonly type = UsersActionTypes.DeleteUser;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load user patients action\n */\nexport class LoadUserPatients implements Action {\n  readonly type = UsersActionTypes.LoadUserPatients;\n  constructor(public payload: number ) { }\n}\n\n/**\n * Export union of user Action\n */\nexport type UsersActionsUnion\n  = SelectUser\n  | ClearSelectedUser\n  | InitializeUser\n  | CreateUserFormDialog\n  | CreateUser\n  | DismissUserFormDialog\n  | LoadUsers\n  | SearchUser\n  | SearchUserComplete\n  | EditUser\n  | DismissEditUser\n  | ResetUsersState\n  | LoadUserPatients;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserFailure.html":{"url":"classes/CreateUserFailure.html","title":"class - CreateUserFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                add user failure action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/users-api.actions.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users-api.actions.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersApiActionTypes.CreateUserFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users-api.actions.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { IPatient } from '../models/patient.model';\n\n/**\n * definitions for action types\n */\nexport enum UsersApiActionTypes {\n  CreateUserSuccess = '[User/Api] Create User Success',\n  CreateUserFailure = '[User/Api] Create User Failure',\n  LoadUsersSuccess = '[User/Api] Load Users Success',\n  LoadUsersFailure = '[User/Api] Load Users Failure',\n  EditUserSuccess = '[User/Api] Edit User Success',\n  EditUserFailure = '[User/Api] Edit User Failure',\n  LoadUserPatientsSuccess = '[User/Api] Load User Patients Success',\n  LoadUserPatientsFailure = '[User/Api] Load User Patients Failure',\n}\n\n/**\n * add user success action\n */\nexport class CreateUserSuccess implements Action {\n  public readonly type = UsersApiActionTypes.CreateUserSuccess;\n\n  constructor(public payload: { user: User }) {\n  }\n}\n\n/**\n * add user failure action\n */\nexport class CreateUserFailure implements Action {\n  public readonly type = UsersApiActionTypes.CreateUserFailure;\n\n  constructor(public payload: { messages: string }) {\n  }\n}\n\n/**\n * load all users success action\n */\nexport class LoadUsersSuccess implements Action {\n  public readonly type = UsersApiActionTypes.LoadUsersSuccess;\n\n  constructor(public payload: { users: User[] }) {\n  }\n}\n\n/**\n * load all users failure action\n */\nexport class LoadUsersFailure implements Action {\n  public readonly type = UsersApiActionTypes.LoadUsersFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * edit user success action\n */\nexport class EditUserSuccess implements Action {\n  public readonly type = UsersApiActionTypes.EditUserSuccess;\n\n  constructor(public payload: { user: User }) {\n  }\n}\n\n/**\n * edit user failure action\n */\nexport class EditUserFailure implements Action {\n  public readonly type = UsersApiActionTypes.EditUserFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * load all user patients success action\n */\nexport class LoadUserPatientsSuccess implements Action {\n  public readonly type = UsersApiActionTypes.LoadUserPatientsSuccess;\n\n  constructor(public payload: { patients: IPatient[] }) {\n  }\n}\n\n/**\n * load all user patients failure action\n */\nexport class LoadUserPatientsFailure implements Action {\n  public readonly type = UsersApiActionTypes.LoadUserPatientsFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n// export types\nexport type UsersApiActionsUnion =\n  | CreateUserSuccess\n  | CreateUserFailure\n  | EditUserSuccess\n  | EditUserFailure\n  | LoadUsersSuccess\n  | LoadUsersFailure\n  | LoadUserPatientsSuccess\n  | LoadUserPatientsFailure\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserFormDialog.html":{"url":"classes/CreateUserFormDialog.html","title":"class - CreateUserFormDialog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserFormDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users.actions.ts\n        \n\n            \n                Description\n            \n            \n                action to pop up user form\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersActionTypes.CreateUserFormDialog\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:50\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum UsersActionTypes {\n  SelectUser = '[User] Select Current User',\n  ClearSelectedUser = '[User] Clear Current User',\n  InitializeUser = '[User] Initialize Current User',\n  CreateUserFormDialog = '[Users] Pop Up User Form',\n  CreateUser = '[User] Create User',\n  DismissUserFormDialog = '[User] Dismiss User Form Dialog',\n  LoadUsers = '[User] Load Users',\n  SearchUser = '[User] Search User',\n  SearchUserComplete = '[User] Search User Complete',\n  EditUser = '[User] Edit User',\n  DismissEditUser = '[User] Dismiss Edit User',\n  ResetUsersState = '[Users] Reset Users State',\n  DeleteUser = '[Users] Delete User',\n  LoadUserPatients = '[User] Load User Patients'\n}\n\n\n/**\n * Select user Action\n */\nexport class SelectUser implements Action {\n  readonly type = UsersActionTypes.SelectUser;\n\n  constructor(public payload: User) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedUser implements Action {\n  readonly type = UsersActionTypes.ClearSelectedUser;\n}\n\n/**\n * Initialize user Action\n */\nexport class InitializeUser implements Action {\n  readonly type = UsersActionTypes.InitializeUser;\n}\n\n/**\n * action to pop up user form\n */\nexport class CreateUserFormDialog implements Action {\n  readonly type = UsersActionTypes.CreateUserFormDialog;\n}\n\n/**\n * Create user Action\n */\nexport class CreateUser implements Action {\n  readonly type = UsersActionTypes.CreateUser;\n\n  constructor(public payload: { user: User }) { }\n}\n\n/**\n * CreateUser Dialog window dismissed\n */\nexport class DismissUserFormDialog implements Action {\n  readonly type = UsersActionTypes.DismissUserFormDialog;\n}\n\n/**\n * Load users Action\n */\nexport class LoadUsers implements Action {\n  readonly type = UsersActionTypes.LoadUsers;\n}\n\n/**\n * Search user action\n */\nexport class SearchUser implements Action {\n  readonly type = UsersActionTypes.SearchUser;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search user complete action\n */\nexport class SearchUserComplete implements Action {\n  readonly type = UsersActionTypes.SearchUserComplete;\n\n  constructor(public payload: User[]) { }\n}\n\n/**\n * action to submit and edit user\n */\nexport class EditUser implements Action {\n  readonly type = UsersActionTypes.EditUser;\n\n  constructor(public payload: User) {\n  }\n}\n\n/**\n * User Edit dismissed action\n */\nexport class DismissEditUser implements Action {\n  readonly type = UsersActionTypes.DismissEditUser;\n}\n\n/**\n * reset the user state\n */\nexport class ResetUsersState implements Action {\n  readonly type = UsersActionTypes.ResetUsersState;\n}\n\n/**\n * action to delete a user\n */\nexport class DeleteUser implements Action {\n  readonly type = UsersActionTypes.DeleteUser;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load user patients action\n */\nexport class LoadUserPatients implements Action {\n  readonly type = UsersActionTypes.LoadUserPatients;\n  constructor(public payload: number ) { }\n}\n\n/**\n * Export union of user Action\n */\nexport type UsersActionsUnion\n  = SelectUser\n  | ClearSelectedUser\n  | InitializeUser\n  | CreateUserFormDialog\n  | CreateUser\n  | DismissUserFormDialog\n  | LoadUsers\n  | SearchUser\n  | SearchUserComplete\n  | EditUser\n  | DismissEditUser\n  | ResetUsersState\n  | LoadUserPatients;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserSuccess.html":{"url":"classes/CreateUserSuccess.html","title":"class - CreateUserSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                add user success action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/users-api.actions.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users-api.actions.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersApiActionTypes.CreateUserSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users-api.actions.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { IPatient } from '../models/patient.model';\n\n/**\n * definitions for action types\n */\nexport enum UsersApiActionTypes {\n  CreateUserSuccess = '[User/Api] Create User Success',\n  CreateUserFailure = '[User/Api] Create User Failure',\n  LoadUsersSuccess = '[User/Api] Load Users Success',\n  LoadUsersFailure = '[User/Api] Load Users Failure',\n  EditUserSuccess = '[User/Api] Edit User Success',\n  EditUserFailure = '[User/Api] Edit User Failure',\n  LoadUserPatientsSuccess = '[User/Api] Load User Patients Success',\n  LoadUserPatientsFailure = '[User/Api] Load User Patients Failure',\n}\n\n/**\n * add user success action\n */\nexport class CreateUserSuccess implements Action {\n  public readonly type = UsersApiActionTypes.CreateUserSuccess;\n\n  constructor(public payload: { user: User }) {\n  }\n}\n\n/**\n * add user failure action\n */\nexport class CreateUserFailure implements Action {\n  public readonly type = UsersApiActionTypes.CreateUserFailure;\n\n  constructor(public payload: { messages: string }) {\n  }\n}\n\n/**\n * load all users success action\n */\nexport class LoadUsersSuccess implements Action {\n  public readonly type = UsersApiActionTypes.LoadUsersSuccess;\n\n  constructor(public payload: { users: User[] }) {\n  }\n}\n\n/**\n * load all users failure action\n */\nexport class LoadUsersFailure implements Action {\n  public readonly type = UsersApiActionTypes.LoadUsersFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * edit user success action\n */\nexport class EditUserSuccess implements Action {\n  public readonly type = UsersApiActionTypes.EditUserSuccess;\n\n  constructor(public payload: { user: User }) {\n  }\n}\n\n/**\n * edit user failure action\n */\nexport class EditUserFailure implements Action {\n  public readonly type = UsersApiActionTypes.EditUserFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * load all user patients success action\n */\nexport class LoadUserPatientsSuccess implements Action {\n  public readonly type = UsersApiActionTypes.LoadUserPatientsSuccess;\n\n  constructor(public payload: { patients: IPatient[] }) {\n  }\n}\n\n/**\n * load all user patients failure action\n */\nexport class LoadUserPatientsFailure implements Action {\n  public readonly type = UsersApiActionTypes.LoadUserPatientsFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n// export types\nexport type UsersApiActionsUnion =\n  | CreateUserSuccess\n  | CreateUserFailure\n  | EditUserSuccess\n  | EditUserFailure\n  | LoadUsersSuccess\n  | LoadUsersFailure\n  | LoadUserPatientsSuccess\n  | LoadUserPatientsFailure\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardLayoutComponent.html":{"url":"components/DashboardLayoutComponent.html","title":"component - DashboardLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/containers/dashboard-layout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-dashboard\n            \n\n\n\n\n            \n                templateUrl\n                ./dashboard-layout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getIsMobile\n                            \n                            \n                                    Public\n                                isModuleLoading\n                            \n                            \n                                    Public\n                                layoutConf\n                            \n                            \n                                    Private\n                                layoutConfSub\n                            \n                            \n                                    Public\n                                layoutInTransition\n                            \n                            \n                                    Private\n                                mediaSub\n                            \n                            \n                                    Private\n                                moduleLoaderSub\n                            \n                            \n                                    Public\n                                navPosition\n                            \n                            \n                                    Private\n                                routerEventSub\n                            \n                            \n                                    Public\n                                scrollConfig\n                            \n                            \n                                    Public\n                                sidebarStyle\n                            \n                            \n                                    Public\n                                themeService\n                            \n                            \n                                    Public\n                                topBarFixed\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeSidebar\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                scrollToTop\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, router: Router, translate: TranslateService, themeService: ThemeService, layout: LayoutService, media: ObservableMedia)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/containers/dashboard-layout.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                    ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        layout\n                                                  \n                                                        \n                                                                    LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        media\n                                                  \n                                                        \n                                                                    ObservableMedia\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            window:resize\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nwindow:resize(event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard-layout.component.ts:93\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeSidebar\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseSidebar()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard-layout.component.ts:139\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard-layout.component.ts:97\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard-layout.component.ts:127\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard-layout.component.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scrollToTop\n                            \n                            \n                        \n                    \n                \n                \n                    \nscrollToTop(selector: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard-layout.component.ts:120\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getIsMobile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getIsMobile:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard-layout.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isModuleLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isModuleLoading:     Boolean\n\n                    \n                \n                    \n                        \n                            Type :     Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard-layout.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            layoutConf\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layoutConf:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard-layout.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            layoutConfSub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layoutConfSub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard-layout.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            layoutInTransition\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layoutInTransition:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard-layout.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mediaSub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mediaSub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard-layout.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            moduleLoaderSub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        moduleLoaderSub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard-layout.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navPosition\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navPosition:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard-layout.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            routerEventSub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        routerEventSub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard-layout.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            scrollConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scrollConfig:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard-layout.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidebarStyle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidebarStyle:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard-layout.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            themeService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        themeService:     ThemeService\n\n                    \n                \n                    \n                        \n                            Type :     ThemeService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard-layout.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            topBarFixed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        topBarFixed:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard-layout.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translate:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard-layout.component.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, HostListener, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription, from } from 'rxjs';\nimport { NavigationEnd, ResolveEnd, ResolveStart, RouteConfigLoadEnd, RouteConfigLoadStart, Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ThemeService } from '../../core/services/theme.service';\nimport { LayoutService } from '../../core/services/layout.service';\nimport { ObservableMedia } from '@angular/flex-layout';\nimport { filter } from 'rxjs/operators';\nimport { Store, select } from '@ngrx/store';\n\nimport * as fromDashboard from '../reducers';\nimport * as layoutActions from '../actions/layout.actions';\n\n@Component({\n  selector: 'moio-dashboard',\n  templateUrl: './dashboard-layout.component.html'\n})\nexport class DashboardLayoutComponent implements OnInit, AfterViewInit, OnDestroy {\n  public isModuleLoading: Boolean = false;\n  private moduleLoaderSub: Subscription;\n  private layoutConfSub: Subscription;\n  private routerEventSub: Subscription;\n  private mediaSub: Subscription;\n  // private sidebarPS: PerfectScrollbar;\n\n  // private bodyPS: PerfectScrollbar;\n  // private headerFixedBodyPS: PerfectScrollbar;\n  public scrollConfig = {};\n  public layoutConf: any = {};\n  public sidebarStyle: string;\n  public navPosition: string;\n  public layoutInTransition: boolean;\n  public topBarFixed: boolean;\n  public getIsMobile: boolean;\n\n  constructor(\n    private store: Store,\n    private router: Router,\n    public translate: TranslateService,\n    public themeService: ThemeService,\n    private layout: LayoutService,\n    private media: ObservableMedia\n  ) {\n    // Close sidenav after route change in mobile\n    this.routerEventSub = router.events\n      .pipe(\n        filter(event => event instanceof NavigationEnd)\n      )\n      .subscribe((routeChange: NavigationEnd) => {\n        this.layout.adjustLayout({route: routeChange.url});\n      });\n\n    // Translator init\n    const browserLang: string = translate.getBrowserLang();\n    translate.use(browserLang.match(/en|de/) ? browserLang : 'de');\n  }\n\n  ngOnInit() {\n    this.store.pipe(select(fromDashboard.getSideNav)).subscribe(\n      sideNavStyle => this.sidebarStyle = sideNavStyle\n    );\n\n    this.store.pipe(select(fromDashboard.getNavPosition)).subscribe(\n      navPosition => this.navPosition = navPosition\n    );\n\n    this.store.pipe(select(fromDashboard.getLayoutInTransition)).subscribe(\n      layoutInTransition => this.layoutInTransition = layoutInTransition\n    );\n\n    this.store.pipe(select(fromDashboard.getTopbarFixed)).subscribe(\n      topBarFixed => this.topBarFixed = topBarFixed\n    );\n\n    this.store.pipe(select(fromDashboard.getIsMobile)).subscribe(\n      isMobile => this.getIsMobile = isMobile\n    );\n\n    this.layoutConf = this.layout.layoutConf;\n\n    // FOR MODULE LOADER FLAG\n    this.moduleLoaderSub = this.router.events.subscribe(event => {\n      if (event instanceof RouteConfigLoadStart || event instanceof ResolveStart) {\n        this.isModuleLoading = true;\n      }\n      if (event instanceof RouteConfigLoadEnd || event instanceof ResolveEnd) {\n        this.isModuleLoading = false;\n      }\n    });\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    this.layout.adjustLayout(event);\n  }\n\n  ngAfterViewInit() {\n    // this.layoutConfSub = this.layout-components.layoutConf$.subscribe(change => {\n    //   // this.initBodyPS(change)\n    // })\n  }\n\n  // initBodyPS(layoutConf:any = {}) {\n  //   if(layoutConf.navigationPos === 'side' && layoutConf.topbarFixed) {\n  //     if (this.bodyPS) this.bodyPS.destroy();\n  //     if (this.headerFixedBodyPS) this.headerFixedBodyPS.destroy();\n  //     this.headerFixedBodyPS = new PerfectScrollbar('.rightside-content-hold', {\n  //       suppressScrollX: true\n  //     });\n  //     this.scrollToTop('.rightside-content-hold');\n  //   } else {\n  //     if (this.bodyPS) this.bodyPS.destroy();\n  //     if (this.headerFixedBodyPS) this.headerFixedBodyPS.destroy();\n  //     this.bodyPS = new PerfectScrollbar('.main-content-wrap', {\n  //       suppressScrollX: true\n  //     });\n  //     this.scrollToTop('.main-content-wrap');\n  //   }\n  // }\n  scrollToTop(selector: string) {\n    if (document) {\n      const element = document.querySelector(selector);\n      element.scrollTop = 0;\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.moduleLoaderSub) {\n      this.moduleLoaderSub.unsubscribe();\n    }\n    if (this.layoutConfSub) {\n      this.layoutConfSub.unsubscribe();\n    }\n    if (this.routerEventSub) {\n      this.routerEventSub.unsubscribe();\n    }\n  }\n\n  closeSidebar() {\n    this.store.dispatch(new layoutActions.CloseSideNav('close'));\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n    \n    \n\n    \n    \n    \n\n    \n    \n      \n      \n      \n      \n\n      \n        \n        \n          \n            \n            \n          \n        \n        \n        \n        \n        \n      \n    \n    \n    \n\n    \n    \n      \n        \n      \n    \n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'DashboardLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardModule.html":{"url":"modules/DashboardModule.html","title":"module - DashboardModule","body":"\n                   \n\n\n\n\n    Modules\n    DashboardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_imports\n\n\n\ncluster_DashboardModule_exports\n\n\n\ncluster_DashboardModule_providers\n\n\n\n\nConfirmComponent\n\nConfirmComponent\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nConfirmComponent->DashboardModule\n\n\n\n\n\nDashboardLayoutComponent \n\nDashboardLayoutComponent \n\nDashboardLayoutComponent  -->\n\nDashboardModule->DashboardLayoutComponent \n\n\n\n\n\nDashboardRoutingModule \n\nDashboardRoutingModule \n\nDashboardRoutingModule  -->\n\nDashboardModule->DashboardRoutingModule \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nDashboardModule -->\n\nCoreModule->DashboardModule\n\n\n\n\n\nDashboardRoutingModule\n\nDashboardRoutingModule\n\nDashboardModule -->\n\nDashboardRoutingModule->DashboardModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nDashboardModule -->\n\nMaterialModule->DashboardModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nDashboardModule -->\n\nSharedModule->DashboardModule\n\n\n\n\n\nConfirmService\n\nConfirmService\n\nDashboardModule -->\n\nConfirmService->DashboardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/dashboard.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Dashboard Module\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ConfirmComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            PatientFormComponent\n                        \n                        \n                            UserFormComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ConfirmService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                        \n                            DashboardRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DashboardLayoutComponent\n                        \n                        \n                            DashboardRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { MaterialModule } from '../material';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { NotificationsComponent } from './containers/layout-components/notifications/notifications.component';\nimport { BreadcrumbComponent } from './containers/layout-components/breadcrumb/breadcrumb.component';\nimport { HeaderSideComponent } from './containers/layout-components/header-side/header-side.component';\nimport { SidebarSideComponent } from './containers/layout-components/sidebar-side/sidebar-side.component';\nimport { SidebarTopComponent } from './containers/layout-components/sidebar-top/sidebar-top.component';\nimport { DashboardLayoutComponent } from './containers/dashboard-layout.component';\nimport { SidenavComponent } from './containers/layout-components/sidenav/sidenav.component';\nimport { BlankComponent } from './components/blank/blank.component';\nimport { UsersEffects } from './effects/users.effects';\nimport { PatientsEffects } from './effects/patients.effects';\nimport { NursingHomesEffects } from './effects/nursing-homes.effects';\nimport { ConfirmService } from '../core/services/confirm.service';\nimport { SharedModule } from './shared/shared.module';\n\n/* NGRX */\nimport { StoreModule } from '@ngrx/store';\nimport * as fromDashboard from './reducers';\nimport { EffectsModule } from '@ngrx/effects';\nimport { CoreModule } from '../core/core.module';\nimport { UserListComponent } from './components/users/user-list/user-list.component';\nimport { PatientListComponent } from './components/patients/patient-list/patient-list.component';\nimport { UsersComponent } from './components/users/users.component';\nimport { PatientsComponent } from './components/patients/patients.component';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { SplitPaneModule } from 'ng2-split-pane/lib/ng2-split-pane';\nimport { UserEditFormComponent } from './components/users/user-edit-form/user-edit-form.component';\nimport { PatientEditFormComponent } from './components/patients/patient-edit-form/patient-edit-form.component';\nimport { UserFormComponent } from './components/users/user-form/user-form.component';\nimport { PatientFormComponent } from './components/patients/patient-form/patient-form.component';\nimport { NursingHomeFormComponent } from './components/nursing-homes/nursing-home-form/nursing-home-form.component';\nimport { LoaderComponent } from '../core/components/loader/loader.component';\nimport { AppDropdownDirective } from '../core/directives/dropdown.directive';\nimport { DropdownLinkDirective } from '../core/directives/dropdown-link.directive';\nimport { DropdownAnchorDirective } from '../core/directives/dropdown-anchor.directive';\nimport { EgretSideNavToggleDirective } from '../core/directives/egret-side-nav-toggle.directive';\nimport { FontSizeDirective } from '../core/directives/font-size.directive';\nimport { ScrollToDirective } from '../core/directives/scroll-to.directive';\n\n\n/**\n * list of components in this module\n */\nexport const COMPONENTS = [\n  DashboardLayoutComponent,\n  NotificationsComponent,\n  BreadcrumbComponent,\n  HeaderSideComponent,\n  NotificationsComponent,\n  SidebarSideComponent,\n  SidebarTopComponent,\n  SidenavComponent,\n  BlankComponent,\n  BlankComponent,\n  UsersComponent,\n  PatientsComponent,\n  UserListComponent,\n  PatientListComponent,\n  UserEditFormComponent,\n  PatientEditFormComponent,\n  UserFormComponent,\n  PatientFormComponent,\n  NursingHomeFormComponent,\n\n  LoaderComponent,\n  AppDropdownDirective,\n  DropdownLinkDirective,\n  DropdownAnchorDirective,\n  EgretSideNavToggleDirective,\n  FontSizeDirective,\n  ScrollToDirective\n\n];\n\n/**\n * list of effects in this module\n */\nexport const EFFECTS = [\n  UsersEffects,\n  PatientsEffects,\n  NursingHomesEffects\n];\n\n/**\n * Dashboard Module\n */\n@NgModule({\n  declarations: [COMPONENTS],\n  imports: [\n    CommonModule,\n    CoreModule,\n    MaterialModule,\n    TranslateModule,\n    DashboardRoutingModule,\n    PerfectScrollbarModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    NgxDatatableModule,\n    StoreModule.forFeature('dashboard', fromDashboard.reducers),\n    EffectsModule.forFeature(EFFECTS),\n    SplitPaneModule\n  ],\n  exports: [\n    DashboardLayoutComponent,\n    DashboardRoutingModule\n  ],\n  providers: [\n    ConfirmService\n  ],\n  entryComponents: [UserFormComponent, PatientFormComponent\n  ]\n})\nexport class DashboardModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardRoutingModule.html":{"url":"modules/DashboardRoutingModule.html","title":"module - DashboardRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    DashboardRoutingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DashboardRoutingModule\n\n\n\ncluster_DashboardRoutingModule_imports\n\n\n\n\nMaterialModule\n\nMaterialModule\n\n\n\nDashboardRoutingModule\n\nDashboardRoutingModule\n\nDashboardRoutingModule -->\n\nMaterialModule->DashboardRoutingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/dashboard-routing.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from '../material';\nimport { BlankComponent } from './components/blank/blank.component';\nimport { UsersComponent } from './components/users/users.component';\nimport { PatientsComponent } from './components/patients/patients.component';\nimport { Routes } from '@angular/router';\nimport { DashboardLayoutComponent } from './containers/dashboard-layout.component';\nimport { AuthGuard } from '../auth/guards/auth.guard';\n\n/**\n * Dashboard module routings\n * protected by AuthGuard\n**/\nexport const dashboardRoutes: Routes = [\n  {\n    path: 'dashboard',\n    component: DashboardLayoutComponent,\n    canActivate: [AuthGuard],\n    data: {\n      title: 'Dashboard',\n      breadcrumb: 'Dashboard'\n    },\n    children: [\n      {\n        path: '',\n        redirectTo: 'blank',\n        pathMatch: 'full'\n      },\n      {\n        path: 'blank',\n        component: BlankComponent,\n        data: {\n          title: 'Blank',\n          breadcrumb: 'Blank'\n        }\n      }, {\n        path: 'users',\n        component: UsersComponent,\n        data: {\n          title: 'Users',\n          breadcrumb: 'Users'\n        }\n      }, {\n        path: 'patients',\n        component: PatientsComponent,\n        data: {\n          title: 'Patients',\n          breadcrumb: 'Patients'\n        }\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialModule,\n    RouterModule.forChild(dashboardRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class DashboardRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DashboardState.html":{"url":"interfaces/DashboardState.html","title":"interface - DashboardState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DashboardState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/reducers/index.ts\n        \n\n            \n                Description\n            \n            \n                compose dashboard state for global store\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        layout\n                                \n                                \n                                        nursingHomePage\n                                \n                                \n                                        nursingHomes\n                                \n                                \n                                        patientPage\n                                \n                                \n                                        patients\n                                \n                                \n                                        patientUsers\n                                \n                                \n                                        userPage\n                                \n                                \n                                        userPatients\n                                \n                                \n                                        users\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        layout\n                                    \n                                \n                                \n                                    \n                                        layout:     fromLayout.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromLayout.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nursingHomePage\n                                    \n                                \n                                \n                                    \n                                        nursingHomePage:     fromNursingHomePage.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromNursingHomePage.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nursingHomes\n                                    \n                                \n                                \n                                    \n                                        nursingHomes:     fromNursingHome.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromNursingHome.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        patientPage\n                                    \n                                \n                                \n                                    \n                                        patientPage:     fromPatientPage.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromPatientPage.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        patients\n                                    \n                                \n                                \n                                    \n                                        patients:     fromPatients.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromPatients.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        patientUsers\n                                    \n                                \n                                \n                                    \n                                        patientUsers:     fromPatientUsers.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromPatientUsers.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userPage\n                                    \n                                \n                                \n                                    \n                                        userPage:     fromUserPage.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromUserPage.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userPatients\n                                    \n                                \n                                \n                                    \n                                        userPatients:     fromUserPatients.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromUserPatients.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        users\n                                    \n                                \n                                \n                                    \n                                        users:     fromUsers.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromUsers.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as fromUserPage from './users-page.reducer';\nimport * as fromPatientPage from './patients-page.reducer';\nimport * as fromNursingHomePage from './nursing-homes-page.reducer';\nimport * as fromRoot from '../../reducers';\nimport * as fromUsers from './users.reducer';\nimport * as fromPatients from './patients.reducer';\nimport * as fromUserPatients from './user-patients.reducer';\nimport * as fromPatientUsers from './patient-users.reducer';\nimport * as fromNursingHome from './nursing-homes.reducer';\nimport * as fromLayout from './layout.reducer';\nimport { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\n/**\n * compose dashboard state for global store\n */\nexport interface DashboardState {\n  userPage: fromUserPage.State;\n  users: fromUsers.State;\n  nursingHomePage: fromNursingHomePage.State;\n  nursingHomes: fromNursingHome.State;\n  patientPage: fromPatientPage.State;\n  patients: fromPatients.State;\n  userPatients: fromUserPatients.State;\n  patientUsers: fromPatientUsers.State;\n  layout: fromLayout.State;\n}\n\n/**\n * assign state to global store\n */\nexport interface State extends fromRoot.State {\n  dashboard: DashboardState;\n}\n\n/**\n * compose action reducers\n */\nexport const reducers: ActionReducerMap = {\n  userPage: fromUserPage.reducer,\n  users: fromUsers.reducer,\n  nursingHomePage: fromNursingHomePage.reducer,\n  nursingHomes: fromNursingHome.reducer,\n  patientPage: fromPatientPage.reducer,\n  patients: fromPatients.reducer,\n  userPatients: fromUserPatients.reducer,\n  patientUsers: fromPatientUsers.reducer,\n  layout: fromLayout.reducer\n};\n\n// create feature selectors\nexport const getDashboardState = createFeatureSelector('dashboard');\n\n// ****************** USERS PAGE *************\nexport const getUsersPageState = createSelector(\n  getDashboardState,\n  (state: DashboardState) => state.userPage\n);\n\n// get error state of the userPage from the store\nexport const getUserPageError = createSelector(\n  getUsersPageState,\n  fromUserPage.getError\n);\n\n// get pending state of the userPage from the store\nexport const getUserPagePending = createSelector(\n  getUsersPageState,\n  fromUserPage.getPending\n);\n\n// get error state when creating user from the store\nexport const getUserCreationError = createSelector(\n  getUsersPageState,\n  fromUserPage.getCreateUserError\n);\n\n// get pending state when creating a user from the store\nexport const getUserCreationPending = createSelector(\n  getUsersPageState,\n  fromUserPage.getCreateUserPending\n);\n\n// get error state when editing a user from the store\nexport const getUserEditionError = createSelector(\n  getUsersPageState,\n  fromUserPage.getEditUserError\n);\n\n// get pending state when editing a user from the store\nexport const getUserEditionPending = createSelector(\n  getUsersPageState,\n  fromUserPage.getEditUserPending\n);\n\n// get pending state when loading user patients from the store\nexport const getLoadUserPatientsPending = createSelector(\n  getUsersPageState,\n  fromUserPage.getLoadUserPatientsPending\n);\n\n// get error state when loading user patients from the store\nexport const getLoadUserPatientsError = createSelector(\n  getUsersPageState,\n  fromUserPage.getLoadUserPatientsError\n);\n\n// ****************** USERS *************\nexport const getUsersState = createSelector(\n  getDashboardState,\n  (state: DashboardState) => state.users\n);\n\n// get the selected user id from state\nexport const getSelectedUserId = createSelector(\n  getUsersState,\n  fromUsers.getSelectedUserId\n);\n\n// deconstruct several functions from ngrx/entity\nexport const {\n  selectIds: getUsersIds,\n  selectEntities: getUserEntities,\n  selectAll: getAllUsers,\n  selectTotal: getTotalUsers\n} = fromUsers.adapater.getSelectors(getUsersState);\n\n// get the selected user from the state / users collection\nexport const getSelectedUser = createSelector(\n  getUserEntities,\n  getSelectedUserId,\n  (entities, id) => entities[id]\n);\n\n\n// ****************** USER PATIENTS *************\nexport const getUserPatientsState = createSelector(\n  getDashboardState,\n  (state: DashboardState) => state.userPatients\n);\n\n// deconstruct several functions from ngrx/entity\nexport const {\n  selectEntities: getUserPatientsEntities,\n  selectAll: getAllUserPatients,\n  selectTotal: getTotalUserPatients\n} = fromUserPatients.adapater.getSelectors(getUserPatientsState);\n\n\n\n// ****************** NURSING HOMES PAGE *************\nexport const getNursingHomesPageState = createSelector(\n  getDashboardState,\n  (state: DashboardState) => state.nursingHomePage\n);\n\n// get error state of the nursingHomePage from the store\nexport const getNursingHomePageError = createSelector(\n  getNursingHomesPageState,\n  fromNursingHomePage.getError\n);\n\n// get pending state of the nursingHomePage from the store\nexport const getNursingHomePagePending = createSelector(\n  getNursingHomesPageState,\n  fromNursingHomePage.getPending\n);\n\n// ****************** NURSING HOMES *************\nexport const getNursingHomesState = createSelector(\n  getDashboardState,\n  (state: DashboardState) => state.nursingHomes\n);\n\n// get the selected nursing home id from state\nexport const getSelectedNursingHomeId = createSelector(\n  getNursingHomesState,\n  fromNursingHome.getSelectedNursingHomeId\n);\n\n// deconstruct several functions from ngrx/entity\nexport const {\n  selectIds: getNursingHomesIds,\n  selectEntities: getNursingHomeEntities,\n  selectAll: getAllNursingHomes,\n  selectTotal: getTotalNursiomes\n} = fromNursingHome.adapater.getSelectors(getNursingHomesState);\n\n// get the selected nursing home from the state / nursing homes collection\nexport const getSelectedNursingHome = createSelector(\n  getNursingHomeEntities,\n  getSelectedNursingHomeId,\n  (entities, id) => entities[id]\n);\n\n// ****************** PATIENTS PAGE *************\nexport const getPatientsPageState = createSelector(\n  getDashboardState,\n  (state: DashboardState) => state.patientPage\n);\n\n// get error state of the patientPage from the store\nexport const getPatientPageError = createSelector(\n  getPatientsPageState,\n  fromPatientPage.getError\n);\n\n// get pending state of the patientPage from the store\nexport const getPatientPagePending = createSelector(\n  getPatientsPageState,\n  fromPatientPage.getPending\n);\n\n// get error state when creating patient from the store\nexport const getPatientCreationError = createSelector(\n  getPatientsPageState,\n  fromPatientPage.getCreatePatientError\n);\n\n// get pending state when creating a patient from the store\nexport const getPatientCreationPending = createSelector(\n  getPatientsPageState,\n  fromPatientPage.getCreatePatientPending\n);\n\n// get error state when editing a patient from the store\nexport const getPatientEditionError = createSelector(\n  getPatientsPageState,\n  fromPatientPage.getEditPatientError\n);\n\n// get pending state when editing a patient from the store\nexport const getPatientEditionPending = createSelector(\n  getPatientsPageState,\n  fromPatientPage.getEditPatientPending\n);\n\n// get pending state when loading patient users from the store\nexport const getLoadPatientUsersPending = createSelector(\n  getPatientsPageState,\n  fromPatientPage.getLoadPatientUsersPending\n);\n\n// get error state when loading patient users from the store\nexport const getLoadPatientUsersError = createSelector(\n  getPatientsPageState,\n  fromPatientPage.getLoadPatientUsersError\n);\n\n// ****************** PATIENTS *************\nexport const getPatientsState = createSelector(\n  getDashboardState,\n  (state: DashboardState) => state.patients\n);\n\n// get the selected patient id from state\nexport const getSelectedPatientId = createSelector(\n  getPatientsState,\n  fromPatients.getSelectedPatientId\n);\n\n// deconstruct several functions from ngrx/entity\nexport const {\n  selectIds: getPatientsIds,\n  selectEntities: getPatientEntities,\n  selectAll: getAllPatients,\n  selectTotal: getTotalPatients\n} = fromPatients.adapater.getSelectors(getPatientsState);\n\n// get the selected patient from the state / patients collection\nexport const getSelectedPatient = createSelector(\n  getPatientEntities,\n  getSelectedPatientId,\n  (entities, id) => entities[id]\n);\n\n// ****************** PATIENT USERS *************\nexport const getPatientUsersState = createSelector(\n  getDashboardState,\n  (state: DashboardState) => state.patientUsers\n);\n\n// deconstruct several functions from ngrx/entity\nexport const {\n  selectEntities: getPatientUsersEntities,\n  selectAll: getAllPatientUsers,\n  selectTotal: getTotalPatientUsers\n} = fromPatientUsers.adapater.getSelectors(getPatientUsersState);\n\n// ****************** DASHBOARD LAYOUT *************\nexport const getLayoutState = createSelector(\n  getDashboardState,\n  (state: DashboardState) => state.layout\n);\n\n/**\n * Layout configurations selectors\n */\nexport const getSideNav = createSelector(getLayoutState, fromLayout.getSideNav);\nexport const getNavPosition = createSelector(getLayoutState, fromLayout.getNavPosition);\nexport const getDirection = createSelector(getLayoutState, fromLayout.getDirection);\nexport const getLayoutInTransition = createSelector(getLayoutState, fromLayout.getLayoutInTransition);\nexport const getIsMobile = createSelector(getLayoutState, fromLayout.getIsMobile);\nexport const getUseBreadcrumb = createSelector(getLayoutState, fromLayout.getUseBreadcrumb);\nexport const getBreadcrumb = createSelector(getLayoutState, fromLayout.getBreadcrumb);\nexport const getTopbarFixed = createSelector(getLayoutState, fromLayout.getTopbarFixed);\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeletePatient.html":{"url":"classes/DeletePatient.html","title":"class - DeletePatient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeletePatient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients.actions.ts\n        \n\n            \n                Description\n            \n            \n                action to delete a patient\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/patients.actions.ts:122\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:124\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsActionTypes.DeletePatient\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:122\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { IPatient } from '../models/patient.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum PatientsActionTypes {\n  SelectPatient = '[Patient] Select Current Patient',\n  ClearSelectedPatient = '[Patient] Clear Current Patient',\n  InitializePatient = '[Patient] Initialize Current Patient',\n  CreatePatientFormDialog = '[Patients] Pop Up Patient Form',\n  CreatePatient = '[Patient] Create Patient',\n  DismissPatientFormDialog = '[Patient] Dismiss Patient Form Dialog',\n  LoadPatients = '[Patient] Load Patients',\n  SearchPatient = '[Patient] Search Patient',\n  SearchPatientComplete = '[Patient] Search Patient Complete',\n  EditPatient = '[Patient] Edit Patient',\n  DismissEditPatient = '[Patient] Dismiss Edit Patient',\n  ResetPatientsState = '[Patients] Reset Patients State',\n  DeletePatient ='[Patients] Delete Patient',\n  LoadPatientUsers = '[User] Load User Patients'\n}\n\n\n/**\n * Select patient Action\n */\nexport class SelectPatient implements Action {\n  readonly type = PatientsActionTypes.SelectPatient;\n\n  constructor(public payload: IPatient) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedPatient implements Action {\n  readonly type = PatientsActionTypes.ClearSelectedPatient;\n}\n\n/**\n * Initialize patient Action\n */\nexport class InitializePatient implements Action {\n  readonly type = PatientsActionTypes.InitializePatient;\n}\n\n/**\n * action to pop up patient form\n */\nexport class CreatePatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.CreatePatientFormDialog;\n}\n\n/**\n * Create patient Action\n */\nexport class CreatePatient implements Action {\n  readonly type = PatientsActionTypes.CreatePatient;\n\n  constructor(public payload: { patient: IPatient }) { }\n}\n\n/**\n * CreatePatient Dialog window dismissed\n */\nexport class DismissPatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.DismissPatientFormDialog;\n}\n\n/**\n * Load patients Action\n */\nexport class LoadPatients implements Action {\n  readonly type = PatientsActionTypes.LoadPatients;\n}\n\n/**\n * Search patient Action\n */\nexport class SearchPatient implements Action {\n  readonly type = PatientsActionTypes.SearchPatient;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search patient complete Action\n */\nexport class SearchPatientComplete implements Action {\n  readonly type = PatientsActionTypes.SearchPatientComplete;\n\n  constructor(public payload: IPatient[]) { }\n}\n\n/**\n * action to submit and edit patient\n */\nexport class EditPatient implements Action {\n  readonly type = PatientsActionTypes.EditPatient;\n\n  constructor(public payload: IPatient) {\n  }\n}\n\n/**\n * Patient Edit dismissed action\n */\nexport class DismissEditPatient implements Action {\n  readonly type = PatientsActionTypes.DismissEditPatient;\n}\n\n/**\n * reset the patient state\n */\nexport class ResetPatientsState implements Action {\n  readonly type = PatientsActionTypes.ResetPatientsState;\n}\n\n/**\n * action to delete a patient\n */\nexport class DeletePatient implements Action {\n  readonly type = PatientsActionTypes.DeletePatient;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load patient users action\n */\nexport class LoadPatientUsers implements Action {\n  readonly type = PatientsActionTypes.LoadPatientUsers;\n  constructor(public payload: number ) { }\n}\n\n\n/**\n * Export union of patient Action\n */\nexport type PatientsActionsUnion\n  = SelectPatient\n  | ClearSelectedPatient\n  | InitializePatient\n  | CreatePatientFormDialog\n  | CreatePatient\n  | DismissPatientFormDialog\n  | LoadPatients\n  | SearchPatient\n  | SearchPatientComplete\n  | EditPatient\n  | DismissEditPatient\n  | ResetPatientsState\n  | LoadPatientUsers;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUser.html":{"url":"classes/DeleteUser.html","title":"class - DeleteUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users.actions.ts\n        \n\n            \n                Description\n            \n            \n                action to delete a user\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/users.actions.ts:122\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:124\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersActionTypes.DeleteUser\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:122\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum UsersActionTypes {\n  SelectUser = '[User] Select Current User',\n  ClearSelectedUser = '[User] Clear Current User',\n  InitializeUser = '[User] Initialize Current User',\n  CreateUserFormDialog = '[Users] Pop Up User Form',\n  CreateUser = '[User] Create User',\n  DismissUserFormDialog = '[User] Dismiss User Form Dialog',\n  LoadUsers = '[User] Load Users',\n  SearchUser = '[User] Search User',\n  SearchUserComplete = '[User] Search User Complete',\n  EditUser = '[User] Edit User',\n  DismissEditUser = '[User] Dismiss Edit User',\n  ResetUsersState = '[Users] Reset Users State',\n  DeleteUser = '[Users] Delete User',\n  LoadUserPatients = '[User] Load User Patients'\n}\n\n\n/**\n * Select user Action\n */\nexport class SelectUser implements Action {\n  readonly type = UsersActionTypes.SelectUser;\n\n  constructor(public payload: User) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedUser implements Action {\n  readonly type = UsersActionTypes.ClearSelectedUser;\n}\n\n/**\n * Initialize user Action\n */\nexport class InitializeUser implements Action {\n  readonly type = UsersActionTypes.InitializeUser;\n}\n\n/**\n * action to pop up user form\n */\nexport class CreateUserFormDialog implements Action {\n  readonly type = UsersActionTypes.CreateUserFormDialog;\n}\n\n/**\n * Create user Action\n */\nexport class CreateUser implements Action {\n  readonly type = UsersActionTypes.CreateUser;\n\n  constructor(public payload: { user: User }) { }\n}\n\n/**\n * CreateUser Dialog window dismissed\n */\nexport class DismissUserFormDialog implements Action {\n  readonly type = UsersActionTypes.DismissUserFormDialog;\n}\n\n/**\n * Load users Action\n */\nexport class LoadUsers implements Action {\n  readonly type = UsersActionTypes.LoadUsers;\n}\n\n/**\n * Search user action\n */\nexport class SearchUser implements Action {\n  readonly type = UsersActionTypes.SearchUser;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search user complete action\n */\nexport class SearchUserComplete implements Action {\n  readonly type = UsersActionTypes.SearchUserComplete;\n\n  constructor(public payload: User[]) { }\n}\n\n/**\n * action to submit and edit user\n */\nexport class EditUser implements Action {\n  readonly type = UsersActionTypes.EditUser;\n\n  constructor(public payload: User) {\n  }\n}\n\n/**\n * User Edit dismissed action\n */\nexport class DismissEditUser implements Action {\n  readonly type = UsersActionTypes.DismissEditUser;\n}\n\n/**\n * reset the user state\n */\nexport class ResetUsersState implements Action {\n  readonly type = UsersActionTypes.ResetUsersState;\n}\n\n/**\n * action to delete a user\n */\nexport class DeleteUser implements Action {\n  readonly type = UsersActionTypes.DeleteUser;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load user patients action\n */\nexport class LoadUserPatients implements Action {\n  readonly type = UsersActionTypes.LoadUserPatients;\n  constructor(public payload: number ) { }\n}\n\n/**\n * Export union of user Action\n */\nexport type UsersActionsUnion\n  = SelectUser\n  | ClearSelectedUser\n  | InitializeUser\n  | CreateUserFormDialog\n  | CreateUser\n  | DismissUserFormDialog\n  | LoadUsers\n  | SearchUser\n  | SearchUserComplete\n  | EditUser\n  | DismissEditUser\n  | ResetUsersState\n  | LoadUserPatients;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DismissEditNursingHome.html":{"url":"classes/DismissEditNursingHome.html","title":"class - DismissEditNursingHome","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DismissEditNursingHome\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/nursing-homes.actions.ts\n        \n\n            \n                Description\n            \n            \n                NursingHome Edit dismissed action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : NursingHomesActionTypes.DismissEditNursingHome\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes.actions.ts:106\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { NursingHome } from '../models/nursing-home.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum NursingHomesActionTypes {\n  SelectNursingHome = '[NursingHome] Select Current NursingHome',\n  ClearSelectedNursingHome = '[NursingHome] Clear Current NursingHome',\n  InitializeNursingHome = '[NursingHome] Initialize Current NursingHome',\n  PopUpNursingHomeForm = '[NursingHome] Pop Up NursingHome Form',\n  CreateNursingHome = '[NursingHome] Create NursingHome',\n  DismissPoppedUpNursingHomeForm = '[NursingHome] Dismiss Create NursingHome',\n  LoadNursingHomes = '[NursingHome] Load Nursing Homes',\n  SearchNursingHome = '[NursingHome] Search NursingHome',\n  SearchNursingHomeComplete = '[NursingHome] Search NursingHome Complete',\n  EditNursingHome = '[NursingHome] Edit NursingHome',\n  DismissEditNursingHome = '[NursingHome] Dismiss Edit NursingHome',\n  ResetNursingHomesState = '[NursingHomes] Reset NursingHomes State'\n}\n\n\n/**\n * Select nursingHome Action\n */\nexport class SelectNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SelectNursingHome;\n\n  constructor(public payload: NursingHome) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.ClearSelectedNursingHome;\n}\n\n/**\n * Initialize nursingHome Action\n */\nexport class InitializeNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.InitializeNursingHome;\n}\n\n/**\n * action to pop up nursingHome form\n */\nexport class PopUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.PopUpNursingHomeForm;\n}\n\n/**\n * Create nursingHome Action\n */\nexport class CreateNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.CreateNursingHome;\n\n  constructor(public payload: { nursingHome: NursingHome }) { }\n}\n\n/**\n * CreateNursingHome Dialog window dismissed\n */\nexport class DismissPoppedUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.DismissPoppedUpNursingHomeForm;\n}\n\n/**\n * Load nursingHomes Action\n */\nexport class LoadNursingHomes implements Action {\n  readonly type = NursingHomesActionTypes.LoadNursingHomes;\n}\n\n/**\n * Search nursingHome Action\n */\nexport class SearchNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHome;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search nursingHome complete Action\n */\nexport class SearchNursingHomeComplete implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHomeComplete;\n\n  constructor(public payload: NursingHome[]) { }\n}\n\n/**\n * action to submit and edit nursingHome\n */\nexport class EditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.EditNursingHome;\n\n  constructor(public payload: Update) {\n  }\n}\n\n/**\n * NursingHome Edit dismissed action\n */\nexport class DismissEditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.DismissEditNursingHome;\n}\n\n/**\n * reset the nursingHome state\n */\nexport class ResetNursingHomesState implements Action {\n  readonly type = NursingHomesActionTypes.ResetNursingHomesState;\n}\n\n/**\n * Export union of nursingHome Action\n */\nexport type NursingHomesActionsUnion\n  = SelectNursingHome\n  | ClearSelectedNursingHome\n  | InitializeNursingHome\n  | PopUpNursingHomeForm\n  | CreateNursingHome\n  | DismissPoppedUpNursingHomeForm\n  | LoadNursingHomes\n  | SearchNursingHome\n  | SearchNursingHomeComplete\n  | EditNursingHome\n  | DismissEditNursingHome\n  | ResetNursingHomesState;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DismissEditPatient.html":{"url":"classes/DismissEditPatient.html","title":"class - DismissEditPatient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DismissEditPatient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients.actions.ts\n        \n\n            \n                Description\n            \n            \n                Patient Edit dismissed action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsActionTypes.DismissEditPatient\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:108\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { IPatient } from '../models/patient.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum PatientsActionTypes {\n  SelectPatient = '[Patient] Select Current Patient',\n  ClearSelectedPatient = '[Patient] Clear Current Patient',\n  InitializePatient = '[Patient] Initialize Current Patient',\n  CreatePatientFormDialog = '[Patients] Pop Up Patient Form',\n  CreatePatient = '[Patient] Create Patient',\n  DismissPatientFormDialog = '[Patient] Dismiss Patient Form Dialog',\n  LoadPatients = '[Patient] Load Patients',\n  SearchPatient = '[Patient] Search Patient',\n  SearchPatientComplete = '[Patient] Search Patient Complete',\n  EditPatient = '[Patient] Edit Patient',\n  DismissEditPatient = '[Patient] Dismiss Edit Patient',\n  ResetPatientsState = '[Patients] Reset Patients State',\n  DeletePatient ='[Patients] Delete Patient',\n  LoadPatientUsers = '[User] Load User Patients'\n}\n\n\n/**\n * Select patient Action\n */\nexport class SelectPatient implements Action {\n  readonly type = PatientsActionTypes.SelectPatient;\n\n  constructor(public payload: IPatient) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedPatient implements Action {\n  readonly type = PatientsActionTypes.ClearSelectedPatient;\n}\n\n/**\n * Initialize patient Action\n */\nexport class InitializePatient implements Action {\n  readonly type = PatientsActionTypes.InitializePatient;\n}\n\n/**\n * action to pop up patient form\n */\nexport class CreatePatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.CreatePatientFormDialog;\n}\n\n/**\n * Create patient Action\n */\nexport class CreatePatient implements Action {\n  readonly type = PatientsActionTypes.CreatePatient;\n\n  constructor(public payload: { patient: IPatient }) { }\n}\n\n/**\n * CreatePatient Dialog window dismissed\n */\nexport class DismissPatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.DismissPatientFormDialog;\n}\n\n/**\n * Load patients Action\n */\nexport class LoadPatients implements Action {\n  readonly type = PatientsActionTypes.LoadPatients;\n}\n\n/**\n * Search patient Action\n */\nexport class SearchPatient implements Action {\n  readonly type = PatientsActionTypes.SearchPatient;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search patient complete Action\n */\nexport class SearchPatientComplete implements Action {\n  readonly type = PatientsActionTypes.SearchPatientComplete;\n\n  constructor(public payload: IPatient[]) { }\n}\n\n/**\n * action to submit and edit patient\n */\nexport class EditPatient implements Action {\n  readonly type = PatientsActionTypes.EditPatient;\n\n  constructor(public payload: IPatient) {\n  }\n}\n\n/**\n * Patient Edit dismissed action\n */\nexport class DismissEditPatient implements Action {\n  readonly type = PatientsActionTypes.DismissEditPatient;\n}\n\n/**\n * reset the patient state\n */\nexport class ResetPatientsState implements Action {\n  readonly type = PatientsActionTypes.ResetPatientsState;\n}\n\n/**\n * action to delete a patient\n */\nexport class DeletePatient implements Action {\n  readonly type = PatientsActionTypes.DeletePatient;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load patient users action\n */\nexport class LoadPatientUsers implements Action {\n  readonly type = PatientsActionTypes.LoadPatientUsers;\n  constructor(public payload: number ) { }\n}\n\n\n/**\n * Export union of patient Action\n */\nexport type PatientsActionsUnion\n  = SelectPatient\n  | ClearSelectedPatient\n  | InitializePatient\n  | CreatePatientFormDialog\n  | CreatePatient\n  | DismissPatientFormDialog\n  | LoadPatients\n  | SearchPatient\n  | SearchPatientComplete\n  | EditPatient\n  | DismissEditPatient\n  | ResetPatientsState\n  | LoadPatientUsers;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DismissEditUser.html":{"url":"classes/DismissEditUser.html","title":"class - DismissEditUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DismissEditUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users.actions.ts\n        \n\n            \n                Description\n            \n            \n                User Edit dismissed action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersActionTypes.DismissEditUser\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:108\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum UsersActionTypes {\n  SelectUser = '[User] Select Current User',\n  ClearSelectedUser = '[User] Clear Current User',\n  InitializeUser = '[User] Initialize Current User',\n  CreateUserFormDialog = '[Users] Pop Up User Form',\n  CreateUser = '[User] Create User',\n  DismissUserFormDialog = '[User] Dismiss User Form Dialog',\n  LoadUsers = '[User] Load Users',\n  SearchUser = '[User] Search User',\n  SearchUserComplete = '[User] Search User Complete',\n  EditUser = '[User] Edit User',\n  DismissEditUser = '[User] Dismiss Edit User',\n  ResetUsersState = '[Users] Reset Users State',\n  DeleteUser = '[Users] Delete User',\n  LoadUserPatients = '[User] Load User Patients'\n}\n\n\n/**\n * Select user Action\n */\nexport class SelectUser implements Action {\n  readonly type = UsersActionTypes.SelectUser;\n\n  constructor(public payload: User) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedUser implements Action {\n  readonly type = UsersActionTypes.ClearSelectedUser;\n}\n\n/**\n * Initialize user Action\n */\nexport class InitializeUser implements Action {\n  readonly type = UsersActionTypes.InitializeUser;\n}\n\n/**\n * action to pop up user form\n */\nexport class CreateUserFormDialog implements Action {\n  readonly type = UsersActionTypes.CreateUserFormDialog;\n}\n\n/**\n * Create user Action\n */\nexport class CreateUser implements Action {\n  readonly type = UsersActionTypes.CreateUser;\n\n  constructor(public payload: { user: User }) { }\n}\n\n/**\n * CreateUser Dialog window dismissed\n */\nexport class DismissUserFormDialog implements Action {\n  readonly type = UsersActionTypes.DismissUserFormDialog;\n}\n\n/**\n * Load users Action\n */\nexport class LoadUsers implements Action {\n  readonly type = UsersActionTypes.LoadUsers;\n}\n\n/**\n * Search user action\n */\nexport class SearchUser implements Action {\n  readonly type = UsersActionTypes.SearchUser;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search user complete action\n */\nexport class SearchUserComplete implements Action {\n  readonly type = UsersActionTypes.SearchUserComplete;\n\n  constructor(public payload: User[]) { }\n}\n\n/**\n * action to submit and edit user\n */\nexport class EditUser implements Action {\n  readonly type = UsersActionTypes.EditUser;\n\n  constructor(public payload: User) {\n  }\n}\n\n/**\n * User Edit dismissed action\n */\nexport class DismissEditUser implements Action {\n  readonly type = UsersActionTypes.DismissEditUser;\n}\n\n/**\n * reset the user state\n */\nexport class ResetUsersState implements Action {\n  readonly type = UsersActionTypes.ResetUsersState;\n}\n\n/**\n * action to delete a user\n */\nexport class DeleteUser implements Action {\n  readonly type = UsersActionTypes.DeleteUser;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load user patients action\n */\nexport class LoadUserPatients implements Action {\n  readonly type = UsersActionTypes.LoadUserPatients;\n  constructor(public payload: number ) { }\n}\n\n/**\n * Export union of user Action\n */\nexport type UsersActionsUnion\n  = SelectUser\n  | ClearSelectedUser\n  | InitializeUser\n  | CreateUserFormDialog\n  | CreateUser\n  | DismissUserFormDialog\n  | LoadUsers\n  | SearchUser\n  | SearchUserComplete\n  | EditUser\n  | DismissEditUser\n  | ResetUsersState\n  | LoadUserPatients;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DismissPatientFormDialog.html":{"url":"classes/DismissPatientFormDialog.html","title":"class - DismissPatientFormDialog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DismissPatientFormDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients.actions.ts\n        \n\n            \n                Description\n            \n            \n                CreatePatient Dialog window dismissed\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsActionTypes.DismissPatientFormDialog\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:66\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { IPatient } from '../models/patient.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum PatientsActionTypes {\n  SelectPatient = '[Patient] Select Current Patient',\n  ClearSelectedPatient = '[Patient] Clear Current Patient',\n  InitializePatient = '[Patient] Initialize Current Patient',\n  CreatePatientFormDialog = '[Patients] Pop Up Patient Form',\n  CreatePatient = '[Patient] Create Patient',\n  DismissPatientFormDialog = '[Patient] Dismiss Patient Form Dialog',\n  LoadPatients = '[Patient] Load Patients',\n  SearchPatient = '[Patient] Search Patient',\n  SearchPatientComplete = '[Patient] Search Patient Complete',\n  EditPatient = '[Patient] Edit Patient',\n  DismissEditPatient = '[Patient] Dismiss Edit Patient',\n  ResetPatientsState = '[Patients] Reset Patients State',\n  DeletePatient ='[Patients] Delete Patient',\n  LoadPatientUsers = '[User] Load User Patients'\n}\n\n\n/**\n * Select patient Action\n */\nexport class SelectPatient implements Action {\n  readonly type = PatientsActionTypes.SelectPatient;\n\n  constructor(public payload: IPatient) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedPatient implements Action {\n  readonly type = PatientsActionTypes.ClearSelectedPatient;\n}\n\n/**\n * Initialize patient Action\n */\nexport class InitializePatient implements Action {\n  readonly type = PatientsActionTypes.InitializePatient;\n}\n\n/**\n * action to pop up patient form\n */\nexport class CreatePatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.CreatePatientFormDialog;\n}\n\n/**\n * Create patient Action\n */\nexport class CreatePatient implements Action {\n  readonly type = PatientsActionTypes.CreatePatient;\n\n  constructor(public payload: { patient: IPatient }) { }\n}\n\n/**\n * CreatePatient Dialog window dismissed\n */\nexport class DismissPatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.DismissPatientFormDialog;\n}\n\n/**\n * Load patients Action\n */\nexport class LoadPatients implements Action {\n  readonly type = PatientsActionTypes.LoadPatients;\n}\n\n/**\n * Search patient Action\n */\nexport class SearchPatient implements Action {\n  readonly type = PatientsActionTypes.SearchPatient;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search patient complete Action\n */\nexport class SearchPatientComplete implements Action {\n  readonly type = PatientsActionTypes.SearchPatientComplete;\n\n  constructor(public payload: IPatient[]) { }\n}\n\n/**\n * action to submit and edit patient\n */\nexport class EditPatient implements Action {\n  readonly type = PatientsActionTypes.EditPatient;\n\n  constructor(public payload: IPatient) {\n  }\n}\n\n/**\n * Patient Edit dismissed action\n */\nexport class DismissEditPatient implements Action {\n  readonly type = PatientsActionTypes.DismissEditPatient;\n}\n\n/**\n * reset the patient state\n */\nexport class ResetPatientsState implements Action {\n  readonly type = PatientsActionTypes.ResetPatientsState;\n}\n\n/**\n * action to delete a patient\n */\nexport class DeletePatient implements Action {\n  readonly type = PatientsActionTypes.DeletePatient;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load patient users action\n */\nexport class LoadPatientUsers implements Action {\n  readonly type = PatientsActionTypes.LoadPatientUsers;\n  constructor(public payload: number ) { }\n}\n\n\n/**\n * Export union of patient Action\n */\nexport type PatientsActionsUnion\n  = SelectPatient\n  | ClearSelectedPatient\n  | InitializePatient\n  | CreatePatientFormDialog\n  | CreatePatient\n  | DismissPatientFormDialog\n  | LoadPatients\n  | SearchPatient\n  | SearchPatientComplete\n  | EditPatient\n  | DismissEditPatient\n  | ResetPatientsState\n  | LoadPatientUsers;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DismissPoppedUpNursingHomeForm.html":{"url":"classes/DismissPoppedUpNursingHomeForm.html","title":"class - DismissPoppedUpNursingHomeForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DismissPoppedUpNursingHomeForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/nursing-homes.actions.ts\n        \n\n            \n                Description\n            \n            \n                CreateNursingHome Dialog window dismissed\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : NursingHomesActionTypes.DismissPoppedUpNursingHomeForm\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes.actions.ts:64\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { NursingHome } from '../models/nursing-home.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum NursingHomesActionTypes {\n  SelectNursingHome = '[NursingHome] Select Current NursingHome',\n  ClearSelectedNursingHome = '[NursingHome] Clear Current NursingHome',\n  InitializeNursingHome = '[NursingHome] Initialize Current NursingHome',\n  PopUpNursingHomeForm = '[NursingHome] Pop Up NursingHome Form',\n  CreateNursingHome = '[NursingHome] Create NursingHome',\n  DismissPoppedUpNursingHomeForm = '[NursingHome] Dismiss Create NursingHome',\n  LoadNursingHomes = '[NursingHome] Load Nursing Homes',\n  SearchNursingHome = '[NursingHome] Search NursingHome',\n  SearchNursingHomeComplete = '[NursingHome] Search NursingHome Complete',\n  EditNursingHome = '[NursingHome] Edit NursingHome',\n  DismissEditNursingHome = '[NursingHome] Dismiss Edit NursingHome',\n  ResetNursingHomesState = '[NursingHomes] Reset NursingHomes State'\n}\n\n\n/**\n * Select nursingHome Action\n */\nexport class SelectNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SelectNursingHome;\n\n  constructor(public payload: NursingHome) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.ClearSelectedNursingHome;\n}\n\n/**\n * Initialize nursingHome Action\n */\nexport class InitializeNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.InitializeNursingHome;\n}\n\n/**\n * action to pop up nursingHome form\n */\nexport class PopUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.PopUpNursingHomeForm;\n}\n\n/**\n * Create nursingHome Action\n */\nexport class CreateNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.CreateNursingHome;\n\n  constructor(public payload: { nursingHome: NursingHome }) { }\n}\n\n/**\n * CreateNursingHome Dialog window dismissed\n */\nexport class DismissPoppedUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.DismissPoppedUpNursingHomeForm;\n}\n\n/**\n * Load nursingHomes Action\n */\nexport class LoadNursingHomes implements Action {\n  readonly type = NursingHomesActionTypes.LoadNursingHomes;\n}\n\n/**\n * Search nursingHome Action\n */\nexport class SearchNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHome;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search nursingHome complete Action\n */\nexport class SearchNursingHomeComplete implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHomeComplete;\n\n  constructor(public payload: NursingHome[]) { }\n}\n\n/**\n * action to submit and edit nursingHome\n */\nexport class EditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.EditNursingHome;\n\n  constructor(public payload: Update) {\n  }\n}\n\n/**\n * NursingHome Edit dismissed action\n */\nexport class DismissEditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.DismissEditNursingHome;\n}\n\n/**\n * reset the nursingHome state\n */\nexport class ResetNursingHomesState implements Action {\n  readonly type = NursingHomesActionTypes.ResetNursingHomesState;\n}\n\n/**\n * Export union of nursingHome Action\n */\nexport type NursingHomesActionsUnion\n  = SelectNursingHome\n  | ClearSelectedNursingHome\n  | InitializeNursingHome\n  | PopUpNursingHomeForm\n  | CreateNursingHome\n  | DismissPoppedUpNursingHomeForm\n  | LoadNursingHomes\n  | SearchNursingHome\n  | SearchNursingHomeComplete\n  | EditNursingHome\n  | DismissEditNursingHome\n  | ResetNursingHomesState;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DismissUserFormDialog.html":{"url":"classes/DismissUserFormDialog.html","title":"class - DismissUserFormDialog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DismissUserFormDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users.actions.ts\n        \n\n            \n                Description\n            \n            \n                CreateUser Dialog window dismissed\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersActionTypes.DismissUserFormDialog\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:66\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum UsersActionTypes {\n  SelectUser = '[User] Select Current User',\n  ClearSelectedUser = '[User] Clear Current User',\n  InitializeUser = '[User] Initialize Current User',\n  CreateUserFormDialog = '[Users] Pop Up User Form',\n  CreateUser = '[User] Create User',\n  DismissUserFormDialog = '[User] Dismiss User Form Dialog',\n  LoadUsers = '[User] Load Users',\n  SearchUser = '[User] Search User',\n  SearchUserComplete = '[User] Search User Complete',\n  EditUser = '[User] Edit User',\n  DismissEditUser = '[User] Dismiss Edit User',\n  ResetUsersState = '[Users] Reset Users State',\n  DeleteUser = '[Users] Delete User',\n  LoadUserPatients = '[User] Load User Patients'\n}\n\n\n/**\n * Select user Action\n */\nexport class SelectUser implements Action {\n  readonly type = UsersActionTypes.SelectUser;\n\n  constructor(public payload: User) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedUser implements Action {\n  readonly type = UsersActionTypes.ClearSelectedUser;\n}\n\n/**\n * Initialize user Action\n */\nexport class InitializeUser implements Action {\n  readonly type = UsersActionTypes.InitializeUser;\n}\n\n/**\n * action to pop up user form\n */\nexport class CreateUserFormDialog implements Action {\n  readonly type = UsersActionTypes.CreateUserFormDialog;\n}\n\n/**\n * Create user Action\n */\nexport class CreateUser implements Action {\n  readonly type = UsersActionTypes.CreateUser;\n\n  constructor(public payload: { user: User }) { }\n}\n\n/**\n * CreateUser Dialog window dismissed\n */\nexport class DismissUserFormDialog implements Action {\n  readonly type = UsersActionTypes.DismissUserFormDialog;\n}\n\n/**\n * Load users Action\n */\nexport class LoadUsers implements Action {\n  readonly type = UsersActionTypes.LoadUsers;\n}\n\n/**\n * Search user action\n */\nexport class SearchUser implements Action {\n  readonly type = UsersActionTypes.SearchUser;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search user complete action\n */\nexport class SearchUserComplete implements Action {\n  readonly type = UsersActionTypes.SearchUserComplete;\n\n  constructor(public payload: User[]) { }\n}\n\n/**\n * action to submit and edit user\n */\nexport class EditUser implements Action {\n  readonly type = UsersActionTypes.EditUser;\n\n  constructor(public payload: User) {\n  }\n}\n\n/**\n * User Edit dismissed action\n */\nexport class DismissEditUser implements Action {\n  readonly type = UsersActionTypes.DismissEditUser;\n}\n\n/**\n * reset the user state\n */\nexport class ResetUsersState implements Action {\n  readonly type = UsersActionTypes.ResetUsersState;\n}\n\n/**\n * action to delete a user\n */\nexport class DeleteUser implements Action {\n  readonly type = UsersActionTypes.DeleteUser;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load user patients action\n */\nexport class LoadUserPatients implements Action {\n  readonly type = UsersActionTypes.LoadUserPatients;\n  constructor(public payload: number ) { }\n}\n\n/**\n * Export union of user Action\n */\nexport type UsersActionsUnion\n  = SelectUser\n  | ClearSelectedUser\n  | InitializeUser\n  | CreateUserFormDialog\n  | CreateUser\n  | DismissUserFormDialog\n  | LoadUsers\n  | SearchUser\n  | SearchUserComplete\n  | EditUser\n  | DismissEditUser\n  | ResetUsersState\n  | LoadUserPatients;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DropdownAnchorDirective.html":{"url":"directives/DropdownAnchorDirective.html","title":"directive - DropdownAnchorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DropdownAnchorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/directives/dropdown-anchor.directive.ts\n        \n\n            \n                Description\n            \n            \n                DropDownToggle directive\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appDropdownToggle]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                navlink\n                            \n                        \n                    \n                \n\n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(navlink: DropdownLinkDirective)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/directives/dropdown-anchor.directive.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navlink\n                                                  \n                                                        \n                                                                    DropdownLinkDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nclick(e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/directives/dropdown-anchor.directive.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            navlink\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navlink:     DropdownLinkDirective\n\n                    \n                \n                    \n                        \n                            Type :     DropdownLinkDirective\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/directives/dropdown-anchor.directive.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, HostListener, Inject } from '@angular/core';\nimport { DropdownLinkDirective } from './dropdown-link.directive';\n\n/**\n * DropDownToggle directive\n * @deprecated (cvb) Not sure if we need it.\n */\n@Directive({\n  selector: '[appDropdownToggle]'\n})\nexport class DropdownAnchorDirective {\n\n  protected navlink: DropdownLinkDirective;\n\n  constructor(@Inject(DropdownLinkDirective) navlink: DropdownLinkDirective) {\n    this.navlink = navlink;\n  }\n\n  @HostListener('click', ['$event'])\n  onClick(e: any) {\n    this.navlink.toggle();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DropdownLinkDirective.html":{"url":"directives/DropdownLinkDirective.html","title":"directive - DropdownLinkDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DropdownLinkDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/directives/dropdown-link.directive.ts\n        \n\n            \n                Description\n            \n            \n                DropDownLink directive\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appDropdownLink]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _open\n                            \n                            \n                                    Protected\n                                nav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                group\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    open\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(nav: AppDropdownDirective)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/directives/dropdown-link.directive.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nav\n                                                  \n                                                        \n                                                                    AppDropdownDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        group\n                    \n                    \n                            \n                            Type :    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/core/directives/dropdown-link.directive.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        open\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/core/directives/dropdown-link.directive.ts:20\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/directives/dropdown-link.directive.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/directives/dropdown-link.directive.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/directives/dropdown-link.directive.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _open\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _open:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/directives/dropdown-link.directive.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            nav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nav:     AppDropdownDirective\n\n                    \n                \n                    \n                        \n                            Type :     AppDropdownDirective\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/directives/dropdown-link.directive.ts:32\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        open\n                    \n                \n\n\n                \n                    \n                        setopen(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/directives/dropdown-link.directive.ts:24\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n  Directive, HostBinding, Inject, Input, OnInit, OnDestroy\n} from '@angular/core';\n\nimport { AppDropdownDirective } from './dropdown.directive';\n\n/**\n * DropDownLink directive\n * @deprecated (cvb) Not sure if we need it.\n */\n@Directive({\n  selector: '[appDropdownLink]'\n})\nexport class DropdownLinkDirective implements OnInit, OnDestroy{\n\n  @Input() public group: any;\n\n  @HostBinding('class.open')\n  @Input()\n  get open(): boolean {\n    return this._open;\n  }\n\n  set open(value: boolean) {\n    this._open = value;\n    if (value) {\n      this.nav.closeOtherLinks(this);\n    }\n  }\n\n  protected _open: boolean;\n  protected nav: AppDropdownDirective;\n\n  public constructor(@Inject(AppDropdownDirective) nav: AppDropdownDirective) {\n    this.nav = nav;\n  }\n\n  public ngOnInit(): any {\n    this.nav.addLink(this);\n  }\n\n  public ngOnDestroy(): any {\n    this.nav.removeGroup(this);\n  }\n\n  public toggle(): any {\n    this.open = !this.open;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditNursingHome.html":{"url":"classes/EditNursingHome.html","title":"class - EditNursingHome","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditNursingHome\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/nursing-homes.actions.ts\n        \n\n            \n                Description\n            \n            \n                action to submit and edit nursingHome\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: Update)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/nursing-homes.actions.ts:96\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    Update\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     Update\n\n                    \n                \n                    \n                        \n                            Type :     Update\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes.actions.ts:98\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : NursingHomesActionTypes.EditNursingHome\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes.actions.ts:96\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { NursingHome } from '../models/nursing-home.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum NursingHomesActionTypes {\n  SelectNursingHome = '[NursingHome] Select Current NursingHome',\n  ClearSelectedNursingHome = '[NursingHome] Clear Current NursingHome',\n  InitializeNursingHome = '[NursingHome] Initialize Current NursingHome',\n  PopUpNursingHomeForm = '[NursingHome] Pop Up NursingHome Form',\n  CreateNursingHome = '[NursingHome] Create NursingHome',\n  DismissPoppedUpNursingHomeForm = '[NursingHome] Dismiss Create NursingHome',\n  LoadNursingHomes = '[NursingHome] Load Nursing Homes',\n  SearchNursingHome = '[NursingHome] Search NursingHome',\n  SearchNursingHomeComplete = '[NursingHome] Search NursingHome Complete',\n  EditNursingHome = '[NursingHome] Edit NursingHome',\n  DismissEditNursingHome = '[NursingHome] Dismiss Edit NursingHome',\n  ResetNursingHomesState = '[NursingHomes] Reset NursingHomes State'\n}\n\n\n/**\n * Select nursingHome Action\n */\nexport class SelectNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SelectNursingHome;\n\n  constructor(public payload: NursingHome) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.ClearSelectedNursingHome;\n}\n\n/**\n * Initialize nursingHome Action\n */\nexport class InitializeNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.InitializeNursingHome;\n}\n\n/**\n * action to pop up nursingHome form\n */\nexport class PopUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.PopUpNursingHomeForm;\n}\n\n/**\n * Create nursingHome Action\n */\nexport class CreateNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.CreateNursingHome;\n\n  constructor(public payload: { nursingHome: NursingHome }) { }\n}\n\n/**\n * CreateNursingHome Dialog window dismissed\n */\nexport class DismissPoppedUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.DismissPoppedUpNursingHomeForm;\n}\n\n/**\n * Load nursingHomes Action\n */\nexport class LoadNursingHomes implements Action {\n  readonly type = NursingHomesActionTypes.LoadNursingHomes;\n}\n\n/**\n * Search nursingHome Action\n */\nexport class SearchNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHome;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search nursingHome complete Action\n */\nexport class SearchNursingHomeComplete implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHomeComplete;\n\n  constructor(public payload: NursingHome[]) { }\n}\n\n/**\n * action to submit and edit nursingHome\n */\nexport class EditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.EditNursingHome;\n\n  constructor(public payload: Update) {\n  }\n}\n\n/**\n * NursingHome Edit dismissed action\n */\nexport class DismissEditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.DismissEditNursingHome;\n}\n\n/**\n * reset the nursingHome state\n */\nexport class ResetNursingHomesState implements Action {\n  readonly type = NursingHomesActionTypes.ResetNursingHomesState;\n}\n\n/**\n * Export union of nursingHome Action\n */\nexport type NursingHomesActionsUnion\n  = SelectNursingHome\n  | ClearSelectedNursingHome\n  | InitializeNursingHome\n  | PopUpNursingHomeForm\n  | CreateNursingHome\n  | DismissPoppedUpNursingHomeForm\n  | LoadNursingHomes\n  | SearchNursingHome\n  | SearchNursingHomeComplete\n  | EditNursingHome\n  | DismissEditNursingHome\n  | ResetNursingHomesState;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditNursingHomeFailure.html":{"url":"classes/EditNursingHomeFailure.html","title":"class - EditNursingHomeFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditNursingHomeFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/nursing-homes-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                edit nursingHome failure action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/nursing-homes-api.actions.ts:70\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes-api.actions.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : NursingHomesApiActionTypes.EditNursingHomeFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes-api.actions.ts:70\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { NursingHome } from '../models/nursing-home.model';\n\n/**\n * definitions for action types\n */\nexport enum NursingHomesApiActionTypes {\n  CreateNursingHomeSuccess = '[NursingHome/Api] Create NursingHome Success',\n  CreateNursingHomeFailure = '[NursingHome/Api] Create NursingHome Failure',\n  LoadNursingHomesSuccess = '[NursingHome/Api] Load NursingHomes Success',\n  LoadNursingHomesFailure = '[NursingHome/Api] Load NursingHomes Failure',\n  EditNursingHomeSuccess = '[NursingHome/Api] Edit NursingHome Success',\n  EditNursingHomeFailure = '[NursingHome/Api] Edit NursingHome Failure',\n}\n\n/**\n * add nursingHome success action\n */\nexport class CreateNursingHomeSuccess implements Action {\n  public readonly type = NursingHomesApiActionTypes.CreateNursingHomeSuccess;\n\n  constructor(public payload: { nursingHome: NursingHome }) {\n  }\n}\n\n/**\n * add nursingHome failure action\n */\nexport class CreateNursingHomeFailure implements Action {\n  public readonly type = NursingHomesApiActionTypes.CreateNursingHomeFailure;\n\n  constructor(public payload: { message: string}) {\n  }\n}\n\n/**\n * load all nursingHomes success action\n */\nexport class LoadNursingHomesSuccess implements Action {\n  public readonly type = NursingHomesApiActionTypes.LoadNursingHomesSuccess;\n\n  constructor(public payload: { nursingHomes: NursingHome[] }) {\n  }\n}\n\n/**\n * load all nursingHomes action\n */\nexport class LoadNursingHomesFailure implements Action {\n  public readonly type = NursingHomesApiActionTypes.LoadNursingHomesFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * edit nursingHome success action\n */\nexport class EditNursingHomeSuccess implements Action {\n  public readonly type = NursingHomesApiActionTypes.EditNursingHomeSuccess;\n\n  constructor(public payload: { nursingHome: NursingHome }) {\n  }\n}\n\n/**\n * edit nursingHome failure action\n */\nexport class EditNursingHomeFailure implements Action {\n  public readonly type = NursingHomesApiActionTypes.EditNursingHomeFailure;\n\n  constructor(public payload: { message: string}) {\n  }\n}\n\n// export types\nexport type NursingHomesApiActionsUnion =\n  | CreateNursingHomeSuccess\n  | CreateNursingHomeFailure\n  | EditNursingHomeSuccess\n  | EditNursingHomeFailure\n  | LoadNursingHomesSuccess\n  | LoadNursingHomesFailure\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditNursingHomeSuccess.html":{"url":"classes/EditNursingHomeSuccess.html","title":"class - EditNursingHomeSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditNursingHomeSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/nursing-homes-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                edit nursingHome success action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/nursing-homes-api.actions.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes-api.actions.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : NursingHomesApiActionTypes.EditNursingHomeSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes-api.actions.ts:60\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { NursingHome } from '../models/nursing-home.model';\n\n/**\n * definitions for action types\n */\nexport enum NursingHomesApiActionTypes {\n  CreateNursingHomeSuccess = '[NursingHome/Api] Create NursingHome Success',\n  CreateNursingHomeFailure = '[NursingHome/Api] Create NursingHome Failure',\n  LoadNursingHomesSuccess = '[NursingHome/Api] Load NursingHomes Success',\n  LoadNursingHomesFailure = '[NursingHome/Api] Load NursingHomes Failure',\n  EditNursingHomeSuccess = '[NursingHome/Api] Edit NursingHome Success',\n  EditNursingHomeFailure = '[NursingHome/Api] Edit NursingHome Failure',\n}\n\n/**\n * add nursingHome success action\n */\nexport class CreateNursingHomeSuccess implements Action {\n  public readonly type = NursingHomesApiActionTypes.CreateNursingHomeSuccess;\n\n  constructor(public payload: { nursingHome: NursingHome }) {\n  }\n}\n\n/**\n * add nursingHome failure action\n */\nexport class CreateNursingHomeFailure implements Action {\n  public readonly type = NursingHomesApiActionTypes.CreateNursingHomeFailure;\n\n  constructor(public payload: { message: string}) {\n  }\n}\n\n/**\n * load all nursingHomes success action\n */\nexport class LoadNursingHomesSuccess implements Action {\n  public readonly type = NursingHomesApiActionTypes.LoadNursingHomesSuccess;\n\n  constructor(public payload: { nursingHomes: NursingHome[] }) {\n  }\n}\n\n/**\n * load all nursingHomes action\n */\nexport class LoadNursingHomesFailure implements Action {\n  public readonly type = NursingHomesApiActionTypes.LoadNursingHomesFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * edit nursingHome success action\n */\nexport class EditNursingHomeSuccess implements Action {\n  public readonly type = NursingHomesApiActionTypes.EditNursingHomeSuccess;\n\n  constructor(public payload: { nursingHome: NursingHome }) {\n  }\n}\n\n/**\n * edit nursingHome failure action\n */\nexport class EditNursingHomeFailure implements Action {\n  public readonly type = NursingHomesApiActionTypes.EditNursingHomeFailure;\n\n  constructor(public payload: { message: string}) {\n  }\n}\n\n// export types\nexport type NursingHomesApiActionsUnion =\n  | CreateNursingHomeSuccess\n  | CreateNursingHomeFailure\n  | EditNursingHomeSuccess\n  | EditNursingHomeFailure\n  | LoadNursingHomesSuccess\n  | LoadNursingHomesFailure\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditPatient.html":{"url":"classes/EditPatient.html","title":"class - EditPatient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditPatient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients.actions.ts\n        \n\n            \n                Description\n            \n            \n                action to submit and edit patient\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: IPatient)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/patients.actions.ts:98\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    IPatient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     IPatient\n\n                    \n                \n                    \n                        \n                            Type :     IPatient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:100\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsActionTypes.EditPatient\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:98\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { IPatient } from '../models/patient.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum PatientsActionTypes {\n  SelectPatient = '[Patient] Select Current Patient',\n  ClearSelectedPatient = '[Patient] Clear Current Patient',\n  InitializePatient = '[Patient] Initialize Current Patient',\n  CreatePatientFormDialog = '[Patients] Pop Up Patient Form',\n  CreatePatient = '[Patient] Create Patient',\n  DismissPatientFormDialog = '[Patient] Dismiss Patient Form Dialog',\n  LoadPatients = '[Patient] Load Patients',\n  SearchPatient = '[Patient] Search Patient',\n  SearchPatientComplete = '[Patient] Search Patient Complete',\n  EditPatient = '[Patient] Edit Patient',\n  DismissEditPatient = '[Patient] Dismiss Edit Patient',\n  ResetPatientsState = '[Patients] Reset Patients State',\n  DeletePatient ='[Patients] Delete Patient',\n  LoadPatientUsers = '[User] Load User Patients'\n}\n\n\n/**\n * Select patient Action\n */\nexport class SelectPatient implements Action {\n  readonly type = PatientsActionTypes.SelectPatient;\n\n  constructor(public payload: IPatient) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedPatient implements Action {\n  readonly type = PatientsActionTypes.ClearSelectedPatient;\n}\n\n/**\n * Initialize patient Action\n */\nexport class InitializePatient implements Action {\n  readonly type = PatientsActionTypes.InitializePatient;\n}\n\n/**\n * action to pop up patient form\n */\nexport class CreatePatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.CreatePatientFormDialog;\n}\n\n/**\n * Create patient Action\n */\nexport class CreatePatient implements Action {\n  readonly type = PatientsActionTypes.CreatePatient;\n\n  constructor(public payload: { patient: IPatient }) { }\n}\n\n/**\n * CreatePatient Dialog window dismissed\n */\nexport class DismissPatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.DismissPatientFormDialog;\n}\n\n/**\n * Load patients Action\n */\nexport class LoadPatients implements Action {\n  readonly type = PatientsActionTypes.LoadPatients;\n}\n\n/**\n * Search patient Action\n */\nexport class SearchPatient implements Action {\n  readonly type = PatientsActionTypes.SearchPatient;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search patient complete Action\n */\nexport class SearchPatientComplete implements Action {\n  readonly type = PatientsActionTypes.SearchPatientComplete;\n\n  constructor(public payload: IPatient[]) { }\n}\n\n/**\n * action to submit and edit patient\n */\nexport class EditPatient implements Action {\n  readonly type = PatientsActionTypes.EditPatient;\n\n  constructor(public payload: IPatient) {\n  }\n}\n\n/**\n * Patient Edit dismissed action\n */\nexport class DismissEditPatient implements Action {\n  readonly type = PatientsActionTypes.DismissEditPatient;\n}\n\n/**\n * reset the patient state\n */\nexport class ResetPatientsState implements Action {\n  readonly type = PatientsActionTypes.ResetPatientsState;\n}\n\n/**\n * action to delete a patient\n */\nexport class DeletePatient implements Action {\n  readonly type = PatientsActionTypes.DeletePatient;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load patient users action\n */\nexport class LoadPatientUsers implements Action {\n  readonly type = PatientsActionTypes.LoadPatientUsers;\n  constructor(public payload: number ) { }\n}\n\n\n/**\n * Export union of patient Action\n */\nexport type PatientsActionsUnion\n  = SelectPatient\n  | ClearSelectedPatient\n  | InitializePatient\n  | CreatePatientFormDialog\n  | CreatePatient\n  | DismissPatientFormDialog\n  | LoadPatients\n  | SearchPatient\n  | SearchPatientComplete\n  | EditPatient\n  | DismissEditPatient\n  | ResetPatientsState\n  | LoadPatientUsers;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditPatientFailure.html":{"url":"classes/EditPatientFailure.html","title":"class - EditPatientFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditPatientFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                edit patient failure action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/patients-api.actions.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients-api.actions.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsApiActionTypes.EditPatientFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients-api.actions.ts:73\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { IPatient } from '../models/patient.model';\n\n/**\n * definitions for action types\n */\nexport enum PatientsApiActionTypes {\n  CreatePatientSuccess = '[Patient/Api] Create Patient Success',\n  CreatePatientFailure = '[Patient/Api] Create Patient Failure',\n  LoadPatientsSuccess = '[Patient/Api] Load Patients Success',\n  LoadPatientsFailure = '[Patient/Api] Load Patients Failure',\n  EditPatientSuccess = '[Patient/Api] Edit Patient Success',\n  EditPatientFailure = '[Patient/Api] Edit Patient Failure',\n  LoadPatientUsersSuccess = '[User/Api] Load Patient Users Success',\n  LoadPatientUsersFailure = '[User/Api] Load Patient Users Failure',\n}\n\n/**\n * add patient success action\n */\nexport class CreatePatientSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.CreatePatientSuccess;\n\n  constructor(public payload: { patient: IPatient }) {\n  }\n}\n\n/**\n * add patient failure action\n */\nexport class CreatePatientFailure implements Action {\n  public readonly type = PatientsApiActionTypes.CreatePatientFailure;\n\n  constructor(public payload: { messages: string }) {\n  }\n}\n\n/**\n * load all patients success action\n */\nexport class LoadPatientsSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientsSuccess;\n\n  constructor(public payload: { patients: IPatient[] }) {\n  }\n}\n\n/**\n * load all patients action\n */\nexport class LoadPatientsFailure implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientsFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * edit patient success action\n */\nexport class EditPatientSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.EditPatientSuccess;\n\n  constructor(public payload: { patient: IPatient }) {\n  }\n}\n\n/**\n * edit patient failure action\n */\nexport class EditPatientFailure implements Action {\n  public readonly type = PatientsApiActionTypes.EditPatientFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * load all patient users success action\n */\nexport class LoadPatientUsersSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientUsersSuccess;\n\n  constructor(public payload: { users: User[] }) {\n  }\n}\n\n/**\n * load all patient users failure action\n */\nexport class LoadPatientUsersFailure implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientUsersFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n// export types\nexport type PatientsApiActionsUnion =\n  | CreatePatientSuccess\n  | CreatePatientFailure\n  | EditPatientSuccess\n  | EditPatientFailure\n  | LoadPatientsSuccess\n  | LoadPatientsFailure\n  | LoadPatientUsersSuccess\n  | LoadPatientUsersFailure;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditPatientSuccess.html":{"url":"classes/EditPatientSuccess.html","title":"class - EditPatientSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditPatientSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                edit patient success action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/patients-api.actions.ts:63\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients-api.actions.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsApiActionTypes.EditPatientSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients-api.actions.ts:63\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { IPatient } from '../models/patient.model';\n\n/**\n * definitions for action types\n */\nexport enum PatientsApiActionTypes {\n  CreatePatientSuccess = '[Patient/Api] Create Patient Success',\n  CreatePatientFailure = '[Patient/Api] Create Patient Failure',\n  LoadPatientsSuccess = '[Patient/Api] Load Patients Success',\n  LoadPatientsFailure = '[Patient/Api] Load Patients Failure',\n  EditPatientSuccess = '[Patient/Api] Edit Patient Success',\n  EditPatientFailure = '[Patient/Api] Edit Patient Failure',\n  LoadPatientUsersSuccess = '[User/Api] Load Patient Users Success',\n  LoadPatientUsersFailure = '[User/Api] Load Patient Users Failure',\n}\n\n/**\n * add patient success action\n */\nexport class CreatePatientSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.CreatePatientSuccess;\n\n  constructor(public payload: { patient: IPatient }) {\n  }\n}\n\n/**\n * add patient failure action\n */\nexport class CreatePatientFailure implements Action {\n  public readonly type = PatientsApiActionTypes.CreatePatientFailure;\n\n  constructor(public payload: { messages: string }) {\n  }\n}\n\n/**\n * load all patients success action\n */\nexport class LoadPatientsSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientsSuccess;\n\n  constructor(public payload: { patients: IPatient[] }) {\n  }\n}\n\n/**\n * load all patients action\n */\nexport class LoadPatientsFailure implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientsFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * edit patient success action\n */\nexport class EditPatientSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.EditPatientSuccess;\n\n  constructor(public payload: { patient: IPatient }) {\n  }\n}\n\n/**\n * edit patient failure action\n */\nexport class EditPatientFailure implements Action {\n  public readonly type = PatientsApiActionTypes.EditPatientFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * load all patient users success action\n */\nexport class LoadPatientUsersSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientUsersSuccess;\n\n  constructor(public payload: { users: User[] }) {\n  }\n}\n\n/**\n * load all patient users failure action\n */\nexport class LoadPatientUsersFailure implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientUsersFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n// export types\nexport type PatientsApiActionsUnion =\n  | CreatePatientSuccess\n  | CreatePatientFailure\n  | EditPatientSuccess\n  | EditPatientFailure\n  | LoadPatientsSuccess\n  | LoadPatientsFailure\n  | LoadPatientUsersSuccess\n  | LoadPatientUsersFailure;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditUser.html":{"url":"classes/EditUser.html","title":"class - EditUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users.actions.ts\n        \n\n            \n                Description\n            \n            \n                action to submit and edit user\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: User)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/users.actions.ts:98\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    User\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:100\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersActionTypes.EditUser\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:98\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum UsersActionTypes {\n  SelectUser = '[User] Select Current User',\n  ClearSelectedUser = '[User] Clear Current User',\n  InitializeUser = '[User] Initialize Current User',\n  CreateUserFormDialog = '[Users] Pop Up User Form',\n  CreateUser = '[User] Create User',\n  DismissUserFormDialog = '[User] Dismiss User Form Dialog',\n  LoadUsers = '[User] Load Users',\n  SearchUser = '[User] Search User',\n  SearchUserComplete = '[User] Search User Complete',\n  EditUser = '[User] Edit User',\n  DismissEditUser = '[User] Dismiss Edit User',\n  ResetUsersState = '[Users] Reset Users State',\n  DeleteUser = '[Users] Delete User',\n  LoadUserPatients = '[User] Load User Patients'\n}\n\n\n/**\n * Select user Action\n */\nexport class SelectUser implements Action {\n  readonly type = UsersActionTypes.SelectUser;\n\n  constructor(public payload: User) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedUser implements Action {\n  readonly type = UsersActionTypes.ClearSelectedUser;\n}\n\n/**\n * Initialize user Action\n */\nexport class InitializeUser implements Action {\n  readonly type = UsersActionTypes.InitializeUser;\n}\n\n/**\n * action to pop up user form\n */\nexport class CreateUserFormDialog implements Action {\n  readonly type = UsersActionTypes.CreateUserFormDialog;\n}\n\n/**\n * Create user Action\n */\nexport class CreateUser implements Action {\n  readonly type = UsersActionTypes.CreateUser;\n\n  constructor(public payload: { user: User }) { }\n}\n\n/**\n * CreateUser Dialog window dismissed\n */\nexport class DismissUserFormDialog implements Action {\n  readonly type = UsersActionTypes.DismissUserFormDialog;\n}\n\n/**\n * Load users Action\n */\nexport class LoadUsers implements Action {\n  readonly type = UsersActionTypes.LoadUsers;\n}\n\n/**\n * Search user action\n */\nexport class SearchUser implements Action {\n  readonly type = UsersActionTypes.SearchUser;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search user complete action\n */\nexport class SearchUserComplete implements Action {\n  readonly type = UsersActionTypes.SearchUserComplete;\n\n  constructor(public payload: User[]) { }\n}\n\n/**\n * action to submit and edit user\n */\nexport class EditUser implements Action {\n  readonly type = UsersActionTypes.EditUser;\n\n  constructor(public payload: User) {\n  }\n}\n\n/**\n * User Edit dismissed action\n */\nexport class DismissEditUser implements Action {\n  readonly type = UsersActionTypes.DismissEditUser;\n}\n\n/**\n * reset the user state\n */\nexport class ResetUsersState implements Action {\n  readonly type = UsersActionTypes.ResetUsersState;\n}\n\n/**\n * action to delete a user\n */\nexport class DeleteUser implements Action {\n  readonly type = UsersActionTypes.DeleteUser;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load user patients action\n */\nexport class LoadUserPatients implements Action {\n  readonly type = UsersActionTypes.LoadUserPatients;\n  constructor(public payload: number ) { }\n}\n\n/**\n * Export union of user Action\n */\nexport type UsersActionsUnion\n  = SelectUser\n  | ClearSelectedUser\n  | InitializeUser\n  | CreateUserFormDialog\n  | CreateUser\n  | DismissUserFormDialog\n  | LoadUsers\n  | SearchUser\n  | SearchUserComplete\n  | EditUser\n  | DismissEditUser\n  | ResetUsersState\n  | LoadUserPatients;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditUserFailure.html":{"url":"classes/EditUserFailure.html","title":"class - EditUserFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditUserFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                edit user failure action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/users-api.actions.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users-api.actions.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersApiActionTypes.EditUserFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users-api.actions.ts:73\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { IPatient } from '../models/patient.model';\n\n/**\n * definitions for action types\n */\nexport enum UsersApiActionTypes {\n  CreateUserSuccess = '[User/Api] Create User Success',\n  CreateUserFailure = '[User/Api] Create User Failure',\n  LoadUsersSuccess = '[User/Api] Load Users Success',\n  LoadUsersFailure = '[User/Api] Load Users Failure',\n  EditUserSuccess = '[User/Api] Edit User Success',\n  EditUserFailure = '[User/Api] Edit User Failure',\n  LoadUserPatientsSuccess = '[User/Api] Load User Patients Success',\n  LoadUserPatientsFailure = '[User/Api] Load User Patients Failure',\n}\n\n/**\n * add user success action\n */\nexport class CreateUserSuccess implements Action {\n  public readonly type = UsersApiActionTypes.CreateUserSuccess;\n\n  constructor(public payload: { user: User }) {\n  }\n}\n\n/**\n * add user failure action\n */\nexport class CreateUserFailure implements Action {\n  public readonly type = UsersApiActionTypes.CreateUserFailure;\n\n  constructor(public payload: { messages: string }) {\n  }\n}\n\n/**\n * load all users success action\n */\nexport class LoadUsersSuccess implements Action {\n  public readonly type = UsersApiActionTypes.LoadUsersSuccess;\n\n  constructor(public payload: { users: User[] }) {\n  }\n}\n\n/**\n * load all users failure action\n */\nexport class LoadUsersFailure implements Action {\n  public readonly type = UsersApiActionTypes.LoadUsersFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * edit user success action\n */\nexport class EditUserSuccess implements Action {\n  public readonly type = UsersApiActionTypes.EditUserSuccess;\n\n  constructor(public payload: { user: User }) {\n  }\n}\n\n/**\n * edit user failure action\n */\nexport class EditUserFailure implements Action {\n  public readonly type = UsersApiActionTypes.EditUserFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * load all user patients success action\n */\nexport class LoadUserPatientsSuccess implements Action {\n  public readonly type = UsersApiActionTypes.LoadUserPatientsSuccess;\n\n  constructor(public payload: { patients: IPatient[] }) {\n  }\n}\n\n/**\n * load all user patients failure action\n */\nexport class LoadUserPatientsFailure implements Action {\n  public readonly type = UsersApiActionTypes.LoadUserPatientsFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n// export types\nexport type UsersApiActionsUnion =\n  | CreateUserSuccess\n  | CreateUserFailure\n  | EditUserSuccess\n  | EditUserFailure\n  | LoadUsersSuccess\n  | LoadUsersFailure\n  | LoadUserPatientsSuccess\n  | LoadUserPatientsFailure\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditUserSuccess.html":{"url":"classes/EditUserSuccess.html","title":"class - EditUserSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditUserSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                edit user success action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/users-api.actions.ts:63\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users-api.actions.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersApiActionTypes.EditUserSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users-api.actions.ts:63\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { IPatient } from '../models/patient.model';\n\n/**\n * definitions for action types\n */\nexport enum UsersApiActionTypes {\n  CreateUserSuccess = '[User/Api] Create User Success',\n  CreateUserFailure = '[User/Api] Create User Failure',\n  LoadUsersSuccess = '[User/Api] Load Users Success',\n  LoadUsersFailure = '[User/Api] Load Users Failure',\n  EditUserSuccess = '[User/Api] Edit User Success',\n  EditUserFailure = '[User/Api] Edit User Failure',\n  LoadUserPatientsSuccess = '[User/Api] Load User Patients Success',\n  LoadUserPatientsFailure = '[User/Api] Load User Patients Failure',\n}\n\n/**\n * add user success action\n */\nexport class CreateUserSuccess implements Action {\n  public readonly type = UsersApiActionTypes.CreateUserSuccess;\n\n  constructor(public payload: { user: User }) {\n  }\n}\n\n/**\n * add user failure action\n */\nexport class CreateUserFailure implements Action {\n  public readonly type = UsersApiActionTypes.CreateUserFailure;\n\n  constructor(public payload: { messages: string }) {\n  }\n}\n\n/**\n * load all users success action\n */\nexport class LoadUsersSuccess implements Action {\n  public readonly type = UsersApiActionTypes.LoadUsersSuccess;\n\n  constructor(public payload: { users: User[] }) {\n  }\n}\n\n/**\n * load all users failure action\n */\nexport class LoadUsersFailure implements Action {\n  public readonly type = UsersApiActionTypes.LoadUsersFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * edit user success action\n */\nexport class EditUserSuccess implements Action {\n  public readonly type = UsersApiActionTypes.EditUserSuccess;\n\n  constructor(public payload: { user: User }) {\n  }\n}\n\n/**\n * edit user failure action\n */\nexport class EditUserFailure implements Action {\n  public readonly type = UsersApiActionTypes.EditUserFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * load all user patients success action\n */\nexport class LoadUserPatientsSuccess implements Action {\n  public readonly type = UsersApiActionTypes.LoadUserPatientsSuccess;\n\n  constructor(public payload: { patients: IPatient[] }) {\n  }\n}\n\n/**\n * load all user patients failure action\n */\nexport class LoadUserPatientsFailure implements Action {\n  public readonly type = UsersApiActionTypes.LoadUserPatientsFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n// export types\nexport type UsersApiActionsUnion =\n  | CreateUserSuccess\n  | CreateUserFailure\n  | EditUserSuccess\n  | EditUserFailure\n  | LoadUsersSuccess\n  | LoadUsersFailure\n  | LoadUserPatientsSuccess\n  | LoadUserPatientsFailure\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EgretSideNavToggleDirective.html":{"url":"directives/EgretSideNavToggleDirective.html","title":"directive - EgretSideNavToggleDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  EgretSideNavToggleDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/directives/egret-side-nav-toggle.directive.ts\n        \n\n            \n                Description\n            \n            \n                SideNav toggle directive\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [EgretSideNavToggle]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isMobile\n                            \n                            \n                                screenSizeWatcher\n                            \n                            \n                                    Public\n                                sideNav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initSideNav\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateSidenav\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(media: ObservableMedia, sideNav: MatSidenav)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/directives/egret-side-nav-toggle.directive.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        media\n                                                  \n                                                        \n                                                                    ObservableMedia\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sideNav\n                                                  \n                                                        \n                                                                    MatSidenav\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initSideNav\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitSideNav()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/directives/egret-side-nav-toggle.directive.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/directives/egret-side-nav-toggle.directive.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/directives/egret-side-nav-toggle.directive.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateSidenav()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/directives/egret-side-nav-toggle.directive.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isMobile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isMobile:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/directives/egret-side-nav-toggle.directive.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            screenSizeWatcher\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        screenSizeWatcher:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/directives/egret-side-nav-toggle.directive.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sideNav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sideNav:     MatSidenav\n\n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Host()@Self()@Optional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/directives/egret-side-nav-toggle.directive.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Host, Self, Optional, OnDestroy, OnInit } from '@angular/core';\nimport { MediaChange, ObservableMedia } from '@angular/flex-layout';\nimport { Subscription } from 'rxjs';\nimport { MatSidenav } from '@angular/material';\n\n/**\n * SideNav toggle directive\n * @deprecated (cvb) Not sure if we need it.\n */\n@Directive({\n  selector: '[EgretSideNavToggle]'\n})\nexport class EgretSideNavToggleDirective implements OnInit, OnDestroy {\n  isMobile;\n  screenSizeWatcher: Subscription;\n\n  constructor(\n    private media: ObservableMedia,\n    @Host() @Self() @Optional() public sideNav: MatSidenav\n  ) {\n  }\n\n  ngOnInit() {\n    this.initSideNav();\n  }\n\n  ngOnDestroy() {\n    if (this.screenSizeWatcher) {\n      this.screenSizeWatcher.unsubscribe();\n    }\n  }\n\n  updateSidenav() {\n    const self = this;\n    setTimeout(() => {\n      self.sideNav.opened = !self.isMobile;\n      self.sideNav.mode = self.isMobile ? 'over' : 'side';\n    });\n  }\n\n  initSideNav() {\n    this.isMobile = this.media.isActive('xs') || this.media.isActive('sm');\n    this.updateSidenav();\n    this.screenSizeWatcher = this.media.subscribe((change: MediaChange) => {\n      this.isMobile = (change.mqAlias === 'xs') || (change.mqAlias === 'sm');\n      this.updateSidenav();\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/errors/components/error/error.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-error\n            \n\n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/errors/components/error/error.component.ts:7\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/errors/components/error/error.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'moio-error',\n  templateUrl: './error.component.html'\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      warning\n      \n        500\n        Server Error!\n      \n    \n\n    \n      Back to Dashboard\n      \n      Report this Problem\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            warning              500        Server Error!                    Back to Dashboard            Report this Problem            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorLayoutComponent.html":{"url":"components/ErrorLayoutComponent.html","title":"component - ErrorLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/errors/containers/error-layout.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-error-layout\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'moio-error-layout',\n  template: ``\n})\nexport class ErrorLayoutComponent {\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorsModule.html":{"url":"modules/ErrorsModule.html","title":"module - ErrorsModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ErrorsModule\n\n\n\ncluster_ErrorsModule_declarations\n\n\n\ncluster_ErrorsModule_imports\n\n\n\n\nConfirmComponent\n\nConfirmComponent\n\n\n\nErrorsModule\n\nErrorsModule\n\nErrorsModule -->\n\nConfirmComponent->ErrorsModule\n\n\n\n\n\nErrorsRoutingModule\n\nErrorsRoutingModule\n\nErrorsModule -->\n\nErrorsRoutingModule->ErrorsModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nErrorsModule -->\n\nMaterialModule->ErrorsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/errors/errors.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ConfirmComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ErrorsRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from '../material';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { ErrorComponent } from './components/error/error.component';\nimport { ErrorsRoutingModule } from './errors-routing.module';\nimport { ErrorLayoutComponent } from './containers/error-layout.component';\nimport { TranslateModule } from '@ngx-translate/core';\n\nexport const COMPONENTS = [\n  ErrorLayoutComponent,\n  NotFoundComponent,\n  ErrorComponent\n];\n\n@NgModule({\n  declarations: [\n    COMPONENTS\n  ],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    ErrorsRoutingModule,\n    TranslateModule\n  ]\n})\nexport class ErrorsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorsRoutingModule.html":{"url":"modules/ErrorsRoutingModule.html","title":"module - ErrorsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/errors/errors-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { errorsRoutes } from './errors.routes';\n\n@NgModule({\n  imports: [RouterModule.forChild(errorsRoutes)],\n  exports: [RouterModule]\n})\nexport class ErrorsRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FixTopbar.html":{"url":"classes/FixTopbar.html","title":"class - FixTopbar","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FixTopbar\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/layout.actions.ts\n        \n\n            \n                Description\n            \n            \n                fix top bar action\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/layout.actions.ts:124\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:125\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LayoutActionTypes.FixTopbar\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:124\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\n/**\n * layout action types\n */\nexport enum LayoutActionTypes {\n  OpenSideNav = '[Layout] Open Side Nav',\n  CloseSideNav = '[Layout] Close Side Nav',\n  CompactSideNav = '[Layout] Compact Nav position',\n  SetNavigationPositionSide = '[Layout] Set Navigation Position Side',\n  SetNavigationPositionTop = '[Layout] Set Navigation Position Top',\n  SetDirectionLtr = '[Layout] Set Direction Ltr',\n  SetDirectionRtr = '[Layout] Set Direction Rtr',\n  TransitioningLayout = '[Layout] Transitioning Layout',\n  UseBreadcrumb = '[Layout] Use Breadcrumb',\n  MakeBreadcrumbSimple = '[Layout] Make Breadcrumb Simple',\n  MakeBreadcrumbTitle = '[Layout] Make Breadcrumb Title',\n  FixTopbar = '[Layout] Fix Topbar'\n}\n\n/**\n * open side navigation action\n */\nexport class OpenSideNav {\n  readonly type = LayoutActionTypes.OpenSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * close side navigation action\n */\nexport class CloseSideNav {\n  readonly type = LayoutActionTypes.CloseSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * compact side navigation action\n */\nexport class CompactSideNav {\n  readonly type = LayoutActionTypes.CompactSideNav;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to side action\n */\nexport class SetNavigationPositionSide {\n  readonly type = LayoutActionTypes.SetNavigationPositionSide;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to top action\n */\nexport class SetNavigationPositionTop {\n  readonly type = LayoutActionTypes.SetNavigationPositionTop;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to left-to-right action\n */\nexport class SetDirectionLtr {\n  readonly type = LayoutActionTypes.SetDirectionLtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to right-to-left action\n */\nexport class SetDirectionRtr {\n  readonly type = LayoutActionTypes.SetDirectionRtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * transition layout action\n */\nexport class TransitioningLayout {\n  readonly type = LayoutActionTypes.TransitioningLayout;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * Use breadcrumb action\n */\nexport class UseBreadcrumb {\n  readonly type = LayoutActionTypes.UseBreadcrumb;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * make breadcrumb simple action\n */\nexport class MakeBreadcrumbSimple {\n  readonly type = LayoutActionTypes.MakeBreadcrumbSimple;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * make breadcrum title action\n */\nexport class MakeBreadcrumbTitle {\n  readonly type = LayoutActionTypes.MakeBreadcrumbTitle;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * fix top bar action\n */\nexport class FixTopbar {\n  readonly type = LayoutActionTypes.FixTopbar;\n  constructor(public payload: boolean) { \n  }\n}\n\nexport type LayoutActions = \n  | OpenSideNav\n  | CloseSideNav\n  | CompactSideNav\n  | SetNavigationPositionSide\n  | SetNavigationPositionTop\n  | SetDirectionLtr\n  | SetDirectionRtr\n  | TransitioningLayout\n  | UseBreadcrumb\n  | MakeBreadcrumbSimple\n  | MakeBreadcrumbTitle\n  | FixTopbar;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/FontSizeDirective.html":{"url":"directives/FontSizeDirective.html","title":"directive - FontSizeDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  FontSizeDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/directives/font-size.directive.ts\n        \n\n            \n                Description\n            \n            \n                font size directive\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [fontSize]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fontSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fontSize: string, el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/directives/font-size.directive.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fontSize\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/directives/font-size.directive.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fontSize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fontSize:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Attribute('fontSize')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/directives/font-size.directive.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, Attribute, OnInit } from '@angular/core';\n\n/**\n * font size directive\n * @deprecated (cvb) pretty sure we don not need this\n */\n@Directive({selector: '[fontSize]'})\nexport class FontSizeDirective implements OnInit {\n  constructor(@Attribute('fontSize') public fontSize: string, private el: ElementRef) {\n  }\n\n  ngOnInit() {\n    this.el.nativeElement.fontSize = this.fontSize;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForgotPassword.html":{"url":"classes/ForgotPassword.html","title":"class - ForgotPassword","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForgotPassword\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/actions/auth-page.actions.ts\n        \n\n            \n                Description\n            \n            \n                action for the forgot password page\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/actions/auth-page.actions.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-page.actions.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : AuthPageActionTypes.ForgotPassword\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-page.actions.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { ICredentials } from '../models/user.interface';\n\nexport enum AuthPageActionTypes {\n  Login = '[Auth/Login Page] Login',\n  Signup = '[Auth/Signup Page] Signup',\n  ForgotPassword = '[Auth/Forgot Password Page] Forgot Password'\n}\n\n/**\n * Login action\n */\nexport class Login implements Action {\n  readonly type = AuthPageActionTypes.Login;\n\n  constructor(public payload: { credentials: ICredentials }) {\n  }\n}\n\n/**\n * signup action\n */\nexport class Signup implements Action {\n  readonly type = AuthPageActionTypes.Signup;\n\n  constructor(public payload: { credentials: ICredentials }) {\n  }\n}\n\n/**\n * action for the forgot password page\n */\nexport class ForgotPassword implements Action {\n  readonly type = AuthPageActionTypes.ForgotPassword;\n\n  constructor(public payload: { email: string }) {\n  }\n}\n\nexport type AuthPageActionsUnion =\n  | Login\n  | Signup\n  | ForgotPassword;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordComponent.html":{"url":"components/ForgotPasswordComponent.html","title":"component - ForgotPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForgotPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/components/forgot-password/forgot-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-forgot-password\n            \n\n\n\n\n            \n                templateUrl\n                ./forgot-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                progressBar\n                            \n                            \n                                submitButton\n                            \n                            \n                                userEmail\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                submitEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/components/forgot-password/forgot-password.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/components/forgot-password/forgot-password.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitEmail\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubmitEmail()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/components/forgot-password/forgot-password.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            progressBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        progressBar:     MatProgressBar\n\n                    \n                \n                    \n                        \n                            Type :     MatProgressBar\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatProgressBar)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/components/forgot-password/forgot-password.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitButton\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        submitButton:     MatButton\n\n                    \n                \n                    \n                        \n                            Type :     MatButton\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatButton)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/components/forgot-password/forgot-password.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userEmail\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userEmail:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/auth/components/forgot-password/forgot-password.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatProgressBar, MatButton } from '@angular/material';\n\n@Component({\n  selector: 'moio-forgot-password',\n  templateUrl: './forgot-password.component.html'\n})\nexport class ForgotPasswordComponent implements OnInit {\n  userEmail;\n  @ViewChild(MatProgressBar) progressBar: MatProgressBar;\n  @ViewChild(MatButton) submitButton: MatButton;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  submitEmail() {\n    this.submitButton.disabled = true;\n    this.progressBar.mode = 'indeterminate';\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n          \n          {{ 'NewPasswordSendText' | translate }}\n        \n        \n\n          \n            \n              \n            \n             {{ 'Auth.EmailRequired' | translate }}\n            \n          \n\n          {{ 'Submit' | translate }}\n          \n            {{ 'Auth.Signin' | translate}}\n            \n          \n        \n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            {{ \\'NewPasswordSendText\\' | translate }}                                                                             {{ \\'Auth.EmailRequired\\' | translate }}                                {{ \\'Submit\\' | translate }}                      {{ \\'Auth.Signin\\' | translate}}                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForgotPasswordFailure.html":{"url":"classes/ForgotPasswordFailure.html","title":"class - ForgotPasswordFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForgotPasswordFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/actions/auth-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                sign up failure\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/actions/auth-api.actions.ts:93\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-api.actions.ts:95\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : AuthApiActionTypes.ForgotPasswordFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-api.actions.ts:93\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum AuthApiActionTypes {\n  LoginSuccess = '[Auth/Api] Login Success',\n  LoginFailure = '[Auth/Api] Login Failure',\n  LoginRedirect = '[Auth/Api] Login Redirect',\n  LogoutSuccess = '[Auth/Api] Logout Success',\n  LogoutFailure = '[Auth/Api] Logout Failure',\n  SignUpSuccess = '[Auth/Api] Sign Up Success',\n  SignUpFailure = '[Auth/Api] Sign Up Failure',\n  ForgotPasswordSuccess = '[Auth/Api] Forgot Password Success',\n  ForgotPasswordFailure = '[Auth/Api] Forgot Password Failure',\n}\n\n/**\n * login action\n */\nexport class LoginSuccess implements Action {\n  readonly type = AuthApiActionTypes.LoginSuccess;\n\n  constructor(public payload: { response: any }) {\n  }\n}\n\n/**\n * login failure\n */\nexport class LoginFailure implements Action {\n  readonly type = AuthApiActionTypes.LoginFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * logout success\n */\nexport class LogoutSuccess implements Action {\n  readonly type = AuthApiActionTypes.LogoutSuccess;\n}\n\n/**\n * lougout failure\n */\nexport class LogoutFailure implements Action {\n  readonly type = AuthApiActionTypes.LogoutFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * redirect action\n */\nexport class LoginRedirect implements Action {\n  readonly type = AuthApiActionTypes.LoginRedirect;\n}\n\n/**\n * sign up success\n */\nexport class SignUpSuccess implements Action {\n  readonly type = AuthApiActionTypes.SignUpSuccess;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up failure\n */\nexport class SignUpFailure implements Action {\n  readonly type = AuthApiActionTypes.SignUpFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up success\n */\nexport class ForgotPasswordSuccess implements Action {\n  readonly type = AuthApiActionTypes.ForgotPasswordSuccess;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up failure\n */\nexport class ForgotPasswordFailure implements Action {\n  readonly type = AuthApiActionTypes.ForgotPasswordFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\nexport type AuthApiActionsUnion =\n  | LoginSuccess\n  | LoginFailure\n  | LoginRedirect\n  | LogoutSuccess\n  | LogoutFailure\n  | SignUpSuccess\n  | SignUpFailure\n  | ForgotPasswordSuccess\n  | ForgotPasswordFailure;\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForgotPasswordSuccess.html":{"url":"classes/ForgotPasswordSuccess.html","title":"class - ForgotPasswordSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForgotPasswordSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/actions/auth-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                sign up success\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/actions/auth-api.actions.ts:83\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-api.actions.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : AuthApiActionTypes.ForgotPasswordSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-api.actions.ts:83\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum AuthApiActionTypes {\n  LoginSuccess = '[Auth/Api] Login Success',\n  LoginFailure = '[Auth/Api] Login Failure',\n  LoginRedirect = '[Auth/Api] Login Redirect',\n  LogoutSuccess = '[Auth/Api] Logout Success',\n  LogoutFailure = '[Auth/Api] Logout Failure',\n  SignUpSuccess = '[Auth/Api] Sign Up Success',\n  SignUpFailure = '[Auth/Api] Sign Up Failure',\n  ForgotPasswordSuccess = '[Auth/Api] Forgot Password Success',\n  ForgotPasswordFailure = '[Auth/Api] Forgot Password Failure',\n}\n\n/**\n * login action\n */\nexport class LoginSuccess implements Action {\n  readonly type = AuthApiActionTypes.LoginSuccess;\n\n  constructor(public payload: { response: any }) {\n  }\n}\n\n/**\n * login failure\n */\nexport class LoginFailure implements Action {\n  readonly type = AuthApiActionTypes.LoginFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * logout success\n */\nexport class LogoutSuccess implements Action {\n  readonly type = AuthApiActionTypes.LogoutSuccess;\n}\n\n/**\n * lougout failure\n */\nexport class LogoutFailure implements Action {\n  readonly type = AuthApiActionTypes.LogoutFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * redirect action\n */\nexport class LoginRedirect implements Action {\n  readonly type = AuthApiActionTypes.LoginRedirect;\n}\n\n/**\n * sign up success\n */\nexport class SignUpSuccess implements Action {\n  readonly type = AuthApiActionTypes.SignUpSuccess;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up failure\n */\nexport class SignUpFailure implements Action {\n  readonly type = AuthApiActionTypes.SignUpFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up success\n */\nexport class ForgotPasswordSuccess implements Action {\n  readonly type = AuthApiActionTypes.ForgotPasswordSuccess;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up failure\n */\nexport class ForgotPasswordFailure implements Action {\n  readonly type = AuthApiActionTypes.ForgotPasswordFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\nexport type AuthApiActionsUnion =\n  | LoginSuccess\n  | LoginFailure\n  | LoginRedirect\n  | LogoutSuccess\n  | LogoutFailure\n  | SignUpSuccess\n  | SignUpFailure\n  | ForgotPasswordSuccess\n  | ForgotPasswordFailure;\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GenericValidator.html":{"url":"classes/GenericValidator.html","title":"class - GenericValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GenericValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/shared/generic-validator.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                processMessages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(validationMessages: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/shared/generic-validator.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationMessages\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processMessages\n                            \n                            \n                        \n                    \n                \n                \n                    \nprocessMessages(container: FormGroup)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/shared/generic-validator.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    FormGroup\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     literal type\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\n\n// Generic validator for Reactive forms\n// Implemented as a class, not a service, so it can retain state for multiple forms.\nexport class GenericValidator {\n\n  // Provide the set of valid validation messages\n  // Stucture:\n  // controlName1: {\n  //     validationRuleName1: 'Validation Message.',\n  //     validationRuleName2: 'Validation Message.'\n  // },\n  // controlName2: {\n  //     validationRuleName1: 'Validation Message.',\n  //     validationRuleName2: 'Validation Message.'\n  // }\n  constructor(private validationMessages: { [key: string]: { [key: string]: string } }) {\n\n  }\n\n  // Processes each control within a FormGroup\n  // And returns a set of validation messages to display\n  // Structure\n  // controlName1: 'Validation Message.',\n  // controlName2: 'Validation Message.'\n  processMessages(container: FormGroup): { [key: string]: string } {\n    const messages = {};\n    for (const controlKey in container.controls) {\n      if (container.controls.hasOwnProperty(controlKey)) {\n        const c = container.controls[controlKey];\n        // If it is a FormGroup, process its child controls.\n        if (c instanceof FormGroup) {\n          const childMessages = this.processMessages(c);\n          Object.assign(messages, childMessages);\n        } else {\n          // Only validate if there are validation messages for the control\n          if (this.validationMessages[controlKey]) {\n            messages[controlKey] = '';\n            if ((c.dirty || c.touched) && c.errors) {\n              Object.keys(c.errors).map(messageKey => {\n                if (this.validationMessages[controlKey][messageKey]) {\n                  messages[controlKey] += this.validationMessages[controlKey][messageKey] + ' ';\n                }\n              });\n            }\n          }\n        }\n      }\n    }\n    return messages;\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderSideComponent.html":{"url":"components/HeaderSideComponent.html","title":"component - HeaderSideComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderSideComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/containers/layout-components/header-side/header-side.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-header-side\n            \n\n\n\n\n            \n                templateUrl\n                ./header-side.template.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                availableLangs\n                            \n                            \n                                currentLang\n                            \n                            \n                                    Public\n                                egretThemes\n                            \n                            \n                                    Public\n                                sidebarStyle\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeTheme\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onConfirmLogout\n                            \n                            \n                                setLang\n                            \n                            \n                                toggleCollapse\n                            \n                            \n                                toggleNotific\n                            \n                            \n                                toggleSidenav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                notificPanel\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authStore: Store, store: Store, themeService: ThemeService, layout: LayoutService, translate: TranslateService, renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/containers/layout-components/header-side/header-side.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authStore\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                    ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        layout\n                                                  \n                                                        \n                                                                    LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        notificPanel\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/header-side/header-side.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeTheme\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeTheme(theme)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/header-side/header-side.component.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        theme\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/header-side/header-side.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onConfirmLogout\n                            \n                            \n                        \n                    \n                \n                \n                    \nonConfirmLogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/header-side/header-side.component.ts:93\n                            \n                        \n\n\n                \n                    \n                            logout the user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setLang\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetLang(event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/header-side/header-side.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleCollapse\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleCollapse()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/header-side/header-side.component.ts:75\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleNotific\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleNotific()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/header-side/header-side.component.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleSidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleSidenav()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/header-side/header-side.component.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            availableLangs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        availableLangs:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n    name: 'English',\n    code: 'en',\n  }, {\n    name: 'Deutsch',\n    code: 'de',\n  }]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/header-side/header-side.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentLang\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentLang:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'de'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/header-side/header-side.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            egretThemes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        egretThemes:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/header-side/header-side.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidebarStyle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidebarStyle:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/header-side/header-side.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translate:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/header-side/header-side.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Renderer2 } from '@angular/core';\nimport { ThemeService } from '../../../../core/services/theme.service';\nimport { LayoutService } from '../../../../core/services/layout.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Store, select } from '@ngrx/store';\n\nimport { AuthActions } from '../../../../auth/actions';\nimport * as layoutActions from '../../../actions/layout.actions';\nimport * as fromAuth from '../../../../auth/reducers';\nimport * as fromDashboard from '../../../reducers';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'moio-header-side',\n  templateUrl: './header-side.template.html'\n})\nexport class HeaderSideComponent implements OnInit {\n  @Input() notificPanel;\n  currentLang = 'de';\n\n  public availableLangs = [{\n    name: 'English',\n    code: 'en',\n  }, {\n    name: 'Deutsch',\n    code: 'de',\n  }];\n  public egretThemes;\n  public sidebarStyle: string;\n\n  constructor(\n    private authStore: Store,\n    private store: Store,\n    private themeService: ThemeService,\n    private layout: LayoutService,\n    public translate: TranslateService,\n    private renderer: Renderer2\n  ) {\n  }\n\n  ngOnInit() {\n    this.egretThemes = this.themeService.egretThemes;\n\n    this.translate.use(this.currentLang);\n\n    // TODO: Unsubscribe\n    this.store.pipe(select(fromDashboard.getSideNav)).subscribe(\n      (sidebarStyle:string) => this.sidebarStyle = sidebarStyle\n    );\n  }\n\n  setLang(event) {\n    // TODO: change language\n    console.log(event);\n    this.translate.use(this.currentLang);\n  }\n\n  changeTheme(theme) {\n    this.themeService.changeTheme(this.renderer, theme);\n  }\n\n  toggleNotific() {\n    this.notificPanel.toggle();\n  }\n\n  toggleSidenav() {\n    // todo subscribe to the sidenavstyle\n    if (this.sidebarStyle === 'closed') {\n      this.store.dispatch(new layoutActions.OpenSideNav('full'));\n    } else {\n      this.store.dispatch(new layoutActions.CloseSideNav('closed'));\n    }\n  }\n\n  toggleCollapse() {\n    // compact --> full\n    if (this.sidebarStyle === 'compact') {\n      return this.layout.publishLayoutChange({\n        sidebarStyle: 'full'\n      }, {transitionClass: true});\n    }\n\n    // * --> compact\n    this.layout.publishLayoutChange({\n      sidebarStyle: 'compact'\n    }, {transitionClass: true});\n\n  }\n\n  /**\n   * logout the user\n   */\n  onConfirmLogout() {\n    this.authStore.dispatch(new AuthActions.LogoutConfirmation());\n  }\n}\n\n    \n\n    \n        \n  \n  \n    menu\n  \n  \n  \n    chevron_left\n  \n  \n  \n    \n      search\n      \n    \n   -->\n  \n  \n  \n    {{ lang.name }}\n    \n  \n  \n  \n    format_color_fill\n   -->\n\n  \n    \n      \n        \n          \n          check\n        \n      \n    \n   -->\n  \n  \n    notifications\n    3\n   -->\n  \n  \n    \n  \n\n  \n    \n      account_box\n      {{'AccountMenu.Profile' | translate }}\n    \n    \n      settings\n      Account Settings\n    \n    \n      notifications_off\n      Disable alerts\n     -->\n    \n      exit_to_app\n      {{ 'Auth.Signout' | translate }}\n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        menu          chevron_left                search             -->          {{ lang.name }}              format_color_fill   -->                                        check                     -->        notifications    3   -->                      account_box      {{\\'AccountMenu.Profile\\' | translate }}              settings      Account Settings              notifications_off      Disable alerts     -->          exit_to_app      {{ \\'Auth.Signout\\' | translate }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderSideComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAdjustScreenOptions.html":{"url":"interfaces/IAdjustScreenOptions.html","title":"interface - IAdjustScreenOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IAdjustScreenOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/layout.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        browserEvent\n                                \n                                \n                                            Optional\n                                        route\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        browserEvent\n                                    \n                                \n                                \n                                    \n                                        browserEvent:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                    \n                                \n                                \n                                    \n                                        route:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { getQueryParam } from '../helpers/url.helper';\n\n/**\n * layout configuration defintion\n */\ninterface ILayoutConf {\n  navigationPos?: string;   // side, top\n  sidebarStyle?: string;    // full, compact, closed\n  dir?: string;             // ltr, rtl\n  layoutInTransition?: boolean;\n  isMobile?: boolean;\n  useBreadcrumb?: boolean;\n  breadcrumb?: string;      // simple, title\n  topbarFixed?: boolean;\n}\n\n/**\n * change layout options definition\n */\ninterface ILayoutChangeOptions {\n  duration?: number;\n  transitionClass?: boolean;\n}\n\ninterface IAdjustScreenOptions {\n  browserEvent?: any;\n  route?: string;\n}\n\n/**\n * layout service\n * injected in root\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LayoutService {\n  public layoutConf: ILayoutConf;\n  layoutConfSubject = new BehaviorSubject(this.layoutConf);\n  layoutConf$ = this.layoutConfSubject.asObservable();\n  public isMobile: boolean;\n  public currentRoute: string;\n  public fullWidthRoutes = ['shop'];\n\n  /**\n   * constructor\n   */\n  constructor() {\n    this.setAppLayout();\n  }\n\n  /**\n   * set default layout options\n   */\n  setAppLayout() {\n    // ******** SET YOUR LAYOUT OPTIONS HERE *********\n    this.layoutConf = {\n      'navigationPos': 'side',    // side, top\n      'sidebarStyle': 'full',     // full, compact, closed\n      'dir': 'ltr',               // ltr, rtl\n      'useBreadcrumb': true,\n      'topbarFixed': false,\n      'breadcrumb': 'title'       // simple, title\n    };\n  }\n\n  /**\n   * publish layout changes\n   * @param lc layout conf\n   * @param opt layout options\n   */\n  publishLayoutChange(lc: ILayoutConf, opt: ILayoutChangeOptions = {}) {\n    const duration = opt.duration || 250;\n    if (!opt.transitionClass) {\n      this.layoutConf = Object.assign(this.layoutConf, lc);\n      return this.layoutConfSubject.next(this.layoutConf);\n    }\n\n    this.layoutConf = Object.assign(this.layoutConf, lc, {layoutInTransition: true});\n    this.layoutConfSubject.next(this.layoutConf);\n\n    setTimeout(() => {\n      this.layoutConf = Object.assign(this.layoutConf, {layoutInTransition: false});\n      this.layoutConfSubject.next(this.layoutConf);\n    }, duration);\n  }\n\n  /**\n   * set layout from query\n   * @deprecated we do not need this\n   */\n  setLayoutFromQuery() {\n    const layoutConfString = getQueryParam('layout');\n    try {\n      this.layoutConf = JSON.parse(layoutConfString);\n    } catch (e) {\n    }\n  }\n\n  /**\n   * adjust layout to the current situation\n   * e.g. isMobile\n   * @param options screen options\n   */\n  adjustLayout(options: IAdjustScreenOptions = {}) {\n    let sidebarStyle: string;\n    this.isMobile = this.isSm();\n    this.currentRoute = options.route || this.currentRoute;\n    sidebarStyle = this.isMobile ? 'closed' : this.layoutConf.sidebarStyle;\n\n    if (this.currentRoute) {\n      this.fullWidthRoutes.forEach(route => {\n        if (this.currentRoute.indexOf(route) !== -1) {\n          sidebarStyle = 'closed';\n        }\n      });\n    }\n\n    this.publishLayoutChange({\n      isMobile: this.isMobile,\n      sidebarStyle: sidebarStyle\n    });\n  }\n\n  /**\n   * identify current screen width\n   * and return if the max width is 959px\n   */\n  isSm() {\n    return window.matchMedia(`(max-width: 959px)`).matches;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBadge.html":{"url":"interfaces/IBadge.html","title":"interface - IBadge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IBadge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/navigation.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        color\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\ninterface IMenuItem {\n  type: string;       // Possible values: link/dropDown/icon/separator/extLink\n  name?: string;      // Used as display text for item and title for separator type\n  state?: string;     // Router state\n  icon?: string;      // Material icon name\n  tooltip?: string;   // Tooltip text\n  disabled?: boolean; // If true; item will not be appeared in sidenav.\n  sub?: IChildItem[]; // Dropdown items\n  badges?: IBadge[];\n}\n\ninterface IChildItem {\n  type?: string;\n  name: string;       // Display text\n  state?: string;     // Router state\n  icon?: string;\n  sub?: IChildItem[];\n}\n\ninterface IBadge {\n  color: string;      // primary/accent/warn/hex color codes(#fff000)\n  value: string;      // Display text\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavigationService {\n  constructor() {\n  }\n\n  iconMenu: IMenuItem[] = [\n    {\n      name: 'Dashboard',\n      type: 'link',\n      tooltip: 'Dashboard',\n      icon: 'dashboard',\n      state: 'dashboard/blank'\n    },\n    {\n      name: 'Users',\n      type: 'link',\n      tooltip: 'users',\n      icon: 'group',\n      state: 'dashboard/users'\n    },\n    {\n      name: 'Patients',\n      type: 'link',\n      tooltip: 'patients',\n      icon: 'group',\n      state: 'dashboard/patients'\n    }\n  ];\n\n  // Icon menu TITLE at the very top of navigation.\n  // This title will appear if any icon type item is present in menu.\n  iconTypeMenuTitle = 'Frequently Accessed';\n  // sets iconMenu as default;\n  menuItems = new BehaviorSubject(this.iconMenu);\n  // navigation component has subscribed to this Observable\n  menuItems$ = this.menuItems.asObservable();\n\n  // Customizer component uses this method to change menu.\n  // You can remove this method and customizer component.\n  // Or you can customize this method to supply different menu for\n  // different user type.\n  publishNavigationChange(menuType: string) {\n    this.menuItems.next(this.iconMenu);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IChildItem.html":{"url":"interfaces/IChildItem.html","title":"interface - IChildItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IChildItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/navigation.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        state\n                                \n                                \n                                            Optional\n                                        sub\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                    \n                                \n                                \n                                    \n                                        sub:     IChildItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IChildItem[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\ninterface IMenuItem {\n  type: string;       // Possible values: link/dropDown/icon/separator/extLink\n  name?: string;      // Used as display text for item and title for separator type\n  state?: string;     // Router state\n  icon?: string;      // Material icon name\n  tooltip?: string;   // Tooltip text\n  disabled?: boolean; // If true; item will not be appeared in sidenav.\n  sub?: IChildItem[]; // Dropdown items\n  badges?: IBadge[];\n}\n\ninterface IChildItem {\n  type?: string;\n  name: string;       // Display text\n  state?: string;     // Router state\n  icon?: string;\n  sub?: IChildItem[];\n}\n\ninterface IBadge {\n  color: string;      // primary/accent/warn/hex color codes(#fff000)\n  value: string;      // Display text\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavigationService {\n  constructor() {\n  }\n\n  iconMenu: IMenuItem[] = [\n    {\n      name: 'Dashboard',\n      type: 'link',\n      tooltip: 'Dashboard',\n      icon: 'dashboard',\n      state: 'dashboard/blank'\n    },\n    {\n      name: 'Users',\n      type: 'link',\n      tooltip: 'users',\n      icon: 'group',\n      state: 'dashboard/users'\n    },\n    {\n      name: 'Patients',\n      type: 'link',\n      tooltip: 'patients',\n      icon: 'group',\n      state: 'dashboard/patients'\n    }\n  ];\n\n  // Icon menu TITLE at the very top of navigation.\n  // This title will appear if any icon type item is present in menu.\n  iconTypeMenuTitle = 'Frequently Accessed';\n  // sets iconMenu as default;\n  menuItems = new BehaviorSubject(this.iconMenu);\n  // navigation component has subscribed to this Observable\n  menuItems$ = this.menuItems.asObservable();\n\n  // Customizer component uses this method to change menu.\n  // You can remove this method and customizer component.\n  // Or you can customize this method to supply different menu for\n  // different user type.\n  publishNavigationChange(menuType: string) {\n    this.menuItems.next(this.iconMenu);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICredentials.html":{"url":"interfaces/ICredentials.html","title":"interface - ICredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/models/user.interface.ts\n        \n\n            \n                Description\n            \n            \n                credentials definition\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IUser {\n  username?: string;\n  firstname?: string;\n  lastname?: string;\n  password?: string;\n  email?: string;\n}\n\n/**\n * credentials definition\n */\nexport interface ICredentials {\n  username: string;\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDevice.html":{"url":"interfaces/IDevice.html","title":"interface - IDevice","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDevice\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/models/device.model.ts\n        \n\n            \n                Description\n            \n            \n                device description\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        admin_code\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        model_no\n                                \n                                \n                                            Optional\n                                        nursing_home_id\n                                \n                                \n                                            Optional\n                                        readonly_code\n                                \n                                \n                                            Optional\n                                        serial_no\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        admin_code\n                                    \n                                \n                                \n                                    \n                                        admin_code:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model_no\n                                    \n                                \n                                \n                                    \n                                        model_no:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nursing_home_id\n                                    \n                                \n                                \n                                    \n                                        nursing_home_id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readonly_code\n                                    \n                                \n                                \n                                    \n                                        readonly_code:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serial_no\n                                    \n                                \n                                \n                                    \n                                        serial_no:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IDevice {\n    admin_code?: string | null;\n    id?: number | null;\n    model_no?: string | null;\n    nursing_home_id?: number;\n    readonly_code?: string;\n    serial_no?: string;\n  }\n  \n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILayoutChangeOptions.html":{"url":"interfaces/ILayoutChangeOptions.html","title":"interface - ILayoutChangeOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILayoutChangeOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/layout.service.ts\n        \n\n            \n                Description\n            \n            \n                change layout options definition\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        duration\n                                \n                                \n                                            Optional\n                                        transitionClass\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                    \n                                \n                                \n                                    \n                                        duration:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transitionClass\n                                    \n                                \n                                \n                                    \n                                        transitionClass:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { getQueryParam } from '../helpers/url.helper';\n\n/**\n * layout configuration defintion\n */\ninterface ILayoutConf {\n  navigationPos?: string;   // side, top\n  sidebarStyle?: string;    // full, compact, closed\n  dir?: string;             // ltr, rtl\n  layoutInTransition?: boolean;\n  isMobile?: boolean;\n  useBreadcrumb?: boolean;\n  breadcrumb?: string;      // simple, title\n  topbarFixed?: boolean;\n}\n\n/**\n * change layout options definition\n */\ninterface ILayoutChangeOptions {\n  duration?: number;\n  transitionClass?: boolean;\n}\n\ninterface IAdjustScreenOptions {\n  browserEvent?: any;\n  route?: string;\n}\n\n/**\n * layout service\n * injected in root\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LayoutService {\n  public layoutConf: ILayoutConf;\n  layoutConfSubject = new BehaviorSubject(this.layoutConf);\n  layoutConf$ = this.layoutConfSubject.asObservable();\n  public isMobile: boolean;\n  public currentRoute: string;\n  public fullWidthRoutes = ['shop'];\n\n  /**\n   * constructor\n   */\n  constructor() {\n    this.setAppLayout();\n  }\n\n  /**\n   * set default layout options\n   */\n  setAppLayout() {\n    // ******** SET YOUR LAYOUT OPTIONS HERE *********\n    this.layoutConf = {\n      'navigationPos': 'side',    // side, top\n      'sidebarStyle': 'full',     // full, compact, closed\n      'dir': 'ltr',               // ltr, rtl\n      'useBreadcrumb': true,\n      'topbarFixed': false,\n      'breadcrumb': 'title'       // simple, title\n    };\n  }\n\n  /**\n   * publish layout changes\n   * @param lc layout conf\n   * @param opt layout options\n   */\n  publishLayoutChange(lc: ILayoutConf, opt: ILayoutChangeOptions = {}) {\n    const duration = opt.duration || 250;\n    if (!opt.transitionClass) {\n      this.layoutConf = Object.assign(this.layoutConf, lc);\n      return this.layoutConfSubject.next(this.layoutConf);\n    }\n\n    this.layoutConf = Object.assign(this.layoutConf, lc, {layoutInTransition: true});\n    this.layoutConfSubject.next(this.layoutConf);\n\n    setTimeout(() => {\n      this.layoutConf = Object.assign(this.layoutConf, {layoutInTransition: false});\n      this.layoutConfSubject.next(this.layoutConf);\n    }, duration);\n  }\n\n  /**\n   * set layout from query\n   * @deprecated we do not need this\n   */\n  setLayoutFromQuery() {\n    const layoutConfString = getQueryParam('layout');\n    try {\n      this.layoutConf = JSON.parse(layoutConfString);\n    } catch (e) {\n    }\n  }\n\n  /**\n   * adjust layout to the current situation\n   * e.g. isMobile\n   * @param options screen options\n   */\n  adjustLayout(options: IAdjustScreenOptions = {}) {\n    let sidebarStyle: string;\n    this.isMobile = this.isSm();\n    this.currentRoute = options.route || this.currentRoute;\n    sidebarStyle = this.isMobile ? 'closed' : this.layoutConf.sidebarStyle;\n\n    if (this.currentRoute) {\n      this.fullWidthRoutes.forEach(route => {\n        if (this.currentRoute.indexOf(route) !== -1) {\n          sidebarStyle = 'closed';\n        }\n      });\n    }\n\n    this.publishLayoutChange({\n      isMobile: this.isMobile,\n      sidebarStyle: sidebarStyle\n    });\n  }\n\n  /**\n   * identify current screen width\n   * and return if the max width is 959px\n   */\n  isSm() {\n    return window.matchMedia(`(max-width: 959px)`).matches;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILayoutConf.html":{"url":"interfaces/ILayoutConf.html","title":"interface - ILayoutConf","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILayoutConf\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/layout.service.ts\n        \n\n            \n                Description\n            \n            \n                layout configuration defintion\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        breadcrumb\n                                \n                                \n                                            Optional\n                                        dir\n                                \n                                \n                                            Optional\n                                        isMobile\n                                \n                                \n                                            Optional\n                                        layoutInTransition\n                                \n                                \n                                            Optional\n                                        navigationPos\n                                \n                                \n                                            Optional\n                                        sidebarStyle\n                                \n                                \n                                            Optional\n                                        topbarFixed\n                                \n                                \n                                            Optional\n                                        useBreadcrumb\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        breadcrumb\n                                    \n                                \n                                \n                                    \n                                        breadcrumb:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dir\n                                    \n                                \n                                \n                                    \n                                        dir:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isMobile\n                                    \n                                \n                                \n                                    \n                                        isMobile:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layoutInTransition\n                                    \n                                \n                                \n                                    \n                                        layoutInTransition:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        navigationPos\n                                    \n                                \n                                \n                                    \n                                        navigationPos:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sidebarStyle\n                                    \n                                \n                                \n                                    \n                                        sidebarStyle:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topbarFixed\n                                    \n                                \n                                \n                                    \n                                        topbarFixed:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useBreadcrumb\n                                    \n                                \n                                \n                                    \n                                        useBreadcrumb:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { getQueryParam } from '../helpers/url.helper';\n\n/**\n * layout configuration defintion\n */\ninterface ILayoutConf {\n  navigationPos?: string;   // side, top\n  sidebarStyle?: string;    // full, compact, closed\n  dir?: string;             // ltr, rtl\n  layoutInTransition?: boolean;\n  isMobile?: boolean;\n  useBreadcrumb?: boolean;\n  breadcrumb?: string;      // simple, title\n  topbarFixed?: boolean;\n}\n\n/**\n * change layout options definition\n */\ninterface ILayoutChangeOptions {\n  duration?: number;\n  transitionClass?: boolean;\n}\n\ninterface IAdjustScreenOptions {\n  browserEvent?: any;\n  route?: string;\n}\n\n/**\n * layout service\n * injected in root\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LayoutService {\n  public layoutConf: ILayoutConf;\n  layoutConfSubject = new BehaviorSubject(this.layoutConf);\n  layoutConf$ = this.layoutConfSubject.asObservable();\n  public isMobile: boolean;\n  public currentRoute: string;\n  public fullWidthRoutes = ['shop'];\n\n  /**\n   * constructor\n   */\n  constructor() {\n    this.setAppLayout();\n  }\n\n  /**\n   * set default layout options\n   */\n  setAppLayout() {\n    // ******** SET YOUR LAYOUT OPTIONS HERE *********\n    this.layoutConf = {\n      'navigationPos': 'side',    // side, top\n      'sidebarStyle': 'full',     // full, compact, closed\n      'dir': 'ltr',               // ltr, rtl\n      'useBreadcrumb': true,\n      'topbarFixed': false,\n      'breadcrumb': 'title'       // simple, title\n    };\n  }\n\n  /**\n   * publish layout changes\n   * @param lc layout conf\n   * @param opt layout options\n   */\n  publishLayoutChange(lc: ILayoutConf, opt: ILayoutChangeOptions = {}) {\n    const duration = opt.duration || 250;\n    if (!opt.transitionClass) {\n      this.layoutConf = Object.assign(this.layoutConf, lc);\n      return this.layoutConfSubject.next(this.layoutConf);\n    }\n\n    this.layoutConf = Object.assign(this.layoutConf, lc, {layoutInTransition: true});\n    this.layoutConfSubject.next(this.layoutConf);\n\n    setTimeout(() => {\n      this.layoutConf = Object.assign(this.layoutConf, {layoutInTransition: false});\n      this.layoutConfSubject.next(this.layoutConf);\n    }, duration);\n  }\n\n  /**\n   * set layout from query\n   * @deprecated we do not need this\n   */\n  setLayoutFromQuery() {\n    const layoutConfString = getQueryParam('layout');\n    try {\n      this.layoutConf = JSON.parse(layoutConfString);\n    } catch (e) {\n    }\n  }\n\n  /**\n   * adjust layout to the current situation\n   * e.g. isMobile\n   * @param options screen options\n   */\n  adjustLayout(options: IAdjustScreenOptions = {}) {\n    let sidebarStyle: string;\n    this.isMobile = this.isSm();\n    this.currentRoute = options.route || this.currentRoute;\n    sidebarStyle = this.isMobile ? 'closed' : this.layoutConf.sidebarStyle;\n\n    if (this.currentRoute) {\n      this.fullWidthRoutes.forEach(route => {\n        if (this.currentRoute.indexOf(route) !== -1) {\n          sidebarStyle = 'closed';\n        }\n      });\n    }\n\n    this.publishLayoutChange({\n      isMobile: this.isMobile,\n      sidebarStyle: sidebarStyle\n    });\n  }\n\n  /**\n   * identify current screen width\n   * and return if the max width is 959px\n   */\n  isSm() {\n    return window.matchMedia(`(max-width: 959px)`).matches;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMenuItem.html":{"url":"interfaces/IMenuItem.html","title":"interface - IMenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/navigation.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        badges\n                                \n                                \n                                            Optional\n                                        disabled\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        state\n                                \n                                \n                                            Optional\n                                        sub\n                                \n                                \n                                            Optional\n                                        tooltip\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        badges\n                                    \n                                \n                                \n                                    \n                                        badges:     IBadge[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IBadge[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                    \n                                \n                                \n                                    \n                                        sub:     IChildItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IChildItem[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltip\n                                    \n                                \n                                \n                                    \n                                        tooltip:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\ninterface IMenuItem {\n  type: string;       // Possible values: link/dropDown/icon/separator/extLink\n  name?: string;      // Used as display text for item and title for separator type\n  state?: string;     // Router state\n  icon?: string;      // Material icon name\n  tooltip?: string;   // Tooltip text\n  disabled?: boolean; // If true; item will not be appeared in sidenav.\n  sub?: IChildItem[]; // Dropdown items\n  badges?: IBadge[];\n}\n\ninterface IChildItem {\n  type?: string;\n  name: string;       // Display text\n  state?: string;     // Router state\n  icon?: string;\n  sub?: IChildItem[];\n}\n\ninterface IBadge {\n  color: string;      // primary/accent/warn/hex color codes(#fff000)\n  value: string;      // Display text\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavigationService {\n  constructor() {\n  }\n\n  iconMenu: IMenuItem[] = [\n    {\n      name: 'Dashboard',\n      type: 'link',\n      tooltip: 'Dashboard',\n      icon: 'dashboard',\n      state: 'dashboard/blank'\n    },\n    {\n      name: 'Users',\n      type: 'link',\n      tooltip: 'users',\n      icon: 'group',\n      state: 'dashboard/users'\n    },\n    {\n      name: 'Patients',\n      type: 'link',\n      tooltip: 'patients',\n      icon: 'group',\n      state: 'dashboard/patients'\n    }\n  ];\n\n  // Icon menu TITLE at the very top of navigation.\n  // This title will appear if any icon type item is present in menu.\n  iconTypeMenuTitle = 'Frequently Accessed';\n  // sets iconMenu as default;\n  menuItems = new BehaviorSubject(this.iconMenu);\n  // navigation component has subscribed to this Observable\n  menuItems$ = this.menuItems.asObservable();\n\n  // Customizer component uses this method to change menu.\n  // You can remove this method and customizer component.\n  // Or you can customize this method to supply different menu for\n  // different user type.\n  publishNavigationChange(menuType: string) {\n    this.menuItems.next(this.iconMenu);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPatient.html":{"url":"interfaces/IPatient.html","title":"interface - IPatient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPatient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/models/patient.model.ts\n        \n\n            \n                Description\n            \n            \n                patient model description\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        device\n                                \n                                \n                                            Optional\n                                        device_id\n                                \n                                \n                                            Optional\n                                        firstname\n                                \n                                \n                                            Optional\n                                        gender\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        image\n                                \n                                \n                                            Optional\n                                        lastname\n                                \n                                \n                                            Optional\n                                        nursing_home\n                                \n                                \n                                            Optional\n                                        nursing_home_id\n                                \n                                \n                                            Optional\n                                        nursing_home_name\n                                \n                                \n                                            Optional\n                                        phone\n                                \n                                \n                                            Optional\n                                        users\n                                \n                                \n                                            Optional\n                                        users_count\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        device\n                                    \n                                \n                                \n                                    \n                                        device:     IDevice\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IDevice\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        device_id\n                                    \n                                \n                                \n                                    \n                                        device_id:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                    \n                                \n                                \n                                    \n                                        firstname:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                    \n                                \n                                \n                                    \n                                        gender:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                    \n                                \n                                \n                                    \n                                        image:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                    \n                                \n                                \n                                    \n                                        lastname:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nursing_home\n                                    \n                                \n                                \n                                    \n                                        nursing_home:     NursingHome\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     NursingHome\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nursing_home_id\n                                    \n                                \n                                \n                                    \n                                        nursing_home_id:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nursing_home_name\n                                    \n                                \n                                \n                                    \n                                        nursing_home_name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                    \n                                \n                                \n                                    \n                                        phone:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        users\n                                    \n                                \n                                \n                                    \n                                        users:     User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        users_count\n                                    \n                                \n                                \n                                    \n                                        users_count:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IDevice } from './device.model';\nimport { User } from './user.model';\nimport { NursingHome } from './nursing-home.model';\n\n/**\n * patient model description\n */\nexport interface IPatient {\n  id?: number | null; // auto generated from DB\n  firstname?: string | null;\n  lastname?: string;\n  gender?: string | null;\n  image?: string; // url or base64 encoded image?\n  phone?: string; // optional\n  device_id?: number | null;\n  nursing_home_id?: number | null;\n  nursing_home_name?: string | null;\n  device?: IDevice;\n  nursing_home?: NursingHome;\n  users?: User[];\n  \n  users_count?: number | null;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRoutePart.html":{"url":"interfaces/IRoutePart.html","title":"interface - IRoutePart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IRoutePart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/route-parts.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        breadcrumb\n                                \n                                \n                                            Optional\n                                        params\n                                \n                                \n                                        title\n                                \n                                \n                                        url\n                                \n                                \n                                        urlSegments\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        breadcrumb\n                                    \n                                \n                                \n                                    \n                                        breadcrumb:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                    \n                                \n                                \n                                    \n                                        params:     Params\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Params\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        urlSegments\n                                    \n                                \n                                \n                                    \n                                        urlSegments:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, OnInit } from '@angular/core';\nimport { Router, ActivatedRouteSnapshot, Params } from '@angular/router';\n\ninterface IRoutePart {\n  title: string;\n  breadcrumb: string;\n  params?: Params;\n  url: string;\n  urlSegments: any[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoutePartsService implements OnInit {\n  public routeParts: IRoutePart[];\n\n  constructor(private router: Router) {\n  }\n\n  ngOnInit() {\n  }\n\n  generateRouteParts(snapshot: ActivatedRouteSnapshot): IRoutePart[] {\n    let routeParts = [];\n    if (snapshot) {\n      if (snapshot.firstChild) {\n        routeParts = routeParts.concat(this.generateRouteParts(snapshot.firstChild));\n      }\n      if (snapshot.data['title'] && snapshot.url.length) {\n        // console.log(snapshot.data['title'], snapshot.url)\n        routeParts.push({\n          title: snapshot.data['title'],\n          breadcrumb: snapshot.data['breadcrumb'],\n          url: snapshot.url[0].path,\n          urlSegments: snapshot.url,\n          params: snapshot.params\n        });\n      }\n    }\n    return routeParts;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITheme.html":{"url":"interfaces/ITheme.html","title":"interface - ITheme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITheme\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/theme.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        baseColor\n                                \n                                \n                                            Optional\n                                        isActive\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        baseColor\n                                    \n                                \n                                \n                                    \n                                        baseColor:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                    \n                                \n                                \n                                    \n                                        isActive:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Inject, Renderer2 } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { getQueryParam } from '../helpers/url.helper';\n\ninterface ITheme {\n  name: string;\n  baseColor?: string;\n  isActive?: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  public egretThemes: ITheme[] = [{\n    'name': 'egret-dark-purple',\n    'baseColor': '#9c27b0',\n    'isActive': false\n  }, {\n    'name': 'egret-dark-pink',\n    'baseColor': '#e91e63',\n    'isActive': false\n  }, {\n    'name': 'egret-blue',\n    'baseColor': '#247ba0',\n    'isActive': false\n  }, {\n    'name': 'egret-indigo',\n    'baseColor': '#3f51b5',\n    'isActive': true\n  }];\n  public activatedTheme: ITheme;\n\n  constructor(\n    @Inject(DOCUMENT) private document: Document\n  ) {\n  }\n\n  // Invoked in AppComponent and apply 'activatedTheme' on startup\n  applyMatTheme(r: Renderer2) {\n    /*\n    ****** (SET YOUR DEFAULT THEME HERE) *******\n    * Assign new Theme to activatedTheme\n    */\n    // this.activatedTheme = this.egretThemes[0];\n    // this.activatedTheme = this.egretThemes[1];\n    // this.activatedTheme = this.egretThemes[2];\n    this.activatedTheme = this.egretThemes[3];\n\n    // *********** ONLY FOR DEMO **********\n    this.setThemeFromQuery();\n    // ************************************\n\n    this.changeTheme(r, this.activatedTheme);\n  }\n\n  changeTheme(r: Renderer2, theme: ITheme) {\n    r.removeClass(this.document.body, this.activatedTheme.name);\n    r.addClass(this.document.body, theme.name);\n    this.flipActiveFlag(theme);\n  }\n\n  flipActiveFlag(theme: ITheme) {\n    this.egretThemes.forEach((t) => {\n      t.isActive = false;\n      if (t.name === theme.name) {\n        t.isActive = true;\n        this.activatedTheme = theme;\n      }\n    });\n  }\n\n  // *********** ONLY FOR DEMO **********\n  setThemeFromQuery() {\n    const themeStr = getQueryParam('theme');\n    try {\n      this.activatedTheme = JSON.parse(themeStr);\n      this.flipActiveFlag(this.activatedTheme);\n    } catch (e) {\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/models/user.interface.ts\n        \n\n            \n                Description\n            \n            \n                user definition\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        email\n                                \n                                \n                                            Optional\n                                        firstname\n                                \n                                \n                                            Optional\n                                        lastname\n                                \n                                \n                                            Optional\n                                        password\n                                \n                                \n                                            Optional\n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                    \n                                \n                                \n                                    \n                                        firstname:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                    \n                                \n                                \n                                    \n                                        lastname:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IUser {\n  username?: string;\n  firstname?: string;\n  lastname?: string;\n  password?: string;\n  email?: string;\n}\n\n/**\n * credentials definition\n */\nexport interface ICredentials {\n  username: string;\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitializeNursingHome.html":{"url":"classes/InitializeNursingHome.html","title":"class - InitializeNursingHome","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitializeNursingHome\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/nursing-homes.actions.ts\n        \n\n            \n                Description\n            \n            \n                Initialize nursingHome Action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : NursingHomesActionTypes.InitializeNursingHome\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes.actions.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { NursingHome } from '../models/nursing-home.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum NursingHomesActionTypes {\n  SelectNursingHome = '[NursingHome] Select Current NursingHome',\n  ClearSelectedNursingHome = '[NursingHome] Clear Current NursingHome',\n  InitializeNursingHome = '[NursingHome] Initialize Current NursingHome',\n  PopUpNursingHomeForm = '[NursingHome] Pop Up NursingHome Form',\n  CreateNursingHome = '[NursingHome] Create NursingHome',\n  DismissPoppedUpNursingHomeForm = '[NursingHome] Dismiss Create NursingHome',\n  LoadNursingHomes = '[NursingHome] Load Nursing Homes',\n  SearchNursingHome = '[NursingHome] Search NursingHome',\n  SearchNursingHomeComplete = '[NursingHome] Search NursingHome Complete',\n  EditNursingHome = '[NursingHome] Edit NursingHome',\n  DismissEditNursingHome = '[NursingHome] Dismiss Edit NursingHome',\n  ResetNursingHomesState = '[NursingHomes] Reset NursingHomes State'\n}\n\n\n/**\n * Select nursingHome Action\n */\nexport class SelectNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SelectNursingHome;\n\n  constructor(public payload: NursingHome) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.ClearSelectedNursingHome;\n}\n\n/**\n * Initialize nursingHome Action\n */\nexport class InitializeNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.InitializeNursingHome;\n}\n\n/**\n * action to pop up nursingHome form\n */\nexport class PopUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.PopUpNursingHomeForm;\n}\n\n/**\n * Create nursingHome Action\n */\nexport class CreateNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.CreateNursingHome;\n\n  constructor(public payload: { nursingHome: NursingHome }) { }\n}\n\n/**\n * CreateNursingHome Dialog window dismissed\n */\nexport class DismissPoppedUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.DismissPoppedUpNursingHomeForm;\n}\n\n/**\n * Load nursingHomes Action\n */\nexport class LoadNursingHomes implements Action {\n  readonly type = NursingHomesActionTypes.LoadNursingHomes;\n}\n\n/**\n * Search nursingHome Action\n */\nexport class SearchNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHome;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search nursingHome complete Action\n */\nexport class SearchNursingHomeComplete implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHomeComplete;\n\n  constructor(public payload: NursingHome[]) { }\n}\n\n/**\n * action to submit and edit nursingHome\n */\nexport class EditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.EditNursingHome;\n\n  constructor(public payload: Update) {\n  }\n}\n\n/**\n * NursingHome Edit dismissed action\n */\nexport class DismissEditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.DismissEditNursingHome;\n}\n\n/**\n * reset the nursingHome state\n */\nexport class ResetNursingHomesState implements Action {\n  readonly type = NursingHomesActionTypes.ResetNursingHomesState;\n}\n\n/**\n * Export union of nursingHome Action\n */\nexport type NursingHomesActionsUnion\n  = SelectNursingHome\n  | ClearSelectedNursingHome\n  | InitializeNursingHome\n  | PopUpNursingHomeForm\n  | CreateNursingHome\n  | DismissPoppedUpNursingHomeForm\n  | LoadNursingHomes\n  | SearchNursingHome\n  | SearchNursingHomeComplete\n  | EditNursingHome\n  | DismissEditNursingHome\n  | ResetNursingHomesState;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitializePatient.html":{"url":"classes/InitializePatient.html","title":"class - InitializePatient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitializePatient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients.actions.ts\n        \n\n            \n                Description\n            \n            \n                Initialize patient Action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsActionTypes.InitializePatient\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { IPatient } from '../models/patient.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum PatientsActionTypes {\n  SelectPatient = '[Patient] Select Current Patient',\n  ClearSelectedPatient = '[Patient] Clear Current Patient',\n  InitializePatient = '[Patient] Initialize Current Patient',\n  CreatePatientFormDialog = '[Patients] Pop Up Patient Form',\n  CreatePatient = '[Patient] Create Patient',\n  DismissPatientFormDialog = '[Patient] Dismiss Patient Form Dialog',\n  LoadPatients = '[Patient] Load Patients',\n  SearchPatient = '[Patient] Search Patient',\n  SearchPatientComplete = '[Patient] Search Patient Complete',\n  EditPatient = '[Patient] Edit Patient',\n  DismissEditPatient = '[Patient] Dismiss Edit Patient',\n  ResetPatientsState = '[Patients] Reset Patients State',\n  DeletePatient ='[Patients] Delete Patient',\n  LoadPatientUsers = '[User] Load User Patients'\n}\n\n\n/**\n * Select patient Action\n */\nexport class SelectPatient implements Action {\n  readonly type = PatientsActionTypes.SelectPatient;\n\n  constructor(public payload: IPatient) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedPatient implements Action {\n  readonly type = PatientsActionTypes.ClearSelectedPatient;\n}\n\n/**\n * Initialize patient Action\n */\nexport class InitializePatient implements Action {\n  readonly type = PatientsActionTypes.InitializePatient;\n}\n\n/**\n * action to pop up patient form\n */\nexport class CreatePatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.CreatePatientFormDialog;\n}\n\n/**\n * Create patient Action\n */\nexport class CreatePatient implements Action {\n  readonly type = PatientsActionTypes.CreatePatient;\n\n  constructor(public payload: { patient: IPatient }) { }\n}\n\n/**\n * CreatePatient Dialog window dismissed\n */\nexport class DismissPatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.DismissPatientFormDialog;\n}\n\n/**\n * Load patients Action\n */\nexport class LoadPatients implements Action {\n  readonly type = PatientsActionTypes.LoadPatients;\n}\n\n/**\n * Search patient Action\n */\nexport class SearchPatient implements Action {\n  readonly type = PatientsActionTypes.SearchPatient;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search patient complete Action\n */\nexport class SearchPatientComplete implements Action {\n  readonly type = PatientsActionTypes.SearchPatientComplete;\n\n  constructor(public payload: IPatient[]) { }\n}\n\n/**\n * action to submit and edit patient\n */\nexport class EditPatient implements Action {\n  readonly type = PatientsActionTypes.EditPatient;\n\n  constructor(public payload: IPatient) {\n  }\n}\n\n/**\n * Patient Edit dismissed action\n */\nexport class DismissEditPatient implements Action {\n  readonly type = PatientsActionTypes.DismissEditPatient;\n}\n\n/**\n * reset the patient state\n */\nexport class ResetPatientsState implements Action {\n  readonly type = PatientsActionTypes.ResetPatientsState;\n}\n\n/**\n * action to delete a patient\n */\nexport class DeletePatient implements Action {\n  readonly type = PatientsActionTypes.DeletePatient;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load patient users action\n */\nexport class LoadPatientUsers implements Action {\n  readonly type = PatientsActionTypes.LoadPatientUsers;\n  constructor(public payload: number ) { }\n}\n\n\n/**\n * Export union of patient Action\n */\nexport type PatientsActionsUnion\n  = SelectPatient\n  | ClearSelectedPatient\n  | InitializePatient\n  | CreatePatientFormDialog\n  | CreatePatient\n  | DismissPatientFormDialog\n  | LoadPatients\n  | SearchPatient\n  | SearchPatientComplete\n  | EditPatient\n  | DismissEditPatient\n  | ResetPatientsState\n  | LoadPatientUsers;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitializeUser.html":{"url":"classes/InitializeUser.html","title":"class - InitializeUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitializeUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users.actions.ts\n        \n\n            \n                Description\n            \n            \n                Initialize user Action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersActionTypes.InitializeUser\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum UsersActionTypes {\n  SelectUser = '[User] Select Current User',\n  ClearSelectedUser = '[User] Clear Current User',\n  InitializeUser = '[User] Initialize Current User',\n  CreateUserFormDialog = '[Users] Pop Up User Form',\n  CreateUser = '[User] Create User',\n  DismissUserFormDialog = '[User] Dismiss User Form Dialog',\n  LoadUsers = '[User] Load Users',\n  SearchUser = '[User] Search User',\n  SearchUserComplete = '[User] Search User Complete',\n  EditUser = '[User] Edit User',\n  DismissEditUser = '[User] Dismiss Edit User',\n  ResetUsersState = '[Users] Reset Users State',\n  DeleteUser = '[Users] Delete User',\n  LoadUserPatients = '[User] Load User Patients'\n}\n\n\n/**\n * Select user Action\n */\nexport class SelectUser implements Action {\n  readonly type = UsersActionTypes.SelectUser;\n\n  constructor(public payload: User) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedUser implements Action {\n  readonly type = UsersActionTypes.ClearSelectedUser;\n}\n\n/**\n * Initialize user Action\n */\nexport class InitializeUser implements Action {\n  readonly type = UsersActionTypes.InitializeUser;\n}\n\n/**\n * action to pop up user form\n */\nexport class CreateUserFormDialog implements Action {\n  readonly type = UsersActionTypes.CreateUserFormDialog;\n}\n\n/**\n * Create user Action\n */\nexport class CreateUser implements Action {\n  readonly type = UsersActionTypes.CreateUser;\n\n  constructor(public payload: { user: User }) { }\n}\n\n/**\n * CreateUser Dialog window dismissed\n */\nexport class DismissUserFormDialog implements Action {\n  readonly type = UsersActionTypes.DismissUserFormDialog;\n}\n\n/**\n * Load users Action\n */\nexport class LoadUsers implements Action {\n  readonly type = UsersActionTypes.LoadUsers;\n}\n\n/**\n * Search user action\n */\nexport class SearchUser implements Action {\n  readonly type = UsersActionTypes.SearchUser;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search user complete action\n */\nexport class SearchUserComplete implements Action {\n  readonly type = UsersActionTypes.SearchUserComplete;\n\n  constructor(public payload: User[]) { }\n}\n\n/**\n * action to submit and edit user\n */\nexport class EditUser implements Action {\n  readonly type = UsersActionTypes.EditUser;\n\n  constructor(public payload: User) {\n  }\n}\n\n/**\n * User Edit dismissed action\n */\nexport class DismissEditUser implements Action {\n  readonly type = UsersActionTypes.DismissEditUser;\n}\n\n/**\n * reset the user state\n */\nexport class ResetUsersState implements Action {\n  readonly type = UsersActionTypes.ResetUsersState;\n}\n\n/**\n * action to delete a user\n */\nexport class DeleteUser implements Action {\n  readonly type = UsersActionTypes.DeleteUser;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load user patients action\n */\nexport class LoadUserPatients implements Action {\n  readonly type = UsersActionTypes.LoadUserPatients;\n  constructor(public payload: number ) { }\n}\n\n/**\n * Export union of user Action\n */\nexport type UsersActionsUnion\n  = SelectUser\n  | ClearSelectedUser\n  | InitializeUser\n  | CreateUserFormDialog\n  | CreateUser\n  | DismissUserFormDialog\n  | LoadUsers\n  | SearchUser\n  | SearchUserComplete\n  | EditUser\n  | DismissEditUser\n  | ResetUsersState\n  | LoadUserPatients;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LayoutService.html":{"url":"injectables/LayoutService.html","title":"injectable - LayoutService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LayoutService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/layout.service.ts\n        \n\n            \n                Description\n            \n            \n                layout service\ninjected in root\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentRoute\n                            \n                            \n                                    Public\n                                fullWidthRoutes\n                            \n                            \n                                    Public\n                                isMobile\n                            \n                            \n                                    Public\n                                layoutConf\n                            \n                            \n                                layoutConf$\n                            \n                            \n                                layoutConfSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                adjustLayout\n                            \n                            \n                                isSm\n                            \n                            \n                                publishLayoutChange\n                            \n                            \n                                setAppLayout\n                            \n                            \n                                setLayoutFromQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/layout.service.ts:45\n                            \n                        \n\n                \n                    \n                            constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            adjustLayout\n                            \n                            \n                        \n                    \n                \n                \n                    \nadjustLayout(options: IAdjustScreenOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/layout.service.ts:107\n                            \n                        \n\n\n                \n                    \n                            adjust layout to the current situation\ne.g. isMobile\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    IAdjustScreenOptions\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                        \n                                                                screen options\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSm\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/layout.service.ts:131\n                            \n                        \n\n\n                \n                    \n                            identify current screen width\nand return if the max width is 959px\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publishLayoutChange\n                            \n                            \n                        \n                    \n                \n                \n                    \npublishLayoutChange(lc: ILayoutConf, opt: ILayoutChangeOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/layout.service.ts:74\n                            \n                        \n\n\n                \n                    \n                            publish layout changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        lc\n                                                        \n                                                                    ILayoutConf\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                layout conf\n\n                                                        \n                                                \n                                                \n                                                        opt\n                                                        \n                                                                    ILayoutChangeOptions\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                        \n                                                                layout options\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setAppLayout\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetAppLayout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/layout.service.ts:57\n                            \n                        \n\n\n                \n                    \n                            set default layout options\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setLayoutFromQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetLayoutFromQuery()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/layout.service.ts:94\n                            \n                        \n\n\n                \n                    \n                            set layout from query\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentRoute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentRoute:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/layout.service.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fullWidthRoutes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fullWidthRoutes:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['shop']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/layout.service.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isMobile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isMobile:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/layout.service.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            layoutConf\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layoutConf:     ILayoutConf\n\n                    \n                \n                    \n                        \n                            Type :     ILayoutConf\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/layout.service.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            layoutConf$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layoutConf$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.layoutConfSubject.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/layout.service.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            layoutConfSubject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layoutConfSubject:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(this.layoutConf)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/layout.service.ts:41\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { getQueryParam } from '../helpers/url.helper';\n\n/**\n * layout configuration defintion\n */\ninterface ILayoutConf {\n  navigationPos?: string;   // side, top\n  sidebarStyle?: string;    // full, compact, closed\n  dir?: string;             // ltr, rtl\n  layoutInTransition?: boolean;\n  isMobile?: boolean;\n  useBreadcrumb?: boolean;\n  breadcrumb?: string;      // simple, title\n  topbarFixed?: boolean;\n}\n\n/**\n * change layout options definition\n */\ninterface ILayoutChangeOptions {\n  duration?: number;\n  transitionClass?: boolean;\n}\n\ninterface IAdjustScreenOptions {\n  browserEvent?: any;\n  route?: string;\n}\n\n/**\n * layout service\n * injected in root\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LayoutService {\n  public layoutConf: ILayoutConf;\n  layoutConfSubject = new BehaviorSubject(this.layoutConf);\n  layoutConf$ = this.layoutConfSubject.asObservable();\n  public isMobile: boolean;\n  public currentRoute: string;\n  public fullWidthRoutes = ['shop'];\n\n  /**\n   * constructor\n   */\n  constructor() {\n    this.setAppLayout();\n  }\n\n  /**\n   * set default layout options\n   */\n  setAppLayout() {\n    // ******** SET YOUR LAYOUT OPTIONS HERE *********\n    this.layoutConf = {\n      'navigationPos': 'side',    // side, top\n      'sidebarStyle': 'full',     // full, compact, closed\n      'dir': 'ltr',               // ltr, rtl\n      'useBreadcrumb': true,\n      'topbarFixed': false,\n      'breadcrumb': 'title'       // simple, title\n    };\n  }\n\n  /**\n   * publish layout changes\n   * @param lc layout conf\n   * @param opt layout options\n   */\n  publishLayoutChange(lc: ILayoutConf, opt: ILayoutChangeOptions = {}) {\n    const duration = opt.duration || 250;\n    if (!opt.transitionClass) {\n      this.layoutConf = Object.assign(this.layoutConf, lc);\n      return this.layoutConfSubject.next(this.layoutConf);\n    }\n\n    this.layoutConf = Object.assign(this.layoutConf, lc, {layoutInTransition: true});\n    this.layoutConfSubject.next(this.layoutConf);\n\n    setTimeout(() => {\n      this.layoutConf = Object.assign(this.layoutConf, {layoutInTransition: false});\n      this.layoutConfSubject.next(this.layoutConf);\n    }, duration);\n  }\n\n  /**\n   * set layout from query\n   * @deprecated we do not need this\n   */\n  setLayoutFromQuery() {\n    const layoutConfString = getQueryParam('layout');\n    try {\n      this.layoutConf = JSON.parse(layoutConfString);\n    } catch (e) {\n    }\n  }\n\n  /**\n   * adjust layout to the current situation\n   * e.g. isMobile\n   * @param options screen options\n   */\n  adjustLayout(options: IAdjustScreenOptions = {}) {\n    let sidebarStyle: string;\n    this.isMobile = this.isSm();\n    this.currentRoute = options.route || this.currentRoute;\n    sidebarStyle = this.isMobile ? 'closed' : this.layoutConf.sidebarStyle;\n\n    if (this.currentRoute) {\n      this.fullWidthRoutes.forEach(route => {\n        if (this.currentRoute.indexOf(route) !== -1) {\n          sidebarStyle = 'closed';\n        }\n      });\n    }\n\n    this.publishLayoutChange({\n      isMobile: this.isMobile,\n      sidebarStyle: sidebarStyle\n    });\n  }\n\n  /**\n   * identify current screen width\n   * and return if the max width is 959px\n   */\n  isSm() {\n    return window.matchMedia(`(max-width: 959px)`).matches;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadNursingHomes.html":{"url":"classes/LoadNursingHomes.html","title":"class - LoadNursingHomes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadNursingHomes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/nursing-homes.actions.ts\n        \n\n            \n                Description\n            \n            \n                Load nursingHomes Action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : NursingHomesActionTypes.LoadNursingHomes\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes.actions.ts:71\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { NursingHome } from '../models/nursing-home.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum NursingHomesActionTypes {\n  SelectNursingHome = '[NursingHome] Select Current NursingHome',\n  ClearSelectedNursingHome = '[NursingHome] Clear Current NursingHome',\n  InitializeNursingHome = '[NursingHome] Initialize Current NursingHome',\n  PopUpNursingHomeForm = '[NursingHome] Pop Up NursingHome Form',\n  CreateNursingHome = '[NursingHome] Create NursingHome',\n  DismissPoppedUpNursingHomeForm = '[NursingHome] Dismiss Create NursingHome',\n  LoadNursingHomes = '[NursingHome] Load Nursing Homes',\n  SearchNursingHome = '[NursingHome] Search NursingHome',\n  SearchNursingHomeComplete = '[NursingHome] Search NursingHome Complete',\n  EditNursingHome = '[NursingHome] Edit NursingHome',\n  DismissEditNursingHome = '[NursingHome] Dismiss Edit NursingHome',\n  ResetNursingHomesState = '[NursingHomes] Reset NursingHomes State'\n}\n\n\n/**\n * Select nursingHome Action\n */\nexport class SelectNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SelectNursingHome;\n\n  constructor(public payload: NursingHome) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.ClearSelectedNursingHome;\n}\n\n/**\n * Initialize nursingHome Action\n */\nexport class InitializeNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.InitializeNursingHome;\n}\n\n/**\n * action to pop up nursingHome form\n */\nexport class PopUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.PopUpNursingHomeForm;\n}\n\n/**\n * Create nursingHome Action\n */\nexport class CreateNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.CreateNursingHome;\n\n  constructor(public payload: { nursingHome: NursingHome }) { }\n}\n\n/**\n * CreateNursingHome Dialog window dismissed\n */\nexport class DismissPoppedUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.DismissPoppedUpNursingHomeForm;\n}\n\n/**\n * Load nursingHomes Action\n */\nexport class LoadNursingHomes implements Action {\n  readonly type = NursingHomesActionTypes.LoadNursingHomes;\n}\n\n/**\n * Search nursingHome Action\n */\nexport class SearchNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHome;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search nursingHome complete Action\n */\nexport class SearchNursingHomeComplete implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHomeComplete;\n\n  constructor(public payload: NursingHome[]) { }\n}\n\n/**\n * action to submit and edit nursingHome\n */\nexport class EditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.EditNursingHome;\n\n  constructor(public payload: Update) {\n  }\n}\n\n/**\n * NursingHome Edit dismissed action\n */\nexport class DismissEditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.DismissEditNursingHome;\n}\n\n/**\n * reset the nursingHome state\n */\nexport class ResetNursingHomesState implements Action {\n  readonly type = NursingHomesActionTypes.ResetNursingHomesState;\n}\n\n/**\n * Export union of nursingHome Action\n */\nexport type NursingHomesActionsUnion\n  = SelectNursingHome\n  | ClearSelectedNursingHome\n  | InitializeNursingHome\n  | PopUpNursingHomeForm\n  | CreateNursingHome\n  | DismissPoppedUpNursingHomeForm\n  | LoadNursingHomes\n  | SearchNursingHome\n  | SearchNursingHomeComplete\n  | EditNursingHome\n  | DismissEditNursingHome\n  | ResetNursingHomesState;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadNursingHomesFailure.html":{"url":"classes/LoadNursingHomesFailure.html","title":"class - LoadNursingHomesFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadNursingHomesFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/nursing-homes-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                load all nursingHomes action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/nursing-homes-api.actions.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes-api.actions.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : NursingHomesApiActionTypes.LoadNursingHomesFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes-api.actions.ts:50\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { NursingHome } from '../models/nursing-home.model';\n\n/**\n * definitions for action types\n */\nexport enum NursingHomesApiActionTypes {\n  CreateNursingHomeSuccess = '[NursingHome/Api] Create NursingHome Success',\n  CreateNursingHomeFailure = '[NursingHome/Api] Create NursingHome Failure',\n  LoadNursingHomesSuccess = '[NursingHome/Api] Load NursingHomes Success',\n  LoadNursingHomesFailure = '[NursingHome/Api] Load NursingHomes Failure',\n  EditNursingHomeSuccess = '[NursingHome/Api] Edit NursingHome Success',\n  EditNursingHomeFailure = '[NursingHome/Api] Edit NursingHome Failure',\n}\n\n/**\n * add nursingHome success action\n */\nexport class CreateNursingHomeSuccess implements Action {\n  public readonly type = NursingHomesApiActionTypes.CreateNursingHomeSuccess;\n\n  constructor(public payload: { nursingHome: NursingHome }) {\n  }\n}\n\n/**\n * add nursingHome failure action\n */\nexport class CreateNursingHomeFailure implements Action {\n  public readonly type = NursingHomesApiActionTypes.CreateNursingHomeFailure;\n\n  constructor(public payload: { message: string}) {\n  }\n}\n\n/**\n * load all nursingHomes success action\n */\nexport class LoadNursingHomesSuccess implements Action {\n  public readonly type = NursingHomesApiActionTypes.LoadNursingHomesSuccess;\n\n  constructor(public payload: { nursingHomes: NursingHome[] }) {\n  }\n}\n\n/**\n * load all nursingHomes action\n */\nexport class LoadNursingHomesFailure implements Action {\n  public readonly type = NursingHomesApiActionTypes.LoadNursingHomesFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * edit nursingHome success action\n */\nexport class EditNursingHomeSuccess implements Action {\n  public readonly type = NursingHomesApiActionTypes.EditNursingHomeSuccess;\n\n  constructor(public payload: { nursingHome: NursingHome }) {\n  }\n}\n\n/**\n * edit nursingHome failure action\n */\nexport class EditNursingHomeFailure implements Action {\n  public readonly type = NursingHomesApiActionTypes.EditNursingHomeFailure;\n\n  constructor(public payload: { message: string}) {\n  }\n}\n\n// export types\nexport type NursingHomesApiActionsUnion =\n  | CreateNursingHomeSuccess\n  | CreateNursingHomeFailure\n  | EditNursingHomeSuccess\n  | EditNursingHomeFailure\n  | LoadNursingHomesSuccess\n  | LoadNursingHomesFailure\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadNursingHomesSuccess.html":{"url":"classes/LoadNursingHomesSuccess.html","title":"class - LoadNursingHomesSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadNursingHomesSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/nursing-homes-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                load all nursingHomes success action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/nursing-homes-api.actions.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes-api.actions.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : NursingHomesApiActionTypes.LoadNursingHomesSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes-api.actions.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { NursingHome } from '../models/nursing-home.model';\n\n/**\n * definitions for action types\n */\nexport enum NursingHomesApiActionTypes {\n  CreateNursingHomeSuccess = '[NursingHome/Api] Create NursingHome Success',\n  CreateNursingHomeFailure = '[NursingHome/Api] Create NursingHome Failure',\n  LoadNursingHomesSuccess = '[NursingHome/Api] Load NursingHomes Success',\n  LoadNursingHomesFailure = '[NursingHome/Api] Load NursingHomes Failure',\n  EditNursingHomeSuccess = '[NursingHome/Api] Edit NursingHome Success',\n  EditNursingHomeFailure = '[NursingHome/Api] Edit NursingHome Failure',\n}\n\n/**\n * add nursingHome success action\n */\nexport class CreateNursingHomeSuccess implements Action {\n  public readonly type = NursingHomesApiActionTypes.CreateNursingHomeSuccess;\n\n  constructor(public payload: { nursingHome: NursingHome }) {\n  }\n}\n\n/**\n * add nursingHome failure action\n */\nexport class CreateNursingHomeFailure implements Action {\n  public readonly type = NursingHomesApiActionTypes.CreateNursingHomeFailure;\n\n  constructor(public payload: { message: string}) {\n  }\n}\n\n/**\n * load all nursingHomes success action\n */\nexport class LoadNursingHomesSuccess implements Action {\n  public readonly type = NursingHomesApiActionTypes.LoadNursingHomesSuccess;\n\n  constructor(public payload: { nursingHomes: NursingHome[] }) {\n  }\n}\n\n/**\n * load all nursingHomes action\n */\nexport class LoadNursingHomesFailure implements Action {\n  public readonly type = NursingHomesApiActionTypes.LoadNursingHomesFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * edit nursingHome success action\n */\nexport class EditNursingHomeSuccess implements Action {\n  public readonly type = NursingHomesApiActionTypes.EditNursingHomeSuccess;\n\n  constructor(public payload: { nursingHome: NursingHome }) {\n  }\n}\n\n/**\n * edit nursingHome failure action\n */\nexport class EditNursingHomeFailure implements Action {\n  public readonly type = NursingHomesApiActionTypes.EditNursingHomeFailure;\n\n  constructor(public payload: { message: string}) {\n  }\n}\n\n// export types\nexport type NursingHomesApiActionsUnion =\n  | CreateNursingHomeSuccess\n  | CreateNursingHomeFailure\n  | EditNursingHomeSuccess\n  | EditNursingHomeFailure\n  | LoadNursingHomesSuccess\n  | LoadNursingHomesFailure\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadPatientUsers.html":{"url":"classes/LoadPatientUsers.html","title":"class - LoadPatientUsers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadPatientUsers\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients.actions.ts\n        \n\n            \n                Description\n            \n            \n                Load patient users action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/patients.actions.ts:132\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:133\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsActionTypes.LoadPatientUsers\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:132\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { IPatient } from '../models/patient.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum PatientsActionTypes {\n  SelectPatient = '[Patient] Select Current Patient',\n  ClearSelectedPatient = '[Patient] Clear Current Patient',\n  InitializePatient = '[Patient] Initialize Current Patient',\n  CreatePatientFormDialog = '[Patients] Pop Up Patient Form',\n  CreatePatient = '[Patient] Create Patient',\n  DismissPatientFormDialog = '[Patient] Dismiss Patient Form Dialog',\n  LoadPatients = '[Patient] Load Patients',\n  SearchPatient = '[Patient] Search Patient',\n  SearchPatientComplete = '[Patient] Search Patient Complete',\n  EditPatient = '[Patient] Edit Patient',\n  DismissEditPatient = '[Patient] Dismiss Edit Patient',\n  ResetPatientsState = '[Patients] Reset Patients State',\n  DeletePatient ='[Patients] Delete Patient',\n  LoadPatientUsers = '[User] Load User Patients'\n}\n\n\n/**\n * Select patient Action\n */\nexport class SelectPatient implements Action {\n  readonly type = PatientsActionTypes.SelectPatient;\n\n  constructor(public payload: IPatient) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedPatient implements Action {\n  readonly type = PatientsActionTypes.ClearSelectedPatient;\n}\n\n/**\n * Initialize patient Action\n */\nexport class InitializePatient implements Action {\n  readonly type = PatientsActionTypes.InitializePatient;\n}\n\n/**\n * action to pop up patient form\n */\nexport class CreatePatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.CreatePatientFormDialog;\n}\n\n/**\n * Create patient Action\n */\nexport class CreatePatient implements Action {\n  readonly type = PatientsActionTypes.CreatePatient;\n\n  constructor(public payload: { patient: IPatient }) { }\n}\n\n/**\n * CreatePatient Dialog window dismissed\n */\nexport class DismissPatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.DismissPatientFormDialog;\n}\n\n/**\n * Load patients Action\n */\nexport class LoadPatients implements Action {\n  readonly type = PatientsActionTypes.LoadPatients;\n}\n\n/**\n * Search patient Action\n */\nexport class SearchPatient implements Action {\n  readonly type = PatientsActionTypes.SearchPatient;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search patient complete Action\n */\nexport class SearchPatientComplete implements Action {\n  readonly type = PatientsActionTypes.SearchPatientComplete;\n\n  constructor(public payload: IPatient[]) { }\n}\n\n/**\n * action to submit and edit patient\n */\nexport class EditPatient implements Action {\n  readonly type = PatientsActionTypes.EditPatient;\n\n  constructor(public payload: IPatient) {\n  }\n}\n\n/**\n * Patient Edit dismissed action\n */\nexport class DismissEditPatient implements Action {\n  readonly type = PatientsActionTypes.DismissEditPatient;\n}\n\n/**\n * reset the patient state\n */\nexport class ResetPatientsState implements Action {\n  readonly type = PatientsActionTypes.ResetPatientsState;\n}\n\n/**\n * action to delete a patient\n */\nexport class DeletePatient implements Action {\n  readonly type = PatientsActionTypes.DeletePatient;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load patient users action\n */\nexport class LoadPatientUsers implements Action {\n  readonly type = PatientsActionTypes.LoadPatientUsers;\n  constructor(public payload: number ) { }\n}\n\n\n/**\n * Export union of patient Action\n */\nexport type PatientsActionsUnion\n  = SelectPatient\n  | ClearSelectedPatient\n  | InitializePatient\n  | CreatePatientFormDialog\n  | CreatePatient\n  | DismissPatientFormDialog\n  | LoadPatients\n  | SearchPatient\n  | SearchPatientComplete\n  | EditPatient\n  | DismissEditPatient\n  | ResetPatientsState\n  | LoadPatientUsers;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadPatientUsersFailure.html":{"url":"classes/LoadPatientUsersFailure.html","title":"class - LoadPatientUsersFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadPatientUsersFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                load all patient users failure action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/patients-api.actions.ts:93\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients-api.actions.ts:95\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsApiActionTypes.LoadPatientUsersFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients-api.actions.ts:93\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { IPatient } from '../models/patient.model';\n\n/**\n * definitions for action types\n */\nexport enum PatientsApiActionTypes {\n  CreatePatientSuccess = '[Patient/Api] Create Patient Success',\n  CreatePatientFailure = '[Patient/Api] Create Patient Failure',\n  LoadPatientsSuccess = '[Patient/Api] Load Patients Success',\n  LoadPatientsFailure = '[Patient/Api] Load Patients Failure',\n  EditPatientSuccess = '[Patient/Api] Edit Patient Success',\n  EditPatientFailure = '[Patient/Api] Edit Patient Failure',\n  LoadPatientUsersSuccess = '[User/Api] Load Patient Users Success',\n  LoadPatientUsersFailure = '[User/Api] Load Patient Users Failure',\n}\n\n/**\n * add patient success action\n */\nexport class CreatePatientSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.CreatePatientSuccess;\n\n  constructor(public payload: { patient: IPatient }) {\n  }\n}\n\n/**\n * add patient failure action\n */\nexport class CreatePatientFailure implements Action {\n  public readonly type = PatientsApiActionTypes.CreatePatientFailure;\n\n  constructor(public payload: { messages: string }) {\n  }\n}\n\n/**\n * load all patients success action\n */\nexport class LoadPatientsSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientsSuccess;\n\n  constructor(public payload: { patients: IPatient[] }) {\n  }\n}\n\n/**\n * load all patients action\n */\nexport class LoadPatientsFailure implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientsFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * edit patient success action\n */\nexport class EditPatientSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.EditPatientSuccess;\n\n  constructor(public payload: { patient: IPatient }) {\n  }\n}\n\n/**\n * edit patient failure action\n */\nexport class EditPatientFailure implements Action {\n  public readonly type = PatientsApiActionTypes.EditPatientFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * load all patient users success action\n */\nexport class LoadPatientUsersSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientUsersSuccess;\n\n  constructor(public payload: { users: User[] }) {\n  }\n}\n\n/**\n * load all patient users failure action\n */\nexport class LoadPatientUsersFailure implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientUsersFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n// export types\nexport type PatientsApiActionsUnion =\n  | CreatePatientSuccess\n  | CreatePatientFailure\n  | EditPatientSuccess\n  | EditPatientFailure\n  | LoadPatientsSuccess\n  | LoadPatientsFailure\n  | LoadPatientUsersSuccess\n  | LoadPatientUsersFailure;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadPatientUsersSuccess.html":{"url":"classes/LoadPatientUsersSuccess.html","title":"class - LoadPatientUsersSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadPatientUsersSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                load all patient users success action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/patients-api.actions.ts:83\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients-api.actions.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsApiActionTypes.LoadPatientUsersSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients-api.actions.ts:83\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { IPatient } from '../models/patient.model';\n\n/**\n * definitions for action types\n */\nexport enum PatientsApiActionTypes {\n  CreatePatientSuccess = '[Patient/Api] Create Patient Success',\n  CreatePatientFailure = '[Patient/Api] Create Patient Failure',\n  LoadPatientsSuccess = '[Patient/Api] Load Patients Success',\n  LoadPatientsFailure = '[Patient/Api] Load Patients Failure',\n  EditPatientSuccess = '[Patient/Api] Edit Patient Success',\n  EditPatientFailure = '[Patient/Api] Edit Patient Failure',\n  LoadPatientUsersSuccess = '[User/Api] Load Patient Users Success',\n  LoadPatientUsersFailure = '[User/Api] Load Patient Users Failure',\n}\n\n/**\n * add patient success action\n */\nexport class CreatePatientSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.CreatePatientSuccess;\n\n  constructor(public payload: { patient: IPatient }) {\n  }\n}\n\n/**\n * add patient failure action\n */\nexport class CreatePatientFailure implements Action {\n  public readonly type = PatientsApiActionTypes.CreatePatientFailure;\n\n  constructor(public payload: { messages: string }) {\n  }\n}\n\n/**\n * load all patients success action\n */\nexport class LoadPatientsSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientsSuccess;\n\n  constructor(public payload: { patients: IPatient[] }) {\n  }\n}\n\n/**\n * load all patients action\n */\nexport class LoadPatientsFailure implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientsFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * edit patient success action\n */\nexport class EditPatientSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.EditPatientSuccess;\n\n  constructor(public payload: { patient: IPatient }) {\n  }\n}\n\n/**\n * edit patient failure action\n */\nexport class EditPatientFailure implements Action {\n  public readonly type = PatientsApiActionTypes.EditPatientFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * load all patient users success action\n */\nexport class LoadPatientUsersSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientUsersSuccess;\n\n  constructor(public payload: { users: User[] }) {\n  }\n}\n\n/**\n * load all patient users failure action\n */\nexport class LoadPatientUsersFailure implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientUsersFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n// export types\nexport type PatientsApiActionsUnion =\n  | CreatePatientSuccess\n  | CreatePatientFailure\n  | EditPatientSuccess\n  | EditPatientFailure\n  | LoadPatientsSuccess\n  | LoadPatientsFailure\n  | LoadPatientUsersSuccess\n  | LoadPatientUsersFailure;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadPatients.html":{"url":"classes/LoadPatients.html","title":"class - LoadPatients","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadPatients\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients.actions.ts\n        \n\n            \n                Description\n            \n            \n                Load patients Action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsActionTypes.LoadPatients\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:73\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { IPatient } from '../models/patient.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum PatientsActionTypes {\n  SelectPatient = '[Patient] Select Current Patient',\n  ClearSelectedPatient = '[Patient] Clear Current Patient',\n  InitializePatient = '[Patient] Initialize Current Patient',\n  CreatePatientFormDialog = '[Patients] Pop Up Patient Form',\n  CreatePatient = '[Patient] Create Patient',\n  DismissPatientFormDialog = '[Patient] Dismiss Patient Form Dialog',\n  LoadPatients = '[Patient] Load Patients',\n  SearchPatient = '[Patient] Search Patient',\n  SearchPatientComplete = '[Patient] Search Patient Complete',\n  EditPatient = '[Patient] Edit Patient',\n  DismissEditPatient = '[Patient] Dismiss Edit Patient',\n  ResetPatientsState = '[Patients] Reset Patients State',\n  DeletePatient ='[Patients] Delete Patient',\n  LoadPatientUsers = '[User] Load User Patients'\n}\n\n\n/**\n * Select patient Action\n */\nexport class SelectPatient implements Action {\n  readonly type = PatientsActionTypes.SelectPatient;\n\n  constructor(public payload: IPatient) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedPatient implements Action {\n  readonly type = PatientsActionTypes.ClearSelectedPatient;\n}\n\n/**\n * Initialize patient Action\n */\nexport class InitializePatient implements Action {\n  readonly type = PatientsActionTypes.InitializePatient;\n}\n\n/**\n * action to pop up patient form\n */\nexport class CreatePatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.CreatePatientFormDialog;\n}\n\n/**\n * Create patient Action\n */\nexport class CreatePatient implements Action {\n  readonly type = PatientsActionTypes.CreatePatient;\n\n  constructor(public payload: { patient: IPatient }) { }\n}\n\n/**\n * CreatePatient Dialog window dismissed\n */\nexport class DismissPatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.DismissPatientFormDialog;\n}\n\n/**\n * Load patients Action\n */\nexport class LoadPatients implements Action {\n  readonly type = PatientsActionTypes.LoadPatients;\n}\n\n/**\n * Search patient Action\n */\nexport class SearchPatient implements Action {\n  readonly type = PatientsActionTypes.SearchPatient;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search patient complete Action\n */\nexport class SearchPatientComplete implements Action {\n  readonly type = PatientsActionTypes.SearchPatientComplete;\n\n  constructor(public payload: IPatient[]) { }\n}\n\n/**\n * action to submit and edit patient\n */\nexport class EditPatient implements Action {\n  readonly type = PatientsActionTypes.EditPatient;\n\n  constructor(public payload: IPatient) {\n  }\n}\n\n/**\n * Patient Edit dismissed action\n */\nexport class DismissEditPatient implements Action {\n  readonly type = PatientsActionTypes.DismissEditPatient;\n}\n\n/**\n * reset the patient state\n */\nexport class ResetPatientsState implements Action {\n  readonly type = PatientsActionTypes.ResetPatientsState;\n}\n\n/**\n * action to delete a patient\n */\nexport class DeletePatient implements Action {\n  readonly type = PatientsActionTypes.DeletePatient;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load patient users action\n */\nexport class LoadPatientUsers implements Action {\n  readonly type = PatientsActionTypes.LoadPatientUsers;\n  constructor(public payload: number ) { }\n}\n\n\n/**\n * Export union of patient Action\n */\nexport type PatientsActionsUnion\n  = SelectPatient\n  | ClearSelectedPatient\n  | InitializePatient\n  | CreatePatientFormDialog\n  | CreatePatient\n  | DismissPatientFormDialog\n  | LoadPatients\n  | SearchPatient\n  | SearchPatientComplete\n  | EditPatient\n  | DismissEditPatient\n  | ResetPatientsState\n  | LoadPatientUsers;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadPatientsFailure.html":{"url":"classes/LoadPatientsFailure.html","title":"class - LoadPatientsFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadPatientsFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                load all patients action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/patients-api.actions.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients-api.actions.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsApiActionTypes.LoadPatientsFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients-api.actions.ts:53\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { IPatient } from '../models/patient.model';\n\n/**\n * definitions for action types\n */\nexport enum PatientsApiActionTypes {\n  CreatePatientSuccess = '[Patient/Api] Create Patient Success',\n  CreatePatientFailure = '[Patient/Api] Create Patient Failure',\n  LoadPatientsSuccess = '[Patient/Api] Load Patients Success',\n  LoadPatientsFailure = '[Patient/Api] Load Patients Failure',\n  EditPatientSuccess = '[Patient/Api] Edit Patient Success',\n  EditPatientFailure = '[Patient/Api] Edit Patient Failure',\n  LoadPatientUsersSuccess = '[User/Api] Load Patient Users Success',\n  LoadPatientUsersFailure = '[User/Api] Load Patient Users Failure',\n}\n\n/**\n * add patient success action\n */\nexport class CreatePatientSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.CreatePatientSuccess;\n\n  constructor(public payload: { patient: IPatient }) {\n  }\n}\n\n/**\n * add patient failure action\n */\nexport class CreatePatientFailure implements Action {\n  public readonly type = PatientsApiActionTypes.CreatePatientFailure;\n\n  constructor(public payload: { messages: string }) {\n  }\n}\n\n/**\n * load all patients success action\n */\nexport class LoadPatientsSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientsSuccess;\n\n  constructor(public payload: { patients: IPatient[] }) {\n  }\n}\n\n/**\n * load all patients action\n */\nexport class LoadPatientsFailure implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientsFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * edit patient success action\n */\nexport class EditPatientSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.EditPatientSuccess;\n\n  constructor(public payload: { patient: IPatient }) {\n  }\n}\n\n/**\n * edit patient failure action\n */\nexport class EditPatientFailure implements Action {\n  public readonly type = PatientsApiActionTypes.EditPatientFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * load all patient users success action\n */\nexport class LoadPatientUsersSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientUsersSuccess;\n\n  constructor(public payload: { users: User[] }) {\n  }\n}\n\n/**\n * load all patient users failure action\n */\nexport class LoadPatientUsersFailure implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientUsersFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n// export types\nexport type PatientsApiActionsUnion =\n  | CreatePatientSuccess\n  | CreatePatientFailure\n  | EditPatientSuccess\n  | EditPatientFailure\n  | LoadPatientsSuccess\n  | LoadPatientsFailure\n  | LoadPatientUsersSuccess\n  | LoadPatientUsersFailure;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadPatientsSuccess.html":{"url":"classes/LoadPatientsSuccess.html","title":"class - LoadPatientsSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadPatientsSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                load all patients success action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/patients-api.actions.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients-api.actions.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsApiActionTypes.LoadPatientsSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients-api.actions.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { IPatient } from '../models/patient.model';\n\n/**\n * definitions for action types\n */\nexport enum PatientsApiActionTypes {\n  CreatePatientSuccess = '[Patient/Api] Create Patient Success',\n  CreatePatientFailure = '[Patient/Api] Create Patient Failure',\n  LoadPatientsSuccess = '[Patient/Api] Load Patients Success',\n  LoadPatientsFailure = '[Patient/Api] Load Patients Failure',\n  EditPatientSuccess = '[Patient/Api] Edit Patient Success',\n  EditPatientFailure = '[Patient/Api] Edit Patient Failure',\n  LoadPatientUsersSuccess = '[User/Api] Load Patient Users Success',\n  LoadPatientUsersFailure = '[User/Api] Load Patient Users Failure',\n}\n\n/**\n * add patient success action\n */\nexport class CreatePatientSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.CreatePatientSuccess;\n\n  constructor(public payload: { patient: IPatient }) {\n  }\n}\n\n/**\n * add patient failure action\n */\nexport class CreatePatientFailure implements Action {\n  public readonly type = PatientsApiActionTypes.CreatePatientFailure;\n\n  constructor(public payload: { messages: string }) {\n  }\n}\n\n/**\n * load all patients success action\n */\nexport class LoadPatientsSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientsSuccess;\n\n  constructor(public payload: { patients: IPatient[] }) {\n  }\n}\n\n/**\n * load all patients action\n */\nexport class LoadPatientsFailure implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientsFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * edit patient success action\n */\nexport class EditPatientSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.EditPatientSuccess;\n\n  constructor(public payload: { patient: IPatient }) {\n  }\n}\n\n/**\n * edit patient failure action\n */\nexport class EditPatientFailure implements Action {\n  public readonly type = PatientsApiActionTypes.EditPatientFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * load all patient users success action\n */\nexport class LoadPatientUsersSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientUsersSuccess;\n\n  constructor(public payload: { users: User[] }) {\n  }\n}\n\n/**\n * load all patient users failure action\n */\nexport class LoadPatientUsersFailure implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientUsersFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n// export types\nexport type PatientsApiActionsUnion =\n  | CreatePatientSuccess\n  | CreatePatientFailure\n  | EditPatientSuccess\n  | EditPatientFailure\n  | LoadPatientsSuccess\n  | LoadPatientsFailure\n  | LoadPatientUsersSuccess\n  | LoadPatientUsersFailure;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadUserPatients.html":{"url":"classes/LoadUserPatients.html","title":"class - LoadUserPatients","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadUserPatients\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users.actions.ts\n        \n\n            \n                Description\n            \n            \n                Load user patients action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/users.actions.ts:132\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:133\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersActionTypes.LoadUserPatients\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:132\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum UsersActionTypes {\n  SelectUser = '[User] Select Current User',\n  ClearSelectedUser = '[User] Clear Current User',\n  InitializeUser = '[User] Initialize Current User',\n  CreateUserFormDialog = '[Users] Pop Up User Form',\n  CreateUser = '[User] Create User',\n  DismissUserFormDialog = '[User] Dismiss User Form Dialog',\n  LoadUsers = '[User] Load Users',\n  SearchUser = '[User] Search User',\n  SearchUserComplete = '[User] Search User Complete',\n  EditUser = '[User] Edit User',\n  DismissEditUser = '[User] Dismiss Edit User',\n  ResetUsersState = '[Users] Reset Users State',\n  DeleteUser = '[Users] Delete User',\n  LoadUserPatients = '[User] Load User Patients'\n}\n\n\n/**\n * Select user Action\n */\nexport class SelectUser implements Action {\n  readonly type = UsersActionTypes.SelectUser;\n\n  constructor(public payload: User) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedUser implements Action {\n  readonly type = UsersActionTypes.ClearSelectedUser;\n}\n\n/**\n * Initialize user Action\n */\nexport class InitializeUser implements Action {\n  readonly type = UsersActionTypes.InitializeUser;\n}\n\n/**\n * action to pop up user form\n */\nexport class CreateUserFormDialog implements Action {\n  readonly type = UsersActionTypes.CreateUserFormDialog;\n}\n\n/**\n * Create user Action\n */\nexport class CreateUser implements Action {\n  readonly type = UsersActionTypes.CreateUser;\n\n  constructor(public payload: { user: User }) { }\n}\n\n/**\n * CreateUser Dialog window dismissed\n */\nexport class DismissUserFormDialog implements Action {\n  readonly type = UsersActionTypes.DismissUserFormDialog;\n}\n\n/**\n * Load users Action\n */\nexport class LoadUsers implements Action {\n  readonly type = UsersActionTypes.LoadUsers;\n}\n\n/**\n * Search user action\n */\nexport class SearchUser implements Action {\n  readonly type = UsersActionTypes.SearchUser;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search user complete action\n */\nexport class SearchUserComplete implements Action {\n  readonly type = UsersActionTypes.SearchUserComplete;\n\n  constructor(public payload: User[]) { }\n}\n\n/**\n * action to submit and edit user\n */\nexport class EditUser implements Action {\n  readonly type = UsersActionTypes.EditUser;\n\n  constructor(public payload: User) {\n  }\n}\n\n/**\n * User Edit dismissed action\n */\nexport class DismissEditUser implements Action {\n  readonly type = UsersActionTypes.DismissEditUser;\n}\n\n/**\n * reset the user state\n */\nexport class ResetUsersState implements Action {\n  readonly type = UsersActionTypes.ResetUsersState;\n}\n\n/**\n * action to delete a user\n */\nexport class DeleteUser implements Action {\n  readonly type = UsersActionTypes.DeleteUser;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load user patients action\n */\nexport class LoadUserPatients implements Action {\n  readonly type = UsersActionTypes.LoadUserPatients;\n  constructor(public payload: number ) { }\n}\n\n/**\n * Export union of user Action\n */\nexport type UsersActionsUnion\n  = SelectUser\n  | ClearSelectedUser\n  | InitializeUser\n  | CreateUserFormDialog\n  | CreateUser\n  | DismissUserFormDialog\n  | LoadUsers\n  | SearchUser\n  | SearchUserComplete\n  | EditUser\n  | DismissEditUser\n  | ResetUsersState\n  | LoadUserPatients;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadUserPatientsFailure.html":{"url":"classes/LoadUserPatientsFailure.html","title":"class - LoadUserPatientsFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadUserPatientsFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                load all user patients failure action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/users-api.actions.ts:93\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users-api.actions.ts:95\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersApiActionTypes.LoadUserPatientsFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users-api.actions.ts:93\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { IPatient } from '../models/patient.model';\n\n/**\n * definitions for action types\n */\nexport enum UsersApiActionTypes {\n  CreateUserSuccess = '[User/Api] Create User Success',\n  CreateUserFailure = '[User/Api] Create User Failure',\n  LoadUsersSuccess = '[User/Api] Load Users Success',\n  LoadUsersFailure = '[User/Api] Load Users Failure',\n  EditUserSuccess = '[User/Api] Edit User Success',\n  EditUserFailure = '[User/Api] Edit User Failure',\n  LoadUserPatientsSuccess = '[User/Api] Load User Patients Success',\n  LoadUserPatientsFailure = '[User/Api] Load User Patients Failure',\n}\n\n/**\n * add user success action\n */\nexport class CreateUserSuccess implements Action {\n  public readonly type = UsersApiActionTypes.CreateUserSuccess;\n\n  constructor(public payload: { user: User }) {\n  }\n}\n\n/**\n * add user failure action\n */\nexport class CreateUserFailure implements Action {\n  public readonly type = UsersApiActionTypes.CreateUserFailure;\n\n  constructor(public payload: { messages: string }) {\n  }\n}\n\n/**\n * load all users success action\n */\nexport class LoadUsersSuccess implements Action {\n  public readonly type = UsersApiActionTypes.LoadUsersSuccess;\n\n  constructor(public payload: { users: User[] }) {\n  }\n}\n\n/**\n * load all users failure action\n */\nexport class LoadUsersFailure implements Action {\n  public readonly type = UsersApiActionTypes.LoadUsersFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * edit user success action\n */\nexport class EditUserSuccess implements Action {\n  public readonly type = UsersApiActionTypes.EditUserSuccess;\n\n  constructor(public payload: { user: User }) {\n  }\n}\n\n/**\n * edit user failure action\n */\nexport class EditUserFailure implements Action {\n  public readonly type = UsersApiActionTypes.EditUserFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * load all user patients success action\n */\nexport class LoadUserPatientsSuccess implements Action {\n  public readonly type = UsersApiActionTypes.LoadUserPatientsSuccess;\n\n  constructor(public payload: { patients: IPatient[] }) {\n  }\n}\n\n/**\n * load all user patients failure action\n */\nexport class LoadUserPatientsFailure implements Action {\n  public readonly type = UsersApiActionTypes.LoadUserPatientsFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n// export types\nexport type UsersApiActionsUnion =\n  | CreateUserSuccess\n  | CreateUserFailure\n  | EditUserSuccess\n  | EditUserFailure\n  | LoadUsersSuccess\n  | LoadUsersFailure\n  | LoadUserPatientsSuccess\n  | LoadUserPatientsFailure\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadUserPatientsSuccess.html":{"url":"classes/LoadUserPatientsSuccess.html","title":"class - LoadUserPatientsSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadUserPatientsSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                load all user patients success action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/users-api.actions.ts:83\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users-api.actions.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersApiActionTypes.LoadUserPatientsSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users-api.actions.ts:83\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { IPatient } from '../models/patient.model';\n\n/**\n * definitions for action types\n */\nexport enum UsersApiActionTypes {\n  CreateUserSuccess = '[User/Api] Create User Success',\n  CreateUserFailure = '[User/Api] Create User Failure',\n  LoadUsersSuccess = '[User/Api] Load Users Success',\n  LoadUsersFailure = '[User/Api] Load Users Failure',\n  EditUserSuccess = '[User/Api] Edit User Success',\n  EditUserFailure = '[User/Api] Edit User Failure',\n  LoadUserPatientsSuccess = '[User/Api] Load User Patients Success',\n  LoadUserPatientsFailure = '[User/Api] Load User Patients Failure',\n}\n\n/**\n * add user success action\n */\nexport class CreateUserSuccess implements Action {\n  public readonly type = UsersApiActionTypes.CreateUserSuccess;\n\n  constructor(public payload: { user: User }) {\n  }\n}\n\n/**\n * add user failure action\n */\nexport class CreateUserFailure implements Action {\n  public readonly type = UsersApiActionTypes.CreateUserFailure;\n\n  constructor(public payload: { messages: string }) {\n  }\n}\n\n/**\n * load all users success action\n */\nexport class LoadUsersSuccess implements Action {\n  public readonly type = UsersApiActionTypes.LoadUsersSuccess;\n\n  constructor(public payload: { users: User[] }) {\n  }\n}\n\n/**\n * load all users failure action\n */\nexport class LoadUsersFailure implements Action {\n  public readonly type = UsersApiActionTypes.LoadUsersFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * edit user success action\n */\nexport class EditUserSuccess implements Action {\n  public readonly type = UsersApiActionTypes.EditUserSuccess;\n\n  constructor(public payload: { user: User }) {\n  }\n}\n\n/**\n * edit user failure action\n */\nexport class EditUserFailure implements Action {\n  public readonly type = UsersApiActionTypes.EditUserFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * load all user patients success action\n */\nexport class LoadUserPatientsSuccess implements Action {\n  public readonly type = UsersApiActionTypes.LoadUserPatientsSuccess;\n\n  constructor(public payload: { patients: IPatient[] }) {\n  }\n}\n\n/**\n * load all user patients failure action\n */\nexport class LoadUserPatientsFailure implements Action {\n  public readonly type = UsersApiActionTypes.LoadUserPatientsFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n// export types\nexport type UsersApiActionsUnion =\n  | CreateUserSuccess\n  | CreateUserFailure\n  | EditUserSuccess\n  | EditUserFailure\n  | LoadUsersSuccess\n  | LoadUsersFailure\n  | LoadUserPatientsSuccess\n  | LoadUserPatientsFailure\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadUsers.html":{"url":"classes/LoadUsers.html","title":"class - LoadUsers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadUsers\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users.actions.ts\n        \n\n            \n                Description\n            \n            \n                Load users Action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersActionTypes.LoadUsers\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:73\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum UsersActionTypes {\n  SelectUser = '[User] Select Current User',\n  ClearSelectedUser = '[User] Clear Current User',\n  InitializeUser = '[User] Initialize Current User',\n  CreateUserFormDialog = '[Users] Pop Up User Form',\n  CreateUser = '[User] Create User',\n  DismissUserFormDialog = '[User] Dismiss User Form Dialog',\n  LoadUsers = '[User] Load Users',\n  SearchUser = '[User] Search User',\n  SearchUserComplete = '[User] Search User Complete',\n  EditUser = '[User] Edit User',\n  DismissEditUser = '[User] Dismiss Edit User',\n  ResetUsersState = '[Users] Reset Users State',\n  DeleteUser = '[Users] Delete User',\n  LoadUserPatients = '[User] Load User Patients'\n}\n\n\n/**\n * Select user Action\n */\nexport class SelectUser implements Action {\n  readonly type = UsersActionTypes.SelectUser;\n\n  constructor(public payload: User) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedUser implements Action {\n  readonly type = UsersActionTypes.ClearSelectedUser;\n}\n\n/**\n * Initialize user Action\n */\nexport class InitializeUser implements Action {\n  readonly type = UsersActionTypes.InitializeUser;\n}\n\n/**\n * action to pop up user form\n */\nexport class CreateUserFormDialog implements Action {\n  readonly type = UsersActionTypes.CreateUserFormDialog;\n}\n\n/**\n * Create user Action\n */\nexport class CreateUser implements Action {\n  readonly type = UsersActionTypes.CreateUser;\n\n  constructor(public payload: { user: User }) { }\n}\n\n/**\n * CreateUser Dialog window dismissed\n */\nexport class DismissUserFormDialog implements Action {\n  readonly type = UsersActionTypes.DismissUserFormDialog;\n}\n\n/**\n * Load users Action\n */\nexport class LoadUsers implements Action {\n  readonly type = UsersActionTypes.LoadUsers;\n}\n\n/**\n * Search user action\n */\nexport class SearchUser implements Action {\n  readonly type = UsersActionTypes.SearchUser;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search user complete action\n */\nexport class SearchUserComplete implements Action {\n  readonly type = UsersActionTypes.SearchUserComplete;\n\n  constructor(public payload: User[]) { }\n}\n\n/**\n * action to submit and edit user\n */\nexport class EditUser implements Action {\n  readonly type = UsersActionTypes.EditUser;\n\n  constructor(public payload: User) {\n  }\n}\n\n/**\n * User Edit dismissed action\n */\nexport class DismissEditUser implements Action {\n  readonly type = UsersActionTypes.DismissEditUser;\n}\n\n/**\n * reset the user state\n */\nexport class ResetUsersState implements Action {\n  readonly type = UsersActionTypes.ResetUsersState;\n}\n\n/**\n * action to delete a user\n */\nexport class DeleteUser implements Action {\n  readonly type = UsersActionTypes.DeleteUser;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load user patients action\n */\nexport class LoadUserPatients implements Action {\n  readonly type = UsersActionTypes.LoadUserPatients;\n  constructor(public payload: number ) { }\n}\n\n/**\n * Export union of user Action\n */\nexport type UsersActionsUnion\n  = SelectUser\n  | ClearSelectedUser\n  | InitializeUser\n  | CreateUserFormDialog\n  | CreateUser\n  | DismissUserFormDialog\n  | LoadUsers\n  | SearchUser\n  | SearchUserComplete\n  | EditUser\n  | DismissEditUser\n  | ResetUsersState\n  | LoadUserPatients;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadUsersFailure.html":{"url":"classes/LoadUsersFailure.html","title":"class - LoadUsersFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadUsersFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                load all users failure action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/users-api.actions.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users-api.actions.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersApiActionTypes.LoadUsersFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users-api.actions.ts:53\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { IPatient } from '../models/patient.model';\n\n/**\n * definitions for action types\n */\nexport enum UsersApiActionTypes {\n  CreateUserSuccess = '[User/Api] Create User Success',\n  CreateUserFailure = '[User/Api] Create User Failure',\n  LoadUsersSuccess = '[User/Api] Load Users Success',\n  LoadUsersFailure = '[User/Api] Load Users Failure',\n  EditUserSuccess = '[User/Api] Edit User Success',\n  EditUserFailure = '[User/Api] Edit User Failure',\n  LoadUserPatientsSuccess = '[User/Api] Load User Patients Success',\n  LoadUserPatientsFailure = '[User/Api] Load User Patients Failure',\n}\n\n/**\n * add user success action\n */\nexport class CreateUserSuccess implements Action {\n  public readonly type = UsersApiActionTypes.CreateUserSuccess;\n\n  constructor(public payload: { user: User }) {\n  }\n}\n\n/**\n * add user failure action\n */\nexport class CreateUserFailure implements Action {\n  public readonly type = UsersApiActionTypes.CreateUserFailure;\n\n  constructor(public payload: { messages: string }) {\n  }\n}\n\n/**\n * load all users success action\n */\nexport class LoadUsersSuccess implements Action {\n  public readonly type = UsersApiActionTypes.LoadUsersSuccess;\n\n  constructor(public payload: { users: User[] }) {\n  }\n}\n\n/**\n * load all users failure action\n */\nexport class LoadUsersFailure implements Action {\n  public readonly type = UsersApiActionTypes.LoadUsersFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * edit user success action\n */\nexport class EditUserSuccess implements Action {\n  public readonly type = UsersApiActionTypes.EditUserSuccess;\n\n  constructor(public payload: { user: User }) {\n  }\n}\n\n/**\n * edit user failure action\n */\nexport class EditUserFailure implements Action {\n  public readonly type = UsersApiActionTypes.EditUserFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * load all user patients success action\n */\nexport class LoadUserPatientsSuccess implements Action {\n  public readonly type = UsersApiActionTypes.LoadUserPatientsSuccess;\n\n  constructor(public payload: { patients: IPatient[] }) {\n  }\n}\n\n/**\n * load all user patients failure action\n */\nexport class LoadUserPatientsFailure implements Action {\n  public readonly type = UsersApiActionTypes.LoadUserPatientsFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n// export types\nexport type UsersApiActionsUnion =\n  | CreateUserSuccess\n  | CreateUserFailure\n  | EditUserSuccess\n  | EditUserFailure\n  | LoadUsersSuccess\n  | LoadUsersFailure\n  | LoadUserPatientsSuccess\n  | LoadUserPatientsFailure\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadUsersSuccess.html":{"url":"classes/LoadUsersSuccess.html","title":"class - LoadUsersSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadUsersSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                load all users success action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/users-api.actions.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users-api.actions.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersApiActionTypes.LoadUsersSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users-api.actions.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { IPatient } from '../models/patient.model';\n\n/**\n * definitions for action types\n */\nexport enum UsersApiActionTypes {\n  CreateUserSuccess = '[User/Api] Create User Success',\n  CreateUserFailure = '[User/Api] Create User Failure',\n  LoadUsersSuccess = '[User/Api] Load Users Success',\n  LoadUsersFailure = '[User/Api] Load Users Failure',\n  EditUserSuccess = '[User/Api] Edit User Success',\n  EditUserFailure = '[User/Api] Edit User Failure',\n  LoadUserPatientsSuccess = '[User/Api] Load User Patients Success',\n  LoadUserPatientsFailure = '[User/Api] Load User Patients Failure',\n}\n\n/**\n * add user success action\n */\nexport class CreateUserSuccess implements Action {\n  public readonly type = UsersApiActionTypes.CreateUserSuccess;\n\n  constructor(public payload: { user: User }) {\n  }\n}\n\n/**\n * add user failure action\n */\nexport class CreateUserFailure implements Action {\n  public readonly type = UsersApiActionTypes.CreateUserFailure;\n\n  constructor(public payload: { messages: string }) {\n  }\n}\n\n/**\n * load all users success action\n */\nexport class LoadUsersSuccess implements Action {\n  public readonly type = UsersApiActionTypes.LoadUsersSuccess;\n\n  constructor(public payload: { users: User[] }) {\n  }\n}\n\n/**\n * load all users failure action\n */\nexport class LoadUsersFailure implements Action {\n  public readonly type = UsersApiActionTypes.LoadUsersFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * edit user success action\n */\nexport class EditUserSuccess implements Action {\n  public readonly type = UsersApiActionTypes.EditUserSuccess;\n\n  constructor(public payload: { user: User }) {\n  }\n}\n\n/**\n * edit user failure action\n */\nexport class EditUserFailure implements Action {\n  public readonly type = UsersApiActionTypes.EditUserFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * load all user patients success action\n */\nexport class LoadUserPatientsSuccess implements Action {\n  public readonly type = UsersApiActionTypes.LoadUserPatientsSuccess;\n\n  constructor(public payload: { patients: IPatient[] }) {\n  }\n}\n\n/**\n * load all user patients failure action\n */\nexport class LoadUserPatientsFailure implements Action {\n  public readonly type = UsersApiActionTypes.LoadUserPatientsFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n// export types\nexport type UsersApiActionsUnion =\n  | CreateUserSuccess\n  | CreateUserFailure\n  | EditUserSuccess\n  | EditUserFailure\n  | LoadUsersSuccess\n  | LoadUsersFailure\n  | LoadUserPatientsSuccess\n  | LoadUserPatientsFailure\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/components/loader/loader.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-app-loader\n            \n\n            \n                styleUrls\n                ./loader.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loader.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                message\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/components/loader/loader.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/components/loader/loader.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/components/loader/loader.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/components/loader/loader.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/components/loader/loader.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'moio-app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent implements OnInit {\n  title;\n  message;\n\n  constructor(public dialogRef: MatDialogRef) {\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    {{ title }}\n    \n        \n    \n\n\n    \n\n    \n                \n                    ./loader.component.scss\n                \n                .mat-dialog-content {\n  min-height: 122px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ title }}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/loader.service.ts\n        \n\n            \n                Description\n            \n            \n                a loader service\nto show a loader as a Mat Dialog\nwhile busy\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/loader.service.ts:16\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                MatDialog\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                TranslateService\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        close()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/loader.service.ts:46\n                            \n                        \n\n\n                \n                    \n                            close the dialog / loader programmatically\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            open\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        open(title: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/loader.service.ts:34\n                            \n                        \n\n\n                \n                    \n                            open the loader\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                'Please wait'\n                                                        \n\n                                                        \n                                                                string the title for the loader. default: Please wait\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    dialogRef Observable\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/loader.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material';\nimport { Observable } from 'rxjs';\nimport { LoaderComponent } from '../components/loader/loader.component';\nimport { TranslateService } from '@ngx-translate/core';\n\n/**\n * a loader service\n * to show a loader as a Mat Dialog\n * while busy\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  dialogRef: MatDialogRef;\n\n  /**\n   * constructor\n   * @param dialog MatDialog\n   * @param translate TranslateService\n   */\n  constructor(\n    private dialog: MatDialog,\n    private translate: TranslateService\n  ) {\n  }\n\n  /**\n   * open the loader\n   * @param title string the title for the loader. default: Please wait\n   * @return dialogRef Observable\n   */\n  public open(title: string = 'Please wait'): Observable {\n    this.dialogRef = this.dialog\n      .open(LoaderComponent, {disableClose: true, backdropClass: 'light-backdrop'});\n    this.dialogRef.updateSize('200px');\n    this.dialogRef.componentInstance.title = this.translate.instant(title);\n\n    return this.dialogRef.afterClosed();\n  }\n\n  /**\n   * close the dialog / loader programmatically\n   */\n  public close() {\n    if (this.dialogRef) {\n      this.dialogRef.close();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LockscreenComponent.html":{"url":"components/LockscreenComponent.html","title":"component - LockscreenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LockscreenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/components/lockscreen/lockscreen.component.ts\n\n\n    \n        Description\n    \n    \n        component to show a lock screen\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-lockscreen\n            \n\n\n\n\n            \n                templateUrl\n                ./lockscreen.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lockscreenData\n                            \n                            \n                                progressBar\n                            \n                            \n                                submitButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                unlock\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/components/lockscreen/lockscreen.component.ts:17\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/components/lockscreen/lockscreen.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unlock\n                            \n                            \n                        \n                    \n                \n                \n                    \nunlock()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/components/lockscreen/lockscreen.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            unlock function\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lockscreenData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lockscreenData:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    password: ''\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/components/lockscreen/lockscreen.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            progressBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        progressBar:     MatProgressBar\n\n                    \n                \n                    \n                        \n                            Type :     MatProgressBar\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatProgressBar)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/components/lockscreen/lockscreen.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitButton\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        submitButton:     MatButton\n\n                    \n                \n                    \n                        \n                            Type :     MatButton\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatButton)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/components/lockscreen/lockscreen.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatProgressBar, MatButton } from '@angular/material';\n\n/**\n * component to show a lock screen\n */\n@Component({\n  selector: 'moio-lockscreen',\n  templateUrl: './lockscreen.component.html'\n})\nexport class LockscreenComponent implements OnInit {\n  @ViewChild(MatProgressBar) progressBar: MatProgressBar;\n  @ViewChild(MatButton) submitButton: MatButton;\n\n  lockscreenData = {\n    password: ''\n  };\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  /**\n   * unlock function\n   */\n  unlock() {\n    console.log(this.lockscreenData);\n\n    this.submitButton.disabled = true;\n    this.progressBar.mode = 'indeterminate';\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n          \n            \n            John Doe\n            Last seen 1 hour ago\n          \n          \n            \n              \n                \n              \n               Password is required\n              \n            \n\n            Unlock\n            \n            \n              It's Not Me!\n            \n          \n        \n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                          John Doe            Last seen 1 hour ago                                                                                           Password is required                                      Unlock                                      It\\'s Not Me!                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'LockscreenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Login.html":{"url":"classes/Login.html","title":"class - Login","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Login\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/actions/auth-page.actions.ts\n        \n\n            \n                Description\n            \n            \n                Login action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/actions/auth-page.actions.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-page.actions.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : AuthPageActionTypes.Login\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-page.actions.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { ICredentials } from '../models/user.interface';\n\nexport enum AuthPageActionTypes {\n  Login = '[Auth/Login Page] Login',\n  Signup = '[Auth/Signup Page] Signup',\n  ForgotPassword = '[Auth/Forgot Password Page] Forgot Password'\n}\n\n/**\n * Login action\n */\nexport class Login implements Action {\n  readonly type = AuthPageActionTypes.Login;\n\n  constructor(public payload: { credentials: ICredentials }) {\n  }\n}\n\n/**\n * signup action\n */\nexport class Signup implements Action {\n  readonly type = AuthPageActionTypes.Signup;\n\n  constructor(public payload: { credentials: ICredentials }) {\n  }\n}\n\n/**\n * action for the forgot password page\n */\nexport class ForgotPassword implements Action {\n  readonly type = AuthPageActionTypes.ForgotPassword;\n\n  constructor(public payload: { email: string }) {\n  }\n}\n\nexport type AuthPageActionsUnion =\n  | Login\n  | Signup\n  | ForgotPassword;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginFailure.html":{"url":"classes/LoginFailure.html","title":"class - LoginFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/actions/auth-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                login failure\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/actions/auth-api.actions.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-api.actions.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : AuthApiActionTypes.LoginFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-api.actions.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum AuthApiActionTypes {\n  LoginSuccess = '[Auth/Api] Login Success',\n  LoginFailure = '[Auth/Api] Login Failure',\n  LoginRedirect = '[Auth/Api] Login Redirect',\n  LogoutSuccess = '[Auth/Api] Logout Success',\n  LogoutFailure = '[Auth/Api] Logout Failure',\n  SignUpSuccess = '[Auth/Api] Sign Up Success',\n  SignUpFailure = '[Auth/Api] Sign Up Failure',\n  ForgotPasswordSuccess = '[Auth/Api] Forgot Password Success',\n  ForgotPasswordFailure = '[Auth/Api] Forgot Password Failure',\n}\n\n/**\n * login action\n */\nexport class LoginSuccess implements Action {\n  readonly type = AuthApiActionTypes.LoginSuccess;\n\n  constructor(public payload: { response: any }) {\n  }\n}\n\n/**\n * login failure\n */\nexport class LoginFailure implements Action {\n  readonly type = AuthApiActionTypes.LoginFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * logout success\n */\nexport class LogoutSuccess implements Action {\n  readonly type = AuthApiActionTypes.LogoutSuccess;\n}\n\n/**\n * lougout failure\n */\nexport class LogoutFailure implements Action {\n  readonly type = AuthApiActionTypes.LogoutFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * redirect action\n */\nexport class LoginRedirect implements Action {\n  readonly type = AuthApiActionTypes.LoginRedirect;\n}\n\n/**\n * sign up success\n */\nexport class SignUpSuccess implements Action {\n  readonly type = AuthApiActionTypes.SignUpSuccess;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up failure\n */\nexport class SignUpFailure implements Action {\n  readonly type = AuthApiActionTypes.SignUpFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up success\n */\nexport class ForgotPasswordSuccess implements Action {\n  readonly type = AuthApiActionTypes.ForgotPasswordSuccess;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up failure\n */\nexport class ForgotPasswordFailure implements Action {\n  readonly type = AuthApiActionTypes.ForgotPasswordFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\nexport type AuthApiActionsUnion =\n  | LoginSuccess\n  | LoginFailure\n  | LoginRedirect\n  | LogoutSuccess\n  | LogoutFailure\n  | SignUpSuccess\n  | SignUpFailure\n  | ForgotPasswordSuccess\n  | ForgotPasswordFailure;\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginRedirect.html":{"url":"classes/LoginRedirect.html","title":"class - LoginRedirect","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginRedirect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/actions/auth-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                redirect action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : AuthApiActionTypes.LoginRedirect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-api.actions.ts:56\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum AuthApiActionTypes {\n  LoginSuccess = '[Auth/Api] Login Success',\n  LoginFailure = '[Auth/Api] Login Failure',\n  LoginRedirect = '[Auth/Api] Login Redirect',\n  LogoutSuccess = '[Auth/Api] Logout Success',\n  LogoutFailure = '[Auth/Api] Logout Failure',\n  SignUpSuccess = '[Auth/Api] Sign Up Success',\n  SignUpFailure = '[Auth/Api] Sign Up Failure',\n  ForgotPasswordSuccess = '[Auth/Api] Forgot Password Success',\n  ForgotPasswordFailure = '[Auth/Api] Forgot Password Failure',\n}\n\n/**\n * login action\n */\nexport class LoginSuccess implements Action {\n  readonly type = AuthApiActionTypes.LoginSuccess;\n\n  constructor(public payload: { response: any }) {\n  }\n}\n\n/**\n * login failure\n */\nexport class LoginFailure implements Action {\n  readonly type = AuthApiActionTypes.LoginFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * logout success\n */\nexport class LogoutSuccess implements Action {\n  readonly type = AuthApiActionTypes.LogoutSuccess;\n}\n\n/**\n * lougout failure\n */\nexport class LogoutFailure implements Action {\n  readonly type = AuthApiActionTypes.LogoutFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * redirect action\n */\nexport class LoginRedirect implements Action {\n  readonly type = AuthApiActionTypes.LoginRedirect;\n}\n\n/**\n * sign up success\n */\nexport class SignUpSuccess implements Action {\n  readonly type = AuthApiActionTypes.SignUpSuccess;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up failure\n */\nexport class SignUpFailure implements Action {\n  readonly type = AuthApiActionTypes.SignUpFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up success\n */\nexport class ForgotPasswordSuccess implements Action {\n  readonly type = AuthApiActionTypes.ForgotPasswordSuccess;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up failure\n */\nexport class ForgotPasswordFailure implements Action {\n  readonly type = AuthApiActionTypes.ForgotPasswordFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\nexport type AuthApiActionsUnion =\n  | LoginSuccess\n  | LoginFailure\n  | LoginRedirect\n  | LogoutSuccess\n  | LogoutFailure\n  | SignUpSuccess\n  | SignUpFailure\n  | ForgotPasswordSuccess\n  | ForgotPasswordFailure;\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginSuccess.html":{"url":"classes/LoginSuccess.html","title":"class - LoginSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/actions/auth-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                login action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/actions/auth-api.actions.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-api.actions.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : AuthApiActionTypes.LoginSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-api.actions.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum AuthApiActionTypes {\n  LoginSuccess = '[Auth/Api] Login Success',\n  LoginFailure = '[Auth/Api] Login Failure',\n  LoginRedirect = '[Auth/Api] Login Redirect',\n  LogoutSuccess = '[Auth/Api] Logout Success',\n  LogoutFailure = '[Auth/Api] Logout Failure',\n  SignUpSuccess = '[Auth/Api] Sign Up Success',\n  SignUpFailure = '[Auth/Api] Sign Up Failure',\n  ForgotPasswordSuccess = '[Auth/Api] Forgot Password Success',\n  ForgotPasswordFailure = '[Auth/Api] Forgot Password Failure',\n}\n\n/**\n * login action\n */\nexport class LoginSuccess implements Action {\n  readonly type = AuthApiActionTypes.LoginSuccess;\n\n  constructor(public payload: { response: any }) {\n  }\n}\n\n/**\n * login failure\n */\nexport class LoginFailure implements Action {\n  readonly type = AuthApiActionTypes.LoginFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * logout success\n */\nexport class LogoutSuccess implements Action {\n  readonly type = AuthApiActionTypes.LogoutSuccess;\n}\n\n/**\n * lougout failure\n */\nexport class LogoutFailure implements Action {\n  readonly type = AuthApiActionTypes.LogoutFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * redirect action\n */\nexport class LoginRedirect implements Action {\n  readonly type = AuthApiActionTypes.LoginRedirect;\n}\n\n/**\n * sign up success\n */\nexport class SignUpSuccess implements Action {\n  readonly type = AuthApiActionTypes.SignUpSuccess;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up failure\n */\nexport class SignUpFailure implements Action {\n  readonly type = AuthApiActionTypes.SignUpFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up success\n */\nexport class ForgotPasswordSuccess implements Action {\n  readonly type = AuthApiActionTypes.ForgotPasswordSuccess;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up failure\n */\nexport class ForgotPasswordFailure implements Action {\n  readonly type = AuthApiActionTypes.ForgotPasswordFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\nexport type AuthApiActionsUnion =\n  | LoginSuccess\n  | LoginFailure\n  | LoginRedirect\n  | LogoutSuccess\n  | LogoutFailure\n  | SignUpSuccess\n  | SignUpFailure\n  | ForgotPasswordSuccess\n  | ForgotPasswordFailure;\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Logout.html":{"url":"classes/Logout.html","title":"class - Logout","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Logout\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/actions/auth.actions.ts\n        \n\n            \n                Description\n            \n            \n                action to logout\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : AuthActionTypes.Logout\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth.actions.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum AuthActionTypes {\n  Logout = '[Auth] Logout',\n  LogoutConfirmation = '[Auth] Logout Confirmation',\n  LogoutConfirmationDismiss = '[Auth] Logout Confirmation Dismiss'\n}\n\n/**\n * action to logout\n */\nexport class Logout implements Action {\n  readonly type = AuthActionTypes.Logout;\n}\n\n/**\n * action to confirm logout (user interaction)\n */\nexport class LogoutConfirmation implements Action {\n  readonly type = AuthActionTypes.LogoutConfirmation;\n}\n\n/**\n * action if user dismisses the modal\n */\nexport class LogoutConfirmationDismiss implements Action {\n  readonly type = AuthActionTypes.LogoutConfirmationDismiss;\n}\n\nexport type AuthActionsUnion =\n  | Logout\n  | LogoutConfirmation\n  | LogoutConfirmationDismiss;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogoutConfirmation.html":{"url":"classes/LogoutConfirmation.html","title":"class - LogoutConfirmation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogoutConfirmation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/actions/auth.actions.ts\n        \n\n            \n                Description\n            \n            \n                action to confirm logout (user interaction)\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : AuthActionTypes.LogoutConfirmation\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth.actions.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum AuthActionTypes {\n  Logout = '[Auth] Logout',\n  LogoutConfirmation = '[Auth] Logout Confirmation',\n  LogoutConfirmationDismiss = '[Auth] Logout Confirmation Dismiss'\n}\n\n/**\n * action to logout\n */\nexport class Logout implements Action {\n  readonly type = AuthActionTypes.Logout;\n}\n\n/**\n * action to confirm logout (user interaction)\n */\nexport class LogoutConfirmation implements Action {\n  readonly type = AuthActionTypes.LogoutConfirmation;\n}\n\n/**\n * action if user dismisses the modal\n */\nexport class LogoutConfirmationDismiss implements Action {\n  readonly type = AuthActionTypes.LogoutConfirmationDismiss;\n}\n\nexport type AuthActionsUnion =\n  | Logout\n  | LogoutConfirmation\n  | LogoutConfirmationDismiss;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogoutConfirmationDismiss.html":{"url":"classes/LogoutConfirmationDismiss.html","title":"class - LogoutConfirmationDismiss","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogoutConfirmationDismiss\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/actions/auth.actions.ts\n        \n\n            \n                Description\n            \n            \n                action if user dismisses the modal\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : AuthActionTypes.LogoutConfirmationDismiss\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth.actions.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum AuthActionTypes {\n  Logout = '[Auth] Logout',\n  LogoutConfirmation = '[Auth] Logout Confirmation',\n  LogoutConfirmationDismiss = '[Auth] Logout Confirmation Dismiss'\n}\n\n/**\n * action to logout\n */\nexport class Logout implements Action {\n  readonly type = AuthActionTypes.Logout;\n}\n\n/**\n * action to confirm logout (user interaction)\n */\nexport class LogoutConfirmation implements Action {\n  readonly type = AuthActionTypes.LogoutConfirmation;\n}\n\n/**\n * action if user dismisses the modal\n */\nexport class LogoutConfirmationDismiss implements Action {\n  readonly type = AuthActionTypes.LogoutConfirmationDismiss;\n}\n\nexport type AuthActionsUnion =\n  | Logout\n  | LogoutConfirmation\n  | LogoutConfirmationDismiss;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogoutFailure.html":{"url":"classes/LogoutFailure.html","title":"class - LogoutFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogoutFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/actions/auth-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                lougout failure\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/actions/auth-api.actions.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-api.actions.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : AuthApiActionTypes.LogoutFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-api.actions.ts:46\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum AuthApiActionTypes {\n  LoginSuccess = '[Auth/Api] Login Success',\n  LoginFailure = '[Auth/Api] Login Failure',\n  LoginRedirect = '[Auth/Api] Login Redirect',\n  LogoutSuccess = '[Auth/Api] Logout Success',\n  LogoutFailure = '[Auth/Api] Logout Failure',\n  SignUpSuccess = '[Auth/Api] Sign Up Success',\n  SignUpFailure = '[Auth/Api] Sign Up Failure',\n  ForgotPasswordSuccess = '[Auth/Api] Forgot Password Success',\n  ForgotPasswordFailure = '[Auth/Api] Forgot Password Failure',\n}\n\n/**\n * login action\n */\nexport class LoginSuccess implements Action {\n  readonly type = AuthApiActionTypes.LoginSuccess;\n\n  constructor(public payload: { response: any }) {\n  }\n}\n\n/**\n * login failure\n */\nexport class LoginFailure implements Action {\n  readonly type = AuthApiActionTypes.LoginFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * logout success\n */\nexport class LogoutSuccess implements Action {\n  readonly type = AuthApiActionTypes.LogoutSuccess;\n}\n\n/**\n * lougout failure\n */\nexport class LogoutFailure implements Action {\n  readonly type = AuthApiActionTypes.LogoutFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * redirect action\n */\nexport class LoginRedirect implements Action {\n  readonly type = AuthApiActionTypes.LoginRedirect;\n}\n\n/**\n * sign up success\n */\nexport class SignUpSuccess implements Action {\n  readonly type = AuthApiActionTypes.SignUpSuccess;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up failure\n */\nexport class SignUpFailure implements Action {\n  readonly type = AuthApiActionTypes.SignUpFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up success\n */\nexport class ForgotPasswordSuccess implements Action {\n  readonly type = AuthApiActionTypes.ForgotPasswordSuccess;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up failure\n */\nexport class ForgotPasswordFailure implements Action {\n  readonly type = AuthApiActionTypes.ForgotPasswordFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\nexport type AuthApiActionsUnion =\n  | LoginSuccess\n  | LoginFailure\n  | LoginRedirect\n  | LogoutSuccess\n  | LogoutFailure\n  | SignUpSuccess\n  | SignUpFailure\n  | ForgotPasswordSuccess\n  | ForgotPasswordFailure;\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogoutSuccess.html":{"url":"classes/LogoutSuccess.html","title":"class - LogoutSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogoutSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/actions/auth-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                logout success\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : AuthApiActionTypes.LogoutSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-api.actions.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum AuthApiActionTypes {\n  LoginSuccess = '[Auth/Api] Login Success',\n  LoginFailure = '[Auth/Api] Login Failure',\n  LoginRedirect = '[Auth/Api] Login Redirect',\n  LogoutSuccess = '[Auth/Api] Logout Success',\n  LogoutFailure = '[Auth/Api] Logout Failure',\n  SignUpSuccess = '[Auth/Api] Sign Up Success',\n  SignUpFailure = '[Auth/Api] Sign Up Failure',\n  ForgotPasswordSuccess = '[Auth/Api] Forgot Password Success',\n  ForgotPasswordFailure = '[Auth/Api] Forgot Password Failure',\n}\n\n/**\n * login action\n */\nexport class LoginSuccess implements Action {\n  readonly type = AuthApiActionTypes.LoginSuccess;\n\n  constructor(public payload: { response: any }) {\n  }\n}\n\n/**\n * login failure\n */\nexport class LoginFailure implements Action {\n  readonly type = AuthApiActionTypes.LoginFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * logout success\n */\nexport class LogoutSuccess implements Action {\n  readonly type = AuthApiActionTypes.LogoutSuccess;\n}\n\n/**\n * lougout failure\n */\nexport class LogoutFailure implements Action {\n  readonly type = AuthApiActionTypes.LogoutFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * redirect action\n */\nexport class LoginRedirect implements Action {\n  readonly type = AuthApiActionTypes.LoginRedirect;\n}\n\n/**\n * sign up success\n */\nexport class SignUpSuccess implements Action {\n  readonly type = AuthApiActionTypes.SignUpSuccess;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up failure\n */\nexport class SignUpFailure implements Action {\n  readonly type = AuthApiActionTypes.SignUpFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up success\n */\nexport class ForgotPasswordSuccess implements Action {\n  readonly type = AuthApiActionTypes.ForgotPasswordSuccess;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up failure\n */\nexport class ForgotPasswordFailure implements Action {\n  readonly type = AuthApiActionTypes.ForgotPasswordFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\nexport type AuthApiActionsUnion =\n  | LoginSuccess\n  | LoginFailure\n  | LoginRedirect\n  | LogoutSuccess\n  | LogoutFailure\n  | SignUpSuccess\n  | SignUpFailure\n  | ForgotPasswordSuccess\n  | ForgotPasswordFailure;\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MakeBreadcrumbSimple.html":{"url":"classes/MakeBreadcrumbSimple.html","title":"class - MakeBreadcrumbSimple","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MakeBreadcrumbSimple\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/layout.actions.ts\n        \n\n            \n                Description\n            \n            \n                make breadcrumb simple action\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/layout.actions.ts:106\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:107\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LayoutActionTypes.MakeBreadcrumbSimple\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:106\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\n/**\n * layout action types\n */\nexport enum LayoutActionTypes {\n  OpenSideNav = '[Layout] Open Side Nav',\n  CloseSideNav = '[Layout] Close Side Nav',\n  CompactSideNav = '[Layout] Compact Nav position',\n  SetNavigationPositionSide = '[Layout] Set Navigation Position Side',\n  SetNavigationPositionTop = '[Layout] Set Navigation Position Top',\n  SetDirectionLtr = '[Layout] Set Direction Ltr',\n  SetDirectionRtr = '[Layout] Set Direction Rtr',\n  TransitioningLayout = '[Layout] Transitioning Layout',\n  UseBreadcrumb = '[Layout] Use Breadcrumb',\n  MakeBreadcrumbSimple = '[Layout] Make Breadcrumb Simple',\n  MakeBreadcrumbTitle = '[Layout] Make Breadcrumb Title',\n  FixTopbar = '[Layout] Fix Topbar'\n}\n\n/**\n * open side navigation action\n */\nexport class OpenSideNav {\n  readonly type = LayoutActionTypes.OpenSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * close side navigation action\n */\nexport class CloseSideNav {\n  readonly type = LayoutActionTypes.CloseSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * compact side navigation action\n */\nexport class CompactSideNav {\n  readonly type = LayoutActionTypes.CompactSideNav;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to side action\n */\nexport class SetNavigationPositionSide {\n  readonly type = LayoutActionTypes.SetNavigationPositionSide;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to top action\n */\nexport class SetNavigationPositionTop {\n  readonly type = LayoutActionTypes.SetNavigationPositionTop;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to left-to-right action\n */\nexport class SetDirectionLtr {\n  readonly type = LayoutActionTypes.SetDirectionLtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to right-to-left action\n */\nexport class SetDirectionRtr {\n  readonly type = LayoutActionTypes.SetDirectionRtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * transition layout action\n */\nexport class TransitioningLayout {\n  readonly type = LayoutActionTypes.TransitioningLayout;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * Use breadcrumb action\n */\nexport class UseBreadcrumb {\n  readonly type = LayoutActionTypes.UseBreadcrumb;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * make breadcrumb simple action\n */\nexport class MakeBreadcrumbSimple {\n  readonly type = LayoutActionTypes.MakeBreadcrumbSimple;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * make breadcrum title action\n */\nexport class MakeBreadcrumbTitle {\n  readonly type = LayoutActionTypes.MakeBreadcrumbTitle;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * fix top bar action\n */\nexport class FixTopbar {\n  readonly type = LayoutActionTypes.FixTopbar;\n  constructor(public payload: boolean) { \n  }\n}\n\nexport type LayoutActions = \n  | OpenSideNav\n  | CloseSideNav\n  | CompactSideNav\n  | SetNavigationPositionSide\n  | SetNavigationPositionTop\n  | SetDirectionLtr\n  | SetDirectionRtr\n  | TransitioningLayout\n  | UseBreadcrumb\n  | MakeBreadcrumbSimple\n  | MakeBreadcrumbTitle\n  | FixTopbar;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MakeBreadcrumbTitle.html":{"url":"classes/MakeBreadcrumbTitle.html","title":"class - MakeBreadcrumbTitle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MakeBreadcrumbTitle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/layout.actions.ts\n        \n\n            \n                Description\n            \n            \n                make breadcrum title action\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/layout.actions.ts:115\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:116\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LayoutActionTypes.MakeBreadcrumbTitle\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:115\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\n/**\n * layout action types\n */\nexport enum LayoutActionTypes {\n  OpenSideNav = '[Layout] Open Side Nav',\n  CloseSideNav = '[Layout] Close Side Nav',\n  CompactSideNav = '[Layout] Compact Nav position',\n  SetNavigationPositionSide = '[Layout] Set Navigation Position Side',\n  SetNavigationPositionTop = '[Layout] Set Navigation Position Top',\n  SetDirectionLtr = '[Layout] Set Direction Ltr',\n  SetDirectionRtr = '[Layout] Set Direction Rtr',\n  TransitioningLayout = '[Layout] Transitioning Layout',\n  UseBreadcrumb = '[Layout] Use Breadcrumb',\n  MakeBreadcrumbSimple = '[Layout] Make Breadcrumb Simple',\n  MakeBreadcrumbTitle = '[Layout] Make Breadcrumb Title',\n  FixTopbar = '[Layout] Fix Topbar'\n}\n\n/**\n * open side navigation action\n */\nexport class OpenSideNav {\n  readonly type = LayoutActionTypes.OpenSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * close side navigation action\n */\nexport class CloseSideNav {\n  readonly type = LayoutActionTypes.CloseSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * compact side navigation action\n */\nexport class CompactSideNav {\n  readonly type = LayoutActionTypes.CompactSideNav;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to side action\n */\nexport class SetNavigationPositionSide {\n  readonly type = LayoutActionTypes.SetNavigationPositionSide;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to top action\n */\nexport class SetNavigationPositionTop {\n  readonly type = LayoutActionTypes.SetNavigationPositionTop;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to left-to-right action\n */\nexport class SetDirectionLtr {\n  readonly type = LayoutActionTypes.SetDirectionLtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to right-to-left action\n */\nexport class SetDirectionRtr {\n  readonly type = LayoutActionTypes.SetDirectionRtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * transition layout action\n */\nexport class TransitioningLayout {\n  readonly type = LayoutActionTypes.TransitioningLayout;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * Use breadcrumb action\n */\nexport class UseBreadcrumb {\n  readonly type = LayoutActionTypes.UseBreadcrumb;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * make breadcrumb simple action\n */\nexport class MakeBreadcrumbSimple {\n  readonly type = LayoutActionTypes.MakeBreadcrumbSimple;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * make breadcrum title action\n */\nexport class MakeBreadcrumbTitle {\n  readonly type = LayoutActionTypes.MakeBreadcrumbTitle;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * fix top bar action\n */\nexport class FixTopbar {\n  readonly type = LayoutActionTypes.FixTopbar;\n  constructor(public payload: boolean) { \n  }\n}\n\nexport type LayoutActions = \n  | OpenSideNav\n  | CloseSideNav\n  | CompactSideNav\n  | SetNavigationPositionSide\n  | SetNavigationPositionTop\n  | SetDirectionLtr\n  | SetDirectionRtr\n  | TransitioningLayout\n  | UseBreadcrumb\n  | MakeBreadcrumbSimple\n  | MakeBreadcrumbTitle\n  | FixTopbar;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/material/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatDialogModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatOptionModule, MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSnackBarModule, MatToolbarModule,\n  MatTooltipModule\n} from '@angular/material';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nconst MODULES = [\n  MatSidenavModule,\n  MatListModule,\n  MatTooltipModule,\n  MatOptionModule,\n  MatSelectModule,\n  MatMenuModule,\n  MatSnackBarModule,\n  MatGridListModule,\n  MatToolbarModule,\n  MatIconModule,\n  MatButtonModule,\n  MatRadioModule,\n  MatCheckboxModule,\n  MatCardModule,\n  MatProgressSpinnerModule,\n  MatRippleModule,\n  MatDialogModule,\n  MatProgressBarModule,\n  MatInputModule,\n  FlexLayoutModule\n];\n\n@NgModule({\n  declarations: [],\n  imports: [MODULES],\n  exports: [MODULES]\n})\nexport class MaterialModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NavigationService.html":{"url":"injectables/NavigationService.html","title":"injectable - NavigationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NavigationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/navigation.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iconMenu\n                            \n                            \n                                iconTypeMenuTitle\n                            \n                            \n                                menuItems\n                            \n                            \n                                menuItems$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                publishNavigationChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/navigation.service.ts:31\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publishNavigationChange\n                            \n                            \n                        \n                    \n                \n                \n                    \npublishNavigationChange(menuType: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/navigation.service.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        menuType\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iconMenu\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconMenu:     IMenuItem[]\n\n                    \n                \n                    \n                        \n                            Type :     IMenuItem[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      name: 'Dashboard',\n      type: 'link',\n      tooltip: 'Dashboard',\n      icon: 'dashboard',\n      state: 'dashboard/blank'\n    },\n    {\n      name: 'Users',\n      type: 'link',\n      tooltip: 'users',\n      icon: 'group',\n      state: 'dashboard/users'\n    },\n    {\n      name: 'Patients',\n      type: 'link',\n      tooltip: 'patients',\n      icon: 'group',\n      state: 'dashboard/patients'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/navigation.service.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iconTypeMenuTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconTypeMenuTitle:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Frequently Accessed'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/navigation.service.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menuItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        menuItems:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(this.iconMenu)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/navigation.service.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menuItems$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        menuItems$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.menuItems.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/navigation.service.ts:65\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\ninterface IMenuItem {\n  type: string;       // Possible values: link/dropDown/icon/separator/extLink\n  name?: string;      // Used as display text for item and title for separator type\n  state?: string;     // Router state\n  icon?: string;      // Material icon name\n  tooltip?: string;   // Tooltip text\n  disabled?: boolean; // If true; item will not be appeared in sidenav.\n  sub?: IChildItem[]; // Dropdown items\n  badges?: IBadge[];\n}\n\ninterface IChildItem {\n  type?: string;\n  name: string;       // Display text\n  state?: string;     // Router state\n  icon?: string;\n  sub?: IChildItem[];\n}\n\ninterface IBadge {\n  color: string;      // primary/accent/warn/hex color codes(#fff000)\n  value: string;      // Display text\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavigationService {\n  constructor() {\n  }\n\n  iconMenu: IMenuItem[] = [\n    {\n      name: 'Dashboard',\n      type: 'link',\n      tooltip: 'Dashboard',\n      icon: 'dashboard',\n      state: 'dashboard/blank'\n    },\n    {\n      name: 'Users',\n      type: 'link',\n      tooltip: 'users',\n      icon: 'group',\n      state: 'dashboard/users'\n    },\n    {\n      name: 'Patients',\n      type: 'link',\n      tooltip: 'patients',\n      icon: 'group',\n      state: 'dashboard/patients'\n    }\n  ];\n\n  // Icon menu TITLE at the very top of navigation.\n  // This title will appear if any icon type item is present in menu.\n  iconTypeMenuTitle = 'Frequently Accessed';\n  // sets iconMenu as default;\n  menuItems = new BehaviorSubject(this.iconMenu);\n  // navigation component has subscribed to this Observable\n  menuItems$ = this.menuItems.asObservable();\n\n  // Customizer component uses this method to change menu.\n  // You can remove this method and customizer component.\n  // Or you can customize this method to supply different menu for\n  // different user type.\n  publishNavigationChange(menuType: string) {\n    this.menuItems.next(this.iconMenu);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/errors/components/not-found/not-found.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-not-found\n            \n\n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/errors/components/not-found/not-found.component.ts:7\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/errors/components/not-found/not-found.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'moio-not-found',\n  templateUrl: './not-found.component.html'\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      error\n      \n        404\n        Page Not Found!\n      \n    \n\n    \n      {{'Back to Dashboard' | translate}}\n      \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            error              404        Page Not Found!                    {{\\'Back to Dashboard\\' | translate}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationsComponent.html":{"url":"components/NotificationsComponent.html","title":"component - NotificationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotificationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/containers/layout-components/notifications/notifications.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-notifications\n            \n\n\n\n\n            \n                templateUrl\n                ./notifications.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                notifications\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearAll\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                notificPanel\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/containers/layout-components/notifications/notifications.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        notificPanel\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/notifications/notifications.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clearAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nclearAll(event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/notifications/notifications.component.ts:45\n                            \n                        \n\n\n                \n                    \n                            clear all notifications\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/notifications/notifications.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n    message: 'New contact added',\n    icon: 'assignment_ind',\n    time: '1 min ago',\n    route: '/inbox',\n    color: 'primary'\n  }, {\n    message: 'New message',\n    icon: 'chat',\n    time: '4 min ago',\n    route: '/chat',\n    color: 'accent'\n  }, {\n    message: 'Server rebooted',\n    icon: 'settings_backup_restore',\n    time: '12 min ago',\n    route: '/charts',\n    color: 'warn'\n  }]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/notifications/notifications.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\n\n@Component({\n  selector: 'moio-notifications',\n  templateUrl: './notifications.component.html'\n})\nexport class NotificationsComponent implements OnInit {\n  @Input() notificPanel;\n\n  // Dummy notifications\n  notifications = [{\n    message: 'New contact added',\n    icon: 'assignment_ind',\n    time: '1 min ago',\n    route: '/inbox',\n    color: 'primary'\n  }, {\n    message: 'New message',\n    icon: 'chat',\n    time: '4 min ago',\n    route: '/chat',\n    color: 'accent'\n  }, {\n    message: 'Server rebooted',\n    icon: 'settings_backup_restore',\n    time: '12 min ago',\n    route: '/charts',\n    color: 'warn'\n  }];\n\n  constructor(private router: Router) {}\n\n  ngOnInit() {\n    this.router.events.subscribe((routeChange) => {\n        if (routeChange instanceof NavigationEnd) {\n          this.notificPanel.close();\n        }\n    });\n  }\n\n  /**\n   * clear all notifications\n   */\n  clearAll(event) {\n    event.preventDefault();\n    this.notifications = [];\n  }\n}\n\n    \n\n    \n        \n  Notifications\n\n\n\n  \n  \n    {{n.icon}}\n    \n      \n        {{n.message}}\n        {{n.time}}\n      \n    \n  \n\n\n\n  Clear all notifications\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Notifications        {{n.icon}}                  {{n.message}}        {{n.time}}              Clear all notifications'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'NotificationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NumberValidators.html":{"url":"classes/NumberValidators.html","title":"class - NumberValidators","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NumberValidators\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/shared/number-validator.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                range\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            range\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        range(min: number, max: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/shared/number-validator.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        min\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        max\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ValidatorFn\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl, ValidatorFn } from '@angular/forms';\n\nexport class NumberValidators {\n\n    static range(min: number, max: number): ValidatorFn {\n        return (c: AbstractControl): { [key: string]: boolean } | null => {\n            if (c.value && (isNaN(c.value) || c.value  max)) {\n                return { 'range': true };\n            }\n            return null;\n        };\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NursingHome.html":{"url":"interfaces/NursingHome.html","title":"interface - NursingHome","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NursingHome\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/models/nursing-home.model.ts\n        \n\n            \n                Description\n            \n            \n                nursing home defintion\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        key\n                                \n                                \n                                            Optional\n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface NursingHome {\n    id?: number | null;\n    key?: string;\n    name?: string;\n  }\n  \n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NursingHomeFormComponent.html":{"url":"components/NursingHomeFormComponent.html","title":"component - NursingHomeFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NursingHomeFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/components/nursing-homes/nursing-home-form/nursing-home-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nursing-home-form\n            \n\n\n\n\n            \n                templateUrl\n                ./nursing-home-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                itemForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildItemForm\n                            \n                            \n                                cancel\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFormSubmitted\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, dialogRef: MatDialogRef, fb: FormBuilder, store: Store, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/components/nursing-homes/nursing-home-form/nursing-home-form.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildItemForm\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildItemForm(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/nursing-homes/nursing-home-form/nursing-home-form.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancel\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/nursing-homes/nursing-home-form/nursing-home-form.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/nursing-homes/nursing-home-form/nursing-home-form.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onFormSubmitted\n                            \n                            \n                        \n                    \n                \n                \n                    \nonFormSubmitted(nursingHome: NursingHome)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/nursing-homes/nursing-home-form/nursing-home-form.component.ts:48\n                            \n                        \n\n\n                \n                    \n                            dispatch new create nursingHome action when form is submitted\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nursingHome\n                                                        \n                                                                    NursingHome\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submit\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/nursing-homes/nursing-home-form/nursing-home-form.component.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/nursing-homes/nursing-home-form/nursing-home-form.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/nursing-homes/nursing-home-form/nursing-home-form.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            itemForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/nursing-homes/nursing-home-form/nursing-home-form.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\n/* NGRX */\nimport { Store, select } from '@ngrx/store';\nimport * as fromDashboard from '../../../reducers';\nimport * as nursingHomeActions from '../../../actions/nursing-homes.actions';\nimport { Observable } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NursingHomesApiActions, NursingHomesActions } from '../../../actions';\nimport { NursingHome } from '../../../models/nursing-home.model';\n\n@Component({\n  selector: 'nursing-home-form',\n  templateUrl: './nursing-home-form.component.html'\n})\nexport class NursingHomeFormComponent implements OnInit {\n  public itemForm: FormGroup;\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public dialogRef: MatDialogRef,\n    private fb: FormBuilder,\n    private store: Store, \n    private translate: TranslateService,\n  ) { }\n\n  ngOnInit() {\n    this.buildItemForm(this.data.payload)\n\n    this.store.dispatch(new nursingHomeActions.LoadNursingHomes());\n  }\n  \n  buildItemForm(item) {\n    this.itemForm = this.fb.group({\n      key: [item.firstname || '', Validators.required],\n      name: [item.lastname || '', Validators.required]\n    })\n  }\n\n  submit() {\n    this.dialogRef.close(this.itemForm.value)\n  }\n\n  /**\n   * dispatch new create nursingHome action when form is submitted\n   * @param nursingHome\n   */\n  onFormSubmitted(nursingHome: NursingHome) {\n    this.store.dispatch(new NursingHomesActions.CreateNursingHome({nursingHome}));\n  }\n\n  cancel(){\n    this.store.dispatch(new NursingHomesActions.DismissPoppedUpNursingHomeForm());\n  }\n}\n\n    \n\n    \n        {{data.title}}\n  \n  \n    \n      \n        \n      \n    \n\n    \n      \n        \n      \n    \n\n    \n      Save\n      \n      Cancel\n    \n  \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{data.title}}                                                                      Save            Cancel        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'NursingHomeFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NursingHomesEffects.html":{"url":"injectables/NursingHomesEffects.html","title":"injectable - NursingHomesEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NursingHomesEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/effects/nursing-homes.effects.ts\n        \n\n            \n                Description\n            \n            \n                nursingHomes effects\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createNursingHome$\n                            \n                            \n                                DismissPoppedUpNursingHomeForm\n                            \n                            \n                                loadNursingHomes$\n                            \n                            \n                                popUpNursingHomeForm$\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, nursingHomesService: NursingHomesService, router: Router, store: Store, snackBar: MatSnackBar, translate: TranslateService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/effects/nursing-homes.effects.ts:124\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nursingHomesService\n                                                  \n                                                        \n                                                                    NursingHomesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createNursingHome$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        createNursingHome$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(NursingHomesActions.NursingHomesActionTypes.CreateNursingHome),\n      map(action => action.payload.nursingHome),\n      exhaustMap((nursingHomeData: NursingHome) => {\n\n        return this.nursingHomesService.createNursingHome(nursingHomeData)\n          .pipe(\n            delay(2000),\n            map(nursingHome => {\n              return new NursingHomesApiActions.CreateNursingHomeSuccess({ nursingHome });\n            }),\n            catchError(httpResponse => {\n              const message = httpResponse.statusText.toLowerCase();\n\n              return of(new NursingHomesApiActions.CreateNursingHomeFailure({ message }));\n            }),\n            tap(() => {\n              console.log('Actions finished')\n            })\n          );\n      })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/nursing-homes.effects.ts:25\n                            \n                        \n\n                \n                    \n                        effect fired, when the create new nursingHome form is submitted\nsend data to api and handle result\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DismissPoppedUpNursingHomeForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DismissPoppedUpNursingHomeForm:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(NursingHomesActions.NursingHomesActionTypes.DismissPoppedUpNursingHomeForm),\n      map(() => {\n        this.dialog.closeAll();\n    })\n  )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect({dispatch: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/nursing-homes.effects.ts:118\n                            \n                        \n\n                \n                    \n                        effect to dismiss the dialog for adding nursingHome details\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadNursingHomes$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadNursingHomes$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(NursingHomesActions.NursingHomesActionTypes.LoadNursingHomes),\n      exhaustMap(() => {\n\n        return this.nursingHomesService.getNursingHomes()\n          .pipe(\n            delay(2000),\n            map((nursingHomes: NursingHome[]) => {\n              console.log(nursingHomes)\n              return new NursingHomesApiActions.LoadNursingHomesSuccess({nursingHomes});\n            }),\n            catchError(httpError => {\n              console.log(httpError);\n              const message = httpError.statusText.toLowerCase();\n\n              let snackBarRef = this.snackBar.open(this.translate.instant(message), this.translate.instant('Retry'), {\n                duration: 10000\n              });\n\n              snackBarRef.afterDismissed().subscribe(snackBarDismiss => {\n\n                if (snackBarDismiss.dismissedByAction){\n                  this.store.dispatch(new NursingHomesActions.LoadNursingHomes());\n                }else{\n                  this.router.navigate(['/dashboard']);\n                }\n              });\n\n              return of(new NursingHomesApiActions.LoadNursingHomesFailure({ message }));\n            }),\n            tap(() => {\n              console.log('Actions finished')\n              // dispatch hideLoader action\n            })\n          );\n      })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/nursing-homes.effects.ts:53\n                            \n                        \n\n                \n                    \n                        effect for loading nursing homes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popUpNursingHomeForm$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popUpNursingHomeForm$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(NursingHomesActions.NursingHomesActionTypes.PopUpNursingHomeForm),\n      exhaustMap(() => {\n        const title = 'Creating a new nursingHome';\n        const dialogRef: MatDialogRef = this.dialog.open(NursingHomeFormComponent, {\n          width: '720px',\n          disableClose: true,\n          data: { title: title }\n        });\n        \n        return dialogRef.afterClosed();\n      })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/nursing-homes.effects.ts:96\n                            \n                        \n\n                \n                    \n                        show a dialog form for nursingHome details as a pop up\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        snackBar:     MatSnackBar\n\n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/nursing-homes.effects.ts:142\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { NursingHomesApiActions, NursingHomesActions } from '../actions';\nimport { catchError, exhaustMap, map, tap, delay } from 'rxjs/operators';\nimport { NursingHome } from '../models/nursing-home.model';\nimport { NursingHomesService } from '../services/nursing-homes.service';\nimport { of } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MatDialogRef, MatDialog, MatSnackBar } from '@angular/material';\nimport { NursingHomeFormComponent } from '../components/nursing-homes/nursing-home-form/nursing-home-form.component';\n\n/**\n * nursingHomes effects\n */\n@Injectable()\nexport class NursingHomesEffects {\n\n  /**\n   * effect fired, when the create new nursingHome form is submitted\n   * send data to api and handle result\n   */\n  @Effect()\n  createNursingHome$ = this.actions$\n    .pipe(\n      ofType(NursingHomesActions.NursingHomesActionTypes.CreateNursingHome),\n      map(action => action.payload.nursingHome),\n      exhaustMap((nursingHomeData: NursingHome) => {\n\n        return this.nursingHomesService.createNursingHome(nursingHomeData)\n          .pipe(\n            delay(2000),\n            map(nursingHome => {\n              return new NursingHomesApiActions.CreateNursingHomeSuccess({ nursingHome });\n            }),\n            catchError(httpResponse => {\n              const message = httpResponse.statusText.toLowerCase();\n\n              return of(new NursingHomesApiActions.CreateNursingHomeFailure({ message }));\n            }),\n            tap(() => {\n              console.log('Actions finished')\n            })\n          );\n      })\n    );\n\n  /**\n   * effect for loading nursing homes\n   */\n  @Effect()\n  loadNursingHomes$ = this.actions$\n    .pipe(\n      ofType(NursingHomesActions.NursingHomesActionTypes.LoadNursingHomes),\n      exhaustMap(() => {\n\n        return this.nursingHomesService.getNursingHomes()\n          .pipe(\n            delay(2000),\n            map((nursingHomes: NursingHome[]) => {\n              console.log(nursingHomes)\n              return new NursingHomesApiActions.LoadNursingHomesSuccess({nursingHomes});\n            }),\n            catchError(httpError => {\n              console.log(httpError);\n              const message = httpError.statusText.toLowerCase();\n\n              let snackBarRef = this.snackBar.open(this.translate.instant(message), this.translate.instant('Retry'), {\n                duration: 10000\n              });\n\n              snackBarRef.afterDismissed().subscribe(snackBarDismiss => {\n\n                if (snackBarDismiss.dismissedByAction){\n                  this.store.dispatch(new NursingHomesActions.LoadNursingHomes());\n                }else{\n                  this.router.navigate(['/dashboard']);\n                }\n              });\n\n              return of(new NursingHomesApiActions.LoadNursingHomesFailure({ message }));\n            }),\n            tap(() => {\n              console.log('Actions finished')\n              // dispatch hideLoader action\n            })\n          );\n      })\n    );\n\n  /**\n   * show a dialog form for nursingHome details as a pop up\n   */\n  @Effect()\n  popUpNursingHomeForm$ = this.actions$\n    .pipe(\n      ofType(NursingHomesActions.NursingHomesActionTypes.PopUpNursingHomeForm),\n      exhaustMap(() => {\n        const title = 'Creating a new nursingHome';\n        const dialogRef: MatDialogRef = this.dialog.open(NursingHomeFormComponent, {\n          width: '720px',\n          disableClose: true,\n          data: { title: title }\n        });\n        \n        return dialogRef.afterClosed();\n      })\n    );\n\n\n  /**\n   * effect to dismiss the dialog for adding nursingHome details\n   */\n  @Effect({\n    dispatch: false\n  })\n  DismissPoppedUpNursingHomeForm = this.actions$\n    .pipe(\n      ofType(NursingHomesActions.NursingHomesActionTypes.DismissPoppedUpNursingHomeForm),\n      map(() => {\n        this.dialog.closeAll();\n    })\n  );\n\n\n\n  /**\n   * constructor\n   *\n   * @param actions$\n   * @param nursingHomesService\n   * @param router\n   * @param modalController\n   * @param store\n   */\n  constructor(\n    private actions$: Actions,\n    private nursingHomesService: NursingHomesService,\n    private router: Router,\n    private store: Store,\n    public snackBar: MatSnackBar,\n    private translate: TranslateService,\n    private dialog: MatDialog,){\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NursingHomesService.html":{"url":"injectables/NursingHomesService.html","title":"injectable - NursingHomesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NursingHomesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/services/nursing-homes.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createNursingHome\n                            \n                            \n                                getNursingHomes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/services/nursing-homes.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createNursingHome\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateNursingHome(nursingHome: NursingHome)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/services/nursing-homes.service.ts:28\n                            \n                        \n\n\n                \n                    \n                            create a new nursingHome\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nursingHome\n                                                        \n                                                                    NursingHome\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNursingHomes\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNursingHomes()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/services/nursing-homes.service.ts:20\n                            \n                        \n\n\n                \n                    \n                            get all nursing homes from the moio-cloud api\n\n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable, of, throwError } from 'rxjs';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nimport { NursingHome } from '../models/nursing-home.model';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NursingHomesService {\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * get all nursing homes from the moio-cloud api\n   */\n  getNursingHomes(): Observable {\n    return this.http.get(`${environment.apiHost}/api/nursinghomes`);\n  }\n\n  /**\n   * create a new nursingHome\n   * @param nursingHome\n   */\n  createNursingHome(nursingHome: NursingHome): Observable {\n    return this.http\n      .post(`${environment.apiHost}/api/nursinghomes`, {...nursingHome});\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OpenSideNav.html":{"url":"classes/OpenSideNav.html","title":"class - OpenSideNav","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OpenSideNav\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/layout.actions.ts\n        \n\n            \n                Description\n            \n            \n                open side navigation action\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/layout.actions.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LayoutActionTypes.OpenSideNav\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\n/**\n * layout action types\n */\nexport enum LayoutActionTypes {\n  OpenSideNav = '[Layout] Open Side Nav',\n  CloseSideNav = '[Layout] Close Side Nav',\n  CompactSideNav = '[Layout] Compact Nav position',\n  SetNavigationPositionSide = '[Layout] Set Navigation Position Side',\n  SetNavigationPositionTop = '[Layout] Set Navigation Position Top',\n  SetDirectionLtr = '[Layout] Set Direction Ltr',\n  SetDirectionRtr = '[Layout] Set Direction Rtr',\n  TransitioningLayout = '[Layout] Transitioning Layout',\n  UseBreadcrumb = '[Layout] Use Breadcrumb',\n  MakeBreadcrumbSimple = '[Layout] Make Breadcrumb Simple',\n  MakeBreadcrumbTitle = '[Layout] Make Breadcrumb Title',\n  FixTopbar = '[Layout] Fix Topbar'\n}\n\n/**\n * open side navigation action\n */\nexport class OpenSideNav {\n  readonly type = LayoutActionTypes.OpenSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * close side navigation action\n */\nexport class CloseSideNav {\n  readonly type = LayoutActionTypes.CloseSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * compact side navigation action\n */\nexport class CompactSideNav {\n  readonly type = LayoutActionTypes.CompactSideNav;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to side action\n */\nexport class SetNavigationPositionSide {\n  readonly type = LayoutActionTypes.SetNavigationPositionSide;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to top action\n */\nexport class SetNavigationPositionTop {\n  readonly type = LayoutActionTypes.SetNavigationPositionTop;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to left-to-right action\n */\nexport class SetDirectionLtr {\n  readonly type = LayoutActionTypes.SetDirectionLtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to right-to-left action\n */\nexport class SetDirectionRtr {\n  readonly type = LayoutActionTypes.SetDirectionRtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * transition layout action\n */\nexport class TransitioningLayout {\n  readonly type = LayoutActionTypes.TransitioningLayout;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * Use breadcrumb action\n */\nexport class UseBreadcrumb {\n  readonly type = LayoutActionTypes.UseBreadcrumb;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * make breadcrumb simple action\n */\nexport class MakeBreadcrumbSimple {\n  readonly type = LayoutActionTypes.MakeBreadcrumbSimple;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * make breadcrum title action\n */\nexport class MakeBreadcrumbTitle {\n  readonly type = LayoutActionTypes.MakeBreadcrumbTitle;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * fix top bar action\n */\nexport class FixTopbar {\n  readonly type = LayoutActionTypes.FixTopbar;\n  constructor(public payload: boolean) { \n  }\n}\n\nexport type LayoutActions = \n  | OpenSideNav\n  | CloseSideNav\n  | CompactSideNav\n  | SetNavigationPositionSide\n  | SetNavigationPositionTop\n  | SetDirectionLtr\n  | SetDirectionRtr\n  | TransitioningLayout\n  | UseBreadcrumb\n  | MakeBreadcrumbSimple\n  | MakeBreadcrumbTitle\n  | FixTopbar;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PatientEditFormComponent.html":{"url":"components/PatientEditFormComponent.html","title":"component - PatientEditFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PatientEditFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-patient-edit-form\n            \n\n            \n                styleUrls\n                ./patient-edit-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./patient-edit-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                componentActive\n                            \n                            \n                                    Public\n                                confirmService\n                            \n                            \n                                displayMessage\n                            \n                            \n                                errorMessage$\n                            \n                            \n                                    Private\n                                genericValidator\n                            \n                            \n                                loadPatientPatientsError$\n                            \n                            \n                                loadPatientPatientsPending$\n                            \n                            \n                                pageTitle\n                            \n                            \n                                patient\n                            \n                            \n                                patientEditForm\n                            \n                            \n                                patientUsers\n                            \n                            \n                                    Private\n                                validationMessages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                cancelEdit\n                            \n                            \n                                deletePatient\n                            \n                            \n                                displayPatient\n                            \n                            \n                                editPatient\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, fb: FormBuilder, translate: TranslateService, confirmService: ConfirmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmService\n                                                  \n                                                        \n                                                                    ConfirmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            blur\n                            \n                            \n                        \n                    \n                \n                \n                    \nblur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts:100\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancelEdit\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancelEdit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts:122\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletePatient\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeletePatient()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts:143\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayPatient\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisplayPatient(patient: Patient)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts:104\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        patient\n                                                        \n                                                                    Patient\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editPatient\n                            \n                            \n                        \n                    \n                \n                \n                    \neditPatient()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts:154\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts:94\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentActive\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        componentActive:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            confirmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        confirmService:     ConfirmService\n\n                    \n                \n                    \n                        \n                            Type :     ConfirmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        displayMessage:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            genericValidator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        genericValidator:     GenericValidator\n\n                    \n                \n                    \n                        \n                            Type :     GenericValidator\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadPatientPatientsError$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadPatientPatientsError$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getLoadPatientUsersError)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadPatientPatientsPending$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadPatientPatientsPending$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getLoadPatientUsersPending)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pageTitle:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Patient Edit'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            patient\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        patient:     Patient\n\n                    \n                \n                    \n                        \n                            Type :     Patient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            patientEditForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        patientEditForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            patientUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        patientUsers:     User[]\n\n                    \n                \n                    \n                        \n                            Type :     User[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validationMessages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        validationMessages:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { Observable, of } from 'rxjs';\n\nimport { IPatient as Patient } from '../../../models/patient.model';\nimport { User } from '../../../models/user.model';\nimport { GenericValidator } from '../../../shared/generic-validator';\nimport { NumberValidators } from '../../../shared/number-validator';\n\nimport { takeWhile } from 'rxjs/operators';\nimport { Store, select } from '@ngrx/store';\n\nimport * as fromDashboard from '../../../reducers';\nimport * as patientsActions from '../../../actions/patients.actions';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ConfirmService } from '../../../../core/services/confirm.service'\n\n@Component({\n  selector: 'moio-patient-edit-form',\n  templateUrl: './patient-edit-form.component.html',\n  styleUrls: ['./patient-edit-form.component.scss']\n})\nexport class PatientEditFormComponent implements OnInit, OnDestroy {\n  pageTitle = 'Patient Edit';\n  errorMessage$: Observable;\n  componentActive = true;\n  patientEditForm: FormGroup;\n\n  patient: Patient;\n\n  // Use with the generic validation message class\n  displayMessage: { [key: string]: string } = {};\n  private validationMessages: { [key: string]: { [key: string]: string } };\n  private genericValidator: GenericValidator;\n\n  // // all patient users\n  // patientUsers$: Observable = this.store.pipe(\n  //   select(fromDashboard.getAllPatientUsers)\n  // );\n\n  patientUsers: User[];\n\n  // get error state when loading patient patients\n  loadPatientPatientsError$: Observable = this.store.pipe(\n    select(fromDashboard.getLoadPatientUsersError)\n  );\n\n  // get pending state when loading patient patients\n  loadPatientPatientsPending$: Observable = this.store.pipe(\n    select(fromDashboard.getLoadPatientUsersPending)\n  );\n\n  constructor(private store: Store,\n              private fb: FormBuilder,\n              private translate: TranslateService,\n              public confirmService: ConfirmService) {\n\n    // Defines all of the validation messages for the form.\n    // These could instead be retrieved from a file or database.\n    this.validationMessages = {\n      patientname: {\n        required: 'Patientname is required.'\n      }\n    };\n\n    // Define an instance of the validator for use with this form,\n    // passing in this form's set of validation messages.\n    this.genericValidator = new GenericValidator(this.validationMessages);\n\n    this.translate.setDefaultLang('de');\n  }\n\n  ngOnInit() {\n    // Watch for changes to the currently selected patient\n    this.store.pipe(\n      select(fromDashboard.getSelectedPatient),\n      takeWhile(() => this.componentActive)\n    ).subscribe(\n      patient => {\n        if (patient){\n          this.patient = patient;\n          this.patientUsers = patient.users; \n          this.displayPatient(this.patient);\n        }\n      }\n    );\n\n    // Watch for changes to the error message\n    this.errorMessage$ = this.store.pipe(select(fromDashboard.getPatientEditionError));\n\n  }\n\n  ngOnDestroy(): void {\n    this.componentActive = false;\n  }\n\n  // Also validate on blur\n  // Helpful if the patient tabs through required fields\n  blur(): void {\n    this.displayMessage = this.genericValidator.processMessages(this.patientEditForm);\n  }\n\n  displayPatient(patient: Patient) {\n    // Display the appropriate page title\n    this.pageTitle = `${this.patient.firstname} ${this.patient.lastname}`;\n    // Define the form group\n    this.patientEditForm = this.fb.group({\n      id: [patient.id],\n      firstname: [patient.firstname],\n      lastname: [patient.lastname, Validators.required],\n      gender: [patient.gender],    \n      nursing_home_name: [patient.nursing_home.name]\n    });\n\n    // Watch for value changes\n    const formValuechanges = this.patientEditForm.valueChanges.subscribe(\n      value => this.displayMessage = this.genericValidator.processMessages(this.patientEditForm)\n    );\n  }\n\n  cancelEdit(): void {\n    // Redisplay the currently selected patient\n    // replacing any edits made\n    this.displayPatient(this.patient);\n    this.store.dispatch(new patientsActions.DismissEditPatient);\n\n\n    const title = this.translate.instant(\"CloseUnsavedForm.title\");\n    const message = this.translate.instant(\"CloseUnsavedForm.message\");\n    if (this.patientEditForm.dirty){\n      this.confirmService.confirm({title: title, message: message})\n      .subscribe(res => {\n        if (res){\n          this.store.dispatch(new patientsActions.DismissEditPatient());\n        }\n      })\n    }else{\n      this.store.dispatch(new patientsActions.DismissEditPatient());\n    }\n  }\n\n  deletePatient(): void {\n    if (this.patient && this.patient.id) {\n      if (confirm(`Really delete the patient: ${this.patient.firstname}?`)) {\n        this.store.dispatch(new patientsActions.DeletePatient(this.patient.id));\n      }\n    } else {\n      // No need to delete, it was never saved\n      this.store.dispatch(new patientsActions.DismissEditPatient);\n    }\n  }\n\n  editPatient(): void {\n    console.log(this.patientEditForm.value);\n    if (this.patientEditForm.valid) {\n      if (this.patientEditForm.dirty) {\n        // Copy over all of the original patient properties\n        // Then copy over the values from the form\n        // This ensures values not on the form, such as the Id, are retained\n        const p = { id: this.patientEditForm.get('id').value,\n                    firstname: this.patientEditForm.get('firstname').value,\n                    lastname: this.patientEditForm.get('lastname').value,\n                    gender: this.patientEditForm.get('gender').value\n                  };\n        console.log(p);\n        this.store.dispatch(new patientsActions.EditPatient(p));\n      }\n    } else {\n      this.errorMessage$ = of('Please correct the validation errors.');\n    }\n  }\n\n}\n    \n\n    \n        \n  \n    \n      {{pageTitle}}\n      \n    \n    \n      \n        \n          \n            \n              \n                \n              \n            \n\n            \n              \n                \n              \n               {{'LastNameRequired' | translate}} \n            \n          \n\n          \n            {{'Gender' | translate}}* \n            \n              \n                Male\n                Female\n              \n            \n\n            \n              \n                \n              \n            \n          \n          \n          \n            \n              {{'Edit' | translate}}\n            \n            {{'Cancel' | translate}}\n          \n        \n      \n    \n  \n\n  \n     -->\n    {{'ConnectedUserProfiles' | translate}}\n    \n      \n        \n\n          \n            \n              {{ row?.firstname }} {{ row?.lastname }}\n            \n          \n          \n            \n              {{ row?.last_login_at }}\n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./patient-edit-form.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{pageTitle}}                                                                                                                                                                                 {{\\'LastNameRequired\\' | translate}}                                             {{\\'Gender\\' | translate}}*                                           Male                Female                                                                                                                                                      {{\\'Edit\\' | translate}}                        {{\\'Cancel\\' | translate}}                                     -->    {{\\'ConnectedUserProfiles\\' | translate}}                                                      {{ row?.firstname }} {{ row?.lastname }}                                                          {{ row?.last_login_at }}                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'PatientEditFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PatientFormComponent.html":{"url":"components/PatientFormComponent.html","title":"component - PatientFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PatientFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/components/patients/patient-form/patient-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                patient-form\n            \n\n\n\n\n            \n                templateUrl\n                ./patient-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                confirmService\n                            \n                            \n                                createPatientPending$\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                loadNursingHomeErrorMessage$\n                            \n                            \n                                loadNursinghomePending$\n                            \n                            \n                                nursingHomes$\n                            \n                            \n                                    Public\n                                patientForm\n                            \n                            \n                                savePatientErrorMessage$\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                passwordMatchValidator\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, dialogRef: MatDialogRef, fb: FormBuilder, store: Store, translate: TranslateService, confirmService: ConfirmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/components/patients/patient-form/patient-form.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmService\n                                                  \n                                                        \n                                                                    ConfirmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancel\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-form/patient-form.component.ts:112\n                            \n                        \n\n\n                \n                    \n                            dismiss the open patient form dialogue with confirmation if \nthe form has unsave data\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-form/patient-form.component.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordMatchValidator\n                            \n                            \n                        \n                    \n                \n                \n                    \npasswordMatchValidator(control: AbstractControl)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-form/patient-form.component.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control\n                                                        \n                                                                    AbstractControl\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submit\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-form/patient-form.component.ts:99\n                            \n                        \n\n\n                \n                    \n                            dispatch new create patient action when form is submitted\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            confirmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        confirmService:     ConfirmService\n\n                    \n                \n                    \n                        \n                            Type :     ConfirmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-form/patient-form.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createPatientPending$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        createPatientPending$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getPatientCreationPending)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-form/patient-form.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-form/patient-form.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-form/patient-form.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadNursingHomeErrorMessage$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadNursingHomeErrorMessage$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getPatientCreationError)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-form/patient-form.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadNursinghomePending$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadNursinghomePending$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getNursingHomePagePending)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-form/patient-form.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nursingHomes$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nursingHomes$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getAllNursingHomes)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-form/patient-form.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            patientForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        patientForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-form/patient-form.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            savePatientErrorMessage$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        savePatientErrorMessage$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getNursingHomePageError)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-form/patient-form.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translate:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-form/patient-form.component.ts:52\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { FormBuilder, Validators, FormGroup, AbstractControl } from '@angular/forms';\n/* NGRX */\nimport { Store, select } from '@ngrx/store';\nimport * as fromDashboard from '../../../reducers';\nimport * as nursingHomeActions from '../../../actions/nursing-homes.actions';\nimport { Observable } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\nimport { PatientsApiActions, PatientsActions } from '../../../actions';\nimport { IPatient } from '../../../models/patient.model';\nimport { NursingHome } from 'src/app/dashboard/models/nursing-home.model';\nimport { ConfirmService } from '../../../../core/services/confirm.service'\n\n\n@Component({\n  selector: 'patient-form',\n  templateUrl: './patient-form.component.html'\n})\nexport class PatientFormComponent implements OnInit {\n  public patientForm: FormGroup;\n\n  // observe patient creation pending state\n  createPatientPending$: Observable = this.store.pipe(\n    select(fromDashboard.getPatientCreationPending)\n  );\n\n  // observe errors while saving the patient\n  savePatientErrorMessage$: Observable = this.store.pipe(\n    select(fromDashboard.getNursingHomePageError)\n  );\n\n  // observe pending state while loading nursing homes\n  loadNursinghomePending$: Observable = this.store.pipe(\n    select(fromDashboard.getNursingHomePagePending)\n  );\n\n  // observe errors while loading nursing homes\n  loadNursingHomeErrorMessage$: Observable = this.store.pipe(\n    select(fromDashboard.getPatientCreationError)\n  );\n\n  nursingHomes$: Observable = this.store.pipe(\n    select(fromDashboard.getAllNursingHomes)\n  );\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public dialogRef: MatDialogRef,\n    private fb: FormBuilder,\n    private store: Store, \n    public translate: TranslateService,\n    public confirmService: ConfirmService\n  ) { \n    translate.setDefaultLang('de');\n  }\n\n  ngOnInit() {\n    // LoadAllNursingHomes\n    this.store.dispatch(new nursingHomeActions.LoadNursingHomes());\n\n    /**\n     * Create patientForm group to collect patient details\n     */\n    this.patientForm = this.fb.group({\n      firstname: ['', Validators.required],\n      lastname: ['', Validators.required],\n      patientname: ['', Validators.required],\n      email: ['',[Validators.required, Validators.email]],\n      password: ['',Validators.required],\n      password_confirmation: ['',Validators.required],\n      nursing_home_key: ['',Validators.required]\n    },\n    {\n      // check whether our password and confirm password match\n      validator: this.passwordMatchValidator\n   })\n  }\n\n  passwordMatchValidator(control: AbstractControl) {\n    const password: string = control.get('password').value; // get password from our password form control\n    const passwordConfirmation: string = control.get('password_confirmation').value; // get password from our password_confirmation form control\n    // compare is the password math\n    if (password !== passwordConfirmation) {\n      // if they don't match, set an error in our passwordConfirmation form control\n      control.get('password_confirmation').setErrors({ NoPasswordMatch: true });\n    }else{\n     if ( control.getError('NoPasswordMatch')){\n       control.setErrors(null);\n     }\n      return null\n    }\n  }\n\n  /**\n   * dispatch new create patient action when form is submitted\n   * @param patient\n   */\n  submit() {\n    if (this.patientForm.valid) {\n      const patient = this.patientForm.value;\n      console.log(patient);\n      this.store.dispatch(new PatientsActions.CreatePatient({patient}));\n    }\n    // this.dialogRef.close(this.patientForm.value)\n  }\n\n  /**\n   * dismiss the open patient form dialogue with confirmation if \n   * the form has unsave data\n   */\n  cancel(){\n    const title = this.translate.instant(\"CloseUnsavedForm.title\");\n    const message = this.translate.instant(\"CloseUnsavedForm.message\");\n    if (this.patientForm.dirty){\n      this.confirmService.confirm({title: title, message: message})\n      .subscribe(res => {\n        if (res){\n          this.store.dispatch(new PatientsActions.DismissPatientFormDialog());\n        }\n      })\n    }else{\n      this.store.dispatch(new PatientsActions.DismissPatientFormDialog());\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n      \n{{data.title}}\n\n  {{loadNursingHomeErrorMessage$ | async}}!\n\n\n  {{savePatientErrorMessage$ | async }}!\n\n\n  \n    \n      \n        \n        {{'FirstNameRequired' | translate}}\n      \n    \n\n    \n      \n        \n        {{'LastNameRequired' | translate}}\n      \n    \n\n    \n      \n        \n        {{'PatientNameRequired' | translate}}\n      \n    \n\n    \n      \n        \n        {{'EmailRequired' | translate}}\n      \n    \n\n    \n      \n        \n        {{'PasswordRequried' | translate}}\n      \n    \n\n    \n      \n        \n        \n          {{'ConfirmPasswordRequired' | translate}}\n        \n         \n          Password do not match \n        \n      \n    \n\n    \n      \n        \n          \n            {{nursingHome.name}}\n          \n        \n        {{'NursingHomeKeyRequired' |\n          translate}}\n\n      \n    \n\n    \n      {{'Save' |\n        translate}}\n      \n      {{'Cancel' | translate}}\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{data.title}}  {{loadNursingHomeErrorMessage$ | async}}!  {{savePatientErrorMessage$ | async }}!                            {{\\'FirstNameRequired\\' | translate}}                                    {{\\'LastNameRequired\\' | translate}}                                    {{\\'PatientNameRequired\\' | translate}}                                    {{\\'EmailRequired\\' | translate}}                                    {{\\'PasswordRequried\\' | translate}}                                              {{\\'ConfirmPasswordRequired\\' | translate}}                           Password do not match                                                           {{nursingHome.name}}                          {{\\'NursingHomeKeyRequired\\' |          translate}}                    {{\\'Save\\' |        translate}}            {{\\'Cancel\\' | translate}}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'PatientFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PatientListComponent.html":{"url":"components/PatientListComponent.html","title":"component - PatientListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PatientListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/components/patients/patient-list/patient-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-patient-list\n            \n\n            \n                styleUrls\n                ./patient-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./patient-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                componentActive\n                            \n                            \n                                errorMessage$\n                            \n                            \n                                ids\n                            \n                            \n                                isPending$\n                            \n                            \n                                    Public\n                                items\n                            \n                            \n                                patients\n                            \n                            \n                                patients$\n                            \n                            \n                                selectedPatient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                newPatient\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSelectRow\n                            \n                            \n                                selectPatient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, translate: TranslateService, dialog: MatDialog, snack: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/components/patients/patient-list/patient-list.component.ts:42\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Store\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                TranslateService\n\n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        snack\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPatient\n                            \n                            \n                        \n                    \n                \n                \n                    \nnewPatient()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-list/patient-list.component.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-list/patient-list.component.ts:84\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-list/patient-list.component.ts:65\n                            \n                        \n\n\n                \n                    \n                            init PatientListComponent component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSelectRow\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSelectRow(undefined)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-list/patient-list.component.ts:107\n                            \n                        \n\n\n                \n                    \n                            emit the selected patient\nthe datatable component returns an ARRAY of selected\nelements depending on the 'selectionType' setting.\nIn our case just a single patient!\nTherefor emit 0th element of the selection.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectPatient\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectPatient(patient: Patient)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-list/patient-list.component.ts:94\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        patient\n                                                        \n                                                                    Patient\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentActive\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        componentActive:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-list/patient-list.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getPatientPageError)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-list/patient-list.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ids\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ids:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-list/patient-list.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isPending$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isPending$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getPatientPagePending)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-list/patient-list.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        items:     Patient[]\n\n                    \n                \n                    \n                        \n                            Type :     Patient[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-list/patient-list.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            patients\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        patients:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-list/patient-list.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            patients$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        patients$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getAllPatients)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-list/patient-list.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedPatient\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedPatient:     Patient | null\n\n                    \n                \n                    \n                        \n                            Type :     Patient | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-list/patient-list.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy} from '@angular/core';\nimport { MatProgressBar, MatButton } from '@angular/material';\nimport { MatDialogRef, MatDialog, MatSnackBar } from '@angular/material';\nimport { PatientFormComponent } from '../patient-form/patient-form.component';\n\nimport { IPatient as Patient} from '../../../models/patient.model';\n\n/* NGRX */\nimport { Store, select } from '@ngrx/store';\nimport * as fromDashboard from '../../../reducers';\nimport * as patientsActions from '../../../actions/patients.actions';\nimport { Observable } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\nimport { takeWhile } from 'rxjs/operators';\n\n@Component({\n  selector: 'moio-patient-list',\n  templateUrl: './patient-list.component.html',\n  styleUrls: ['./patient-list.component.scss']\n})\nexport class PatientListComponent implements OnInit, OnDestroy {\n  \n  // Used to select patient in the list\n  selectedPatient: Patient | null;\n  componentActive = true;\n\n  ids: string[];\n  \n  // all patients\n  patients$: Observable = this.store.pipe(\n    select(fromDashboard.getAllPatients)\n  );\n\n  // pending action\n  isPending$: Observable = this.store.pipe(\n    select(fromDashboard.getPatientPagePending)\n  );\n\n  // get error status\n  errorMessage$: Observable = this.store.pipe(\n    select(fromDashboard.getPatientPageError)\n  );\n\n  /**\n   * constructor\n   * @param store Store\n   * @param translate TranslateService\n   */\n  constructor(\n    private store: Store, \n    private translate: TranslateService,\n    private dialog: MatDialog,\n    private snack: MatSnackBar) {\n\n      this.translate.setDefaultLang('de');\n\n  }\n\n  public items: Patient[];\n  patients: Observable;\n\n  /**\n   * init PatientListComponent component\n   */\n  ngOnInit(): void {\n\n    this.store.dispatch(new patientsActions.LoadPatients());\n\n    this.patients = this.store.pipe(select(fromDashboard.getAllPatients)) as Observable;\n\n    this.store.pipe(select(fromDashboard.getPatientsIds))\n    .subscribe((ids: string[]) => this.ids = ids);\n\n    // Subscribe here because it does not use an async pipe\n    this.store.pipe(\n      select(fromDashboard.getSelectedPatient),\n      takeWhile(() => this.componentActive)\n    ).subscribe(\n      currentPatient => this.selectedPatient = currentPatient\n    );\n  }\n\n  // unsubscribe from the observable\n  ngOnDestroy(): void {\n    this.componentActive = false;\n  }\n\n  // Create Patient action\n  newPatient(): void {\n    this.store.dispatch(new patientsActions.InitializePatient());\n  }\n\n  // Select patient action\n  selectPatient(patient: Patient): void {\n    this.store.dispatch(new patientsActions.SelectPatient(patient));\n  }\n\n  /**\n   * emit the selected patient\n   * the datatable component returns an ARRAY of selected\n   * elements depending on the 'selectionType' setting.\n   * In our case just a single patient!\n   * Therefor emit 0th element of the selection.\n   *\n   * @param selected Patient first element of array\n   */\n  onSelectRow({selected}) {\n    // this.patientSelected.emit(selected[0]);\n    const patient = selected[0];\n    this.store.dispatch(new patientsActions.SelectPatient(patient));\n    // this.store.dispatch(new patientsActions.LoadPatientUsers(patient.id));\n    \n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n    \n      \n        {{ row?.firstname }} {{ row?.lastname }}\n      \n    \n    \n      \n        {{ row?.device.serial_no }}\n      \n    \n    \n      \n        {{ row?.users_count }}\n      \n    \n  \n \n    \n\n    \n                \n                    ./patient-list.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ row?.firstname }} {{ row?.lastname }}                            {{ row?.device.serial_no }}                            {{ row?.users_count }}             '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'PatientListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PatientsComponent.html":{"url":"components/PatientsComponent.html","title":"component - PatientsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PatientsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/components/patients/patients.component.ts\n\n\n    \n        Description\n    \n    \n        contains basic page layout for the\npatients section\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-patients-page\n            \n\n\n\n\n            \n                templateUrl\n                ./patients.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedPatientId$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openPopUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, translate: TranslateService, dialog: MatDialog, snack: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/components/patients/patients.component.ts:23\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Store\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        snack\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openPopUp\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenPopUp()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patients.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedPatientId$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedPatientId$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getSelectedPatientId)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patients.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport * as fromDashboard from '../../reducers';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { MatDialogRef, MatDialog, MatSnackBar } from '@angular/material';\n\nimport { PatientFormComponent } from './patient-form/patient-form.component';\n\n/**\n * contains basic page layout for the\n * patients section\n */\n@Component({\n  selector: 'moio-patients-page',\n  templateUrl: './patients.component.html'\n})\nexport class PatientsComponent {\n\n  // get selected patient id\n  selectedPatientId$: Observable = this.store.pipe(\n    select(fromDashboard.getSelectedPatientId)\n  );\n\n  /**\n   * constructor\n   * @param store Store\n   */\n  constructor(\n    private store: Store,\n    private translate: TranslateService,\n    private dialog: MatDialog,\n    private snack: MatSnackBar) {\n\n  }\n\n   //add appPatient\n   openPopUp() { \n    let title = this.translate.instant('PatientFormTitle');\n    let dialogRef: MatDialogRef = this.dialog.open(PatientFormComponent, {\n      width: '720px',\n      disableClose: true,\n      data: { title: title },\n      id: 'patientCreationForm'\n    });\n  }\n}\n\n    \n\n    \n        \n  add{{'Create' | translate}}\n -->\n\n\n  \n    \n  \n  \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  add{{\\'Create\\' | translate}} -->                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'PatientsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PatientsEffects.html":{"url":"injectables/PatientsEffects.html","title":"injectable - PatientsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PatientsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/effects/patients.effects.ts\n        \n\n            \n                Description\n            \n            \n                patients effects\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createPatient$\n                            \n                            \n                                createPatientSuccess$\n                            \n                            \n                                DismissPatientFormDialog\n                            \n                            \n                                editPatient$\n                            \n                            \n                                loadPatients\n                            \n                            \n                                popUpPatientForm$\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, patientsService: PatientsService, router: Router, store: Store, snackBar: MatSnackBar, translate: TranslateService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/effects/patients.effects.ts:179\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientsService\n                                                  \n                                                        \n                                                                    PatientsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createPatient$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        createPatient$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(PatientsActions.PatientsActionTypes.CreatePatient),\n      map(action => action.payload.patient),\n      exhaustMap((patientData: IPatient) => {\n\n        return this.patientsService.createPatient(patientData)\n          .pipe(\n            // delay(2000),\n            map(patient => {\n              console.log(patient);\n              return new PatientsApiActions.CreatePatientSuccess({patient});\n            }),\n            catchError(httpResponse => {\n              console.log(httpResponse);\n              const messages = httpResponse.statusText.toLowerCase();\n\n              return of(new PatientsApiActions.CreatePatientFailure({messages}));\n            })\n          );\n      })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/patients.effects.ts:25\n                            \n                        \n\n                \n                    \n                        effect fired, when the create new patient form is submitted\nsend data to api and handle result\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createPatientSuccess$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        createPatientSuccess$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(PatientsApiActions.PatientsApiActionTypes.CreatePatientSuccess),\n      tap(() => {\n        this.dialog.getDialogById(\"patientCreationForm\").close();\n        this.store.dispatch(new PatientsActions.LoadPatients());\n      })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect({dispatch: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/patients.effects.ts:94\n                            \n                        \n\n                \n                    \n                        observes the CreatePatientSuccess action\nin case create patient succeeds, the form dialog box is closed\nand the patients list is shown\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DismissPatientFormDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DismissPatientFormDialog:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(PatientsActions.PatientsActionTypes.DismissPatientFormDialog),\n      map(() => {\n        this.dialog.getDialogById('patientCreationForm').close();\n      })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect({dispatch: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/patients.effects.ts:173\n                            \n                        \n\n                \n                    \n                        effect to dismiss the dialog for adding patient details\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editPatient$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editPatient$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$.pipe(\n    ofType(PatientsActions.PatientsActionTypes.EditPatient),\n    map(action => action.payload),\n    exhaustMap((patient: IPatient) => {\n\n      return this.patientsService.updatePatient(patient)\n        .pipe(\n          map((savedPatient: IPatient) => {\n            this.store.dispatch(new PatientsActions.DismissEditPatient());\n            return new PatientsApiActions.EditPatientSuccess({patient: savedPatient});\n          }),\n          catchError(httpError => {\n            console.log(httpError);\n              const message = httpError.statusText.toLowerCase();\n\n              const snackBarRef = this.snackBar.open(this.translate.instant(message), this.translate.instant('Retry'), {\n                duration: 10000\n              });\n\n              snackBarRef.afterDismissed().subscribe(snackBarDismiss => {\n\n                if (snackBarDismiss.dismissedByAction){\n                  this.store.dispatch(new PatientsActions.EditPatient(patient));\n                } else {\n                  this.router.navigate(['/dashboard/patients']);\n                }\n              });\n\n              return of(new PatientsApiActions.LoadPatientUsersFailure({message}));\n            })\n        );\n    })\n  )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/patients.effects.ts:52\n                            \n                        \n\n                \n                    \n                        send patient data to api and handle result\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadPatients\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadPatients:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(PatientsActions.PatientsActionTypes.LoadPatients),\n      exhaustMap(() => {\n\n        return this.patientsService.getPatients()\n          .pipe(\n            //delay(2000),\n            map((patients: IPatient[]) => {\n              console.log(patients);\n\n              for (let key in patients){\n                const patient = patients[key];\n                patient[\"users_count\"] = patient.users.length;\n              }\n\n              return new PatientsApiActions.LoadPatientsSuccess({patients});\n            }),\n            catchError(httpError => {\n              const message = httpError.statusText.toLowerCase();\n\n              const snackBarRef = this.snackBar.open(this.translate.instant(message), this.translate.instant('Retry'), {\n                duration: 10000\n              });\n\n              snackBarRef.afterDismissed().subscribe(snackBarDismiss => {\n\n                if (snackBarDismiss.dismissedByAction){\n                  this.store.dispatch(new PatientsActions.LoadPatients());\n                } else {\n                  this.router.navigate(['/dashboard']);\n                }\n              });\n\n              return of(new PatientsApiActions.LoadPatientsFailure({message}));\n            })\n          );\n      })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/patients.effects.ts:107\n                            \n                        \n\n                \n                    \n                        effect for loading patients\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popUpPatientForm$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popUpPatientForm$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(PatientsActions.PatientsActionTypes.CreatePatientFormDialog),\n      exhaustMap(() => {\n        const title = 'Creating a new patient';\n        const dialogRef: MatDialogRef = this.dialog.open(PatientFormComponent, {\n          width: '720px',\n          disableClose: true,\n          data: { title: title }\n        });\n        \n        return dialogRef.afterClosed();\n      })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/patients.effects.ts:151\n                            \n                        \n\n                \n                    \n                        show a dialog form for patient details as a pop up\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        snackBar:     MatSnackBar\n\n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/patients.effects.ts:195\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { PatientsApiActions, PatientsActions } from '../actions';\nimport { catchError, exhaustMap, map, tap, delay } from 'rxjs/operators';\nimport { IPatient } from '../models/patient.model';\nimport { PatientsService } from '../services/patients.service';\nimport { of } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MatDialogRef, MatDialog, MatSnackBar } from '@angular/material';\nimport { PatientFormComponent } from '../components/patients/patient-form/patient-form.component';\n\n/**\n * patients effects\n */\n@Injectable()\nexport class PatientsEffects {\n\n  /**\n   * effect fired, when the create new patient form is submitted\n   * send data to api and handle result\n   */\n  @Effect()\n  createPatient$ = this.actions$\n    .pipe(\n      ofType(PatientsActions.PatientsActionTypes.CreatePatient),\n      map(action => action.payload.patient),\n      exhaustMap((patientData: IPatient) => {\n\n        return this.patientsService.createPatient(patientData)\n          .pipe(\n            // delay(2000),\n            map(patient => {\n              console.log(patient);\n              return new PatientsApiActions.CreatePatientSuccess({patient});\n            }),\n            catchError(httpResponse => {\n              console.log(httpResponse);\n              const messages = httpResponse.statusText.toLowerCase();\n\n              return of(new PatientsApiActions.CreatePatientFailure({messages}));\n            })\n          );\n      })\n    );\n\n  /**\n   * send patient data to api and handle result\n   */\n  @Effect()\n  editPatient$ = this.actions$.pipe(\n    ofType(PatientsActions.PatientsActionTypes.EditPatient),\n    map(action => action.payload),\n    exhaustMap((patient: IPatient) => {\n\n      return this.patientsService.updatePatient(patient)\n        .pipe(\n          map((savedPatient: IPatient) => {\n            this.store.dispatch(new PatientsActions.DismissEditPatient());\n            return new PatientsApiActions.EditPatientSuccess({patient: savedPatient});\n          }),\n          catchError(httpError => {\n            console.log(httpError);\n              const message = httpError.statusText.toLowerCase();\n\n              const snackBarRef = this.snackBar.open(this.translate.instant(message), this.translate.instant('Retry'), {\n                duration: 10000\n              });\n\n              snackBarRef.afterDismissed().subscribe(snackBarDismiss => {\n\n                if (snackBarDismiss.dismissedByAction){\n                  this.store.dispatch(new PatientsActions.EditPatient(patient));\n                } else {\n                  this.router.navigate(['/dashboard/patients']);\n                }\n              });\n\n              return of(new PatientsApiActions.LoadPatientUsersFailure({message}));\n            })\n        );\n    })\n  );\n\n  /**\n   * observes the CreatePatientSuccess action\n   * in case create patient succeeds, the form dialog box is closed\n   * and the patients list is shown\n   */\n  @Effect({\n    dispatch: false\n  })\n  createPatientSuccess$ = this.actions$\n    .pipe(\n      ofType(PatientsApiActions.PatientsApiActionTypes.CreatePatientSuccess),\n      tap(() => {\n        this.dialog.getDialogById(\"patientCreationForm\").close();\n        this.store.dispatch(new PatientsActions.LoadPatients());\n      })\n    );\n\n  /**\n   * effect for loading patients\n   */\n  @Effect()\n  loadPatients = this.actions$\n    .pipe(\n      ofType(PatientsActions.PatientsActionTypes.LoadPatients),\n      exhaustMap(() => {\n\n        return this.patientsService.getPatients()\n          .pipe(\n            //delay(2000),\n            map((patients: IPatient[]) => {\n              console.log(patients);\n\n              for (let key in patients){\n                const patient = patients[key];\n                patient[\"users_count\"] = patient.users.length;\n              }\n\n              return new PatientsApiActions.LoadPatientsSuccess({patients});\n            }),\n            catchError(httpError => {\n              const message = httpError.statusText.toLowerCase();\n\n              const snackBarRef = this.snackBar.open(this.translate.instant(message), this.translate.instant('Retry'), {\n                duration: 10000\n              });\n\n              snackBarRef.afterDismissed().subscribe(snackBarDismiss => {\n\n                if (snackBarDismiss.dismissedByAction){\n                  this.store.dispatch(new PatientsActions.LoadPatients());\n                } else {\n                  this.router.navigate(['/dashboard']);\n                }\n              });\n\n              return of(new PatientsApiActions.LoadPatientsFailure({message}));\n            })\n          );\n      })\n    );\n\n  /**\n   * show a dialog form for patient details as a pop up\n   */\n  @Effect()\n  popUpPatientForm$ = this.actions$\n    .pipe(\n      ofType(PatientsActions.PatientsActionTypes.CreatePatientFormDialog),\n      exhaustMap(() => {\n        const title = 'Creating a new patient';\n        const dialogRef: MatDialogRef = this.dialog.open(PatientFormComponent, {\n          width: '720px',\n          disableClose: true,\n          data: { title: title }\n        });\n        \n        return dialogRef.afterClosed();\n      })\n    );\n\n\n  /**\n   * effect to dismiss the dialog for adding patient details\n   */\n  @Effect({\n    dispatch: false\n  })\n  DismissPatientFormDialog = this.actions$\n    .pipe(\n      ofType(PatientsActions.PatientsActionTypes.DismissPatientFormDialog),\n      map(() => {\n        this.dialog.getDialogById('patientCreationForm').close();\n      })\n    );\n\n  /**\n   * constructor\n   *\n   * @param actions$\n   * @param patientsService\n   * @param router\n   * @param modalController\n   * @param store\n   */\n  constructor(\n    private actions$: Actions,\n    private patientsService: PatientsService,\n    private router: Router,\n    private store: Store,\n    public snackBar: MatSnackBar,\n    private translate: TranslateService,\n    private dialog: MatDialog) {\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PatientsService.html":{"url":"injectables/PatientsService.html","title":"injectable - PatientsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PatientsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/services/patients.service.ts\n        \n\n            \n                Description\n            \n            \n                patient service\nencapsulates api interactions for\nworking with 'patients'\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createPatient\n                            \n                            \n                                deletePatient\n                            \n                            \n                                editPatient\n                            \n                            \n                                getPatients\n                            \n                            \n                                updatePatient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/services/patients.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createPatient\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreatePatient(patient: IPatient)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/services/patients.service.ts:35\n                            \n                        \n\n\n                \n                    \n                            create a new patient\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        patient\n                                                        \n                                                                    IPatient\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                IPatient\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletePatient\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeletePatient(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/services/patients.service.ts:43\n                            \n                        \n\n\n                \n                    \n                            delete a patient\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                patient id\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editPatient\n                            \n                            \n                        \n                    \n                \n                \n                    \neditPatient(changed: Update)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/services/patients.service.ts:59\n                            \n                        \n\n\n                \n                    \n                            edit a patient\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changed\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPatients\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPatients()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/services/patients.service.ts:26\n                            \n                        \n\n\n                \n                    \n                            get all patients from the moio-cloud api\n\n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatePatient\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdatePatient(patient: IPatient)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/services/patients.service.ts:51\n                            \n                        \n\n\n                \n                    \n                            update a patient\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        patient\n                                                        \n                                                                    IPatient\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                object:IPatient\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { IPatient } from '../models/patient.model';\nimport { environment } from '../../../environments/environment';\nimport { Update } from '@ngrx/entity';\n\n/**\n * patient service\n * encapsulates api interactions for\n * working with 'patients'\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatientsService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  /**\n   * get all patients from the moio-cloud api\n   */\n  getPatients(): Observable {\n    console.log('loading patients');\n    return this.http.get(`${environment.apiHost}/api/patients`);\n  }\n\n  /**\n   * create a new patient\n   * @param patient IPatient\n   */\n  createPatient(patient: IPatient): Observable {\n    return this.http.post(`${environment.apiHost}/api/patients`, patient);\n  }\n\n  /**\n   * delete a patient\n   * @param id patient id\n   */\n  deletePatient(id: number): Observable {\n    return this.http.delete(`${environment.apiHost}/api/patients/${id}`);\n  }\n\n  /**\n   * update a patient\n   * @param patient object:IPatient\n   */\n  updatePatient(patient: IPatient): Observable {\n    return this.http.put(`${environment.apiHost}/api/patients/${patient.id}`, patient);\n  }\n\n  /**\n   * edit a patient\n   * @param changed\n   */\n  editPatient(changed: Update): Observable {\n    return this.http\n      .put(`${environment.apiHost}/api/patients/${changed.id}`, {...changed.changes});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PopUpNursingHomeForm.html":{"url":"classes/PopUpNursingHomeForm.html","title":"class - PopUpNursingHomeForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PopUpNursingHomeForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/nursing-homes.actions.ts\n        \n\n            \n                Description\n            \n            \n                action to pop up nursingHome form\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : NursingHomesActionTypes.PopUpNursingHomeForm\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes.actions.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { NursingHome } from '../models/nursing-home.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum NursingHomesActionTypes {\n  SelectNursingHome = '[NursingHome] Select Current NursingHome',\n  ClearSelectedNursingHome = '[NursingHome] Clear Current NursingHome',\n  InitializeNursingHome = '[NursingHome] Initialize Current NursingHome',\n  PopUpNursingHomeForm = '[NursingHome] Pop Up NursingHome Form',\n  CreateNursingHome = '[NursingHome] Create NursingHome',\n  DismissPoppedUpNursingHomeForm = '[NursingHome] Dismiss Create NursingHome',\n  LoadNursingHomes = '[NursingHome] Load Nursing Homes',\n  SearchNursingHome = '[NursingHome] Search NursingHome',\n  SearchNursingHomeComplete = '[NursingHome] Search NursingHome Complete',\n  EditNursingHome = '[NursingHome] Edit NursingHome',\n  DismissEditNursingHome = '[NursingHome] Dismiss Edit NursingHome',\n  ResetNursingHomesState = '[NursingHomes] Reset NursingHomes State'\n}\n\n\n/**\n * Select nursingHome Action\n */\nexport class SelectNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SelectNursingHome;\n\n  constructor(public payload: NursingHome) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.ClearSelectedNursingHome;\n}\n\n/**\n * Initialize nursingHome Action\n */\nexport class InitializeNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.InitializeNursingHome;\n}\n\n/**\n * action to pop up nursingHome form\n */\nexport class PopUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.PopUpNursingHomeForm;\n}\n\n/**\n * Create nursingHome Action\n */\nexport class CreateNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.CreateNursingHome;\n\n  constructor(public payload: { nursingHome: NursingHome }) { }\n}\n\n/**\n * CreateNursingHome Dialog window dismissed\n */\nexport class DismissPoppedUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.DismissPoppedUpNursingHomeForm;\n}\n\n/**\n * Load nursingHomes Action\n */\nexport class LoadNursingHomes implements Action {\n  readonly type = NursingHomesActionTypes.LoadNursingHomes;\n}\n\n/**\n * Search nursingHome Action\n */\nexport class SearchNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHome;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search nursingHome complete Action\n */\nexport class SearchNursingHomeComplete implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHomeComplete;\n\n  constructor(public payload: NursingHome[]) { }\n}\n\n/**\n * action to submit and edit nursingHome\n */\nexport class EditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.EditNursingHome;\n\n  constructor(public payload: Update) {\n  }\n}\n\n/**\n * NursingHome Edit dismissed action\n */\nexport class DismissEditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.DismissEditNursingHome;\n}\n\n/**\n * reset the nursingHome state\n */\nexport class ResetNursingHomesState implements Action {\n  readonly type = NursingHomesActionTypes.ResetNursingHomesState;\n}\n\n/**\n * Export union of nursingHome Action\n */\nexport type NursingHomesActionsUnion\n  = SelectNursingHome\n  | ClearSelectedNursingHome\n  | InitializeNursingHome\n  | PopUpNursingHomeForm\n  | CreateNursingHome\n  | DismissPoppedUpNursingHomeForm\n  | LoadNursingHomes\n  | SearchNursingHome\n  | SearchNursingHomeComplete\n  | EditNursingHome\n  | DismissEditNursingHome\n  | ResetNursingHomesState;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetNursingHomesState.html":{"url":"classes/ResetNursingHomesState.html","title":"class - ResetNursingHomesState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetNursingHomesState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/nursing-homes.actions.ts\n        \n\n            \n                Description\n            \n            \n                reset the nursingHome state\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : NursingHomesActionTypes.ResetNursingHomesState\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes.actions.ts:113\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { NursingHome } from '../models/nursing-home.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum NursingHomesActionTypes {\n  SelectNursingHome = '[NursingHome] Select Current NursingHome',\n  ClearSelectedNursingHome = '[NursingHome] Clear Current NursingHome',\n  InitializeNursingHome = '[NursingHome] Initialize Current NursingHome',\n  PopUpNursingHomeForm = '[NursingHome] Pop Up NursingHome Form',\n  CreateNursingHome = '[NursingHome] Create NursingHome',\n  DismissPoppedUpNursingHomeForm = '[NursingHome] Dismiss Create NursingHome',\n  LoadNursingHomes = '[NursingHome] Load Nursing Homes',\n  SearchNursingHome = '[NursingHome] Search NursingHome',\n  SearchNursingHomeComplete = '[NursingHome] Search NursingHome Complete',\n  EditNursingHome = '[NursingHome] Edit NursingHome',\n  DismissEditNursingHome = '[NursingHome] Dismiss Edit NursingHome',\n  ResetNursingHomesState = '[NursingHomes] Reset NursingHomes State'\n}\n\n\n/**\n * Select nursingHome Action\n */\nexport class SelectNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SelectNursingHome;\n\n  constructor(public payload: NursingHome) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.ClearSelectedNursingHome;\n}\n\n/**\n * Initialize nursingHome Action\n */\nexport class InitializeNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.InitializeNursingHome;\n}\n\n/**\n * action to pop up nursingHome form\n */\nexport class PopUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.PopUpNursingHomeForm;\n}\n\n/**\n * Create nursingHome Action\n */\nexport class CreateNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.CreateNursingHome;\n\n  constructor(public payload: { nursingHome: NursingHome }) { }\n}\n\n/**\n * CreateNursingHome Dialog window dismissed\n */\nexport class DismissPoppedUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.DismissPoppedUpNursingHomeForm;\n}\n\n/**\n * Load nursingHomes Action\n */\nexport class LoadNursingHomes implements Action {\n  readonly type = NursingHomesActionTypes.LoadNursingHomes;\n}\n\n/**\n * Search nursingHome Action\n */\nexport class SearchNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHome;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search nursingHome complete Action\n */\nexport class SearchNursingHomeComplete implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHomeComplete;\n\n  constructor(public payload: NursingHome[]) { }\n}\n\n/**\n * action to submit and edit nursingHome\n */\nexport class EditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.EditNursingHome;\n\n  constructor(public payload: Update) {\n  }\n}\n\n/**\n * NursingHome Edit dismissed action\n */\nexport class DismissEditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.DismissEditNursingHome;\n}\n\n/**\n * reset the nursingHome state\n */\nexport class ResetNursingHomesState implements Action {\n  readonly type = NursingHomesActionTypes.ResetNursingHomesState;\n}\n\n/**\n * Export union of nursingHome Action\n */\nexport type NursingHomesActionsUnion\n  = SelectNursingHome\n  | ClearSelectedNursingHome\n  | InitializeNursingHome\n  | PopUpNursingHomeForm\n  | CreateNursingHome\n  | DismissPoppedUpNursingHomeForm\n  | LoadNursingHomes\n  | SearchNursingHome\n  | SearchNursingHomeComplete\n  | EditNursingHome\n  | DismissEditNursingHome\n  | ResetNursingHomesState;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPatientsState.html":{"url":"classes/ResetPatientsState.html","title":"class - ResetPatientsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPatientsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients.actions.ts\n        \n\n            \n                Description\n            \n            \n                reset the patient state\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsActionTypes.ResetPatientsState\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:115\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { IPatient } from '../models/patient.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum PatientsActionTypes {\n  SelectPatient = '[Patient] Select Current Patient',\n  ClearSelectedPatient = '[Patient] Clear Current Patient',\n  InitializePatient = '[Patient] Initialize Current Patient',\n  CreatePatientFormDialog = '[Patients] Pop Up Patient Form',\n  CreatePatient = '[Patient] Create Patient',\n  DismissPatientFormDialog = '[Patient] Dismiss Patient Form Dialog',\n  LoadPatients = '[Patient] Load Patients',\n  SearchPatient = '[Patient] Search Patient',\n  SearchPatientComplete = '[Patient] Search Patient Complete',\n  EditPatient = '[Patient] Edit Patient',\n  DismissEditPatient = '[Patient] Dismiss Edit Patient',\n  ResetPatientsState = '[Patients] Reset Patients State',\n  DeletePatient ='[Patients] Delete Patient',\n  LoadPatientUsers = '[User] Load User Patients'\n}\n\n\n/**\n * Select patient Action\n */\nexport class SelectPatient implements Action {\n  readonly type = PatientsActionTypes.SelectPatient;\n\n  constructor(public payload: IPatient) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedPatient implements Action {\n  readonly type = PatientsActionTypes.ClearSelectedPatient;\n}\n\n/**\n * Initialize patient Action\n */\nexport class InitializePatient implements Action {\n  readonly type = PatientsActionTypes.InitializePatient;\n}\n\n/**\n * action to pop up patient form\n */\nexport class CreatePatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.CreatePatientFormDialog;\n}\n\n/**\n * Create patient Action\n */\nexport class CreatePatient implements Action {\n  readonly type = PatientsActionTypes.CreatePatient;\n\n  constructor(public payload: { patient: IPatient }) { }\n}\n\n/**\n * CreatePatient Dialog window dismissed\n */\nexport class DismissPatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.DismissPatientFormDialog;\n}\n\n/**\n * Load patients Action\n */\nexport class LoadPatients implements Action {\n  readonly type = PatientsActionTypes.LoadPatients;\n}\n\n/**\n * Search patient Action\n */\nexport class SearchPatient implements Action {\n  readonly type = PatientsActionTypes.SearchPatient;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search patient complete Action\n */\nexport class SearchPatientComplete implements Action {\n  readonly type = PatientsActionTypes.SearchPatientComplete;\n\n  constructor(public payload: IPatient[]) { }\n}\n\n/**\n * action to submit and edit patient\n */\nexport class EditPatient implements Action {\n  readonly type = PatientsActionTypes.EditPatient;\n\n  constructor(public payload: IPatient) {\n  }\n}\n\n/**\n * Patient Edit dismissed action\n */\nexport class DismissEditPatient implements Action {\n  readonly type = PatientsActionTypes.DismissEditPatient;\n}\n\n/**\n * reset the patient state\n */\nexport class ResetPatientsState implements Action {\n  readonly type = PatientsActionTypes.ResetPatientsState;\n}\n\n/**\n * action to delete a patient\n */\nexport class DeletePatient implements Action {\n  readonly type = PatientsActionTypes.DeletePatient;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load patient users action\n */\nexport class LoadPatientUsers implements Action {\n  readonly type = PatientsActionTypes.LoadPatientUsers;\n  constructor(public payload: number ) { }\n}\n\n\n/**\n * Export union of patient Action\n */\nexport type PatientsActionsUnion\n  = SelectPatient\n  | ClearSelectedPatient\n  | InitializePatient\n  | CreatePatientFormDialog\n  | CreatePatient\n  | DismissPatientFormDialog\n  | LoadPatients\n  | SearchPatient\n  | SearchPatientComplete\n  | EditPatient\n  | DismissEditPatient\n  | ResetPatientsState\n  | LoadPatientUsers;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetUsersState.html":{"url":"classes/ResetUsersState.html","title":"class - ResetUsersState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetUsersState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users.actions.ts\n        \n\n            \n                Description\n            \n            \n                reset the user state\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersActionTypes.ResetUsersState\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:115\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum UsersActionTypes {\n  SelectUser = '[User] Select Current User',\n  ClearSelectedUser = '[User] Clear Current User',\n  InitializeUser = '[User] Initialize Current User',\n  CreateUserFormDialog = '[Users] Pop Up User Form',\n  CreateUser = '[User] Create User',\n  DismissUserFormDialog = '[User] Dismiss User Form Dialog',\n  LoadUsers = '[User] Load Users',\n  SearchUser = '[User] Search User',\n  SearchUserComplete = '[User] Search User Complete',\n  EditUser = '[User] Edit User',\n  DismissEditUser = '[User] Dismiss Edit User',\n  ResetUsersState = '[Users] Reset Users State',\n  DeleteUser = '[Users] Delete User',\n  LoadUserPatients = '[User] Load User Patients'\n}\n\n\n/**\n * Select user Action\n */\nexport class SelectUser implements Action {\n  readonly type = UsersActionTypes.SelectUser;\n\n  constructor(public payload: User) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedUser implements Action {\n  readonly type = UsersActionTypes.ClearSelectedUser;\n}\n\n/**\n * Initialize user Action\n */\nexport class InitializeUser implements Action {\n  readonly type = UsersActionTypes.InitializeUser;\n}\n\n/**\n * action to pop up user form\n */\nexport class CreateUserFormDialog implements Action {\n  readonly type = UsersActionTypes.CreateUserFormDialog;\n}\n\n/**\n * Create user Action\n */\nexport class CreateUser implements Action {\n  readonly type = UsersActionTypes.CreateUser;\n\n  constructor(public payload: { user: User }) { }\n}\n\n/**\n * CreateUser Dialog window dismissed\n */\nexport class DismissUserFormDialog implements Action {\n  readonly type = UsersActionTypes.DismissUserFormDialog;\n}\n\n/**\n * Load users Action\n */\nexport class LoadUsers implements Action {\n  readonly type = UsersActionTypes.LoadUsers;\n}\n\n/**\n * Search user action\n */\nexport class SearchUser implements Action {\n  readonly type = UsersActionTypes.SearchUser;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search user complete action\n */\nexport class SearchUserComplete implements Action {\n  readonly type = UsersActionTypes.SearchUserComplete;\n\n  constructor(public payload: User[]) { }\n}\n\n/**\n * action to submit and edit user\n */\nexport class EditUser implements Action {\n  readonly type = UsersActionTypes.EditUser;\n\n  constructor(public payload: User) {\n  }\n}\n\n/**\n * User Edit dismissed action\n */\nexport class DismissEditUser implements Action {\n  readonly type = UsersActionTypes.DismissEditUser;\n}\n\n/**\n * reset the user state\n */\nexport class ResetUsersState implements Action {\n  readonly type = UsersActionTypes.ResetUsersState;\n}\n\n/**\n * action to delete a user\n */\nexport class DeleteUser implements Action {\n  readonly type = UsersActionTypes.DeleteUser;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load user patients action\n */\nexport class LoadUserPatients implements Action {\n  readonly type = UsersActionTypes.LoadUserPatients;\n  constructor(public payload: number ) { }\n}\n\n/**\n * Export union of user Action\n */\nexport type UsersActionsUnion\n  = SelectUser\n  | ClearSelectedUser\n  | InitializeUser\n  | CreateUserFormDialog\n  | CreateUser\n  | DismissUserFormDialog\n  | LoadUsers\n  | SearchUser\n  | SearchUserComplete\n  | EditUser\n  | DismissEditUser\n  | ResetUsersState\n  | LoadUserPatients;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoutePartsService.html":{"url":"injectables/RoutePartsService.html","title":"injectable - RoutePartsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoutePartsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/route-parts.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                routeParts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateRouteParts\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/route-parts.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            generateRouteParts\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenerateRouteParts(snapshot: ActivatedRouteSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/route-parts.service.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snapshot\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     IRoutePart[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/route-parts.service.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            routeParts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        routeParts:     IRoutePart[]\n\n                    \n                \n                    \n                        \n                            Type :     IRoutePart[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/route-parts.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, OnInit } from '@angular/core';\nimport { Router, ActivatedRouteSnapshot, Params } from '@angular/router';\n\ninterface IRoutePart {\n  title: string;\n  breadcrumb: string;\n  params?: Params;\n  url: string;\n  urlSegments: any[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoutePartsService implements OnInit {\n  public routeParts: IRoutePart[];\n\n  constructor(private router: Router) {\n  }\n\n  ngOnInit() {\n  }\n\n  generateRouteParts(snapshot: ActivatedRouteSnapshot): IRoutePart[] {\n    let routeParts = [];\n    if (snapshot) {\n      if (snapshot.firstChild) {\n        routeParts = routeParts.concat(this.generateRouteParts(snapshot.firstChild));\n      }\n      if (snapshot.data['title'] && snapshot.url.length) {\n        // console.log(snapshot.data['title'], snapshot.url)\n        routeParts.push({\n          title: snapshot.data['title'],\n          breadcrumb: snapshot.data['breadcrumb'],\n          url: snapshot.url[0].path,\n          urlSegments: snapshot.url,\n          params: snapshot.params\n        });\n      }\n    }\n    return routeParts;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ScrollToDirective.html":{"url":"directives/ScrollToDirective.html","title":"directive - ScrollToDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ScrollToDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/directives/scroll-to.directive.ts\n        \n\n            \n                Description\n            \n            \n                scroll to directive\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [scrollTo]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                elmID\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                currentYPosition\n                            \n                            \n                                elmYPosition\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elmID: string, el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/directives/scroll-to.directive.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elmID\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nclick()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/directives/scroll-to.directive.ts:43\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentYPosition\n                            \n                            \n                        \n                    \n                \n                \n                    \ncurrentYPosition()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/directives/scroll-to.directive.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            elmYPosition\n                            \n                            \n                        \n                    \n                \n                \n                    \nelmYPosition(eID)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/directives/scroll-to.directive.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eID\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/directives/scroll-to.directive.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elmID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        elmID:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Attribute('scrollTo')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/directives/scroll-to.directive.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, Attribute, OnInit, HostListener } from '@angular/core';\n\n/**\n * scroll to directive\n * @deprecated (cvb) not sure if we need it\n */\n@Directive({selector: '[scrollTo]'})\nexport class ScrollToDirective implements OnInit {\n  constructor(@Attribute('scrollTo') public elmID: string, private el: ElementRef) {\n  }\n\n  ngOnInit() {\n  }\n\n  currentYPosition() {\n    // Firefox, Chrome, Opera, Safari\n    if (self.pageYOffset) {\n      return self.pageYOffset;\n    }\n    // Internet Explorer 6 - standards mode\n    if (document.documentElement && document.documentElement.scrollTop) {\n      return document.documentElement.scrollTop;\n    }\n    // Internet Explorer 6, 7 and 8\n    if (document.body.scrollTop) {\n      return document.body.scrollTop;\n    }\n    return 0;\n  }\n\n  elmYPosition(eID) {\n    const elm = document.getElementById(eID);\n    let y = elm.offsetTop;\n    let node: any = elm;\n    while (node.offsetParent && node.offsetParent !== document.body) {\n      node = node.offsetParent;\n      y += node.offsetTop;\n    }\n    return y;\n  }\n\n  @HostListener('click', ['$event'])\n  smoothScroll() {\n    if (!this.elmID) {\n      return;\n    }\n    const startY = this.currentYPosition();\n    const stopY = this.elmYPosition(this.elmID);\n    const distance = stopY > startY ? stopY - startY : startY - stopY;\n\n    if (distance = 20) {\n      speed = 20;\n    }\n\n    const step = Math.round(distance / 25);\n    let leapY = stopY > startY ? startY + step : startY - step;\n    let timer = 0;\n\n    if (stopY > startY) {\n      for (let i = startY; i  stopY) {\n          leapY = stopY;\n        }\n        timer++;\n      }\n      return;\n    }\n\n    for (let i = startY; i > stopY; i -= step) {\n      setTimeout('window.scrollTo(0, ' + leapY + ')', timer * speed);\n      leapY -= step;\n      if (leapY \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchNursingHome.html":{"url":"classes/SearchNursingHome.html","title":"class - SearchNursingHome","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchNursingHome\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/nursing-homes.actions.ts\n        \n\n            \n                Description\n            \n            \n                Search nursingHome Action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/nursing-homes.actions.ts:78\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes.actions.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : NursingHomesActionTypes.SearchNursingHome\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes.actions.ts:78\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { NursingHome } from '../models/nursing-home.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum NursingHomesActionTypes {\n  SelectNursingHome = '[NursingHome] Select Current NursingHome',\n  ClearSelectedNursingHome = '[NursingHome] Clear Current NursingHome',\n  InitializeNursingHome = '[NursingHome] Initialize Current NursingHome',\n  PopUpNursingHomeForm = '[NursingHome] Pop Up NursingHome Form',\n  CreateNursingHome = '[NursingHome] Create NursingHome',\n  DismissPoppedUpNursingHomeForm = '[NursingHome] Dismiss Create NursingHome',\n  LoadNursingHomes = '[NursingHome] Load Nursing Homes',\n  SearchNursingHome = '[NursingHome] Search NursingHome',\n  SearchNursingHomeComplete = '[NursingHome] Search NursingHome Complete',\n  EditNursingHome = '[NursingHome] Edit NursingHome',\n  DismissEditNursingHome = '[NursingHome] Dismiss Edit NursingHome',\n  ResetNursingHomesState = '[NursingHomes] Reset NursingHomes State'\n}\n\n\n/**\n * Select nursingHome Action\n */\nexport class SelectNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SelectNursingHome;\n\n  constructor(public payload: NursingHome) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.ClearSelectedNursingHome;\n}\n\n/**\n * Initialize nursingHome Action\n */\nexport class InitializeNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.InitializeNursingHome;\n}\n\n/**\n * action to pop up nursingHome form\n */\nexport class PopUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.PopUpNursingHomeForm;\n}\n\n/**\n * Create nursingHome Action\n */\nexport class CreateNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.CreateNursingHome;\n\n  constructor(public payload: { nursingHome: NursingHome }) { }\n}\n\n/**\n * CreateNursingHome Dialog window dismissed\n */\nexport class DismissPoppedUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.DismissPoppedUpNursingHomeForm;\n}\n\n/**\n * Load nursingHomes Action\n */\nexport class LoadNursingHomes implements Action {\n  readonly type = NursingHomesActionTypes.LoadNursingHomes;\n}\n\n/**\n * Search nursingHome Action\n */\nexport class SearchNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHome;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search nursingHome complete Action\n */\nexport class SearchNursingHomeComplete implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHomeComplete;\n\n  constructor(public payload: NursingHome[]) { }\n}\n\n/**\n * action to submit and edit nursingHome\n */\nexport class EditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.EditNursingHome;\n\n  constructor(public payload: Update) {\n  }\n}\n\n/**\n * NursingHome Edit dismissed action\n */\nexport class DismissEditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.DismissEditNursingHome;\n}\n\n/**\n * reset the nursingHome state\n */\nexport class ResetNursingHomesState implements Action {\n  readonly type = NursingHomesActionTypes.ResetNursingHomesState;\n}\n\n/**\n * Export union of nursingHome Action\n */\nexport type NursingHomesActionsUnion\n  = SelectNursingHome\n  | ClearSelectedNursingHome\n  | InitializeNursingHome\n  | PopUpNursingHomeForm\n  | CreateNursingHome\n  | DismissPoppedUpNursingHomeForm\n  | LoadNursingHomes\n  | SearchNursingHome\n  | SearchNursingHomeComplete\n  | EditNursingHome\n  | DismissEditNursingHome\n  | ResetNursingHomesState;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchNursingHomeComplete.html":{"url":"classes/SearchNursingHomeComplete.html","title":"class - SearchNursingHomeComplete","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchNursingHomeComplete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/nursing-homes.actions.ts\n        \n\n            \n                Description\n            \n            \n                Search nursingHome complete Action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: NursingHome[])\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/nursing-homes.actions.ts:87\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    NursingHome[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     NursingHome[]\n\n                    \n                \n                    \n                        \n                            Type :     NursingHome[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes.actions.ts:89\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : NursingHomesActionTypes.SearchNursingHomeComplete\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes.actions.ts:87\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { NursingHome } from '../models/nursing-home.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum NursingHomesActionTypes {\n  SelectNursingHome = '[NursingHome] Select Current NursingHome',\n  ClearSelectedNursingHome = '[NursingHome] Clear Current NursingHome',\n  InitializeNursingHome = '[NursingHome] Initialize Current NursingHome',\n  PopUpNursingHomeForm = '[NursingHome] Pop Up NursingHome Form',\n  CreateNursingHome = '[NursingHome] Create NursingHome',\n  DismissPoppedUpNursingHomeForm = '[NursingHome] Dismiss Create NursingHome',\n  LoadNursingHomes = '[NursingHome] Load Nursing Homes',\n  SearchNursingHome = '[NursingHome] Search NursingHome',\n  SearchNursingHomeComplete = '[NursingHome] Search NursingHome Complete',\n  EditNursingHome = '[NursingHome] Edit NursingHome',\n  DismissEditNursingHome = '[NursingHome] Dismiss Edit NursingHome',\n  ResetNursingHomesState = '[NursingHomes] Reset NursingHomes State'\n}\n\n\n/**\n * Select nursingHome Action\n */\nexport class SelectNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SelectNursingHome;\n\n  constructor(public payload: NursingHome) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.ClearSelectedNursingHome;\n}\n\n/**\n * Initialize nursingHome Action\n */\nexport class InitializeNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.InitializeNursingHome;\n}\n\n/**\n * action to pop up nursingHome form\n */\nexport class PopUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.PopUpNursingHomeForm;\n}\n\n/**\n * Create nursingHome Action\n */\nexport class CreateNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.CreateNursingHome;\n\n  constructor(public payload: { nursingHome: NursingHome }) { }\n}\n\n/**\n * CreateNursingHome Dialog window dismissed\n */\nexport class DismissPoppedUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.DismissPoppedUpNursingHomeForm;\n}\n\n/**\n * Load nursingHomes Action\n */\nexport class LoadNursingHomes implements Action {\n  readonly type = NursingHomesActionTypes.LoadNursingHomes;\n}\n\n/**\n * Search nursingHome Action\n */\nexport class SearchNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHome;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search nursingHome complete Action\n */\nexport class SearchNursingHomeComplete implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHomeComplete;\n\n  constructor(public payload: NursingHome[]) { }\n}\n\n/**\n * action to submit and edit nursingHome\n */\nexport class EditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.EditNursingHome;\n\n  constructor(public payload: Update) {\n  }\n}\n\n/**\n * NursingHome Edit dismissed action\n */\nexport class DismissEditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.DismissEditNursingHome;\n}\n\n/**\n * reset the nursingHome state\n */\nexport class ResetNursingHomesState implements Action {\n  readonly type = NursingHomesActionTypes.ResetNursingHomesState;\n}\n\n/**\n * Export union of nursingHome Action\n */\nexport type NursingHomesActionsUnion\n  = SelectNursingHome\n  | ClearSelectedNursingHome\n  | InitializeNursingHome\n  | PopUpNursingHomeForm\n  | CreateNursingHome\n  | DismissPoppedUpNursingHomeForm\n  | LoadNursingHomes\n  | SearchNursingHome\n  | SearchNursingHomeComplete\n  | EditNursingHome\n  | DismissEditNursingHome\n  | ResetNursingHomesState;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchPatient.html":{"url":"classes/SearchPatient.html","title":"class - SearchPatient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchPatient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients.actions.ts\n        \n\n            \n                Description\n            \n            \n                Search patient Action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/patients.actions.ts:80\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsActionTypes.SearchPatient\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:80\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { IPatient } from '../models/patient.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum PatientsActionTypes {\n  SelectPatient = '[Patient] Select Current Patient',\n  ClearSelectedPatient = '[Patient] Clear Current Patient',\n  InitializePatient = '[Patient] Initialize Current Patient',\n  CreatePatientFormDialog = '[Patients] Pop Up Patient Form',\n  CreatePatient = '[Patient] Create Patient',\n  DismissPatientFormDialog = '[Patient] Dismiss Patient Form Dialog',\n  LoadPatients = '[Patient] Load Patients',\n  SearchPatient = '[Patient] Search Patient',\n  SearchPatientComplete = '[Patient] Search Patient Complete',\n  EditPatient = '[Patient] Edit Patient',\n  DismissEditPatient = '[Patient] Dismiss Edit Patient',\n  ResetPatientsState = '[Patients] Reset Patients State',\n  DeletePatient ='[Patients] Delete Patient',\n  LoadPatientUsers = '[User] Load User Patients'\n}\n\n\n/**\n * Select patient Action\n */\nexport class SelectPatient implements Action {\n  readonly type = PatientsActionTypes.SelectPatient;\n\n  constructor(public payload: IPatient) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedPatient implements Action {\n  readonly type = PatientsActionTypes.ClearSelectedPatient;\n}\n\n/**\n * Initialize patient Action\n */\nexport class InitializePatient implements Action {\n  readonly type = PatientsActionTypes.InitializePatient;\n}\n\n/**\n * action to pop up patient form\n */\nexport class CreatePatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.CreatePatientFormDialog;\n}\n\n/**\n * Create patient Action\n */\nexport class CreatePatient implements Action {\n  readonly type = PatientsActionTypes.CreatePatient;\n\n  constructor(public payload: { patient: IPatient }) { }\n}\n\n/**\n * CreatePatient Dialog window dismissed\n */\nexport class DismissPatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.DismissPatientFormDialog;\n}\n\n/**\n * Load patients Action\n */\nexport class LoadPatients implements Action {\n  readonly type = PatientsActionTypes.LoadPatients;\n}\n\n/**\n * Search patient Action\n */\nexport class SearchPatient implements Action {\n  readonly type = PatientsActionTypes.SearchPatient;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search patient complete Action\n */\nexport class SearchPatientComplete implements Action {\n  readonly type = PatientsActionTypes.SearchPatientComplete;\n\n  constructor(public payload: IPatient[]) { }\n}\n\n/**\n * action to submit and edit patient\n */\nexport class EditPatient implements Action {\n  readonly type = PatientsActionTypes.EditPatient;\n\n  constructor(public payload: IPatient) {\n  }\n}\n\n/**\n * Patient Edit dismissed action\n */\nexport class DismissEditPatient implements Action {\n  readonly type = PatientsActionTypes.DismissEditPatient;\n}\n\n/**\n * reset the patient state\n */\nexport class ResetPatientsState implements Action {\n  readonly type = PatientsActionTypes.ResetPatientsState;\n}\n\n/**\n * action to delete a patient\n */\nexport class DeletePatient implements Action {\n  readonly type = PatientsActionTypes.DeletePatient;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load patient users action\n */\nexport class LoadPatientUsers implements Action {\n  readonly type = PatientsActionTypes.LoadPatientUsers;\n  constructor(public payload: number ) { }\n}\n\n\n/**\n * Export union of patient Action\n */\nexport type PatientsActionsUnion\n  = SelectPatient\n  | ClearSelectedPatient\n  | InitializePatient\n  | CreatePatientFormDialog\n  | CreatePatient\n  | DismissPatientFormDialog\n  | LoadPatients\n  | SearchPatient\n  | SearchPatientComplete\n  | EditPatient\n  | DismissEditPatient\n  | ResetPatientsState\n  | LoadPatientUsers;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchPatientComplete.html":{"url":"classes/SearchPatientComplete.html","title":"class - SearchPatientComplete","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchPatientComplete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients.actions.ts\n        \n\n            \n                Description\n            \n            \n                Search patient complete Action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: IPatient[])\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/patients.actions.ts:89\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    IPatient[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     IPatient[]\n\n                    \n                \n                    \n                        \n                            Type :     IPatient[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:91\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsActionTypes.SearchPatientComplete\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:89\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { IPatient } from '../models/patient.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum PatientsActionTypes {\n  SelectPatient = '[Patient] Select Current Patient',\n  ClearSelectedPatient = '[Patient] Clear Current Patient',\n  InitializePatient = '[Patient] Initialize Current Patient',\n  CreatePatientFormDialog = '[Patients] Pop Up Patient Form',\n  CreatePatient = '[Patient] Create Patient',\n  DismissPatientFormDialog = '[Patient] Dismiss Patient Form Dialog',\n  LoadPatients = '[Patient] Load Patients',\n  SearchPatient = '[Patient] Search Patient',\n  SearchPatientComplete = '[Patient] Search Patient Complete',\n  EditPatient = '[Patient] Edit Patient',\n  DismissEditPatient = '[Patient] Dismiss Edit Patient',\n  ResetPatientsState = '[Patients] Reset Patients State',\n  DeletePatient ='[Patients] Delete Patient',\n  LoadPatientUsers = '[User] Load User Patients'\n}\n\n\n/**\n * Select patient Action\n */\nexport class SelectPatient implements Action {\n  readonly type = PatientsActionTypes.SelectPatient;\n\n  constructor(public payload: IPatient) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedPatient implements Action {\n  readonly type = PatientsActionTypes.ClearSelectedPatient;\n}\n\n/**\n * Initialize patient Action\n */\nexport class InitializePatient implements Action {\n  readonly type = PatientsActionTypes.InitializePatient;\n}\n\n/**\n * action to pop up patient form\n */\nexport class CreatePatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.CreatePatientFormDialog;\n}\n\n/**\n * Create patient Action\n */\nexport class CreatePatient implements Action {\n  readonly type = PatientsActionTypes.CreatePatient;\n\n  constructor(public payload: { patient: IPatient }) { }\n}\n\n/**\n * CreatePatient Dialog window dismissed\n */\nexport class DismissPatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.DismissPatientFormDialog;\n}\n\n/**\n * Load patients Action\n */\nexport class LoadPatients implements Action {\n  readonly type = PatientsActionTypes.LoadPatients;\n}\n\n/**\n * Search patient Action\n */\nexport class SearchPatient implements Action {\n  readonly type = PatientsActionTypes.SearchPatient;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search patient complete Action\n */\nexport class SearchPatientComplete implements Action {\n  readonly type = PatientsActionTypes.SearchPatientComplete;\n\n  constructor(public payload: IPatient[]) { }\n}\n\n/**\n * action to submit and edit patient\n */\nexport class EditPatient implements Action {\n  readonly type = PatientsActionTypes.EditPatient;\n\n  constructor(public payload: IPatient) {\n  }\n}\n\n/**\n * Patient Edit dismissed action\n */\nexport class DismissEditPatient implements Action {\n  readonly type = PatientsActionTypes.DismissEditPatient;\n}\n\n/**\n * reset the patient state\n */\nexport class ResetPatientsState implements Action {\n  readonly type = PatientsActionTypes.ResetPatientsState;\n}\n\n/**\n * action to delete a patient\n */\nexport class DeletePatient implements Action {\n  readonly type = PatientsActionTypes.DeletePatient;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load patient users action\n */\nexport class LoadPatientUsers implements Action {\n  readonly type = PatientsActionTypes.LoadPatientUsers;\n  constructor(public payload: number ) { }\n}\n\n\n/**\n * Export union of patient Action\n */\nexport type PatientsActionsUnion\n  = SelectPatient\n  | ClearSelectedPatient\n  | InitializePatient\n  | CreatePatientFormDialog\n  | CreatePatient\n  | DismissPatientFormDialog\n  | LoadPatients\n  | SearchPatient\n  | SearchPatientComplete\n  | EditPatient\n  | DismissEditPatient\n  | ResetPatientsState\n  | LoadPatientUsers;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchUser.html":{"url":"classes/SearchUser.html","title":"class - SearchUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users.actions.ts\n        \n\n            \n                Description\n            \n            \n                Search user action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/users.actions.ts:80\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersActionTypes.SearchUser\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:80\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum UsersActionTypes {\n  SelectUser = '[User] Select Current User',\n  ClearSelectedUser = '[User] Clear Current User',\n  InitializeUser = '[User] Initialize Current User',\n  CreateUserFormDialog = '[Users] Pop Up User Form',\n  CreateUser = '[User] Create User',\n  DismissUserFormDialog = '[User] Dismiss User Form Dialog',\n  LoadUsers = '[User] Load Users',\n  SearchUser = '[User] Search User',\n  SearchUserComplete = '[User] Search User Complete',\n  EditUser = '[User] Edit User',\n  DismissEditUser = '[User] Dismiss Edit User',\n  ResetUsersState = '[Users] Reset Users State',\n  DeleteUser = '[Users] Delete User',\n  LoadUserPatients = '[User] Load User Patients'\n}\n\n\n/**\n * Select user Action\n */\nexport class SelectUser implements Action {\n  readonly type = UsersActionTypes.SelectUser;\n\n  constructor(public payload: User) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedUser implements Action {\n  readonly type = UsersActionTypes.ClearSelectedUser;\n}\n\n/**\n * Initialize user Action\n */\nexport class InitializeUser implements Action {\n  readonly type = UsersActionTypes.InitializeUser;\n}\n\n/**\n * action to pop up user form\n */\nexport class CreateUserFormDialog implements Action {\n  readonly type = UsersActionTypes.CreateUserFormDialog;\n}\n\n/**\n * Create user Action\n */\nexport class CreateUser implements Action {\n  readonly type = UsersActionTypes.CreateUser;\n\n  constructor(public payload: { user: User }) { }\n}\n\n/**\n * CreateUser Dialog window dismissed\n */\nexport class DismissUserFormDialog implements Action {\n  readonly type = UsersActionTypes.DismissUserFormDialog;\n}\n\n/**\n * Load users Action\n */\nexport class LoadUsers implements Action {\n  readonly type = UsersActionTypes.LoadUsers;\n}\n\n/**\n * Search user action\n */\nexport class SearchUser implements Action {\n  readonly type = UsersActionTypes.SearchUser;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search user complete action\n */\nexport class SearchUserComplete implements Action {\n  readonly type = UsersActionTypes.SearchUserComplete;\n\n  constructor(public payload: User[]) { }\n}\n\n/**\n * action to submit and edit user\n */\nexport class EditUser implements Action {\n  readonly type = UsersActionTypes.EditUser;\n\n  constructor(public payload: User) {\n  }\n}\n\n/**\n * User Edit dismissed action\n */\nexport class DismissEditUser implements Action {\n  readonly type = UsersActionTypes.DismissEditUser;\n}\n\n/**\n * reset the user state\n */\nexport class ResetUsersState implements Action {\n  readonly type = UsersActionTypes.ResetUsersState;\n}\n\n/**\n * action to delete a user\n */\nexport class DeleteUser implements Action {\n  readonly type = UsersActionTypes.DeleteUser;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load user patients action\n */\nexport class LoadUserPatients implements Action {\n  readonly type = UsersActionTypes.LoadUserPatients;\n  constructor(public payload: number ) { }\n}\n\n/**\n * Export union of user Action\n */\nexport type UsersActionsUnion\n  = SelectUser\n  | ClearSelectedUser\n  | InitializeUser\n  | CreateUserFormDialog\n  | CreateUser\n  | DismissUserFormDialog\n  | LoadUsers\n  | SearchUser\n  | SearchUserComplete\n  | EditUser\n  | DismissEditUser\n  | ResetUsersState\n  | LoadUserPatients;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchUserComplete.html":{"url":"classes/SearchUserComplete.html","title":"class - SearchUserComplete","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchUserComplete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users.actions.ts\n        \n\n            \n                Description\n            \n            \n                Search user complete action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: User[])\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/users.actions.ts:89\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    User[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     User[]\n\n                    \n                \n                    \n                        \n                            Type :     User[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:91\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersActionTypes.SearchUserComplete\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:89\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum UsersActionTypes {\n  SelectUser = '[User] Select Current User',\n  ClearSelectedUser = '[User] Clear Current User',\n  InitializeUser = '[User] Initialize Current User',\n  CreateUserFormDialog = '[Users] Pop Up User Form',\n  CreateUser = '[User] Create User',\n  DismissUserFormDialog = '[User] Dismiss User Form Dialog',\n  LoadUsers = '[User] Load Users',\n  SearchUser = '[User] Search User',\n  SearchUserComplete = '[User] Search User Complete',\n  EditUser = '[User] Edit User',\n  DismissEditUser = '[User] Dismiss Edit User',\n  ResetUsersState = '[Users] Reset Users State',\n  DeleteUser = '[Users] Delete User',\n  LoadUserPatients = '[User] Load User Patients'\n}\n\n\n/**\n * Select user Action\n */\nexport class SelectUser implements Action {\n  readonly type = UsersActionTypes.SelectUser;\n\n  constructor(public payload: User) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedUser implements Action {\n  readonly type = UsersActionTypes.ClearSelectedUser;\n}\n\n/**\n * Initialize user Action\n */\nexport class InitializeUser implements Action {\n  readonly type = UsersActionTypes.InitializeUser;\n}\n\n/**\n * action to pop up user form\n */\nexport class CreateUserFormDialog implements Action {\n  readonly type = UsersActionTypes.CreateUserFormDialog;\n}\n\n/**\n * Create user Action\n */\nexport class CreateUser implements Action {\n  readonly type = UsersActionTypes.CreateUser;\n\n  constructor(public payload: { user: User }) { }\n}\n\n/**\n * CreateUser Dialog window dismissed\n */\nexport class DismissUserFormDialog implements Action {\n  readonly type = UsersActionTypes.DismissUserFormDialog;\n}\n\n/**\n * Load users Action\n */\nexport class LoadUsers implements Action {\n  readonly type = UsersActionTypes.LoadUsers;\n}\n\n/**\n * Search user action\n */\nexport class SearchUser implements Action {\n  readonly type = UsersActionTypes.SearchUser;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search user complete action\n */\nexport class SearchUserComplete implements Action {\n  readonly type = UsersActionTypes.SearchUserComplete;\n\n  constructor(public payload: User[]) { }\n}\n\n/**\n * action to submit and edit user\n */\nexport class EditUser implements Action {\n  readonly type = UsersActionTypes.EditUser;\n\n  constructor(public payload: User) {\n  }\n}\n\n/**\n * User Edit dismissed action\n */\nexport class DismissEditUser implements Action {\n  readonly type = UsersActionTypes.DismissEditUser;\n}\n\n/**\n * reset the user state\n */\nexport class ResetUsersState implements Action {\n  readonly type = UsersActionTypes.ResetUsersState;\n}\n\n/**\n * action to delete a user\n */\nexport class DeleteUser implements Action {\n  readonly type = UsersActionTypes.DeleteUser;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load user patients action\n */\nexport class LoadUserPatients implements Action {\n  readonly type = UsersActionTypes.LoadUserPatients;\n  constructor(public payload: number ) { }\n}\n\n/**\n * Export union of user Action\n */\nexport type UsersActionsUnion\n  = SelectUser\n  | ClearSelectedUser\n  | InitializeUser\n  | CreateUserFormDialog\n  | CreateUser\n  | DismissUserFormDialog\n  | LoadUsers\n  | SearchUser\n  | SearchUserComplete\n  | EditUser\n  | DismissEditUser\n  | ResetUsersState\n  | LoadUserPatients;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectNursingHome.html":{"url":"classes/SelectNursingHome.html","title":"class - SelectNursingHome","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectNursingHome\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/nursing-homes.actions.ts\n        \n\n            \n                Description\n            \n            \n                Select nursingHome Action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: NursingHome)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/nursing-homes.actions.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    NursingHome\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     NursingHome\n\n                    \n                \n                    \n                        \n                            Type :     NursingHome\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes.actions.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : NursingHomesActionTypes.SelectNursingHome\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes.actions.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { NursingHome } from '../models/nursing-home.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum NursingHomesActionTypes {\n  SelectNursingHome = '[NursingHome] Select Current NursingHome',\n  ClearSelectedNursingHome = '[NursingHome] Clear Current NursingHome',\n  InitializeNursingHome = '[NursingHome] Initialize Current NursingHome',\n  PopUpNursingHomeForm = '[NursingHome] Pop Up NursingHome Form',\n  CreateNursingHome = '[NursingHome] Create NursingHome',\n  DismissPoppedUpNursingHomeForm = '[NursingHome] Dismiss Create NursingHome',\n  LoadNursingHomes = '[NursingHome] Load Nursing Homes',\n  SearchNursingHome = '[NursingHome] Search NursingHome',\n  SearchNursingHomeComplete = '[NursingHome] Search NursingHome Complete',\n  EditNursingHome = '[NursingHome] Edit NursingHome',\n  DismissEditNursingHome = '[NursingHome] Dismiss Edit NursingHome',\n  ResetNursingHomesState = '[NursingHomes] Reset NursingHomes State'\n}\n\n\n/**\n * Select nursingHome Action\n */\nexport class SelectNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SelectNursingHome;\n\n  constructor(public payload: NursingHome) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.ClearSelectedNursingHome;\n}\n\n/**\n * Initialize nursingHome Action\n */\nexport class InitializeNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.InitializeNursingHome;\n}\n\n/**\n * action to pop up nursingHome form\n */\nexport class PopUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.PopUpNursingHomeForm;\n}\n\n/**\n * Create nursingHome Action\n */\nexport class CreateNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.CreateNursingHome;\n\n  constructor(public payload: { nursingHome: NursingHome }) { }\n}\n\n/**\n * CreateNursingHome Dialog window dismissed\n */\nexport class DismissPoppedUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.DismissPoppedUpNursingHomeForm;\n}\n\n/**\n * Load nursingHomes Action\n */\nexport class LoadNursingHomes implements Action {\n  readonly type = NursingHomesActionTypes.LoadNursingHomes;\n}\n\n/**\n * Search nursingHome Action\n */\nexport class SearchNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHome;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search nursingHome complete Action\n */\nexport class SearchNursingHomeComplete implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHomeComplete;\n\n  constructor(public payload: NursingHome[]) { }\n}\n\n/**\n * action to submit and edit nursingHome\n */\nexport class EditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.EditNursingHome;\n\n  constructor(public payload: Update) {\n  }\n}\n\n/**\n * NursingHome Edit dismissed action\n */\nexport class DismissEditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.DismissEditNursingHome;\n}\n\n/**\n * reset the nursingHome state\n */\nexport class ResetNursingHomesState implements Action {\n  readonly type = NursingHomesActionTypes.ResetNursingHomesState;\n}\n\n/**\n * Export union of nursingHome Action\n */\nexport type NursingHomesActionsUnion\n  = SelectNursingHome\n  | ClearSelectedNursingHome\n  | InitializeNursingHome\n  | PopUpNursingHomeForm\n  | CreateNursingHome\n  | DismissPoppedUpNursingHomeForm\n  | LoadNursingHomes\n  | SearchNursingHome\n  | SearchNursingHomeComplete\n  | EditNursingHome\n  | DismissEditNursingHome\n  | ResetNursingHomesState;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectPatient.html":{"url":"classes/SelectPatient.html","title":"class - SelectPatient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectPatient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients.actions.ts\n        \n\n            \n                Description\n            \n            \n                Select patient Action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: IPatient)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/patients.actions.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    IPatient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     IPatient\n\n                    \n                \n                    \n                        \n                            Type :     IPatient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsActionTypes.SelectPatient\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { IPatient } from '../models/patient.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum PatientsActionTypes {\n  SelectPatient = '[Patient] Select Current Patient',\n  ClearSelectedPatient = '[Patient] Clear Current Patient',\n  InitializePatient = '[Patient] Initialize Current Patient',\n  CreatePatientFormDialog = '[Patients] Pop Up Patient Form',\n  CreatePatient = '[Patient] Create Patient',\n  DismissPatientFormDialog = '[Patient] Dismiss Patient Form Dialog',\n  LoadPatients = '[Patient] Load Patients',\n  SearchPatient = '[Patient] Search Patient',\n  SearchPatientComplete = '[Patient] Search Patient Complete',\n  EditPatient = '[Patient] Edit Patient',\n  DismissEditPatient = '[Patient] Dismiss Edit Patient',\n  ResetPatientsState = '[Patients] Reset Patients State',\n  DeletePatient ='[Patients] Delete Patient',\n  LoadPatientUsers = '[User] Load User Patients'\n}\n\n\n/**\n * Select patient Action\n */\nexport class SelectPatient implements Action {\n  readonly type = PatientsActionTypes.SelectPatient;\n\n  constructor(public payload: IPatient) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedPatient implements Action {\n  readonly type = PatientsActionTypes.ClearSelectedPatient;\n}\n\n/**\n * Initialize patient Action\n */\nexport class InitializePatient implements Action {\n  readonly type = PatientsActionTypes.InitializePatient;\n}\n\n/**\n * action to pop up patient form\n */\nexport class CreatePatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.CreatePatientFormDialog;\n}\n\n/**\n * Create patient Action\n */\nexport class CreatePatient implements Action {\n  readonly type = PatientsActionTypes.CreatePatient;\n\n  constructor(public payload: { patient: IPatient }) { }\n}\n\n/**\n * CreatePatient Dialog window dismissed\n */\nexport class DismissPatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.DismissPatientFormDialog;\n}\n\n/**\n * Load patients Action\n */\nexport class LoadPatients implements Action {\n  readonly type = PatientsActionTypes.LoadPatients;\n}\n\n/**\n * Search patient Action\n */\nexport class SearchPatient implements Action {\n  readonly type = PatientsActionTypes.SearchPatient;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search patient complete Action\n */\nexport class SearchPatientComplete implements Action {\n  readonly type = PatientsActionTypes.SearchPatientComplete;\n\n  constructor(public payload: IPatient[]) { }\n}\n\n/**\n * action to submit and edit patient\n */\nexport class EditPatient implements Action {\n  readonly type = PatientsActionTypes.EditPatient;\n\n  constructor(public payload: IPatient) {\n  }\n}\n\n/**\n * Patient Edit dismissed action\n */\nexport class DismissEditPatient implements Action {\n  readonly type = PatientsActionTypes.DismissEditPatient;\n}\n\n/**\n * reset the patient state\n */\nexport class ResetPatientsState implements Action {\n  readonly type = PatientsActionTypes.ResetPatientsState;\n}\n\n/**\n * action to delete a patient\n */\nexport class DeletePatient implements Action {\n  readonly type = PatientsActionTypes.DeletePatient;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load patient users action\n */\nexport class LoadPatientUsers implements Action {\n  readonly type = PatientsActionTypes.LoadPatientUsers;\n  constructor(public payload: number ) { }\n}\n\n\n/**\n * Export union of patient Action\n */\nexport type PatientsActionsUnion\n  = SelectPatient\n  | ClearSelectedPatient\n  | InitializePatient\n  | CreatePatientFormDialog\n  | CreatePatient\n  | DismissPatientFormDialog\n  | LoadPatients\n  | SearchPatient\n  | SearchPatientComplete\n  | EditPatient\n  | DismissEditPatient\n  | ResetPatientsState\n  | LoadPatientUsers;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectUser.html":{"url":"classes/SelectUser.html","title":"class - SelectUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users.actions.ts\n        \n\n            \n                Description\n            \n            \n                Select user Action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: User)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/users.actions.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    User\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersActionTypes.SelectUser\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum UsersActionTypes {\n  SelectUser = '[User] Select Current User',\n  ClearSelectedUser = '[User] Clear Current User',\n  InitializeUser = '[User] Initialize Current User',\n  CreateUserFormDialog = '[Users] Pop Up User Form',\n  CreateUser = '[User] Create User',\n  DismissUserFormDialog = '[User] Dismiss User Form Dialog',\n  LoadUsers = '[User] Load Users',\n  SearchUser = '[User] Search User',\n  SearchUserComplete = '[User] Search User Complete',\n  EditUser = '[User] Edit User',\n  DismissEditUser = '[User] Dismiss Edit User',\n  ResetUsersState = '[Users] Reset Users State',\n  DeleteUser = '[Users] Delete User',\n  LoadUserPatients = '[User] Load User Patients'\n}\n\n\n/**\n * Select user Action\n */\nexport class SelectUser implements Action {\n  readonly type = UsersActionTypes.SelectUser;\n\n  constructor(public payload: User) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedUser implements Action {\n  readonly type = UsersActionTypes.ClearSelectedUser;\n}\n\n/**\n * Initialize user Action\n */\nexport class InitializeUser implements Action {\n  readonly type = UsersActionTypes.InitializeUser;\n}\n\n/**\n * action to pop up user form\n */\nexport class CreateUserFormDialog implements Action {\n  readonly type = UsersActionTypes.CreateUserFormDialog;\n}\n\n/**\n * Create user Action\n */\nexport class CreateUser implements Action {\n  readonly type = UsersActionTypes.CreateUser;\n\n  constructor(public payload: { user: User }) { }\n}\n\n/**\n * CreateUser Dialog window dismissed\n */\nexport class DismissUserFormDialog implements Action {\n  readonly type = UsersActionTypes.DismissUserFormDialog;\n}\n\n/**\n * Load users Action\n */\nexport class LoadUsers implements Action {\n  readonly type = UsersActionTypes.LoadUsers;\n}\n\n/**\n * Search user action\n */\nexport class SearchUser implements Action {\n  readonly type = UsersActionTypes.SearchUser;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search user complete action\n */\nexport class SearchUserComplete implements Action {\n  readonly type = UsersActionTypes.SearchUserComplete;\n\n  constructor(public payload: User[]) { }\n}\n\n/**\n * action to submit and edit user\n */\nexport class EditUser implements Action {\n  readonly type = UsersActionTypes.EditUser;\n\n  constructor(public payload: User) {\n  }\n}\n\n/**\n * User Edit dismissed action\n */\nexport class DismissEditUser implements Action {\n  readonly type = UsersActionTypes.DismissEditUser;\n}\n\n/**\n * reset the user state\n */\nexport class ResetUsersState implements Action {\n  readonly type = UsersActionTypes.ResetUsersState;\n}\n\n/**\n * action to delete a user\n */\nexport class DeleteUser implements Action {\n  readonly type = UsersActionTypes.DeleteUser;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load user patients action\n */\nexport class LoadUserPatients implements Action {\n  readonly type = UsersActionTypes.LoadUserPatients;\n  constructor(public payload: number ) { }\n}\n\n/**\n * Export union of user Action\n */\nexport type UsersActionsUnion\n  = SelectUser\n  | ClearSelectedUser\n  | InitializeUser\n  | CreateUserFormDialog\n  | CreateUser\n  | DismissUserFormDialog\n  | LoadUsers\n  | SearchUser\n  | SearchUserComplete\n  | EditUser\n  | DismissEditUser\n  | ResetUsersState\n  | LoadUserPatients;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetDirectionLtr.html":{"url":"classes/SetDirectionLtr.html","title":"class - SetDirectionLtr","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetDirectionLtr\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/layout.actions.ts\n        \n\n            \n                Description\n            \n            \n                set direction to left-to-right action\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/layout.actions.ts:70\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LayoutActionTypes.SetDirectionLtr\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:70\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\n/**\n * layout action types\n */\nexport enum LayoutActionTypes {\n  OpenSideNav = '[Layout] Open Side Nav',\n  CloseSideNav = '[Layout] Close Side Nav',\n  CompactSideNav = '[Layout] Compact Nav position',\n  SetNavigationPositionSide = '[Layout] Set Navigation Position Side',\n  SetNavigationPositionTop = '[Layout] Set Navigation Position Top',\n  SetDirectionLtr = '[Layout] Set Direction Ltr',\n  SetDirectionRtr = '[Layout] Set Direction Rtr',\n  TransitioningLayout = '[Layout] Transitioning Layout',\n  UseBreadcrumb = '[Layout] Use Breadcrumb',\n  MakeBreadcrumbSimple = '[Layout] Make Breadcrumb Simple',\n  MakeBreadcrumbTitle = '[Layout] Make Breadcrumb Title',\n  FixTopbar = '[Layout] Fix Topbar'\n}\n\n/**\n * open side navigation action\n */\nexport class OpenSideNav {\n  readonly type = LayoutActionTypes.OpenSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * close side navigation action\n */\nexport class CloseSideNav {\n  readonly type = LayoutActionTypes.CloseSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * compact side navigation action\n */\nexport class CompactSideNav {\n  readonly type = LayoutActionTypes.CompactSideNav;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to side action\n */\nexport class SetNavigationPositionSide {\n  readonly type = LayoutActionTypes.SetNavigationPositionSide;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to top action\n */\nexport class SetNavigationPositionTop {\n  readonly type = LayoutActionTypes.SetNavigationPositionTop;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to left-to-right action\n */\nexport class SetDirectionLtr {\n  readonly type = LayoutActionTypes.SetDirectionLtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to right-to-left action\n */\nexport class SetDirectionRtr {\n  readonly type = LayoutActionTypes.SetDirectionRtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * transition layout action\n */\nexport class TransitioningLayout {\n  readonly type = LayoutActionTypes.TransitioningLayout;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * Use breadcrumb action\n */\nexport class UseBreadcrumb {\n  readonly type = LayoutActionTypes.UseBreadcrumb;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * make breadcrumb simple action\n */\nexport class MakeBreadcrumbSimple {\n  readonly type = LayoutActionTypes.MakeBreadcrumbSimple;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * make breadcrum title action\n */\nexport class MakeBreadcrumbTitle {\n  readonly type = LayoutActionTypes.MakeBreadcrumbTitle;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * fix top bar action\n */\nexport class FixTopbar {\n  readonly type = LayoutActionTypes.FixTopbar;\n  constructor(public payload: boolean) { \n  }\n}\n\nexport type LayoutActions = \n  | OpenSideNav\n  | CloseSideNav\n  | CompactSideNav\n  | SetNavigationPositionSide\n  | SetNavigationPositionTop\n  | SetDirectionLtr\n  | SetDirectionRtr\n  | TransitioningLayout\n  | UseBreadcrumb\n  | MakeBreadcrumbSimple\n  | MakeBreadcrumbTitle\n  | FixTopbar;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetDirectionRtr.html":{"url":"classes/SetDirectionRtr.html","title":"class - SetDirectionRtr","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetDirectionRtr\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/layout.actions.ts\n        \n\n            \n                Description\n            \n            \n                set direction to right-to-left action\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/layout.actions.ts:79\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LayoutActionTypes.SetDirectionRtr\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:79\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\n/**\n * layout action types\n */\nexport enum LayoutActionTypes {\n  OpenSideNav = '[Layout] Open Side Nav',\n  CloseSideNav = '[Layout] Close Side Nav',\n  CompactSideNav = '[Layout] Compact Nav position',\n  SetNavigationPositionSide = '[Layout] Set Navigation Position Side',\n  SetNavigationPositionTop = '[Layout] Set Navigation Position Top',\n  SetDirectionLtr = '[Layout] Set Direction Ltr',\n  SetDirectionRtr = '[Layout] Set Direction Rtr',\n  TransitioningLayout = '[Layout] Transitioning Layout',\n  UseBreadcrumb = '[Layout] Use Breadcrumb',\n  MakeBreadcrumbSimple = '[Layout] Make Breadcrumb Simple',\n  MakeBreadcrumbTitle = '[Layout] Make Breadcrumb Title',\n  FixTopbar = '[Layout] Fix Topbar'\n}\n\n/**\n * open side navigation action\n */\nexport class OpenSideNav {\n  readonly type = LayoutActionTypes.OpenSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * close side navigation action\n */\nexport class CloseSideNav {\n  readonly type = LayoutActionTypes.CloseSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * compact side navigation action\n */\nexport class CompactSideNav {\n  readonly type = LayoutActionTypes.CompactSideNav;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to side action\n */\nexport class SetNavigationPositionSide {\n  readonly type = LayoutActionTypes.SetNavigationPositionSide;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to top action\n */\nexport class SetNavigationPositionTop {\n  readonly type = LayoutActionTypes.SetNavigationPositionTop;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to left-to-right action\n */\nexport class SetDirectionLtr {\n  readonly type = LayoutActionTypes.SetDirectionLtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to right-to-left action\n */\nexport class SetDirectionRtr {\n  readonly type = LayoutActionTypes.SetDirectionRtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * transition layout action\n */\nexport class TransitioningLayout {\n  readonly type = LayoutActionTypes.TransitioningLayout;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * Use breadcrumb action\n */\nexport class UseBreadcrumb {\n  readonly type = LayoutActionTypes.UseBreadcrumb;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * make breadcrumb simple action\n */\nexport class MakeBreadcrumbSimple {\n  readonly type = LayoutActionTypes.MakeBreadcrumbSimple;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * make breadcrum title action\n */\nexport class MakeBreadcrumbTitle {\n  readonly type = LayoutActionTypes.MakeBreadcrumbTitle;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * fix top bar action\n */\nexport class FixTopbar {\n  readonly type = LayoutActionTypes.FixTopbar;\n  constructor(public payload: boolean) { \n  }\n}\n\nexport type LayoutActions = \n  | OpenSideNav\n  | CloseSideNav\n  | CompactSideNav\n  | SetNavigationPositionSide\n  | SetNavigationPositionTop\n  | SetDirectionLtr\n  | SetDirectionRtr\n  | TransitioningLayout\n  | UseBreadcrumb\n  | MakeBreadcrumbSimple\n  | MakeBreadcrumbTitle\n  | FixTopbar;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetNavigationPositionSide.html":{"url":"classes/SetNavigationPositionSide.html","title":"class - SetNavigationPositionSide","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetNavigationPositionSide\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/layout.actions.ts\n        \n\n            \n                Description\n            \n            \n                set navigation position to side action\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/layout.actions.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LayoutActionTypes.SetNavigationPositionSide\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:52\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\n/**\n * layout action types\n */\nexport enum LayoutActionTypes {\n  OpenSideNav = '[Layout] Open Side Nav',\n  CloseSideNav = '[Layout] Close Side Nav',\n  CompactSideNav = '[Layout] Compact Nav position',\n  SetNavigationPositionSide = '[Layout] Set Navigation Position Side',\n  SetNavigationPositionTop = '[Layout] Set Navigation Position Top',\n  SetDirectionLtr = '[Layout] Set Direction Ltr',\n  SetDirectionRtr = '[Layout] Set Direction Rtr',\n  TransitioningLayout = '[Layout] Transitioning Layout',\n  UseBreadcrumb = '[Layout] Use Breadcrumb',\n  MakeBreadcrumbSimple = '[Layout] Make Breadcrumb Simple',\n  MakeBreadcrumbTitle = '[Layout] Make Breadcrumb Title',\n  FixTopbar = '[Layout] Fix Topbar'\n}\n\n/**\n * open side navigation action\n */\nexport class OpenSideNav {\n  readonly type = LayoutActionTypes.OpenSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * close side navigation action\n */\nexport class CloseSideNav {\n  readonly type = LayoutActionTypes.CloseSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * compact side navigation action\n */\nexport class CompactSideNav {\n  readonly type = LayoutActionTypes.CompactSideNav;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to side action\n */\nexport class SetNavigationPositionSide {\n  readonly type = LayoutActionTypes.SetNavigationPositionSide;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to top action\n */\nexport class SetNavigationPositionTop {\n  readonly type = LayoutActionTypes.SetNavigationPositionTop;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to left-to-right action\n */\nexport class SetDirectionLtr {\n  readonly type = LayoutActionTypes.SetDirectionLtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to right-to-left action\n */\nexport class SetDirectionRtr {\n  readonly type = LayoutActionTypes.SetDirectionRtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * transition layout action\n */\nexport class TransitioningLayout {\n  readonly type = LayoutActionTypes.TransitioningLayout;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * Use breadcrumb action\n */\nexport class UseBreadcrumb {\n  readonly type = LayoutActionTypes.UseBreadcrumb;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * make breadcrumb simple action\n */\nexport class MakeBreadcrumbSimple {\n  readonly type = LayoutActionTypes.MakeBreadcrumbSimple;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * make breadcrum title action\n */\nexport class MakeBreadcrumbTitle {\n  readonly type = LayoutActionTypes.MakeBreadcrumbTitle;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * fix top bar action\n */\nexport class FixTopbar {\n  readonly type = LayoutActionTypes.FixTopbar;\n  constructor(public payload: boolean) { \n  }\n}\n\nexport type LayoutActions = \n  | OpenSideNav\n  | CloseSideNav\n  | CompactSideNav\n  | SetNavigationPositionSide\n  | SetNavigationPositionTop\n  | SetDirectionLtr\n  | SetDirectionRtr\n  | TransitioningLayout\n  | UseBreadcrumb\n  | MakeBreadcrumbSimple\n  | MakeBreadcrumbTitle\n  | FixTopbar;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetNavigationPositionTop.html":{"url":"classes/SetNavigationPositionTop.html","title":"class - SetNavigationPositionTop","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetNavigationPositionTop\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/layout.actions.ts\n        \n\n            \n                Description\n            \n            \n                set navigation position to top action\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/layout.actions.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LayoutActionTypes.SetNavigationPositionTop\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:61\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\n/**\n * layout action types\n */\nexport enum LayoutActionTypes {\n  OpenSideNav = '[Layout] Open Side Nav',\n  CloseSideNav = '[Layout] Close Side Nav',\n  CompactSideNav = '[Layout] Compact Nav position',\n  SetNavigationPositionSide = '[Layout] Set Navigation Position Side',\n  SetNavigationPositionTop = '[Layout] Set Navigation Position Top',\n  SetDirectionLtr = '[Layout] Set Direction Ltr',\n  SetDirectionRtr = '[Layout] Set Direction Rtr',\n  TransitioningLayout = '[Layout] Transitioning Layout',\n  UseBreadcrumb = '[Layout] Use Breadcrumb',\n  MakeBreadcrumbSimple = '[Layout] Make Breadcrumb Simple',\n  MakeBreadcrumbTitle = '[Layout] Make Breadcrumb Title',\n  FixTopbar = '[Layout] Fix Topbar'\n}\n\n/**\n * open side navigation action\n */\nexport class OpenSideNav {\n  readonly type = LayoutActionTypes.OpenSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * close side navigation action\n */\nexport class CloseSideNav {\n  readonly type = LayoutActionTypes.CloseSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * compact side navigation action\n */\nexport class CompactSideNav {\n  readonly type = LayoutActionTypes.CompactSideNav;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to side action\n */\nexport class SetNavigationPositionSide {\n  readonly type = LayoutActionTypes.SetNavigationPositionSide;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to top action\n */\nexport class SetNavigationPositionTop {\n  readonly type = LayoutActionTypes.SetNavigationPositionTop;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to left-to-right action\n */\nexport class SetDirectionLtr {\n  readonly type = LayoutActionTypes.SetDirectionLtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to right-to-left action\n */\nexport class SetDirectionRtr {\n  readonly type = LayoutActionTypes.SetDirectionRtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * transition layout action\n */\nexport class TransitioningLayout {\n  readonly type = LayoutActionTypes.TransitioningLayout;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * Use breadcrumb action\n */\nexport class UseBreadcrumb {\n  readonly type = LayoutActionTypes.UseBreadcrumb;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * make breadcrumb simple action\n */\nexport class MakeBreadcrumbSimple {\n  readonly type = LayoutActionTypes.MakeBreadcrumbSimple;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * make breadcrum title action\n */\nexport class MakeBreadcrumbTitle {\n  readonly type = LayoutActionTypes.MakeBreadcrumbTitle;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * fix top bar action\n */\nexport class FixTopbar {\n  readonly type = LayoutActionTypes.FixTopbar;\n  constructor(public payload: boolean) { \n  }\n}\n\nexport type LayoutActions = \n  | OpenSideNav\n  | CloseSideNav\n  | CompactSideNav\n  | SetNavigationPositionSide\n  | SetNavigationPositionTop\n  | SetDirectionLtr\n  | SetDirectionRtr\n  | TransitioningLayout\n  | UseBreadcrumb\n  | MakeBreadcrumbSimple\n  | MakeBreadcrumbTitle\n  | FixTopbar;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class SharedModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarSideComponent.html":{"url":"components/SidebarSideComponent.html","title":"component - SidebarSideComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarSideComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/containers/layout-components/sidebar-side/sidebar-side.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-sidebar-side\n            \n\n\n\n\n            \n                templateUrl\n                ./sidebar-side.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hasIconTypeMenuItem\n                            \n                            \n                                    Public\n                                iconTypeMenuTitle\n                            \n                            \n                                    Public\n                                menuItems\n                            \n                            \n                                    Private\n                                menuItemsSub\n                            \n                            \n                                    Public\n                                themeService\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onConfirmLogout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authStore: Store, store: Store, navService: NavigationService, themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/containers/layout-components/sidebar-side/sidebar-side.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authStore\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navService\n                                                  \n                                                        \n                                                                    NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                    ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/sidebar-side/sidebar-side.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/sidebar-side/sidebar-side.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/sidebar-side/sidebar-side.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onConfirmLogout\n                            \n                            \n                        \n                    \n                \n                \n                    \nonConfirmLogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/sidebar-side/sidebar-side.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            logout the user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasIconTypeMenuItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasIconTypeMenuItem:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/sidebar-side/sidebar-side.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconTypeMenuTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconTypeMenuTitle:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/sidebar-side/sidebar-side.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            menuItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        menuItems:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/sidebar-side/sidebar-side.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            menuItemsSub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        menuItemsSub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/sidebar-side/sidebar-side.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            themeService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        themeService:     ThemeService\n\n                    \n                \n                    \n                        \n                            Type :     ThemeService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/sidebar-side/sidebar-side.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/sidebar-side/sidebar-side.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, AfterViewInit } from '@angular/core';\nimport { NavigationService } from '../../../../core/services/navigation.service';\nimport { ThemeService } from '../../../../core/services/theme.service';\nimport { Subscription } from 'rxjs';\nimport { Store, select } from '@ngrx/store';\n\nimport { AuthActions } from '../../../../auth/actions';\nimport * as fromAuth from '../../../../auth/reducers';\n\n// import PerfectScrollbar from 'perfect-scrollbar';\n\n@Component({\n  selector: 'moio-sidebar-side',\n  templateUrl: './sidebar-side.component.html'\n})\nexport class SidebarSideComponent implements OnInit, OnDestroy, AfterViewInit {\n  // private sidebarPS: PerfectScrollbar;\n  public menuItems: any[];\n  public hasIconTypeMenuItem: boolean;\n  public iconTypeMenuTitle: string;\n  private menuItemsSub: Subscription;\n  public user: any;\n\n  constructor(\n    private authStore: Store,\n    private store: Store,\n    private navService: NavigationService,\n    public themeService: ThemeService\n  ) {\n  }\n\n  ngOnInit() {\n    this.iconTypeMenuTitle = this.navService.iconTypeMenuTitle;\n    this.menuItemsSub = this.navService.menuItems$.subscribe(menuItem => {\n      this.menuItems = menuItem;\n      // Checks item list has any icon type.\n      this.hasIconTypeMenuItem = !!this.menuItems.filter(item => item.type === 'icon').length;\n    });\n\n    // TODO: Unsubscribe\n    this.store.pipe(select(fromAuth.getUser)).subscribe(\n      user => this.user = user );\n  }\n\n  ngAfterViewInit() {\n    // setTimeout(() => {\n    //   this.sidebarPS = new PerfectScrollbar('#scroll-area', {\n    //     suppressScrollX: true\n    //   })\n    // })\n  }\n\n  /**\n   * logout the user\n   */\n  onConfirmLogout() {\n    this.authStore.dispatch(new AuthActions.LogoutConfirmation());\n  }\n\n  ngOnDestroy() {\n    // if(this.sidebarPS) {\n    //   this.sidebarPS.destroy();\n    // }\n    if (this.menuItemsSub) {\n      this.menuItemsSub.unsubscribe();\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n      \n      \n      \n    \n\n    \n    \n      \n        \n      \n      \n        lock\n        {{ user.firstname }} {{ user.lastname }}\n      \n      \n      \n        \n          settings\n        \n\n        \n          exit_to_app\n        \n\n        \n          \n            account_box\n            {{'AccountMenu.Profile' | translate }}\n          \n          \n            exit_to_app\n            {{ 'Auth.Signout' | translate }}\n          \n        \n      \n    \n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                lock        {{ user.firstname }} {{ user.lastname }}                                    settings                          exit_to_app                                      account_box            {{\\'AccountMenu.Profile\\' | translate }}                                exit_to_app            {{ \\'Auth.Signout\\' | translate }}                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'SidebarSideComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarTopComponent.html":{"url":"components/SidebarTopComponent.html","title":"component - SidebarTopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarTopComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/containers/layout-components/sidebar-top/sidebar-top.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-sidebar-top\n            \n\n\n\n\n            \n                templateUrl\n                ./sidebar-top.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                menuItems\n                            \n                            \n                                    Private\n                                menuItemsSub\n                            \n                            \n                                    Private\n                                sidebarPS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navService: NavigationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/containers/layout-components/sidebar-top/sidebar-top.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navService\n                                                  \n                                                        \n                                                                    NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/sidebar-top/sidebar-top.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/sidebar-top/sidebar-top.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/sidebar-top/sidebar-top.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            menuItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        menuItems:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/sidebar-top/sidebar-top.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            menuItemsSub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        menuItemsSub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/sidebar-top/sidebar-top.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sidebarPS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidebarPS:     PerfectScrollbar\n\n                    \n                \n                    \n                        \n                            Type :     PerfectScrollbar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/sidebar-top/sidebar-top.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, AfterViewInit } from '@angular/core';\nimport PerfectScrollbar from 'perfect-scrollbar';\nimport { NavigationService } from '../../../../core/services/navigation.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'moio-sidebar-top',\n  templateUrl: './sidebar-top.component.html'\n})\nexport class SidebarTopComponent implements OnInit, OnDestroy, AfterViewInit {\n  private sidebarPS: PerfectScrollbar;\n  public menuItems: any[];\n  private menuItemsSub: Subscription;\n\n  constructor(\n    private navService: NavigationService\n  ) {\n  }\n\n  ngOnInit() {\n    this.menuItemsSub = this.navService.menuItems$.subscribe(menuItem => {\n      this.menuItems = menuItem.filter(item => item.type !== 'icon' && item.type !== 'separator');\n    });\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.sidebarPS = new PerfectScrollbar('#sidebar-top-scroll-area', {\n        suppressScrollX: true\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    // if(this.sidebarPS) {\n    //   this.sidebarPS.destroy();\n    // }\n    if (this.menuItemsSub) {\n      this.menuItemsSub.unsubscribe();\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'SidebarTopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidenavComponent.html":{"url":"components/SidenavComponent.html","title":"component - SidenavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidenavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/containers/layout-components/sidenav/sidenav.component.ts\n\n\n    \n        Description\n    \n    \n        Sidenav component\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-sidenav\n            \n\n\n\n\n            \n                templateUrl\n                ./sidenav.template.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hasIconMenu\n                            \n                            \n                                iconMenuTitle\n                            \n                            \n                                items\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/containers/layout-components/sidenav/sidenav.component.ts:14\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hasIconMenu\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/sidenav/sidenav.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconMenuTitle\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/sidenav/sidenav.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                    \n                            \n                            Type :    any[]\n\n                            \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/sidenav/sidenav.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/sidenav/sidenav.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            on init lifecycle hook\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n/**\n * Sidenav component\n */\n@Component({\n  selector: 'moio-sidenav',\n  templateUrl: './sidenav.template.html'\n})\nexport class SidenavComponent implements OnInit {\n\n  @Input('items') public menuItems: any[] = [];\n  @Input('hasIconMenu') public hasIconTypeMenuItem: boolean;\n  @Input('iconMenuTitle') public iconTypeMenuTitle: string;\n\n  constructor() {\n  }\n\n  /**\n   * on init lifecycle hook\n   */\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n      {{iconTypeMenuTitle}}\n    \n    \n    \n      \n        {{item.icon}}\n      \n    \n  \n\n  \n    \n      \n        \n        {{item.name | translate}}\n      \n      \n        \n          {{item.icon}}\n          {{item.name | translate}}\n          \n          {{ badge.value }}\n        \n        \n          {{item.icon}}\n          {{item.name | translate}}\n          \n          {{ badge.value }}\n        \n\n        \n        \n          {{item.icon}}\n          {{item.name | translate}}\n          \n          {{ badge.value }}\n          keyboard_arrow_right\n        \n        \n        \n          \n\n            \n              {{itemLvL2.name | translate}}\n              \n            \n\n            \n              {{itemLvL2.name | translate}}\n              \n              keyboard_arrow_right\n            \n\n            \n            \n              \n                \n                  {{itemLvL3.name | translate}}\n                \n              \n            \n\n          \n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{iconTypeMenuTitle}}                          {{item.icon}}                                        {{item.name | translate}}                              {{item.icon}}          {{item.name | translate}}                    {{ badge.value }}                          {{item.icon}}          {{item.name | translate}}                    {{ badge.value }}                                  {{item.icon}}          {{item.name | translate}}                    {{ badge.value }}          keyboard_arrow_right                                                            {{itemLvL2.name | translate}}                                                    {{itemLvL2.name | translate}}                            keyboard_arrow_right                                                                                    {{itemLvL3.name | translate}}                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'SidenavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUpFailure.html":{"url":"classes/SignUpFailure.html","title":"class - SignUpFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUpFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/actions/auth-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                sign up failure\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/actions/auth-api.actions.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-api.actions.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : AuthApiActionTypes.SignUpFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-api.actions.ts:73\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum AuthApiActionTypes {\n  LoginSuccess = '[Auth/Api] Login Success',\n  LoginFailure = '[Auth/Api] Login Failure',\n  LoginRedirect = '[Auth/Api] Login Redirect',\n  LogoutSuccess = '[Auth/Api] Logout Success',\n  LogoutFailure = '[Auth/Api] Logout Failure',\n  SignUpSuccess = '[Auth/Api] Sign Up Success',\n  SignUpFailure = '[Auth/Api] Sign Up Failure',\n  ForgotPasswordSuccess = '[Auth/Api] Forgot Password Success',\n  ForgotPasswordFailure = '[Auth/Api] Forgot Password Failure',\n}\n\n/**\n * login action\n */\nexport class LoginSuccess implements Action {\n  readonly type = AuthApiActionTypes.LoginSuccess;\n\n  constructor(public payload: { response: any }) {\n  }\n}\n\n/**\n * login failure\n */\nexport class LoginFailure implements Action {\n  readonly type = AuthApiActionTypes.LoginFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * logout success\n */\nexport class LogoutSuccess implements Action {\n  readonly type = AuthApiActionTypes.LogoutSuccess;\n}\n\n/**\n * lougout failure\n */\nexport class LogoutFailure implements Action {\n  readonly type = AuthApiActionTypes.LogoutFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * redirect action\n */\nexport class LoginRedirect implements Action {\n  readonly type = AuthApiActionTypes.LoginRedirect;\n}\n\n/**\n * sign up success\n */\nexport class SignUpSuccess implements Action {\n  readonly type = AuthApiActionTypes.SignUpSuccess;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up failure\n */\nexport class SignUpFailure implements Action {\n  readonly type = AuthApiActionTypes.SignUpFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up success\n */\nexport class ForgotPasswordSuccess implements Action {\n  readonly type = AuthApiActionTypes.ForgotPasswordSuccess;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up failure\n */\nexport class ForgotPasswordFailure implements Action {\n  readonly type = AuthApiActionTypes.ForgotPasswordFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\nexport type AuthApiActionsUnion =\n  | LoginSuccess\n  | LoginFailure\n  | LoginRedirect\n  | LogoutSuccess\n  | LogoutFailure\n  | SignUpSuccess\n  | SignUpFailure\n  | ForgotPasswordSuccess\n  | ForgotPasswordFailure;\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUpSuccess.html":{"url":"classes/SignUpSuccess.html","title":"class - SignUpSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUpSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/actions/auth-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                sign up success\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/actions/auth-api.actions.ts:63\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-api.actions.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : AuthApiActionTypes.SignUpSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-api.actions.ts:63\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum AuthApiActionTypes {\n  LoginSuccess = '[Auth/Api] Login Success',\n  LoginFailure = '[Auth/Api] Login Failure',\n  LoginRedirect = '[Auth/Api] Login Redirect',\n  LogoutSuccess = '[Auth/Api] Logout Success',\n  LogoutFailure = '[Auth/Api] Logout Failure',\n  SignUpSuccess = '[Auth/Api] Sign Up Success',\n  SignUpFailure = '[Auth/Api] Sign Up Failure',\n  ForgotPasswordSuccess = '[Auth/Api] Forgot Password Success',\n  ForgotPasswordFailure = '[Auth/Api] Forgot Password Failure',\n}\n\n/**\n * login action\n */\nexport class LoginSuccess implements Action {\n  readonly type = AuthApiActionTypes.LoginSuccess;\n\n  constructor(public payload: { response: any }) {\n  }\n}\n\n/**\n * login failure\n */\nexport class LoginFailure implements Action {\n  readonly type = AuthApiActionTypes.LoginFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * logout success\n */\nexport class LogoutSuccess implements Action {\n  readonly type = AuthApiActionTypes.LogoutSuccess;\n}\n\n/**\n * lougout failure\n */\nexport class LogoutFailure implements Action {\n  readonly type = AuthApiActionTypes.LogoutFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * redirect action\n */\nexport class LoginRedirect implements Action {\n  readonly type = AuthApiActionTypes.LoginRedirect;\n}\n\n/**\n * sign up success\n */\nexport class SignUpSuccess implements Action {\n  readonly type = AuthApiActionTypes.SignUpSuccess;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up failure\n */\nexport class SignUpFailure implements Action {\n  readonly type = AuthApiActionTypes.SignUpFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up success\n */\nexport class ForgotPasswordSuccess implements Action {\n  readonly type = AuthApiActionTypes.ForgotPasswordSuccess;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up failure\n */\nexport class ForgotPasswordFailure implements Action {\n  readonly type = AuthApiActionTypes.ForgotPasswordFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\nexport type AuthApiActionsUnion =\n  | LoginSuccess\n  | LoginFailure\n  | LoginRedirect\n  | LogoutSuccess\n  | LogoutFailure\n  | SignUpSuccess\n  | SignUpFailure\n  | ForgotPasswordSuccess\n  | ForgotPasswordFailure;\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SigninComponent.html":{"url":"components/SigninComponent.html","title":"component - SigninComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SigninComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/components/signin/signin.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-signin\n            \n\n\n\n\n            \n                templateUrl\n                ./signin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage$\n                            \n                            \n                                progressBar\n                            \n                            \n                                signinForm\n                            \n                            \n                                submitButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                signin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/components/signin/signin.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/components/signin/signin.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signin\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/components/signin/signin.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            submit the form\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromAuth.getError)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/components/signin/signin.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            progressBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        progressBar:     MatProgressBar\n\n                    \n                \n                    \n                        \n                            Type :     MatProgressBar\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatProgressBar)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/components/signin/signin.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signinForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        signinForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/components/signin/signin.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitButton\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        submitButton:     MatButton\n\n                    \n                \n                    \n                        \n                            Type :     MatButton\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatButton)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/components/signin/signin.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatProgressBar, MatButton } from '@angular/material';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport * as fromAuth from '../../reducers';\nimport { AuthPageActions } from '../../actions';\n\n@Component({\n  selector: 'moio-signin',\n  templateUrl: './signin.component.html'\n})\nexport class SigninComponent implements OnInit {\n\n  @ViewChild(MatProgressBar) progressBar: MatProgressBar;\n  @ViewChild(MatButton) submitButton: MatButton;\n\n  signinForm: FormGroup;\n\n  // get any error\n  errorMessage$: Observable = this.store.pipe(\n    select(fromAuth.getError)\n  );\n\n  constructor(private store: Store, private translate: TranslateService) {\n    translate.setDefaultLang('de');\n  }\n\n  ngOnInit() {\n    this.signinForm = new FormGroup({\n      username: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required)\n    });\n\n    this.store.pipe(\n      select(fromAuth.getPending),\n    ).subscribe(pending => {\n\n      if (pending) {\n        this.progressBar.mode = 'indeterminate';\n        this.signinForm.disable();\n      } else {\n        this.progressBar.mode = 'determinate';\n        this.signinForm.enable();\n      }\n    });\n  }\n\n  /**\n   * submit the form\n   */\n  signin() {\n    const signinData = this.signinForm.value;\n\n    this.store.dispatch(new AuthPageActions.Login({credentials: signinData}));\n  }\n\n}\n\n    \n\n    \n        \n  \n\n    \n\n    \n      \n\n        \n          \n          {{'Auth.SignInToYourAccount' | translate}}\n        \n\n        \n          {{errorMessage$ | async}}!\n        \n\n        \n          \n            \n              \n            \n             {{'Auth.UsernameRequired' | translate}}\n            \n          \n\n          \n            \n              \n            \n             {{'Auth.PasswordRequried' | translate}}\n            \n          \n\n          \n            {{'Auth.Signin' | translate}}\n          \n\n          \n            \n              {{'Forgot password' | translate }}\n            \n\n            \n\n            \n              {{'Create a new account' | translate}}\n            \n          \n        \n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            {{\\'Auth.SignInToYourAccount\\' | translate}}                          {{errorMessage$ | async}}!                                                                             {{\\'Auth.UsernameRequired\\' | translate}}                                                                                   {{\\'Auth.PasswordRequried\\' | translate}}                                            {{\\'Auth.Signin\\' | translate}}                                              {{\\'Forgot password\\' | translate }}                                                  {{\\'Create a new account\\' | translate}}                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'SigninComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Signup.html":{"url":"classes/Signup.html","title":"class - Signup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Signup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/actions/auth-page.actions.ts\n        \n\n            \n                Description\n            \n            \n                signup action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/actions/auth-page.actions.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-page.actions.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : AuthPageActionTypes.Signup\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-page.actions.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { ICredentials } from '../models/user.interface';\n\nexport enum AuthPageActionTypes {\n  Login = '[Auth/Login Page] Login',\n  Signup = '[Auth/Signup Page] Signup',\n  ForgotPassword = '[Auth/Forgot Password Page] Forgot Password'\n}\n\n/**\n * Login action\n */\nexport class Login implements Action {\n  readonly type = AuthPageActionTypes.Login;\n\n  constructor(public payload: { credentials: ICredentials }) {\n  }\n}\n\n/**\n * signup action\n */\nexport class Signup implements Action {\n  readonly type = AuthPageActionTypes.Signup;\n\n  constructor(public payload: { credentials: ICredentials }) {\n  }\n}\n\n/**\n * action for the forgot password page\n */\nexport class ForgotPassword implements Action {\n  readonly type = AuthPageActionTypes.ForgotPassword;\n\n  constructor(public payload: { email: string }) {\n  }\n}\n\nexport type AuthPageActionsUnion =\n  | Login\n  | Signup\n  | ForgotPassword;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupComponent.html":{"url":"components/SignupComponent.html","title":"component - SignupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/components/signup/signup.component.ts\n\n\n    \n        Description\n    \n    \n        signup component\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-signup\n            \n\n\n\n\n            \n                templateUrl\n                ./signup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                progressBar\n                            \n                            \n                                signupForm\n                            \n                            \n                                submitButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/components/signup/signup.component.ts:16\n                            \n                        \n\n                \n                    \n                            constructor\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/components/signup/signup.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            on init life cycle callback\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/components/signup/signup.component.ts:48\n                            \n                        \n\n\n                \n                    \n                            signup / submit form\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            progressBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        progressBar:     MatProgressBar\n\n                    \n                \n                    \n                        \n                            Type :     MatProgressBar\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatProgressBar)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/components/signup/signup.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signupForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        signupForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/components/signup/signup.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitButton\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        submitButton:     MatButton\n\n                    \n                \n                    \n                        \n                            Type :     MatButton\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatButton)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/components/signup/signup.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatProgressBar, MatButton } from '@angular/material';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\n\n/**\n * signup component\n */\n@Component({\n  selector: 'moio-signup',\n  templateUrl: './signup.component.html'\n})\nexport class SignupComponent implements OnInit {\n  @ViewChild(MatProgressBar) progressBar: MatProgressBar;\n  @ViewChild(MatButton) submitButton: MatButton;\n\n  signupForm: FormGroup;\n  \n  /**\n   * constructor\n   */\n  constructor() {\n  }\n\n   /**\n   * on init life cycle callback\n   */\n  ngOnInit() {\n    const password = new FormControl('', Validators.required);\n    const confirmPassword = new FormControl('', Validators.required);\n\n    this.signupForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: password,\n      confirmPassword: confirmPassword,\n      agreed: new FormControl('', (control: FormControl) => {\n        const agreed = control.value;\n        if (!agreed) {\n          return {agreed: true};\n        }\n        return null;\n      })\n    });\n  }\n\n  /**\n   * signup / submit form\n   */\n  signup() {\n    this.submitButton.disabled = true;\n    this.progressBar.mode = 'indeterminate';\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n          \n          Sign up to use our service\n        \n        \n          \n            \n              \n            \n             Email is required\n            \n\n             Invaild email address\n            \n          \n\n          \n            \n              \n            \n             Password is required\n            \n          \n\n          \n            \n              \n            \n            Confirm password is required.\n            \n            Passwords\n              do not math.\n            \n          \n\n          \n            I have read and agree to the terms of service.\n            \n\n             You must agree to the terms and conditions\n            \n          \n\n          Sign up\n          \n            Sign in to existing\n              account\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            Sign up to use our service                                                                             Email is required                         Invaild email address                                                                                   Password is required                                                                                  Confirm password is required.                        Passwords              do not math.                                            I have read and agree to the terms of service.                         You must agree to the terms and conditions                                Sign up                      Sign in to existing              account                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'SignupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State.html":{"url":"interfaces/State.html","title":"interface - State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/reducers/index.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        router\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        router\n                                    \n                                \n                                \n                                    \n                                        router:     fromRouter.RouterReducerState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromRouter.RouterReducerState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as fromRouter from '@ngrx/router-store';\nimport { ActionReducer, ActionReducerMap, MetaReducer } from '@ngrx/store';\nimport { environment } from '../../environments/environment';\nimport { localStorageSync } from 'ngrx-store-localstorage';\n\nexport interface State {\n  router: fromRouter.RouterReducerState;\n}\n\n// basic gloabl reducer\nexport const reducers: ActionReducerMap = {\n  router: fromRouter.routerReducer\n};\n\n// the logger function\nexport function logger(reducer: ActionReducer): ActionReducer {\n  return (state: State, action: any): State => {\n    console.log('action', action);\n    console.log('state', state);\n    return reducer(state, action);\n  };\n}\n\n// use localstorage to save the state\nexport function localStorageSyncReducer(reducer: ActionReducer): ActionReducer {\n  return localStorageSync({\n    keys: ['auth'],\n    rehydrate: true\n  })(reducer);\n}\n\nexport const metaReducers: MetaReducer[] = !environment.production\n  ? [logger, localStorageSyncReducer]\n  : [localStorageSyncReducer];\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-1.html":{"url":"interfaces/State-1.html","title":"interface - State-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/reducers/index.ts\n        \n\n            \n                Description\n            \n            \n                assign state to global store\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dashboard\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dashboard\n                                    \n                                \n                                \n                                    \n                                        dashboard:     DashboardState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DashboardState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as fromUserPage from './users-page.reducer';\nimport * as fromPatientPage from './patients-page.reducer';\nimport * as fromNursingHomePage from './nursing-homes-page.reducer';\nimport * as fromRoot from '../../reducers';\nimport * as fromUsers from './users.reducer';\nimport * as fromPatients from './patients.reducer';\nimport * as fromUserPatients from './user-patients.reducer';\nimport * as fromPatientUsers from './patient-users.reducer';\nimport * as fromNursingHome from './nursing-homes.reducer';\nimport * as fromLayout from './layout.reducer';\nimport { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\n/**\n * compose dashboard state for global store\n */\nexport interface DashboardState {\n  userPage: fromUserPage.State;\n  users: fromUsers.State;\n  nursingHomePage: fromNursingHomePage.State;\n  nursingHomes: fromNursingHome.State;\n  patientPage: fromPatientPage.State;\n  patients: fromPatients.State;\n  userPatients: fromUserPatients.State;\n  patientUsers: fromPatientUsers.State;\n  layout: fromLayout.State;\n}\n\n/**\n * assign state to global store\n */\nexport interface State extends fromRoot.State {\n  dashboard: DashboardState;\n}\n\n/**\n * compose action reducers\n */\nexport const reducers: ActionReducerMap = {\n  userPage: fromUserPage.reducer,\n  users: fromUsers.reducer,\n  nursingHomePage: fromNursingHomePage.reducer,\n  nursingHomes: fromNursingHome.reducer,\n  patientPage: fromPatientPage.reducer,\n  patients: fromPatients.reducer,\n  userPatients: fromUserPatients.reducer,\n  patientUsers: fromPatientUsers.reducer,\n  layout: fromLayout.reducer\n};\n\n// create feature selectors\nexport const getDashboardState = createFeatureSelector('dashboard');\n\n// ****************** USERS PAGE *************\nexport const getUsersPageState = createSelector(\n  getDashboardState,\n  (state: DashboardState) => state.userPage\n);\n\n// get error state of the userPage from the store\nexport const getUserPageError = createSelector(\n  getUsersPageState,\n  fromUserPage.getError\n);\n\n// get pending state of the userPage from the store\nexport const getUserPagePending = createSelector(\n  getUsersPageState,\n  fromUserPage.getPending\n);\n\n// get error state when creating user from the store\nexport const getUserCreationError = createSelector(\n  getUsersPageState,\n  fromUserPage.getCreateUserError\n);\n\n// get pending state when creating a user from the store\nexport const getUserCreationPending = createSelector(\n  getUsersPageState,\n  fromUserPage.getCreateUserPending\n);\n\n// get error state when editing a user from the store\nexport const getUserEditionError = createSelector(\n  getUsersPageState,\n  fromUserPage.getEditUserError\n);\n\n// get pending state when editing a user from the store\nexport const getUserEditionPending = createSelector(\n  getUsersPageState,\n  fromUserPage.getEditUserPending\n);\n\n// get pending state when loading user patients from the store\nexport const getLoadUserPatientsPending = createSelector(\n  getUsersPageState,\n  fromUserPage.getLoadUserPatientsPending\n);\n\n// get error state when loading user patients from the store\nexport const getLoadUserPatientsError = createSelector(\n  getUsersPageState,\n  fromUserPage.getLoadUserPatientsError\n);\n\n// ****************** USERS *************\nexport const getUsersState = createSelector(\n  getDashboardState,\n  (state: DashboardState) => state.users\n);\n\n// get the selected user id from state\nexport const getSelectedUserId = createSelector(\n  getUsersState,\n  fromUsers.getSelectedUserId\n);\n\n// deconstruct several functions from ngrx/entity\nexport const {\n  selectIds: getUsersIds,\n  selectEntities: getUserEntities,\n  selectAll: getAllUsers,\n  selectTotal: getTotalUsers\n} = fromUsers.adapater.getSelectors(getUsersState);\n\n// get the selected user from the state / users collection\nexport const getSelectedUser = createSelector(\n  getUserEntities,\n  getSelectedUserId,\n  (entities, id) => entities[id]\n);\n\n\n// ****************** USER PATIENTS *************\nexport const getUserPatientsState = createSelector(\n  getDashboardState,\n  (state: DashboardState) => state.userPatients\n);\n\n// deconstruct several functions from ngrx/entity\nexport const {\n  selectEntities: getUserPatientsEntities,\n  selectAll: getAllUserPatients,\n  selectTotal: getTotalUserPatients\n} = fromUserPatients.adapater.getSelectors(getUserPatientsState);\n\n\n\n// ****************** NURSING HOMES PAGE *************\nexport const getNursingHomesPageState = createSelector(\n  getDashboardState,\n  (state: DashboardState) => state.nursingHomePage\n);\n\n// get error state of the nursingHomePage from the store\nexport const getNursingHomePageError = createSelector(\n  getNursingHomesPageState,\n  fromNursingHomePage.getError\n);\n\n// get pending state of the nursingHomePage from the store\nexport const getNursingHomePagePending = createSelector(\n  getNursingHomesPageState,\n  fromNursingHomePage.getPending\n);\n\n// ****************** NURSING HOMES *************\nexport const getNursingHomesState = createSelector(\n  getDashboardState,\n  (state: DashboardState) => state.nursingHomes\n);\n\n// get the selected nursing home id from state\nexport const getSelectedNursingHomeId = createSelector(\n  getNursingHomesState,\n  fromNursingHome.getSelectedNursingHomeId\n);\n\n// deconstruct several functions from ngrx/entity\nexport const {\n  selectIds: getNursingHomesIds,\n  selectEntities: getNursingHomeEntities,\n  selectAll: getAllNursingHomes,\n  selectTotal: getTotalNursiomes\n} = fromNursingHome.adapater.getSelectors(getNursingHomesState);\n\n// get the selected nursing home from the state / nursing homes collection\nexport const getSelectedNursingHome = createSelector(\n  getNursingHomeEntities,\n  getSelectedNursingHomeId,\n  (entities, id) => entities[id]\n);\n\n// ****************** PATIENTS PAGE *************\nexport const getPatientsPageState = createSelector(\n  getDashboardState,\n  (state: DashboardState) => state.patientPage\n);\n\n// get error state of the patientPage from the store\nexport const getPatientPageError = createSelector(\n  getPatientsPageState,\n  fromPatientPage.getError\n);\n\n// get pending state of the patientPage from the store\nexport const getPatientPagePending = createSelector(\n  getPatientsPageState,\n  fromPatientPage.getPending\n);\n\n// get error state when creating patient from the store\nexport const getPatientCreationError = createSelector(\n  getPatientsPageState,\n  fromPatientPage.getCreatePatientError\n);\n\n// get pending state when creating a patient from the store\nexport const getPatientCreationPending = createSelector(\n  getPatientsPageState,\n  fromPatientPage.getCreatePatientPending\n);\n\n// get error state when editing a patient from the store\nexport const getPatientEditionError = createSelector(\n  getPatientsPageState,\n  fromPatientPage.getEditPatientError\n);\n\n// get pending state when editing a patient from the store\nexport const getPatientEditionPending = createSelector(\n  getPatientsPageState,\n  fromPatientPage.getEditPatientPending\n);\n\n// get pending state when loading patient users from the store\nexport const getLoadPatientUsersPending = createSelector(\n  getPatientsPageState,\n  fromPatientPage.getLoadPatientUsersPending\n);\n\n// get error state when loading patient users from the store\nexport const getLoadPatientUsersError = createSelector(\n  getPatientsPageState,\n  fromPatientPage.getLoadPatientUsersError\n);\n\n// ****************** PATIENTS *************\nexport const getPatientsState = createSelector(\n  getDashboardState,\n  (state: DashboardState) => state.patients\n);\n\n// get the selected patient id from state\nexport const getSelectedPatientId = createSelector(\n  getPatientsState,\n  fromPatients.getSelectedPatientId\n);\n\n// deconstruct several functions from ngrx/entity\nexport const {\n  selectIds: getPatientsIds,\n  selectEntities: getPatientEntities,\n  selectAll: getAllPatients,\n  selectTotal: getTotalPatients\n} = fromPatients.adapater.getSelectors(getPatientsState);\n\n// get the selected patient from the state / patients collection\nexport const getSelectedPatient = createSelector(\n  getPatientEntities,\n  getSelectedPatientId,\n  (entities, id) => entities[id]\n);\n\n// ****************** PATIENT USERS *************\nexport const getPatientUsersState = createSelector(\n  getDashboardState,\n  (state: DashboardState) => state.patientUsers\n);\n\n// deconstruct several functions from ngrx/entity\nexport const {\n  selectEntities: getPatientUsersEntities,\n  selectAll: getAllPatientUsers,\n  selectTotal: getTotalPatientUsers\n} = fromPatientUsers.adapater.getSelectors(getPatientUsersState);\n\n// ****************** DASHBOARD LAYOUT *************\nexport const getLayoutState = createSelector(\n  getDashboardState,\n  (state: DashboardState) => state.layout\n);\n\n/**\n * Layout configurations selectors\n */\nexport const getSideNav = createSelector(getLayoutState, fromLayout.getSideNav);\nexport const getNavPosition = createSelector(getLayoutState, fromLayout.getNavPosition);\nexport const getDirection = createSelector(getLayoutState, fromLayout.getDirection);\nexport const getLayoutInTransition = createSelector(getLayoutState, fromLayout.getLayoutInTransition);\nexport const getIsMobile = createSelector(getLayoutState, fromLayout.getIsMobile);\nexport const getUseBreadcrumb = createSelector(getLayoutState, fromLayout.getUseBreadcrumb);\nexport const getBreadcrumb = createSelector(getLayoutState, fromLayout.getBreadcrumb);\nexport const getTopbarFixed = createSelector(getLayoutState, fromLayout.getTopbarFixed);\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-10.html":{"url":"interfaces/State-10.html","title":"interface - State-10","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/reducers/users.reducer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        selectedUserId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        selectedUserId\n                                    \n                                \n                                \n                                    \n                                        selectedUserId:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UsersApiActions, UsersActions } from '../actions';\nimport { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { User } from '../models/user.model';\nimport { AuthApiActions } from '../../auth/actions';\n\n// state interface definition\nexport interface State extends EntityState {\n  selectedUserId: number | null;\n}\n\n// extend & export entity adapater\nexport const adapater: EntityAdapter = createEntityAdapter({\n  selectId: (user: User) => user.id,\n  sortComparer: false\n});\n\n// compose the initial state\nexport const initialState: State = adapater.getInitialState({\n  selectedUserId: null\n});\n\n/**\n * reducer for the users state\n * @param state\n * @param action\n */\nexport function reducer(\n  state: State = initialState,\n  action:\n    | UsersApiActions.UsersApiActionsUnion\n    | UsersActions.UsersActionsUnion\n    | AuthApiActions.AuthApiActionsUnion\n): State {\n\n  switch (action.type) {\n\n    // load users success state\n    case UsersApiActions.UsersApiActionTypes.LoadUsersSuccess:\n      return adapater.upsertMany(action.payload.users, state);\n\n    // add a new entity to the state in case creation is successful\n    case UsersApiActions.UsersApiActionTypes.CreateUserSuccess:\n      return adapater.addOne(action.payload.user, state);\n\n    case UsersApiActions.UsersApiActionTypes.EditUserSuccess:\n      return adapater.upsertOne(action.payload.user, state);\n\n    // case select user\n    case UsersActions.UsersActionTypes.SelectUser:\n      return {\n        ...state,\n        selectedUserId: action.payload.id\n      };\n\n    // clear selected user\n    case (UsersActions.UsersActionTypes.DismissEditUser):\n      return {\n        ...state,\n        selectedUserId: null\n      }\n\n    // reset state to initial state on logout\n    case AuthApiActions.AuthApiActionTypes.LogoutSuccess:\n    case UsersActions.UsersActionTypes.ResetUsersState:\n      return initialState;\n\n    default:\n      return state;\n  }\n\n}\n\n/**\n * return the selected user id from the state\n * @param state\n * @param state the current state\n */\nexport const getSelectedUserId = (state: State) => state.selectedUserId;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-11.html":{"url":"interfaces/State-11.html","title":"interface - State-11","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/reducers/auth.reducer.ts\n        \n\n            \n                Description\n            \n            \n                auth state\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        access_token\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                    \n                                \n                                \n                                    \n                                        access_token:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     IUser | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IUser | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IUser } from '../models/user.interface';\nimport { AuthApiActions, AuthActions } from '../actions';\n\n/**\n * auth state\n */\nexport interface State {\n  user: IUser | null;\n  access_token: string | null;\n}\n\nexport const initialState: State = {\n  user: null,\n  access_token: null\n};\n\nexport function reducer(\n  state: State = initialState,\n  action: AuthApiActions.AuthApiActionsUnion | AuthActions.AuthActionsUnion): State {\n\n  switch (action.type) {\n\n    case AuthApiActions.AuthApiActionTypes.LoginSuccess:\n      return {\n        ...state,\n        user: action.payload.response.user,\n        access_token: action.payload.response.access_token\n      };\n\n    case AuthApiActions.AuthApiActionTypes.LogoutSuccess:\n      return initialState;\n\n    default:\n      return state;\n  }\n}\n\nexport const getUser = (state: State) => state.user;\nexport const getAccessToken = (state: State) => state.access_token;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-12.html":{"url":"interfaces/State-12.html","title":"interface - State-12","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/reducers/index.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        auth\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth\n                                    \n                                \n                                \n                                    \n                                        auth:     AuthState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AuthState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as fromAuth from './auth.reducer';\nimport * as fromViews from './views.reducer';\nimport * as fromRoot from '../../reducers';\nimport { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { AuthApiActions } from '../actions';\n\nconst jwtHelper = new JwtHelperService();\n\nexport interface AuthState {\n  userState: fromAuth.State;\n  views: fromViews.State;\n}\n\nexport interface State extends fromRoot.State {\n  auth: AuthState;\n}\n\nexport const reducers: ActionReducerMap = {\n  userState: fromAuth.reducer,\n  views: fromViews.reducer\n};\n\nexport const selectAuthState = createFeatureSelector('auth');\n\nexport const selectAuthUserState = createSelector(\n  selectAuthState,\n  (state: AuthState) => state.userState\n);\n\nexport const selectAuthViewsState = createSelector(\n  selectAuthState,\n  (state: AuthState) => state.views\n);\n\nexport const getUser = createSelector(selectAuthUserState, fromAuth.getUser);\nexport const getAccessToken = createSelector(selectAuthUserState, fromAuth.getAccessToken);\n\nexport const isLoggedIn = createSelector(selectAuthUserState, state => {\n  return state.user && state.access_token && !jwtHelper.isTokenExpired(state.access_token);\n});\n\nexport const getPending = createSelector(\n  selectAuthViewsState,\n  fromViews.getPending\n);\n\nexport const getError = createSelector(\n  selectAuthViewsState,\n  fromViews.getError\n);\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-13.html":{"url":"interfaces/State-13.html","title":"interface - State-13","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/reducers/views.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        pending\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pending\n                                    \n                                \n                                \n                                    \n                                        pending:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AuthActions, AuthApiActions, AuthPageActions } from '../actions';\n\nexport interface State {\n  error: string | null;\n  pending: boolean;\n}\n\nexport const initialState: State = {\n  error: null,\n  pending: false\n};\n\nexport function reducer(\n  state: State = initialState,\n  action: AuthActions.AuthActionsUnion\n    | AuthApiActions.AuthApiActionsUnion\n    | AuthPageActions.AuthPageActionsUnion): State {\n\n  switch (action.type) {\n\n    case AuthPageActions.AuthPageActionTypes.Login:\n      return {\n        ...state,\n        pending: true,\n        error: null\n      };\n\n    case AuthApiActions.AuthApiActionTypes.LoginSuccess:\n      return {\n        ...state,\n        pending: false,\n        error: null\n      };\n\n    case AuthApiActions.AuthApiActionTypes.LoginFailure:\n      return {\n        ...state,\n        pending: false,\n        error: action.payload.message\n      };\n\n    default:\n      return state;\n  }\n\n}\n\nexport const getError = (state: State) => state.error;\nexport const getPending = (state: State) => state.pending;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-2.html":{"url":"interfaces/State-2.html","title":"interface - State-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/reducers/layout.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        breadcrumb\n                                \n                                \n                                        direction\n                                \n                                \n                                        isMobile\n                                \n                                \n                                        layoutInTransition\n                                \n                                \n                                        navigationPos\n                                \n                                \n                                        sideNavStyle\n                                \n                                \n                                        topbarFixed\n                                \n                                \n                                        useBreadcrumb\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        breadcrumb\n                                    \n                                \n                                \n                                    \n                                        breadcrumb:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                    \n                                \n                                \n                                    \n                                        direction:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isMobile\n                                    \n                                \n                                \n                                    \n                                        isMobile:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layoutInTransition\n                                    \n                                \n                                \n                                    \n                                        layoutInTransition:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        navigationPos\n                                    \n                                \n                                \n                                    \n                                        navigationPos:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sideNavStyle\n                                    \n                                \n                                \n                                    \n                                        sideNavStyle:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topbarFixed\n                                    \n                                \n                                \n                                    \n                                        topbarFixed:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useBreadcrumb\n                                    \n                                \n                                \n                                    \n                                        useBreadcrumb:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LayoutActions, LayoutActionTypes } from '../actions/layout.actions';\nimport { createFeatureSelector, createSelector } from '@ngrx/store';\n\nexport interface State {\n  sideNavStyle: string; // full, compact, closed\n  navigationPos: string;   // side, top\n  direction: string;             // ltr, rtl\n  layoutInTransition: boolean;\n  isMobile: boolean;\n  useBreadcrumb: boolean;\n  breadcrumb: string;      // simple, title\n  topbarFixed: boolean;\n}\n\nconst initialState: State = {\n  sideNavStyle: 'full',\n  navigationPos: 'side',\n  direction: 'ltr',\n  layoutInTransition: false,\n  isMobile: false,\n  useBreadcrumb: true,\n  breadcrumb: 'title',\n  topbarFixed: false\n};\n\nexport const getSideNav = (state: State) => state.sideNavStyle;\nexport const getNavPosition = (state: State) => state.navigationPos;\nexport const getDirection = (state: State) => state.direction;\nexport const getLayoutInTransition = (state: State) => state.layoutInTransition;\nexport const getIsMobile = (state: State) => state.isMobile;\nexport const getUseBreadcrumb = (state: State) => state.useBreadcrumb;\nexport const getBreadcrumb = (state: State) => state.breadcrumb;\nexport const getTopbarFixed = (state: State) => state.topbarFixed;\n\nexport function reducer(state = initialState, action: LayoutActions): State {\n  switch (action.type) {\n\n    case LayoutActionTypes.OpenSideNav:\n      return {\n        ...state,\n        sideNavStyle: action.payload\n      };\n    case LayoutActionTypes.CloseSideNav:\n      return {\n        ...state,\n        sideNavStyle: action.payload\n      };\n    case LayoutActionTypes.CompactSideNav:\n      return {\n        ...state,\n        sideNavStyle: action.payload\n      };\n\n    case LayoutActionTypes.SetNavigationPositionSide:\n      return {\n        ...state,\n        navigationPos: action.payload\n      };\n    case LayoutActionTypes.SetNavigationPositionTop:\n      return {\n        ...state,\n        navigationPos: action.payload\n      };\n\n    case LayoutActionTypes.SetDirectionLtr:\n      return {\n        ...state,\n        direction: action.payload\n      };\n    case LayoutActionTypes.SetDirectionRtr:\n      return {\n        ...state,\n        direction: action.payload\n      };\n\n    case LayoutActionTypes.TransitioningLayout:\n      return {\n        ...state,\n        layoutInTransition: action.payload\n      };\n\n    case LayoutActionTypes.UseBreadcrumb:\n      return {\n        ...state,\n        useBreadcrumb: action.payload\n      };\n\n    case LayoutActionTypes.MakeBreadcrumbSimple:\n      return {\n        ...state,\n        breadcrumb: action.payload\n      };\n\n    case LayoutActionTypes.MakeBreadcrumbTitle:\n      return {\n        ...state,\n        breadcrumb: action.payload\n      };\n\n    case LayoutActionTypes.FixTopbar:\n      return {\n        ...state,\n        topbarFixed: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-3.html":{"url":"interfaces/State-3.html","title":"interface - State-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/reducers/nursing-homes-page.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        pending\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pending\n                                    \n                                \n                                \n                                    \n                                        pending:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NursingHomesApiActions, NursingHomesActions } from '../actions';\n\nexport interface State {\n  error: string | null;\n  pending: boolean;\n}\n\nexport const initialState: State = {\n  error: null,\n  pending: false\n};\n\n/**\n * reducer for nursingHomes page\n *\n * @param state\n * @param action\n */\nexport function reducer(\n  state: State = initialState,\n  action: NursingHomesApiActions.NursingHomesApiActionsUnion\n    | NursingHomesActions.NursingHomesActionsUnion): State {\n  switch (action.type) {\n\n    case (NursingHomesActions.NursingHomesActionTypes.LoadNursingHomes):\n    case (NursingHomesActions.NursingHomesActionTypes.EditNursingHome):\n      return {\n        ...state,\n        pending: true,\n        error: null\n      };\n\n    case (NursingHomesApiActions.NursingHomesApiActionTypes.LoadNursingHomesSuccess):\n    case (NursingHomesApiActions.NursingHomesApiActionTypes.CreateNursingHomeSuccess):\n    case (NursingHomesApiActions.NursingHomesApiActionTypes.EditNursingHomeSuccess):\n      return {\n        ...state,\n        pending: false,\n        error: null\n      };\n\n    case (NursingHomesActions.NursingHomesActionTypes.DismissEditNursingHome):\n      return {\n        ...state,\n        error: null\n      }\n\n    case (NursingHomesApiActions.NursingHomesApiActionTypes.LoadNursingHomesFailure):\n    case (NursingHomesApiActions.NursingHomesApiActionTypes.CreateNursingHomeFailure):\n    case (NursingHomesApiActions.NursingHomesApiActionTypes.EditNursingHomeFailure):\n      return {\n        ...state,\n        pending: false,\n        error: action.payload.message\n      };\n\n    default:\n      return state;\n\n  }\n}\n\n/**\n * get the current error state for nursingHome pages\n * @param state\n */\nexport const getError = (state: State) => state.error;\n\n/**\n * get the pending state for the nursingHome pages\n * @param state\n */\nexport const getPending = (state: State) => state.pending;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-4.html":{"url":"interfaces/State-4.html","title":"interface - State-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/reducers/nursing-homes.reducer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        selectedNursingHomeId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        selectedNursingHomeId\n                                    \n                                \n                                \n                                    \n                                        selectedNursingHomeId:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NursingHomesApiActions, NursingHomesActions } from '../actions';\nimport { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { NursingHome } from '../models/nursing-home.model';\nimport { AuthApiActions } from '../../auth/actions';\n\n// state interface definition\nexport interface State extends EntityState {\n  selectedNursingHomeId: number | null;\n}\n\n// extend & export entity adapater\nexport const adapater: EntityAdapter = createEntityAdapter({\n  selectId: (nursingHome: NursingHome) => nursingHome.id,\n  sortComparer: false\n});\n\n// compose the initial state\nexport const initialState: State = adapater.getInitialState({\n  selectedNursingHomeId: null\n});\n\n/**\n * reducer for the nursingHomes state\n * @param state\n * @param action\n */\nexport function reducer(\n  state: State = initialState,\n  action:\n    | NursingHomesApiActions.NursingHomesApiActionsUnion\n    | NursingHomesActions.NursingHomesActionsUnion\n    | AuthApiActions.AuthApiActionsUnion\n): State {\n\n  switch (action.type) {\n\n    // load nursingHomes success state\n    case NursingHomesApiActions.NursingHomesApiActionTypes.LoadNursingHomesSuccess:\n      console.log(action.payload.nursingHomes);\n      return adapater.upsertMany(action.payload.nursingHomes, state);\n\n    // add a new entity to the state in case creation is successful\n    case NursingHomesApiActions.NursingHomesApiActionTypes.CreateNursingHomeSuccess:\n      return adapater.addOne(action.payload.nursingHome, state);\n\n    case NursingHomesApiActions.NursingHomesApiActionTypes.EditNursingHomeSuccess:\n      return adapater.upsertOne(action.payload.nursingHome, state);\n\n    // case select nursingHome\n    case NursingHomesActions.NursingHomesActionTypes.SelectNursingHome:\n      return {\n        ...state,\n        selectedNursingHomeId: action.payload.id\n      };\n\n    // reset state to initial state on logout\n    case AuthApiActions.AuthApiActionTypes.LogoutSuccess:\n    case NursingHomesActions.NursingHomesActionTypes.ResetNursingHomesState:\n      return initialState;\n\n    default:\n      return state;\n  }\n\n}\n\n/**\n * return the selected nursingHome id from the state\n * @param state\n */\nexport const getSelectedNursingHomeId = (state: State) => state.selectedNursingHomeId;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-5.html":{"url":"interfaces/State-5.html","title":"interface - State-5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/reducers/patient-users.reducer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n\n\n\n    \n\n\n    \n        import { PatientsApiActions, PatientsActions } from '../actions';\nimport { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { AuthApiActions } from '../../auth/actions';\nimport { User } from '../models/user.model';\n\n// state interface definition\nexport interface State extends EntityState {\n}\n\n// extend & export entity adapater\nexport const adapater: EntityAdapter = createEntityAdapter({\n  selectId: (user: User) => user.id,\n  sortComparer: false\n});\n\n// compose the initial state\nexport const initialState: State = adapater.getInitialState({\n});\n\n/**\n * reducer for the patient users state\n * @param state\n * @param action\n */\nexport function reducer(\n  state: State = initialState,\n  action:\n    | PatientsApiActions.PatientsApiActionsUnion\n    | PatientsActions.PatientsActionsUnion\n    | AuthApiActions.AuthApiActionsUnion\n): State {\n\n  switch (action.type) {\n\n    // load patient users success state\n    case PatientsApiActions.PatientsApiActionTypes.LoadPatientUsersSuccess:\n      return adapater.upsertMany(action.payload.users, state);\n\n    // clear selected patient\n    case (PatientsActions.PatientsActionTypes.DismissEditPatient):\n      return adapater.removeAll(state)\n\n    // clear patient users\n    case (PatientsActions.PatientsActionTypes.SelectPatient):\n      return adapater.removeAll(state)\n\n    // reset state to initial state on logout\n    case AuthApiActions.AuthApiActionTypes.LogoutSuccess:\n    case PatientsActions.PatientsActionTypes.ResetPatientsState:\n      return initialState;\n\n    default:\n      return state;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-6.html":{"url":"interfaces/State-6.html","title":"interface - State-6","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/reducers/patients-page.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createPatientError\n                                \n                                \n                                        createPatientPending\n                                \n                                \n                                        editPatientError\n                                \n                                \n                                        editPatientPending\n                                \n                                \n                                        error\n                                \n                                \n                                        loadPatientUsersError\n                                \n                                \n                                        loadPatientUsersPending\n                                \n                                \n                                        pending\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createPatientError\n                                    \n                                \n                                \n                                    \n                                        createPatientError:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createPatientPending\n                                    \n                                \n                                \n                                    \n                                        createPatientPending:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editPatientError\n                                    \n                                \n                                \n                                    \n                                        editPatientError:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editPatientPending\n                                    \n                                \n                                \n                                    \n                                        editPatientPending:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadPatientUsersError\n                                    \n                                \n                                \n                                    \n                                        loadPatientUsersError:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadPatientUsersPending\n                                    \n                                \n                                \n                                    \n                                        loadPatientUsersPending:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pending\n                                    \n                                \n                                \n                                    \n                                        pending:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PatientsApiActions, PatientsActions } from '../actions';\n\nexport interface State {\n  error: string | null;\n  pending: boolean;\n  createPatientError: string | null;\n  createPatientPending: boolean;\n  editPatientError: string | null;\n  editPatientPending: boolean;\n  loadPatientUsersPending: boolean;\n  loadPatientUsersError: string | null;\n\n}\n\nexport const initialState: State = {\n  error: null,\n  pending: false,\n  createPatientError: null,\n  createPatientPending: false,\n  editPatientError: null,\n  editPatientPending: false,\n  loadPatientUsersPending: false,\n  loadPatientUsersError: null\n};\n\n/**\n * reducer for patients page\n *\n * @param state\n * @param action\n */\nexport function reducer(\n  state: State = initialState,\n  action: PatientsApiActions.PatientsApiActionsUnion\n    | PatientsActions.PatientsActionsUnion): State {\n  switch (action.type) {\n\n    case (PatientsActions.PatientsActionTypes.LoadPatients):\n      return {\n        ...state,\n        pending: true,\n        error: null\n      };\n\n    case (PatientsActions.PatientsActionTypes.EditPatient):\n      return {\n        ...state,\n        editPatientPending: true,\n        editPatientError: null\n      };\n\n    case (PatientsActions.PatientsActionTypes.CreatePatient):\n      return {\n        ...state,\n        createPatientPending: true\n      };\n    \n    case (PatientsApiActions.PatientsApiActionTypes.CreatePatientFailure):\n      return {\n        ...state,\n        createPatientPending: false,\n        createPatientError: action.payload.messages\n      };\n\n    case (PatientsApiActions.PatientsApiActionTypes.CreatePatientSuccess):\n      return {\n        ...state,\n        createPatientPending: false,\n        createPatientError: null\n      };\n\n    case (PatientsApiActions.PatientsApiActionTypes.LoadPatientsSuccess):\n      return {\n        ...state,\n        pending: false,\n        error: null\n      };\n\n    case (PatientsApiActions.PatientsApiActionTypes.EditPatientSuccess):\n      return {\n        ...state,\n        editPatientPending: false,\n        editPatientError: null\n      };\n\n    case (PatientsActions.PatientsActionTypes.DismissEditPatient):\n      return {\n        ...state,\n        error: null\n      }\n\n    case (PatientsApiActions.PatientsApiActionTypes.LoadPatientsFailure):\n      return {\n        ...state,\n        pending: false,\n        error: action.payload.message\n      };\n    \n    case (PatientsApiActions.PatientsApiActionTypes.EditPatientFailure):\n      return {\n        ...state,\n        editPatientPending: false,\n        editPatientError: action.payload.message\n      };\n\n    default:\n      return state;\n\n  }\n}\n\n/**\n * get the current error state for patient pages\n * @param state\n */\nexport const getError = (state: State) => state.error;\n\n/**\n * get the pending state for the patient pages\n * @param state\n */\nexport const getPending = (state: State) => state.pending;\n\n/**\n * get the current error state when creating patient\n * @param state\n */\nexport const getCreatePatientError = (state: State) => state.createPatientError;\n\n/**\n * get the pending state when creating patient\n * @param state\n */\nexport const getCreatePatientPending = (state: State) => state.createPatientPending;\n\n/**\n * get the current error state when editing patient\n * @param state\n */\nexport const getEditPatientError = (state: State) => state.editPatientError;\n\n/**\n * get the pending state when editing patient\n * @param state\n */\nexport const getEditPatientPending = (state: State) => state.editPatientPending;\n\n/**\n * get the pending state when loading user patients\n * @param state\n */\nexport const getLoadPatientUsersPending = (state: State) => state.loadPatientUsersPending;\n\n/**\n * get the error state when loading user patients\n * @param state\n */\nexport const getLoadPatientUsersError = (state: State) => state.loadPatientUsersError;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-7.html":{"url":"interfaces/State-7.html","title":"interface - State-7","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/reducers/patients.reducer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        selectedPatientId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        selectedPatientId\n                                    \n                                \n                                \n                                    \n                                        selectedPatientId:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PatientsApiActions, PatientsActions } from '../actions';\nimport { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { IPatient } from '../models/patient.model';\nimport { AuthApiActions } from '../../auth/actions';\n\n// state interface definition\nexport interface State extends EntityState {\n  selectedPatientId: number | null;\n}\n\n// extend & export entity adapater\nexport const adapater: EntityAdapter = createEntityAdapter({\n  selectId: (patient: IPatient) => patient.id,\n  sortComparer: false\n});\n\n// compose the initial state\nexport const initialState: State = adapater.getInitialState({\n  selectedPatientId: null\n});\n\n/**\n * reducer for the patients state\n * @param state\n * @param action\n */\nexport function reducer(\n  state: State = initialState,\n  action:\n    | PatientsApiActions.PatientsApiActionsUnion\n    | PatientsActions.PatientsActionsUnion\n    | AuthApiActions.AuthApiActionsUnion\n): State {\n\n  switch (action.type) {\n\n    // load patients success state\n    case PatientsApiActions.PatientsApiActionTypes.LoadPatientsSuccess:\n      return adapater.upsertMany(action.payload.patients, state);\n\n    // add a new entity to the state in case creation is successful\n    case PatientsApiActions.PatientsApiActionTypes.CreatePatientSuccess:\n      return adapater.addOne(action.payload.patient, state);\n\n    case PatientsApiActions.PatientsApiActionTypes.EditPatientSuccess:\n      return adapater.upsertOne(action.payload.patient, state);\n\n    // case select patient\n    case PatientsActions.PatientsActionTypes.SelectPatient:\n      return {\n        ...state,\n        selectedPatientId: action.payload.id\n      };\n\n    // clear selected patient\n    case (PatientsActions.PatientsActionTypes.DismissEditPatient):\n      return {\n        ...state,\n        selectedPatientId: null\n      }\n\n    // reset state to initial state on logout\n    case AuthApiActions.AuthApiActionTypes.LogoutSuccess:\n    case PatientsActions.PatientsActionTypes.ResetPatientsState:\n      return initialState;\n\n    default:\n      return state;\n  }\n\n}\n\n/**\n * return the selected patient id from the state\n * @param state\n * @param state the current state\n */\nexport const getSelectedPatientId = (state: State) => state.selectedPatientId;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-8.html":{"url":"interfaces/State-8.html","title":"interface - State-8","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/reducers/user-patients.reducer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n\n\n\n    \n\n\n    \n        import { UsersApiActions, UsersActions } from '../actions';\nimport { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { AuthApiActions } from '../../auth/actions';\nimport { IPatient } from '../models/patient.model';\n\n// state interface definition\nexport interface State extends EntityState {\n}\n\n// extend & export entity adapater\nexport const adapater: EntityAdapter = createEntityAdapter({\n  selectId: (patient: IPatient) => patient.id,\n  sortComparer: false\n});\n\n// compose the initial state\nexport const initialState: State = adapater.getInitialState({\n});\n\n/**\n * reducer for the user patients state\n * @param state\n * @param action\n */\nexport function reducer(\n  state: State = initialState,\n  action:\n    | UsersApiActions.UsersApiActionsUnion\n    | UsersActions.UsersActionsUnion\n    | AuthApiActions.AuthApiActionsUnion\n): State {\n\n  switch (action.type) {\n\n    // load user patients success state\n    case UsersApiActions.UsersApiActionTypes.LoadUserPatientsSuccess:\n      return adapater.upsertMany(action.payload.patients, state);\n\n    // clear selected user\n    case (UsersActions.UsersActionTypes.DismissEditUser):\n      return adapater.removeAll(state)\n\n    // clear user patients\n    case (UsersActions.UsersActionTypes.SelectUser):\n      return adapater.removeAll(state)\n\n    // reset state to initial state on logout\n    case AuthApiActions.AuthApiActionTypes.LogoutSuccess:\n    case UsersActions.UsersActionTypes.ResetUsersState:\n      return initialState;\n\n    default:\n      return state;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-9.html":{"url":"interfaces/State-9.html","title":"interface - State-9","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/reducers/users-page.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createUserError\n                                \n                                \n                                        createUserPending\n                                \n                                \n                                        editUserError\n                                \n                                \n                                        editUserPending\n                                \n                                \n                                        error\n                                \n                                \n                                        LoadUserPatientsError\n                                \n                                \n                                        loadUserPatientsPending\n                                \n                                \n                                        pending\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createUserError\n                                    \n                                \n                                \n                                    \n                                        createUserError:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createUserPending\n                                    \n                                \n                                \n                                    \n                                        createUserPending:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editUserError\n                                    \n                                \n                                \n                                    \n                                        editUserError:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editUserPending\n                                    \n                                \n                                \n                                    \n                                        editUserPending:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LoadUserPatientsError\n                                    \n                                \n                                \n                                    \n                                        LoadUserPatientsError:     null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadUserPatientsPending\n                                    \n                                \n                                \n                                    \n                                        loadUserPatientsPending:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pending\n                                    \n                                \n                                \n                                    \n                                        pending:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UsersApiActions, UsersActions } from '../actions';\n\nexport interface State {\n  error: string | null;\n  pending: boolean;\n  createUserError: string | null;\n  createUserPending: boolean;\n  editUserError: string | null;\n  editUserPending: boolean;\n  loadUserPatientsPending: boolean;\n  LoadUserPatientsError: null;\n}\n\nexport const initialState: State = {\n  error: null,\n  pending: false,\n  createUserError: null,\n  createUserPending: false,\n  editUserError: null,\n  editUserPending: false,\n  loadUserPatientsPending: false,\n  LoadUserPatientsError: null\n};\n\n/**\n * reducer for users page\n *\n * @param state\n * @param action\n */\nexport function reducer(\n  state: State = initialState,\n  action: UsersApiActions.UsersApiActionsUnion\n    | UsersActions.UsersActionsUnion): State {\n  switch (action.type) {\n\n    case (UsersActions.UsersActionTypes.LoadUsers):\n      return {\n        ...state,\n        pending: true,\n        error: null\n      };\n\n    case (UsersActions.UsersActionTypes.EditUser):\n      return {\n        ...state,\n        editUserPending: true,\n        editUserError: null\n      };\n\n    case (UsersActions.UsersActionTypes.LoadUserPatients):\n      return {\n        ...state,\n        loadUserPatientsPending: true,\n        LoadUserPatientsError: null\n      };\n\n    case (UsersActions.UsersActionTypes.CreateUser):\n      return {\n        ...state,\n        createUserPending: true\n      };\n    \n    case (UsersApiActions.UsersApiActionTypes.CreateUserFailure):\n      return {\n        ...state,\n        createUserPending: false,\n        createUserError: action.payload.messages\n      };\n\n    case (UsersApiActions.UsersApiActionTypes.CreateUserSuccess):\n      return {\n        ...state,\n        createUserPending: false,\n        createUserError: null\n      };\n\n    case (UsersApiActions.UsersApiActionTypes.LoadUsersSuccess):\n      return {\n        ...state,\n        pending: false,\n        error: null\n      };\n\n    case (UsersApiActions.UsersApiActionTypes.LoadUserPatientsSuccess):\n      return {\n        ...state,\n        loadUserPatientsPending: false,\n        LoadUserPatientsError: null\n      };\n\n    case (UsersApiActions.UsersApiActionTypes.LoadUserPatientsFailure):\n      return {\n        ...state,\n        loadUserPatientsPending: false,\n        LoadUserPatientsError: action.payload.message\n      };\n\n    case (UsersApiActions.UsersApiActionTypes.EditUserSuccess):\n      return {\n        ...state,\n        editUserPending: false,\n        editUserError: null\n      };\n\n    case (UsersActions.UsersActionTypes.DismissEditUser):\n      return {\n        ...state,\n        error: null\n      }\n\n    case (UsersApiActions.UsersApiActionTypes.LoadUsersFailure):\n      return {\n        ...state,\n        pending: false,\n        error: action.payload.message\n      };\n    \n    case (UsersApiActions.UsersApiActionTypes.EditUserFailure):\n      return {\n        ...state,\n        editUserPending: false,\n        editUserError: action.payload.message\n      };\n\n    default:\n      return state;\n\n  }\n}\n\n/**\n * get the current error state for user pages\n * @param state\n */\nexport const getError = (state: State) => state.error;\n\n/**\n * get the pending state for the user pages\n * @param state\n */\nexport const getPending = (state: State) => state.pending;\n\n/**\n * get the current error state when creating user\n * @param state\n */\nexport const getCreateUserError = (state: State) => state.createUserError;\n\n/**\n * get the pending state when creating user\n * @param state\n */\nexport const getCreateUserPending = (state: State) => state.createUserPending;\n\n/**\n * get the current error state when editing user\n * @param state\n */\nexport const getEditUserError = (state: State) => state.editUserError;\n\n/**\n * get the pending state when editing user\n * @param state\n */\nexport const getEditUserPending = (state: State) => state.editUserPending;\n\n/**\n * get the pending state when loading user patients\n * @param state\n */\nexport const getLoadUserPatientsPending = (state: State) => state.loadUserPatientsPending;\n\n/**\n * get the error state when loading user patients\n * @param state\n */\nexport const getLoadUserPatientsError = (state: State) => state.LoadUserPatientsError;\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeService.html":{"url":"injectables/ThemeService.html","title":"injectable - ThemeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/theme.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activatedTheme\n                            \n                            \n                                    Public\n                                egretThemes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyMatTheme\n                            \n                            \n                                changeTheme\n                            \n                            \n                                flipActiveFlag\n                            \n                            \n                                setThemeFromQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/theme.service.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            applyMatTheme\n                            \n                            \n                        \n                    \n                \n                \n                    \napplyMatTheme(r: Renderer2)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/theme.service.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        r\n                                                        \n                                                                    Renderer2\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeTheme\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeTheme(r: Renderer2, theme: ITheme)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/theme.service.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        r\n                                                        \n                                                                    Renderer2\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        theme\n                                                        \n                                                                    ITheme\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flipActiveFlag\n                            \n                            \n                        \n                    \n                \n                \n                    \nflipActiveFlag(theme: ITheme)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/theme.service.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        theme\n                                                        \n                                                                    ITheme\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setThemeFromQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetThemeFromQuery()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/theme.service.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activatedTheme\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activatedTheme:     ITheme\n\n                    \n                \n                    \n                        \n                            Type :     ITheme\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/theme.service.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            egretThemes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        egretThemes:     ITheme[]\n\n                    \n                \n                    \n                        \n                            Type :     ITheme[]\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n    'name': 'egret-dark-purple',\n    'baseColor': '#9c27b0',\n    'isActive': false\n  }, {\n    'name': 'egret-dark-pink',\n    'baseColor': '#e91e63',\n    'isActive': false\n  }, {\n    'name': 'egret-blue',\n    'baseColor': '#247ba0',\n    'isActive': false\n  }, {\n    'name': 'egret-indigo',\n    'baseColor': '#3f51b5',\n    'isActive': true\n  }]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/theme.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject, Renderer2 } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { getQueryParam } from '../helpers/url.helper';\n\ninterface ITheme {\n  name: string;\n  baseColor?: string;\n  isActive?: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  public egretThemes: ITheme[] = [{\n    'name': 'egret-dark-purple',\n    'baseColor': '#9c27b0',\n    'isActive': false\n  }, {\n    'name': 'egret-dark-pink',\n    'baseColor': '#e91e63',\n    'isActive': false\n  }, {\n    'name': 'egret-blue',\n    'baseColor': '#247ba0',\n    'isActive': false\n  }, {\n    'name': 'egret-indigo',\n    'baseColor': '#3f51b5',\n    'isActive': true\n  }];\n  public activatedTheme: ITheme;\n\n  constructor(\n    @Inject(DOCUMENT) private document: Document\n  ) {\n  }\n\n  // Invoked in AppComponent and apply 'activatedTheme' on startup\n  applyMatTheme(r: Renderer2) {\n    /*\n    ****** (SET YOUR DEFAULT THEME HERE) *******\n    * Assign new Theme to activatedTheme\n    */\n    // this.activatedTheme = this.egretThemes[0];\n    // this.activatedTheme = this.egretThemes[1];\n    // this.activatedTheme = this.egretThemes[2];\n    this.activatedTheme = this.egretThemes[3];\n\n    // *********** ONLY FOR DEMO **********\n    this.setThemeFromQuery();\n    // ************************************\n\n    this.changeTheme(r, this.activatedTheme);\n  }\n\n  changeTheme(r: Renderer2, theme: ITheme) {\n    r.removeClass(this.document.body, this.activatedTheme.name);\n    r.addClass(this.document.body, theme.name);\n    this.flipActiveFlag(theme);\n  }\n\n  flipActiveFlag(theme: ITheme) {\n    this.egretThemes.forEach((t) => {\n      t.isActive = false;\n      if (t.name === theme.name) {\n        t.isActive = true;\n        this.activatedTheme = theme;\n      }\n    });\n  }\n\n  // *********** ONLY FOR DEMO **********\n  setThemeFromQuery() {\n    const themeStr = getQueryParam('theme');\n    try {\n      this.activatedTheme = JSON.parse(themeStr);\n      this.flipActiveFlag(this.activatedTheme);\n    } catch (e) {\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransitioningLayout.html":{"url":"classes/TransitioningLayout.html","title":"class - TransitioningLayout","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransitioningLayout\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/layout.actions.ts\n        \n\n            \n                Description\n            \n            \n                transition layout action\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/layout.actions.ts:88\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:89\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LayoutActionTypes.TransitioningLayout\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:88\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\n/**\n * layout action types\n */\nexport enum LayoutActionTypes {\n  OpenSideNav = '[Layout] Open Side Nav',\n  CloseSideNav = '[Layout] Close Side Nav',\n  CompactSideNav = '[Layout] Compact Nav position',\n  SetNavigationPositionSide = '[Layout] Set Navigation Position Side',\n  SetNavigationPositionTop = '[Layout] Set Navigation Position Top',\n  SetDirectionLtr = '[Layout] Set Direction Ltr',\n  SetDirectionRtr = '[Layout] Set Direction Rtr',\n  TransitioningLayout = '[Layout] Transitioning Layout',\n  UseBreadcrumb = '[Layout] Use Breadcrumb',\n  MakeBreadcrumbSimple = '[Layout] Make Breadcrumb Simple',\n  MakeBreadcrumbTitle = '[Layout] Make Breadcrumb Title',\n  FixTopbar = '[Layout] Fix Topbar'\n}\n\n/**\n * open side navigation action\n */\nexport class OpenSideNav {\n  readonly type = LayoutActionTypes.OpenSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * close side navigation action\n */\nexport class CloseSideNav {\n  readonly type = LayoutActionTypes.CloseSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * compact side navigation action\n */\nexport class CompactSideNav {\n  readonly type = LayoutActionTypes.CompactSideNav;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to side action\n */\nexport class SetNavigationPositionSide {\n  readonly type = LayoutActionTypes.SetNavigationPositionSide;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to top action\n */\nexport class SetNavigationPositionTop {\n  readonly type = LayoutActionTypes.SetNavigationPositionTop;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to left-to-right action\n */\nexport class SetDirectionLtr {\n  readonly type = LayoutActionTypes.SetDirectionLtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to right-to-left action\n */\nexport class SetDirectionRtr {\n  readonly type = LayoutActionTypes.SetDirectionRtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * transition layout action\n */\nexport class TransitioningLayout {\n  readonly type = LayoutActionTypes.TransitioningLayout;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * Use breadcrumb action\n */\nexport class UseBreadcrumb {\n  readonly type = LayoutActionTypes.UseBreadcrumb;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * make breadcrumb simple action\n */\nexport class MakeBreadcrumbSimple {\n  readonly type = LayoutActionTypes.MakeBreadcrumbSimple;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * make breadcrum title action\n */\nexport class MakeBreadcrumbTitle {\n  readonly type = LayoutActionTypes.MakeBreadcrumbTitle;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * fix top bar action\n */\nexport class FixTopbar {\n  readonly type = LayoutActionTypes.FixTopbar;\n  constructor(public payload: boolean) { \n  }\n}\n\nexport type LayoutActions = \n  | OpenSideNav\n  | CloseSideNav\n  | CompactSideNav\n  | SetNavigationPositionSide\n  | SetNavigationPositionTop\n  | SetDirectionLtr\n  | SetDirectionRtr\n  | TransitioningLayout\n  | UseBreadcrumb\n  | MakeBreadcrumbSimple\n  | MakeBreadcrumbTitle\n  | FixTopbar;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UseBreadcrumb.html":{"url":"classes/UseBreadcrumb.html","title":"class - UseBreadcrumb","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UseBreadcrumb\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/layout.actions.ts\n        \n\n            \n                Description\n            \n            \n                Use breadcrumb action\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/layout.actions.ts:97\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:98\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LayoutActionTypes.UseBreadcrumb\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:97\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\n/**\n * layout action types\n */\nexport enum LayoutActionTypes {\n  OpenSideNav = '[Layout] Open Side Nav',\n  CloseSideNav = '[Layout] Close Side Nav',\n  CompactSideNav = '[Layout] Compact Nav position',\n  SetNavigationPositionSide = '[Layout] Set Navigation Position Side',\n  SetNavigationPositionTop = '[Layout] Set Navigation Position Top',\n  SetDirectionLtr = '[Layout] Set Direction Ltr',\n  SetDirectionRtr = '[Layout] Set Direction Rtr',\n  TransitioningLayout = '[Layout] Transitioning Layout',\n  UseBreadcrumb = '[Layout] Use Breadcrumb',\n  MakeBreadcrumbSimple = '[Layout] Make Breadcrumb Simple',\n  MakeBreadcrumbTitle = '[Layout] Make Breadcrumb Title',\n  FixTopbar = '[Layout] Fix Topbar'\n}\n\n/**\n * open side navigation action\n */\nexport class OpenSideNav {\n  readonly type = LayoutActionTypes.OpenSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * close side navigation action\n */\nexport class CloseSideNav {\n  readonly type = LayoutActionTypes.CloseSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * compact side navigation action\n */\nexport class CompactSideNav {\n  readonly type = LayoutActionTypes.CompactSideNav;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to side action\n */\nexport class SetNavigationPositionSide {\n  readonly type = LayoutActionTypes.SetNavigationPositionSide;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to top action\n */\nexport class SetNavigationPositionTop {\n  readonly type = LayoutActionTypes.SetNavigationPositionTop;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to left-to-right action\n */\nexport class SetDirectionLtr {\n  readonly type = LayoutActionTypes.SetDirectionLtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to right-to-left action\n */\nexport class SetDirectionRtr {\n  readonly type = LayoutActionTypes.SetDirectionRtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * transition layout action\n */\nexport class TransitioningLayout {\n  readonly type = LayoutActionTypes.TransitioningLayout;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * Use breadcrumb action\n */\nexport class UseBreadcrumb {\n  readonly type = LayoutActionTypes.UseBreadcrumb;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * make breadcrumb simple action\n */\nexport class MakeBreadcrumbSimple {\n  readonly type = LayoutActionTypes.MakeBreadcrumbSimple;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * make breadcrum title action\n */\nexport class MakeBreadcrumbTitle {\n  readonly type = LayoutActionTypes.MakeBreadcrumbTitle;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * fix top bar action\n */\nexport class FixTopbar {\n  readonly type = LayoutActionTypes.FixTopbar;\n  constructor(public payload: boolean) { \n  }\n}\n\nexport type LayoutActions = \n  | OpenSideNav\n  | CloseSideNav\n  | CompactSideNav\n  | SetNavigationPositionSide\n  | SetNavigationPositionTop\n  | SetDirectionLtr\n  | SetDirectionRtr\n  | TransitioningLayout\n  | UseBreadcrumb\n  | MakeBreadcrumbSimple\n  | MakeBreadcrumbTitle\n  | FixTopbar;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/models/user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        confirm_password\n                                \n                                \n                                            Optional\n                                        email\n                                \n                                \n                                            Optional\n                                        firstname\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        last_login\n                                \n                                \n                                            Optional\n                                        lastname\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        nursing_home\n                                \n                                \n                                            Optional\n                                        nursing_home_key\n                                \n                                \n                                            Optional\n                                        password\n                                \n                                \n                                            Optional\n                                        patient_profiles\n                                \n                                \n                                            Optional\n                                        registered_on\n                                \n                                \n                                            Optional\n                                        user_patient_permission\n                                \n                                \n                                            Optional\n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        confirm_password\n                                    \n                                \n                                \n                                    \n                                        confirm_password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                    \n                                \n                                \n                                    \n                                        firstname:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_login\n                                    \n                                \n                                \n                                    \n                                        last_login:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                    \n                                \n                                \n                                    \n                                        lastname:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nursing_home\n                                    \n                                \n                                \n                                    \n                                        nursing_home:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nursing_home_key\n                                    \n                                \n                                \n                                    \n                                        nursing_home_key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        patient_profiles\n                                    \n                                \n                                \n                                    \n                                        patient_profiles:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registered_on\n                                    \n                                \n                                \n                                    \n                                        registered_on:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_patient_permission\n                                    \n                                \n                                \n                                    \n                                        user_patient_permission:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IPatient } from './patient.model';\n\nexport interface User {\n  id?: number | null;\n  name?: string;\n  username?: string;\n  firstname?: string;\n  lastname?: string;\n  email?: string;\n  nursing_home?: string;\n  registered_on?: string;\n  last_login?: string;\n  patient_profiles?: number;\n  password?: string;\n  confirm_password?: string;\n  nursing_home_key?: string;\n  user_patient_permission?: number | null;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserEditFormComponent.html":{"url":"components/UserEditFormComponent.html","title":"component - UserEditFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserEditFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-user-edit-form\n            \n\n            \n                styleUrls\n                ./user-edit-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-edit-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                componentActive\n                            \n                            \n                                    Public\n                                confirmService\n                            \n                            \n                                displayMessage\n                            \n                            \n                                errorMessage$\n                            \n                            \n                                    Private\n                                genericValidator\n                            \n                            \n                                loadUserPatientsError$\n                            \n                            \n                                loadUserPatientsPending$\n                            \n                            \n                                pageTitle\n                            \n                            \n                                user\n                            \n                            \n                                userEditForm\n                            \n                            \n                                userPatients$\n                            \n                            \n                                    Private\n                                validationMessages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                cancelEdit\n                            \n                            \n                                deleteUser\n                            \n                            \n                                displayUser\n                            \n                            \n                                editUser\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, fb: FormBuilder, translate: TranslateService, confirmService: ConfirmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmService\n                                                  \n                                                        \n                                                                    ConfirmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            blur\n                            \n                            \n                        \n                    \n                \n                \n                    \nblur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts:97\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancelEdit\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancelEdit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts:122\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts:143\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisplayUser(user: User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts:101\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editUser\n                            \n                            \n                        \n                    \n                \n                \n                    \neditUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts:154\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts:91\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentActive\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        componentActive:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            confirmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        confirmService:     ConfirmService\n\n                    \n                \n                    \n                        \n                            Type :     ConfirmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        displayMessage:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            genericValidator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        genericValidator:     GenericValidator\n\n                    \n                \n                    \n                        \n                            Type :     GenericValidator\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadUserPatientsError$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadUserPatientsError$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getLoadUserPatientsError)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadUserPatientsPending$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadUserPatientsPending$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getLoadUserPatientsPending)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pageTitle:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'User Edit'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userEditForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userEditForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userPatients$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userPatients$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getAllUserPatients)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validationMessages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        validationMessages:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { Observable, of } from 'rxjs';\n\nimport { User } from '../../../models/user.model';\nimport { GenericValidator } from '../../../shared/generic-validator';\nimport { NumberValidators } from '../../../shared/number-validator';\n\nimport { takeWhile } from 'rxjs/operators';\nimport { Store, select } from '@ngrx/store';\n\nimport * as fromDashboard from '../../../reducers';\nimport * as usersActions from '../../../actions/users.actions';\nimport { IPatient } from 'src/app/dashboard/models/patient.model';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ConfirmService } from '../../../../core/services/confirm.service'\n\n@Component({\n  selector: 'moio-user-edit-form',\n  templateUrl: './user-edit-form.component.html',\n  styleUrls: ['./user-edit-form.component.scss']\n})\nexport class UserEditFormComponent implements OnInit, OnDestroy {\n  pageTitle = 'User Edit';\n  errorMessage$: Observable;\n  componentActive = true;\n  userEditForm: FormGroup;\n\n  user: User;\n\n  // Use with the generic validation message class\n  displayMessage: { [key: string]: string } = {};\n  private validationMessages: { [key: string]: { [key: string]: string } };\n  private genericValidator: GenericValidator;\n\n  // all user patients\n  userPatients$: Observable = this.store.pipe(\n    select(fromDashboard.getAllUserPatients)\n  );\n\n  // get error state when loading user patients\n  loadUserPatientsError$: Observable = this.store.pipe(\n    select(fromDashboard.getLoadUserPatientsError)\n  );\n\n  // get pending state when loading user patients\n  loadUserPatientsPending$: Observable = this.store.pipe(\n    select(fromDashboard.getLoadUserPatientsPending)\n  );\n\n  constructor(private store: Store,\n              private fb: FormBuilder,\n              private translate: TranslateService,\n              public confirmService: ConfirmService) {\n\n    // Defines all of the validation messages for the form.\n    // These could instead be retrieved from a file or database.\n    this.validationMessages = {\n      username: {\n        required: 'Username is required.'\n      }\n    };\n\n    // Define an instance of the validator for use with this form,\n    // passing in this form's set of validation messages.\n    this.genericValidator = new GenericValidator(this.validationMessages);\n\n    this.translate.setDefaultLang('de');\n  }\n\n  ngOnInit() {\n    // Watch for changes to the currently selected user\n    this.store.pipe(\n      select(fromDashboard.getSelectedUser),\n      takeWhile(() => this.componentActive)\n    ).subscribe(\n      user => {\n        if (user){\n          this.user = user;\n          this.displayUser(this.user);\n        }\n      }\n    );\n\n    // Watch for changes to the error message\n    this.errorMessage$ = this.store.pipe(select(fromDashboard.getUserEditionError));\n\n  }\n\n  ngOnDestroy(): void {\n    this.componentActive = false;\n  }\n\n  // Also validate on blur\n  // Helpful if the user tabs through required fields\n  blur(): void {\n    this.displayMessage = this.genericValidator.processMessages(this.userEditForm);\n  }\n\n  displayUser(user: User) {\n    // Display the appropriate page title\n    this.pageTitle = `${this.user.firstname} ${this.user.lastname}`;\n    // Define the form group\n    this.userEditForm = this.fb.group({\n      id: [user.id],\n      firstname: [user.firstname],\n      lastname: [user.lastname],\n      email: [user.email,[Validators.email]],\n      username: [user.username, Validators.required],      \n      nursing_home: [user.nursing_home],\n      registered_on: [user.registered_on],\n      last_login: [user.last_login]\n    });\n\n    // Watch for value changes\n    const formValuechanges = this.userEditForm.valueChanges.subscribe(\n      value => this.displayMessage = this.genericValidator.processMessages(this.userEditForm)\n    );\n  }\n\n  cancelEdit(): void {\n    // Redisplay the currently selected user\n    // replacing any edits made\n    this.displayUser(this.user);\n    this.store.dispatch(new usersActions.DismissEditUser);\n\n\n    const title = this.translate.instant(\"CloseUnsavedForm.title\");\n    const message = this.translate.instant(\"CloseUnsavedForm.message\");\n    if (this.userEditForm.dirty){\n      this.confirmService.confirm({title: title, message: message})\n      .subscribe(res => {\n        if (res){\n          this.store.dispatch(new usersActions.DismissEditUser());\n        }\n      })\n    }else{\n      this.store.dispatch(new usersActions.DismissEditUser());\n    }\n  }\n\n  deleteUser(): void {\n    if (this.user && this.user.id) {\n      if (confirm(`Really delete the user: ${this.user.firstname}?`)) {\n        this.store.dispatch(new usersActions.DeleteUser(this.user.id));\n      }\n    } else {\n      // No need to delete, it was never saved\n      this.store.dispatch(new usersActions.DismissEditUser);\n    }\n  }\n\n  editUser(): void {\n    console.log(this.userEditForm.value);\n    if (this.userEditForm.valid) {\n      if (this.userEditForm.dirty) {\n        // Copy over all of the original user properties\n        // Then copy over the values from the form\n        // This ensures values not on the form, such as the Id, are retained\n        const p = { id: this.userEditForm.get('id').value,\n                    firstname: this.userEditForm.get('firstname').value,\n                    lastname: this.userEditForm.get('lastname').value,\n                    email: this.userEditForm.get('email').value,\n                    username: this.userEditForm.get('username').value\n                  };\n\n        this.store.dispatch(new usersActions.EditUser(p));\n      }\n    } else {\n      this.errorMessage$ = of('Please correct the validation errors.');\n    }\n  }\n\n}\n    \n\n    \n        \n  \n    \n      {{pageTitle}}\n      \n    \n    \n      \n        \n          \n            \n              \n                \n              \n            \n\n            \n              \n                \n              \n            \n\n            \n              \n                \n              \n              \n                {{'EmailInvalid' | translate}} \n            \n\n            \n              \n                \n              \n               {{'UsernameRequired' | translate}} \n              \n                {{'Username' | translate}} \n            \n          \n\n          \n            \n              \n                \n              \n            \n\n            \n              \n                \n              \n            \n\n            \n              \n                \n              \n            \n          \n          \n            \n              {{'Edit' | translate}}\n            \n            {{'Cancel' | translate}}\n          \n        \n      \n    \n  \n\n  \n    \n    {{'ConnectedPatientProfiles' | translate}}\n    \n      \n        \n\n          \n            \n              {{ row?.firstname }} {{ row?.lastname }}\n            \n          \n          \n            \n              {{ row?.permission }}\n            \n          \n          \n            \n              {{ row?.nursing_home.name }}\n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./user-edit-form.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{pageTitle}}                                                                                                                                                                                                                                                                    {{\\'EmailInvalid\\' | translate}}                                                                                    {{\\'UsernameRequired\\' | translate}}                               {{\\'Username\\' | translate}}                                                                                                                                                                                                                                                                                           {{\\'Edit\\' | translate}}                        {{\\'Cancel\\' | translate}}                                        {{\\'ConnectedPatientProfiles\\' | translate}}                                                      {{ row?.firstname }} {{ row?.lastname }}                                                          {{ row?.permission }}                                                          {{ row?.nursing_home.name }}                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'UserEditFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserFormComponent.html":{"url":"components/UserFormComponent.html","title":"component - UserFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/components/users/user-form/user-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                user-form\n            \n\n\n\n\n            \n                templateUrl\n                ./user-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                confirmService\n                            \n                            \n                                createUserPending$\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                loadNursingHomeErrorMessage$\n                            \n                            \n                                loadNursinghomePending$\n                            \n                            \n                                nursingHomes$\n                            \n                            \n                                saveUserErrorMessage$\n                            \n                            \n                                    Public\n                                translate\n                            \n                            \n                                    Public\n                                userForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                passwordMatchValidator\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, dialogRef: MatDialogRef, fb: FormBuilder, store: Store, translate: TranslateService, confirmService: ConfirmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/components/users/user-form/user-form.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmService\n                                                  \n                                                        \n                                                                    ConfirmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancel\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-form/user-form.component.ts:112\n                            \n                        \n\n\n                \n                    \n                            dismiss the open user form dialogue with confirmation if \nthe form has unsave data\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-form/user-form.component.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordMatchValidator\n                            \n                            \n                        \n                    \n                \n                \n                    \npasswordMatchValidator(control: AbstractControl)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-form/user-form.component.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control\n                                                        \n                                                                    AbstractControl\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submit\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-form/user-form.component.ts:99\n                            \n                        \n\n\n                \n                    \n                            dispatch new create user action when form is submitted\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            confirmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        confirmService:     ConfirmService\n\n                    \n                \n                    \n                        \n                            Type :     ConfirmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-form/user-form.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createUserPending$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        createUserPending$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getUserCreationPending)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-form/user-form.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-form/user-form.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-form/user-form.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadNursingHomeErrorMessage$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadNursingHomeErrorMessage$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getUserCreationError)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-form/user-form.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadNursinghomePending$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadNursinghomePending$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getNursingHomePagePending)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-form/user-form.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nursingHomes$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nursingHomes$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getAllNursingHomes)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-form/user-form.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveUserErrorMessage$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        saveUserErrorMessage$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getNursingHomePageError)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-form/user-form.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translate:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-form/user-form.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-form/user-form.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { FormBuilder, Validators, FormGroup, AbstractControl } from '@angular/forms';\n/* NGRX */\nimport { Store, select } from '@ngrx/store';\nimport * as fromDashboard from '../../../reducers';\nimport * as nursingHomeActions from '../../../actions/nursing-homes.actions';\nimport { Observable } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\nimport { UsersApiActions, UsersActions } from '../../../actions';\nimport { User } from '../../../models/user.model';\nimport { NursingHome } from 'src/app/dashboard/models/nursing-home.model';\nimport { ConfirmService } from '../../../../core/services/confirm.service'\n\n\n@Component({\n  selector: 'user-form',\n  templateUrl: './user-form.component.html'\n})\nexport class UserFormComponent implements OnInit {\n  public userForm: FormGroup;\n\n  // observe user creation pending state\n  createUserPending$: Observable = this.store.pipe(\n    select(fromDashboard.getUserCreationPending)\n  );\n\n  // observe errors while saving the user\n  saveUserErrorMessage$: Observable = this.store.pipe(\n    select(fromDashboard.getNursingHomePageError)\n  );\n\n  // observe pending state while loading nursing homes\n  loadNursinghomePending$: Observable = this.store.pipe(\n    select(fromDashboard.getNursingHomePagePending)\n  );\n\n  // observe errors while loading nursing homes\n  loadNursingHomeErrorMessage$: Observable = this.store.pipe(\n    select(fromDashboard.getUserCreationError)\n  );\n\n  nursingHomes$: Observable = this.store.pipe(\n    select(fromDashboard.getAllNursingHomes)\n  );\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public dialogRef: MatDialogRef,\n    private fb: FormBuilder,\n    private store: Store, \n    public translate: TranslateService,\n    public confirmService: ConfirmService\n  ) { \n    translate.setDefaultLang('de');\n  }\n\n  ngOnInit() {\n    // LoadAllNursingHomes\n    this.store.dispatch(new nursingHomeActions.LoadNursingHomes());\n\n    /**\n     * Create userForm group to collect user details\n     */\n    this.userForm = this.fb.group({\n      firstname: [''],\n      lastname: [''],\n      username: ['', Validators.required],\n      email: ['',[Validators.email]],\n      password: ['',Validators.required],\n      password_confirmation: ['',Validators.required],\n      nursing_home_key: ['']\n    },\n    {\n      // check whether our password and confirm password match\n      validator: this.passwordMatchValidator\n   })\n  }\n\n  passwordMatchValidator(control: AbstractControl) {\n    const password: string = control.get('password').value; // get password from our password form control\n    const passwordConfirmation: string = control.get('password_confirmation').value; // get password from our password_confirmation form control\n    // compare is the password math\n    if (password !== passwordConfirmation) {\n      // if they don't match, set an error in our passwordConfirmation form control\n      control.get('password_confirmation').setErrors({ NoPasswordMatch: true });\n    }else{\n     if ( control.getError('NoPasswordMatch')){\n       control.setErrors(null);\n     }\n      return null\n    }\n  }\n\n  /**\n   * dispatch new create user action when form is submitted\n   * @param user\n   */\n  submit() {\n    if (this.userForm.valid) {\n      const user = this.userForm.value;\n      console.log(user);\n      this.store.dispatch(new UsersActions.CreateUser({user}));\n    }\n    // this.dialogRef.close(this.userForm.value)\n  }\n\n  /**\n   * dismiss the open user form dialogue with confirmation if \n   * the form has unsave data\n   */\n  cancel(){\n    const title = this.translate.instant(\"CloseUnsavedForm.title\");\n    const message = this.translate.instant(\"CloseUnsavedForm.message\");\n    if (this.userForm.dirty){\n      this.confirmService.confirm({title: title, message: message})\n      .subscribe(res => {\n        if (res){\n          this.store.dispatch(new UsersActions.DismissUserFormDialog());\n        }\n      })\n    }else{\n      this.store.dispatch(new UsersActions.DismissUserFormDialog());\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n{{data.title}}\n\n  {{loadNursingHomeErrorMessage$ | async}}!\n\n\n  {{saveUserErrorMessage$ | async }}!\n\n\n  \n    \n      \n        \n        {{'FirstNameRequired' | translate}}\n      \n    \n\n    \n      \n        \n        {{'LastNameRequired' | translate}}\n      \n    \n\n    \n      \n        \n        {{'UserNameRequired' | translate}}\n      \n    \n\n    \n      \n        \n        {{'EmailRequired' | translate}}\n      \n    \n\n    \n      \n        \n        {{'PasswordRequried' | translate}}\n      \n    \n\n    \n      \n        \n        \n          {{'ConfirmPasswordRequired' | translate}}\n        \n         \n          {{ 'NoPasswordMatch' | translate }} \n        \n      \n    \n\n    \n      \n        \n          \n            {{nursingHome.name}}\n          \n        \n        {{'NursingHomeKeyRequired' |\n          translate}}\n\n      \n    \n\n    \n      {{'Save' |\n        translate}}\n      \n      {{'Cancel' | translate}}\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{data.title}}  {{loadNursingHomeErrorMessage$ | async}}!  {{saveUserErrorMessage$ | async }}!                            {{\\'FirstNameRequired\\' | translate}}                                    {{\\'LastNameRequired\\' | translate}}                                    {{\\'UserNameRequired\\' | translate}}                                    {{\\'EmailRequired\\' | translate}}                                    {{\\'PasswordRequried\\' | translate}}                                              {{\\'ConfirmPasswordRequired\\' | translate}}                           {{ \\'NoPasswordMatch\\' | translate }}                                                           {{nursingHome.name}}                          {{\\'NursingHomeKeyRequired\\' |          translate}}                    {{\\'Save\\' |        translate}}            {{\\'Cancel\\' | translate}}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'UserFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserListComponent.html":{"url":"components/UserListComponent.html","title":"component - UserListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/components/users/user-list/user-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-user-list\n            \n\n            \n                styleUrls\n                ./user-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columns\n                            \n                            \n                                componentActive\n                            \n                            \n                                errorMessage$\n                            \n                            \n                                ids\n                            \n                            \n                                isPending$\n                            \n                            \n                                    Public\n                                items\n                            \n                            \n                                selectedUser\n                            \n                            \n                                users\n                            \n                            \n                                users$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                newUser\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSelectRow\n                            \n                            \n                                selectUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, translate: TranslateService, dialog: MatDialog, snack: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/components/users/user-list/user-list.component.ts:69\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Store\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                TranslateService\n\n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        snack\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nnewUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-list/user-list.component.ts:116\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-list/user-list.component.ts:111\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-list/user-list.component.ts:92\n                            \n                        \n\n\n                \n                    \n                            init UserListComponent component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSelectRow\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSelectRow(undefined)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-list/user-list.component.ts:134\n                            \n                        \n\n\n                \n                    \n                            emit the selected user\nthe datatable component returns an ARRAY of selected\nelements depending on the 'selectionType' setting.\nIn our case just a single user!\nTherefor emit 0th element of the selection.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectUser(user: User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-list/user-list.component.ts:121\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columns\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        columns:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      prop: 'fullname',\n      name: this.translate.instant('Name')\n    },\n    {\n      prop: 'nursing_home',\n      name: this.translate.instant('NursingHome')\n    },\n    {\n      prop: 'registered_on',\n      name: this.translate.instant('RegisteredOn')\n    },\n    {\n      prop: 'last_login',\n      name: this.translate.instant('LastLoginOn')\n    },\n    {\n      prop: 'patient_profiles',\n      name: this.translate.instant('PatientProfiles')\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-list/user-list.component.ts:31\n                            \n                        \n\n                \n                    \n                        Users Table columns\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentActive\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        componentActive:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-list/user-list.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getUserPageError)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-list/user-list.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ids\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ids:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-list/user-list.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isPending$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isPending$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getUserPagePending)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-list/user-list.component.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        items:     User[]\n\n                    \n                \n                    \n                        \n                            Type :     User[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-list/user-list.component.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedUser:     User | null\n\n                    \n                \n                    \n                        \n                            Type :     User | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-list/user-list.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-list/user-list.component.ts:87\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getAllUsers)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-list/user-list.component.ts:57\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy} from '@angular/core';\nimport { MatProgressBar, MatButton } from '@angular/material';\nimport { MatDialogRef, MatDialog, MatSnackBar } from '@angular/material';\nimport { UserFormComponent } from '../user-form/user-form.component';\n\nimport { User } from '../../../models/user.model';\n\n/* NGRX */\nimport { Store, select } from '@ngrx/store';\nimport * as fromDashboard from '../../../reducers';\nimport * as usersActions from '../../../actions/users.actions';\nimport { Observable } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\nimport { takeWhile } from 'rxjs/operators';\n\n@Component({\n  selector: 'moio-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.scss']\n})\nexport class UserListComponent implements OnInit, OnDestroy {\n  \n  // Used to select user in the list\n  selectedUser: User | null;\n  componentActive = true;\n\n\n  /**\n   * Users Table columns\n   */\n  columns = [\n    {\n      prop: 'fullname',\n      name: this.translate.instant('Name')\n    },\n    {\n      prop: 'nursing_home',\n      name: this.translate.instant('NursingHome')\n    },\n    {\n      prop: 'registered_on',\n      name: this.translate.instant('RegisteredOn')\n    },\n    {\n      prop: 'last_login',\n      name: this.translate.instant('LastLoginOn')\n    },\n    {\n      prop: 'patient_profiles',\n      name: this.translate.instant('PatientProfiles')\n    }\n  ];\n\n  ids: string[];\n  \n  // all users\n  users$: Observable = this.store.pipe(\n    select(fromDashboard.getAllUsers)\n  );\n\n  // pending action\n  isPending$: Observable = this.store.pipe(\n    select(fromDashboard.getUserPagePending)\n  );\n\n  // get error status\n  errorMessage$: Observable = this.store.pipe(\n    select(fromDashboard.getUserPageError)\n  );\n\n  /**\n   * constructor\n   * @param store Store\n   * @param translate TranslateService\n   */\n  constructor(\n    private store: Store, \n    private translate: TranslateService,\n    private dialog: MatDialog,\n    private snack: MatSnackBar) {\n\n      this.translate.setDefaultLang('de');\n\n  }\n\n  public items: User[];\n  users: Observable;\n\n  /**\n   * init UserListComponent component\n   */\n  ngOnInit(): void {\n\n    this.store.dispatch(new usersActions.LoadUsers());\n\n    this.users = this.store.pipe(select(fromDashboard.getAllUsers)) as Observable;\n\n    this.store.pipe(select(fromDashboard.getUsersIds))\n    .subscribe((ids: string[]) => this.ids = ids);\n\n    // Subscribe here because it does not use an async pipe\n    this.store.pipe(\n      select(fromDashboard.getSelectedUser),\n      takeWhile(() => this.componentActive)\n    ).subscribe(\n      currentUser => this.selectedUser = currentUser\n    );\n  }\n\n  // unsubscribe from the observable\n  ngOnDestroy(): void {\n    this.componentActive = false;\n  }\n\n  // Create User action\n  newUser(): void {\n    this.store.dispatch(new usersActions.InitializeUser());\n  }\n\n  // Select user action\n  selectUser(user: User): void {\n    this.store.dispatch(new usersActions.SelectUser(user));\n  }\n\n  /**\n   * emit the selected user\n   * the datatable component returns an ARRAY of selected\n   * elements depending on the 'selectionType' setting.\n   * In our case just a single user!\n   * Therefor emit 0th element of the selection.\n   *\n   * @param selected User first element of array\n   */\n  onSelectRow({selected}) {\n    // this.userSelected.emit(selected[0]);\n    const user = selected[0];\n    this.store.dispatch(new usersActions.SelectUser(user));\n    this.store.dispatch(new usersActions.LoadUserPatients(user.id));\n    \n  }\n\n}\n\n    \n\n    \n        \n\n  \n  \n \n    \n\n    \n                \n                    ./user-list.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'UserListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersComponent.html":{"url":"components/UsersComponent.html","title":"component - UsersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/components/users/users.component.ts\n\n\n    \n        Description\n    \n    \n        contains basic page layout for the\nusers section\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-users-page\n            \n\n\n\n\n            \n                templateUrl\n                ./users.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedUserId$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openPopUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, translate: TranslateService, dialog: MatDialog, snack: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/components/users/users.component.ts:23\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Store\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        snack\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openPopUp\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenPopUp()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/users/users.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedUserId$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedUserId$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getSelectedUserId)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/users.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport * as fromDashboard from '../../reducers';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { MatDialogRef, MatDialog, MatSnackBar } from '@angular/material';\n\nimport { UserFormComponent } from './user-form/user-form.component';\n\n/**\n * contains basic page layout for the\n * users section\n */\n@Component({\n  selector: 'moio-users-page',\n  templateUrl: './users.component.html'\n})\nexport class UsersComponent {\n\n  // get selected user id\n  selectedUserId$: Observable = this.store.pipe(\n    select(fromDashboard.getSelectedUserId)\n  );\n\n  /**\n   * constructor\n   * @param store Store\n   */\n  constructor(\n    private store: Store,\n    private translate: TranslateService,\n    private dialog: MatDialog,\n    private snack: MatSnackBar) {\n\n  }\n\n   //add appUser\n   openPopUp() { \n    let title = this.translate.instant('UserFormTitle');\n    let dialogRef: MatDialogRef = this.dialog.open(UserFormComponent, {\n      width: '720px',\n      disableClose: true,\n      data: { title: title },\n      id: 'userCreationForm'\n    });\n  }\n}\n\n    \n\n    \n        \n  add{{'Create' | translate}}\n\n\n  \n    \n  \n  \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  add{{\\'Create\\' | translate}}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'UsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersEffects.html":{"url":"injectables/UsersEffects.html","title":"injectable - UsersEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/effects/users.effects.ts\n        \n\n            \n                Description\n            \n            \n                users effects\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createUser$\n                            \n                            \n                                createUserSuccess$\n                            \n                            \n                                DismissUserFormDialog\n                            \n                            \n                                editUser$\n                            \n                            \n                                editUserSuccess$\n                            \n                            \n                                loadUserPatients\n                            \n                            \n                                loadUsers\n                            \n                            \n                                popUpUserForm$\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, usersService: UsersService, router: Router, store: Store, snackBar: MatSnackBar, translate: TranslateService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/effects/users.effects.ts:243\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                    UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createUser$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        createUser$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(UsersActions.UsersActionTypes.CreateUser),\n      map(action => action.payload.user),\n      exhaustMap((userData: User) => {\n\n        return this.usersService.createUser(userData)\n          .pipe(\n            // delay(2000),\n            map(user => {\n              console.log(user);\n              return new UsersApiActions.CreateUserSuccess({user});\n            }),\n            catchError(httpResponse => {\n              console.log(httpResponse);\n              const messages = httpResponse.statusText.toLowerCase();\n\n              return of(new UsersApiActions.CreateUserFailure({messages}));\n            })\n          );\n      })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/users.effects.ts:27\n                            \n                        \n\n                \n                    \n                        effect fired, when the create new user form is submitted\nsend data to api and handle result\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createUserSuccess$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        createUserSuccess$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(UsersApiActions.UsersApiActionTypes.CreateUserSuccess),\n      tap(() => {\n        this.dialog.getDialogById(\"userCreationForm\").close();\n      })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect({dispatch: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/users.effects.ts:96\n                            \n                        \n\n                \n                    \n                        observes the CreateUserSuccess action\nin case create user succeeds, the form dialog box is closed\nand the users list is shown\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DismissUserFormDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DismissUserFormDialog:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(UsersActions.UsersActionTypes.DismissUserFormDialog),\n      map(() => {\n        this.dialog.getDialogById('userCreationForm').close();\n      })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect({dispatch: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/users.effects.ts:237\n                            \n                        \n\n                \n                    \n                        effect to dismiss the dialog for adding user details\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editUser$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editUser$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$.pipe(\n    ofType(UsersActions.UsersActionTypes.EditUser),\n    map(action => action.payload),\n    exhaustMap((user: User) => {\n\n      return this.usersService.updateUser(user)\n        .pipe(\n          map((savedUser: User) => {\n            this.store.dispatch(new UsersActions.DismissEditUser());\n            return new UsersApiActions.EditUserSuccess({user: savedUser});\n          }),\n          catchError(httpError => {\n            console.log(httpError);\n              const message = httpError.statusText.toLowerCase();\n\n              const snackBarRef = this.snackBar.open(this.translate.instant(message), this.translate.instant('Retry'), {\n                duration: 10000\n              });\n\n              snackBarRef.afterDismissed().subscribe(snackBarDismiss => {\n\n                if (snackBarDismiss.dismissedByAction){\n                  this.store.dispatch(new UsersActions.EditUser(user));\n                } else {\n                  this.router.navigate(['/dashboard/users']);\n                }\n              });\n\n              return of(new UsersApiActions.LoadUserPatientsFailure({message}));\n            })\n        );\n    })\n  )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/users.effects.ts:54\n                            \n                        \n\n                \n                    \n                        send user data to api and handle result\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editUserSuccess$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editUserSuccess$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(UsersApiActions.UsersApiActionTypes.EditUserSuccess),\n      tap(() => {\n        this.store.dispatch(new UsersActions.LoadUsers());\n      })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect({dispatch: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/users.effects.ts:111\n                            \n                        \n\n                \n                    \n                        observes the EditUserSuccess action\nin case edit user succeeds, the list is reloaded\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadUserPatients\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadUserPatients:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(UsersActions.UsersActionTypes.LoadUserPatients),\n      map(action => action.payload),\n      exhaustMap((id: number) => {\n\n        return this.usersService.getUserPatients(id)\n          .pipe(\n            delay(2000),\n            map((patients: IPatient[]) => {\n              console.log(patients);\n\n              for (let key in patients){\n                const patient = patients[key];\n                const user = patient.users.filter(user => user.id === id );\n                let permission = \"\";\n\n                if(user[0].user_patient_permission == 1){\n                  permission = \"Administrator\";\n                }else{\n                  permission = \"Read Only\"\n                }\n                patient[\"permission\"] = permission;\n              }\n\n              return new UsersApiActions.LoadUserPatientsSuccess({patients});\n            }),\n            catchError(httpError => {\n              const message = httpError.statusText.toLowerCase();\n\n              const snackBarRef = this.snackBar.open(this.translate.instant(message), this.translate.instant('Retry'), {\n                duration: 10000\n              });\n\n              snackBarRef.afterDismissed().subscribe(snackBarDismiss => {\n\n                if (snackBarDismiss.dismissedByAction){\n                  this.store.dispatch(new UsersActions.LoadUserPatients(id));\n                } else {\n                  this.router.navigate(['/dashboard/users']);\n                }\n              });\n\n              return of(new UsersApiActions.LoadUserPatientsFailure({message}));\n            })\n          );\n      })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/users.effects.ts:162\n                            \n                        \n\n                \n                    \n                        effect for loading user users\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadUsers:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(UsersActions.UsersActionTypes.LoadUsers),\n      exhaustMap(() => {\n\n        return this.usersService.getUsers()\n          .pipe(\n            //delay(2000),\n            map((users: User[]) => {\n              console.log(users);\n              return new UsersApiActions.LoadUsersSuccess({users});\n            }),\n            catchError(httpError => {\n              const message = httpError.statusText.toLowerCase();\n\n              const snackBarRef = this.snackBar.open(this.translate.instant(message), this.translate.instant('Retry'), {\n                duration: 10000\n              });\n\n              snackBarRef.afterDismissed().subscribe(snackBarDismiss => {\n\n                if (snackBarDismiss.dismissedByAction){\n                  this.store.dispatch(new UsersActions.LoadUsers());\n                } else {\n                  this.router.navigate(['/dashboard']);\n                }\n              });\n\n              return of(new UsersApiActions.LoadUsersFailure({message}));\n            })\n          );\n      })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/users.effects.ts:123\n                            \n                        \n\n                \n                    \n                        effect for loading users\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popUpUserForm$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popUpUserForm$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(UsersActions.UsersActionTypes.CreateUserFormDialog),\n      exhaustMap(() => {\n        const title = 'Creating a new user';\n        const dialogRef: MatDialogRef = this.dialog.open(UserFormComponent, {\n          width: '720px',\n          disableClose: true,\n          data: { title: title }\n        });\n        \n        return dialogRef.afterClosed();\n      })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/users.effects.ts:215\n                            \n                        \n\n                \n                    \n                        show a dialog form for user details as a pop up\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        snackBar:     MatSnackBar\n\n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/users.effects.ts:259\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { UsersApiActions, UsersActions } from '../actions';\nimport { catchError, exhaustMap, map, tap, delay } from 'rxjs/operators';\nimport { User } from '../models/user.model';\nimport { UsersService } from '../services/users.service';\nimport { of } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MatDialogRef, MatDialog, MatSnackBar } from '@angular/material';\nimport { UserFormComponent } from '../components/users/user-form/user-form.component';\nimport { IPatient } from '../models/patient.model';\nimport { Update } from '@ngrx/entity';\n\n/**\n * users effects\n */\n@Injectable()\nexport class UsersEffects {\n\n  /**\n   * effect fired, when the create new user form is submitted\n   * send data to api and handle result\n   */\n  @Effect()\n  createUser$ = this.actions$\n    .pipe(\n      ofType(UsersActions.UsersActionTypes.CreateUser),\n      map(action => action.payload.user),\n      exhaustMap((userData: User) => {\n\n        return this.usersService.createUser(userData)\n          .pipe(\n            // delay(2000),\n            map(user => {\n              console.log(user);\n              return new UsersApiActions.CreateUserSuccess({user});\n            }),\n            catchError(httpResponse => {\n              console.log(httpResponse);\n              const messages = httpResponse.statusText.toLowerCase();\n\n              return of(new UsersApiActions.CreateUserFailure({messages}));\n            })\n          );\n      })\n    );\n\n  /**\n   * send user data to api and handle result\n   */\n  @Effect()\n  editUser$ = this.actions$.pipe(\n    ofType(UsersActions.UsersActionTypes.EditUser),\n    map(action => action.payload),\n    exhaustMap((user: User) => {\n\n      return this.usersService.updateUser(user)\n        .pipe(\n          map((savedUser: User) => {\n            this.store.dispatch(new UsersActions.DismissEditUser());\n            return new UsersApiActions.EditUserSuccess({user: savedUser});\n          }),\n          catchError(httpError => {\n            console.log(httpError);\n              const message = httpError.statusText.toLowerCase();\n\n              const snackBarRef = this.snackBar.open(this.translate.instant(message), this.translate.instant('Retry'), {\n                duration: 10000\n              });\n\n              snackBarRef.afterDismissed().subscribe(snackBarDismiss => {\n\n                if (snackBarDismiss.dismissedByAction){\n                  this.store.dispatch(new UsersActions.EditUser(user));\n                } else {\n                  this.router.navigate(['/dashboard/users']);\n                }\n              });\n\n              return of(new UsersApiActions.LoadUserPatientsFailure({message}));\n            })\n        );\n    })\n  );\n\n  /**\n   * observes the CreateUserSuccess action\n   * in case create user succeeds, the form dialog box is closed\n   * and the users list is shown\n   */\n  @Effect({\n    dispatch: false\n  })\n  createUserSuccess$ = this.actions$\n    .pipe(\n      ofType(UsersApiActions.UsersApiActionTypes.CreateUserSuccess),\n      tap(() => {\n        this.dialog.getDialogById(\"userCreationForm\").close();\n      })\n    );\n\n  /**\n   * observes the EditUserSuccess action\n   * in case edit user succeeds, the list is reloaded\n   */\n  @Effect({\n    dispatch: false\n  })\n  editUserSuccess$ = this.actions$\n    .pipe(\n      ofType(UsersApiActions.UsersApiActionTypes.EditUserSuccess),\n      tap(() => {\n        this.store.dispatch(new UsersActions.LoadUsers());\n      })\n    );\n\n  /**\n   * effect for loading users\n   */\n  @Effect()\n  loadUsers = this.actions$\n    .pipe(\n      ofType(UsersActions.UsersActionTypes.LoadUsers),\n      exhaustMap(() => {\n\n        return this.usersService.getUsers()\n          .pipe(\n            //delay(2000),\n            map((users: User[]) => {\n              console.log(users);\n              return new UsersApiActions.LoadUsersSuccess({users});\n            }),\n            catchError(httpError => {\n              const message = httpError.statusText.toLowerCase();\n\n              const snackBarRef = this.snackBar.open(this.translate.instant(message), this.translate.instant('Retry'), {\n                duration: 10000\n              });\n\n              snackBarRef.afterDismissed().subscribe(snackBarDismiss => {\n\n                if (snackBarDismiss.dismissedByAction){\n                  this.store.dispatch(new UsersActions.LoadUsers());\n                } else {\n                  this.router.navigate(['/dashboard']);\n                }\n              });\n\n              return of(new UsersApiActions.LoadUsersFailure({message}));\n            })\n          );\n      })\n    );\n\n\n  /**\n   * effect for loading user users\n   */\n  @Effect()\n  loadUserPatients = this.actions$\n    .pipe(\n      ofType(UsersActions.UsersActionTypes.LoadUserPatients),\n      map(action => action.payload),\n      exhaustMap((id: number) => {\n\n        return this.usersService.getUserPatients(id)\n          .pipe(\n            delay(2000),\n            map((patients: IPatient[]) => {\n              console.log(patients);\n\n              for (let key in patients){\n                const patient = patients[key];\n                const user = patient.users.filter(user => user.id === id );\n                let permission = \"\";\n\n                if(user[0].user_patient_permission == 1){\n                  permission = \"Administrator\";\n                }else{\n                  permission = \"Read Only\"\n                }\n                patient[\"permission\"] = permission;\n              }\n\n              return new UsersApiActions.LoadUserPatientsSuccess({patients});\n            }),\n            catchError(httpError => {\n              const message = httpError.statusText.toLowerCase();\n\n              const snackBarRef = this.snackBar.open(this.translate.instant(message), this.translate.instant('Retry'), {\n                duration: 10000\n              });\n\n              snackBarRef.afterDismissed().subscribe(snackBarDismiss => {\n\n                if (snackBarDismiss.dismissedByAction){\n                  this.store.dispatch(new UsersActions.LoadUserPatients(id));\n                } else {\n                  this.router.navigate(['/dashboard/users']);\n                }\n              });\n\n              return of(new UsersApiActions.LoadUserPatientsFailure({message}));\n            })\n          );\n      })\n    );\n\n  /**\n   * show a dialog form for user details as a pop up\n   */\n  @Effect()\n  popUpUserForm$ = this.actions$\n    .pipe(\n      ofType(UsersActions.UsersActionTypes.CreateUserFormDialog),\n      exhaustMap(() => {\n        const title = 'Creating a new user';\n        const dialogRef: MatDialogRef = this.dialog.open(UserFormComponent, {\n          width: '720px',\n          disableClose: true,\n          data: { title: title }\n        });\n        \n        return dialogRef.afterClosed();\n      })\n    );\n\n\n  /**\n   * effect to dismiss the dialog for adding user details\n   */\n  @Effect({\n    dispatch: false\n  })\n  DismissUserFormDialog = this.actions$\n    .pipe(\n      ofType(UsersActions.UsersActionTypes.DismissUserFormDialog),\n      map(() => {\n        this.dialog.getDialogById('userCreationForm').close();\n      })\n    );\n\n  /**\n   * constructor\n   *\n   * @param actions$\n   * @param usersService\n   * @param router\n   * @param modalController\n   * @param store\n   */\n  constructor(\n    private actions$: Actions,\n    private usersService: UsersService,\n    private router: Router,\n    private store: Store,\n    public snackBar: MatSnackBar,\n    private translate: TranslateService,\n    private dialog: MatDialog) {\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/services/users.service.ts\n        \n\n            \n                Description\n            \n            \n                user service\nencapsulates api interactions for\nworking with 'users'\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                editUser\n                            \n                            \n                                getUserPatients\n                            \n                            \n                                getUsers\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/services/users.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateUser(user: User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/services/users.service.ts:43\n                            \n                        \n\n\n                \n                    \n                            create a new user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                User\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteUser(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/services/users.service.ts:51\n                            \n                        \n\n\n                \n                    \n                            delete a user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                user id\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editUser\n                            \n                            \n                        \n                    \n                \n                \n                    \neditUser(changed: Update)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/services/users.service.ts:68\n                            \n                        \n\n\n                \n                    \n                            edit a user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changed\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserPatients\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserPatients(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/services/users.service.ts:35\n                            \n                        \n\n\n                \n                    \n                            get all patients belonging to a user from the moio-cloud api\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                user id\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUsers()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/services/users.service.ts:27\n                            \n                        \n\n\n                \n                    \n                            get all users from the moio-cloud api\n\n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateUser(user: User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/services/users.service.ts:59\n                            \n                        \n\n\n                \n                    \n                            update a user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                object:User\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { User } from '../models/user.model';\nimport { environment } from '../../../environments/environment';\nimport { Update } from '@ngrx/entity';\nimport { IPatient } from '../models/patient.model';\n\n/**\n * user service\n * encapsulates api interactions for\n * working with 'users'\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  /**\n   * get all users from the moio-cloud api\n   */\n  getUsers(): Observable {\n    return this.http.get(`${environment.apiHost}/api/usermanagement`);\n  }\n\n  /**\n   * get all patients belonging to a user from the moio-cloud api\n   * @param id user id\n   */\n  getUserPatients(id: number): Observable {\n    return this.http.get(`${environment.apiHost}/api/users/${id}/patients`);\n  }\n\n  /**\n   * create a new user\n   * @param user User\n   */\n  createUser(user: User): Observable {\n    return this.http.post(`${environment.apiHost}/api/appusers`, user);\n  }\n\n  /**\n   * delete a user\n   * @param id user id\n   */\n  deleteUser(id: number): Observable {\n    return this.http.delete(`${environment.apiHost}/api/users/${id}`);\n  }\n\n  /**\n   * update a user\n   * @param user object:User\n   */\n  updateUser(user: User): Observable {\n    console.log(user);\n    return this.http.put(`${environment.apiHost}/api/users/${user.id}`, user);\n  }\n\n  /**\n   * edit a user\n   * @param changed\n   */\n  editUser(changed: Update): Observable {\n    console.log(changed);\n    return this.http\n      .put(`${environment.apiHost}/api/users/${changed.id}`, {...changed.changes});\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.0.0\n        \n            @angular/cdk : ^7.1.1\n        \n            @angular/common : ^7.1.1\n        \n            @angular/compiler : ^7.1.1\n        \n            @angular/core : ^7.1.1\n        \n            @angular/flex-layout : ^7.0.0-beta.19\n        \n            @angular/forms : ^7.1.1\n        \n            @angular/http : ~7.0.0\n        \n            @angular/material : ^7.1.1\n        \n            @angular/platform-browser : ~7.0.0\n        \n            @angular/platform-browser-dynamic : ~7.0.0\n        \n            @angular/router : ^7.1.1\n        \n            @auth0/angular-jwt : ^2.0.0\n        \n            @ngrx/effects : ^6.1.2\n        \n            @ngrx/entity : ^6.1.2\n        \n            @ngrx/router-store : ^6.1.2\n        \n            @ngrx/store : ^6.1.2\n        \n            @ngrx/store-devtools : ^6.1.2\n        \n            @ngx-translate/core : ^11.0.1\n        \n            @ngx-translate/http-loader : ^4.0.0\n        \n            @swimlane/ngx-datatable : ^14.0.0\n        \n            core-js : ^2.6.0\n        \n            ng2-split-pane : ^1.4.0\n        \n            ngrx-store-localstorage : ^5.1.0\n        \n            ngx-datatable : ^1.0.3\n        \n            ngx-perfect-scrollbar : ^7.1.0\n        \n            protractor-e2e-coverage : ^1.3.0\n        \n            reload : ^2.4.0\n        \n            reselect : ^4.0.0\n        \n            rxjs : ~6.3.3\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthActionTypes   (src/.../auth.actions.ts)\n                        \n                        \n                            AuthApiActionTypes   (src/.../auth-api.actions.ts)\n                        \n                        \n                            AuthPageActionTypes   (src/.../auth-page.actions.ts)\n                        \n                        \n                            LayoutActionTypes   (src/.../layout.actions.ts)\n                        \n                        \n                            NursingHomesActionTypes   (src/.../nursing-homes.actions.ts)\n                        \n                        \n                            NursingHomesApiActionTypes   (src/.../nursing-homes-api.actions.ts)\n                        \n                        \n                            PatientsActionTypes   (src/.../patients.actions.ts)\n                        \n                        \n                            PatientsApiActionTypes   (src/.../patients-api.actions.ts)\n                        \n                        \n                            UsersActionTypes   (src/.../users.actions.ts)\n                        \n                        \n                            UsersApiActionTypes   (src/.../users-api.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/auth/actions/auth.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthActionTypes\n                    \n                \n                        \n                            \n                                 Logout\n                            \n                        \n                        \n                            \n                                Value : [Auth] Logout\n                            \n                        \n                        \n                            \n                                 LogoutConfirmation\n                            \n                        \n                        \n                            \n                                Value : [Auth] Logout Confirmation\n                            \n                        \n                        \n                            \n                                 LogoutConfirmationDismiss\n                            \n                        \n                        \n                            \n                                Value : [Auth] Logout Confirmation Dismiss\n                            \n                        \n            \n        \n\n    src/app/auth/actions/auth-api.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthApiActionTypes\n                    \n                \n                        \n                            \n                                 LoginSuccess\n                            \n                        \n                        \n                            \n                                Value : [Auth/Api] Login Success\n                            \n                        \n                        \n                            \n                                 LoginFailure\n                            \n                        \n                        \n                            \n                                Value : [Auth/Api] Login Failure\n                            \n                        \n                        \n                            \n                                 LoginRedirect\n                            \n                        \n                        \n                            \n                                Value : [Auth/Api] Login Redirect\n                            \n                        \n                        \n                            \n                                 LogoutSuccess\n                            \n                        \n                        \n                            \n                                Value : [Auth/Api] Logout Success\n                            \n                        \n                        \n                            \n                                 LogoutFailure\n                            \n                        \n                        \n                            \n                                Value : [Auth/Api] Logout Failure\n                            \n                        \n                        \n                            \n                                 SignUpSuccess\n                            \n                        \n                        \n                            \n                                Value : [Auth/Api] Sign Up Success\n                            \n                        \n                        \n                            \n                                 SignUpFailure\n                            \n                        \n                        \n                            \n                                Value : [Auth/Api] Sign Up Failure\n                            \n                        \n                        \n                            \n                                 ForgotPasswordSuccess\n                            \n                        \n                        \n                            \n                                Value : [Auth/Api] Forgot Password Success\n                            \n                        \n                        \n                            \n                                 ForgotPasswordFailure\n                            \n                        \n                        \n                            \n                                Value : [Auth/Api] Forgot Password Failure\n                            \n                        \n            \n        \n\n    src/app/auth/actions/auth-page.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthPageActionTypes\n                    \n                \n                        \n                            \n                                 Login\n                            \n                        \n                        \n                            \n                                Value : [Auth/Login Page] Login\n                            \n                        \n                        \n                            \n                                 Signup\n                            \n                        \n                        \n                            \n                                Value : [Auth/Signup Page] Signup\n                            \n                        \n                        \n                            \n                                 ForgotPassword\n                            \n                        \n                        \n                            \n                                Value : [Auth/Forgot Password Page] Forgot Password\n                            \n                        \n            \n        \n\n    src/app/dashboard/actions/layout.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        LayoutActionTypes\n                    \n                \n                    \n                        \n                            layout action types\n\n                        \n                    \n                        \n                            \n                                 OpenSideNav\n                            \n                        \n                        \n                            \n                                Value : [Layout] Open Side Nav\n                            \n                        \n                        \n                            \n                                 CloseSideNav\n                            \n                        \n                        \n                            \n                                Value : [Layout] Close Side Nav\n                            \n                        \n                        \n                            \n                                 CompactSideNav\n                            \n                        \n                        \n                            \n                                Value : [Layout] Compact Nav position\n                            \n                        \n                        \n                            \n                                 SetNavigationPositionSide\n                            \n                        \n                        \n                            \n                                Value : [Layout] Set Navigation Position Side\n                            \n                        \n                        \n                            \n                                 SetNavigationPositionTop\n                            \n                        \n                        \n                            \n                                Value : [Layout] Set Navigation Position Top\n                            \n                        \n                        \n                            \n                                 SetDirectionLtr\n                            \n                        \n                        \n                            \n                                Value : [Layout] Set Direction Ltr\n                            \n                        \n                        \n                            \n                                 SetDirectionRtr\n                            \n                        \n                        \n                            \n                                Value : [Layout] Set Direction Rtr\n                            \n                        \n                        \n                            \n                                 TransitioningLayout\n                            \n                        \n                        \n                            \n                                Value : [Layout] Transitioning Layout\n                            \n                        \n                        \n                            \n                                 UseBreadcrumb\n                            \n                        \n                        \n                            \n                                Value : [Layout] Use Breadcrumb\n                            \n                        \n                        \n                            \n                                 MakeBreadcrumbSimple\n                            \n                        \n                        \n                            \n                                Value : [Layout] Make Breadcrumb Simple\n                            \n                        \n                        \n                            \n                                 MakeBreadcrumbTitle\n                            \n                        \n                        \n                            \n                                Value : [Layout] Make Breadcrumb Title\n                            \n                        \n                        \n                            \n                                 FixTopbar\n                            \n                        \n                        \n                            \n                                Value : [Layout] Fix Topbar\n                            \n                        \n            \n        \n\n    src/app/dashboard/actions/nursing-homes.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        NursingHomesActionTypes\n                    \n                \n                        \n                            \n                                 SelectNursingHome\n                            \n                        \n                        \n                            \n                                Value : [NursingHome] Select Current NursingHome\n                            \n                        \n                        \n                            \n                                 ClearSelectedNursingHome\n                            \n                        \n                        \n                            \n                                Value : [NursingHome] Clear Current NursingHome\n                            \n                        \n                        \n                            \n                                 InitializeNursingHome\n                            \n                        \n                        \n                            \n                                Value : [NursingHome] Initialize Current NursingHome\n                            \n                        \n                        \n                            \n                                 PopUpNursingHomeForm\n                            \n                        \n                        \n                            \n                                Value : [NursingHome] Pop Up NursingHome Form\n                            \n                        \n                        \n                            \n                                 CreateNursingHome\n                            \n                        \n                        \n                            \n                                Value : [NursingHome] Create NursingHome\n                            \n                        \n                        \n                            \n                                 DismissPoppedUpNursingHomeForm\n                            \n                        \n                        \n                            \n                                Value : [NursingHome] Dismiss Create NursingHome\n                            \n                        \n                        \n                            \n                                 LoadNursingHomes\n                            \n                        \n                        \n                            \n                                Value : [NursingHome] Load Nursing Homes\n                            \n                        \n                        \n                            \n                                 SearchNursingHome\n                            \n                        \n                        \n                            \n                                Value : [NursingHome] Search NursingHome\n                            \n                        \n                        \n                            \n                                 SearchNursingHomeComplete\n                            \n                        \n                        \n                            \n                                Value : [NursingHome] Search NursingHome Complete\n                            \n                        \n                        \n                            \n                                 EditNursingHome\n                            \n                        \n                        \n                            \n                                Value : [NursingHome] Edit NursingHome\n                            \n                        \n                        \n                            \n                                 DismissEditNursingHome\n                            \n                        \n                        \n                            \n                                Value : [NursingHome] Dismiss Edit NursingHome\n                            \n                        \n                        \n                            \n                                 ResetNursingHomesState\n                            \n                        \n                        \n                            \n                                Value : [NursingHomes] Reset NursingHomes State\n                            \n                        \n            \n        \n\n    src/app/dashboard/actions/nursing-homes-api.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        NursingHomesApiActionTypes\n                    \n                \n                    \n                        \n                            definitions for action types\n\n                        \n                    \n                        \n                            \n                                 CreateNursingHomeSuccess\n                            \n                        \n                        \n                            \n                                Value : [NursingHome/Api] Create NursingHome Success\n                            \n                        \n                        \n                            \n                                 CreateNursingHomeFailure\n                            \n                        \n                        \n                            \n                                Value : [NursingHome/Api] Create NursingHome Failure\n                            \n                        \n                        \n                            \n                                 LoadNursingHomesSuccess\n                            \n                        \n                        \n                            \n                                Value : [NursingHome/Api] Load NursingHomes Success\n                            \n                        \n                        \n                            \n                                 LoadNursingHomesFailure\n                            \n                        \n                        \n                            \n                                Value : [NursingHome/Api] Load NursingHomes Failure\n                            \n                        \n                        \n                            \n                                 EditNursingHomeSuccess\n                            \n                        \n                        \n                            \n                                Value : [NursingHome/Api] Edit NursingHome Success\n                            \n                        \n                        \n                            \n                                 EditNursingHomeFailure\n                            \n                        \n                        \n                            \n                                Value : [NursingHome/Api] Edit NursingHome Failure\n                            \n                        \n            \n        \n\n    src/app/dashboard/actions/patients.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        PatientsActionTypes\n                    \n                \n                        \n                            \n                                 SelectPatient\n                            \n                        \n                        \n                            \n                                Value : [Patient] Select Current Patient\n                            \n                        \n                        \n                            \n                                 ClearSelectedPatient\n                            \n                        \n                        \n                            \n                                Value : [Patient] Clear Current Patient\n                            \n                        \n                        \n                            \n                                 InitializePatient\n                            \n                        \n                        \n                            \n                                Value : [Patient] Initialize Current Patient\n                            \n                        \n                        \n                            \n                                 CreatePatientFormDialog\n                            \n                        \n                        \n                            \n                                Value : [Patients] Pop Up Patient Form\n                            \n                        \n                        \n                            \n                                 CreatePatient\n                            \n                        \n                        \n                            \n                                Value : [Patient] Create Patient\n                            \n                        \n                        \n                            \n                                 DismissPatientFormDialog\n                            \n                        \n                        \n                            \n                                Value : [Patient] Dismiss Patient Form Dialog\n                            \n                        \n                        \n                            \n                                 LoadPatients\n                            \n                        \n                        \n                            \n                                Value : [Patient] Load Patients\n                            \n                        \n                        \n                            \n                                 SearchPatient\n                            \n                        \n                        \n                            \n                                Value : [Patient] Search Patient\n                            \n                        \n                        \n                            \n                                 SearchPatientComplete\n                            \n                        \n                        \n                            \n                                Value : [Patient] Search Patient Complete\n                            \n                        \n                        \n                            \n                                 EditPatient\n                            \n                        \n                        \n                            \n                                Value : [Patient] Edit Patient\n                            \n                        \n                        \n                            \n                                 DismissEditPatient\n                            \n                        \n                        \n                            \n                                Value : [Patient] Dismiss Edit Patient\n                            \n                        \n                        \n                            \n                                 ResetPatientsState\n                            \n                        \n                        \n                            \n                                Value : [Patients] Reset Patients State\n                            \n                        \n                        \n                            \n                                 DeletePatient\n                            \n                        \n                        \n                            \n                                Value : [Patients] Delete Patient\n                            \n                        \n                        \n                            \n                                 LoadPatientUsers\n                            \n                        \n                        \n                            \n                                Value : [User] Load User Patients\n                            \n                        \n            \n        \n\n    src/app/dashboard/actions/patients-api.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        PatientsApiActionTypes\n                    \n                \n                    \n                        \n                            definitions for action types\n\n                        \n                    \n                        \n                            \n                                 CreatePatientSuccess\n                            \n                        \n                        \n                            \n                                Value : [Patient/Api] Create Patient Success\n                            \n                        \n                        \n                            \n                                 CreatePatientFailure\n                            \n                        \n                        \n                            \n                                Value : [Patient/Api] Create Patient Failure\n                            \n                        \n                        \n                            \n                                 LoadPatientsSuccess\n                            \n                        \n                        \n                            \n                                Value : [Patient/Api] Load Patients Success\n                            \n                        \n                        \n                            \n                                 LoadPatientsFailure\n                            \n                        \n                        \n                            \n                                Value : [Patient/Api] Load Patients Failure\n                            \n                        \n                        \n                            \n                                 EditPatientSuccess\n                            \n                        \n                        \n                            \n                                Value : [Patient/Api] Edit Patient Success\n                            \n                        \n                        \n                            \n                                 EditPatientFailure\n                            \n                        \n                        \n                            \n                                Value : [Patient/Api] Edit Patient Failure\n                            \n                        \n                        \n                            \n                                 LoadPatientUsersSuccess\n                            \n                        \n                        \n                            \n                                Value : [User/Api] Load Patient Users Success\n                            \n                        \n                        \n                            \n                                 LoadPatientUsersFailure\n                            \n                        \n                        \n                            \n                                Value : [User/Api] Load Patient Users Failure\n                            \n                        \n            \n        \n\n    src/app/dashboard/actions/users.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        UsersActionTypes\n                    \n                \n                        \n                            \n                                 SelectUser\n                            \n                        \n                        \n                            \n                                Value : [User] Select Current User\n                            \n                        \n                        \n                            \n                                 ClearSelectedUser\n                            \n                        \n                        \n                            \n                                Value : [User] Clear Current User\n                            \n                        \n                        \n                            \n                                 InitializeUser\n                            \n                        \n                        \n                            \n                                Value : [User] Initialize Current User\n                            \n                        \n                        \n                            \n                                 CreateUserFormDialog\n                            \n                        \n                        \n                            \n                                Value : [Users] Pop Up User Form\n                            \n                        \n                        \n                            \n                                 CreateUser\n                            \n                        \n                        \n                            \n                                Value : [User] Create User\n                            \n                        \n                        \n                            \n                                 DismissUserFormDialog\n                            \n                        \n                        \n                            \n                                Value : [User] Dismiss User Form Dialog\n                            \n                        \n                        \n                            \n                                 LoadUsers\n                            \n                        \n                        \n                            \n                                Value : [User] Load Users\n                            \n                        \n                        \n                            \n                                 SearchUser\n                            \n                        \n                        \n                            \n                                Value : [User] Search User\n                            \n                        \n                        \n                            \n                                 SearchUserComplete\n                            \n                        \n                        \n                            \n                                Value : [User] Search User Complete\n                            \n                        \n                        \n                            \n                                 EditUser\n                            \n                        \n                        \n                            \n                                Value : [User] Edit User\n                            \n                        \n                        \n                            \n                                 DismissEditUser\n                            \n                        \n                        \n                            \n                                Value : [User] Dismiss Edit User\n                            \n                        \n                        \n                            \n                                 ResetUsersState\n                            \n                        \n                        \n                            \n                                Value : [Users] Reset Users State\n                            \n                        \n                        \n                            \n                                 DeleteUser\n                            \n                        \n                        \n                            \n                                Value : [Users] Delete User\n                            \n                        \n                        \n                            \n                                 LoadUserPatients\n                            \n                        \n                        \n                            \n                                Value : [User] Load User Patients\n                            \n                        \n            \n        \n\n    src/app/dashboard/actions/users-api.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        UsersApiActionTypes\n                    \n                \n                    \n                        \n                            definitions for action types\n\n                        \n                    \n                        \n                            \n                                 CreateUserSuccess\n                            \n                        \n                        \n                            \n                                Value : [User/Api] Create User Success\n                            \n                        \n                        \n                            \n                                 CreateUserFailure\n                            \n                        \n                        \n                            \n                                Value : [User/Api] Create User Failure\n                            \n                        \n                        \n                            \n                                 LoadUsersSuccess\n                            \n                        \n                        \n                            \n                                Value : [User/Api] Load Users Success\n                            \n                        \n                        \n                            \n                                 LoadUsersFailure\n                            \n                        \n                        \n                            \n                                Value : [User/Api] Load Users Failure\n                            \n                        \n                        \n                            \n                                 EditUserSuccess\n                            \n                        \n                        \n                            \n                                Value : [User/Api] Edit User Success\n                            \n                        \n                        \n                            \n                                 EditUserFailure\n                            \n                        \n                        \n                            \n                                Value : [User/Api] Edit User Failure\n                            \n                        \n                        \n                            \n                                 LoadUserPatientsSuccess\n                            \n                        \n                        \n                            \n                                Value : [User/Api] Load User Patients Success\n                            \n                        \n                        \n                            \n                                 LoadUserPatientsFailure\n                            \n                        \n                        \n                            \n                                Value : [User/Api] Load User Patients Failure\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createTanslateLoader   (src/.../app.module.ts)\n                        \n                        \n                            getBrowserLanguage   (src/.../app.module.ts)\n                        \n                        \n                            getQueryParam   (src/.../url.helper.ts)\n                        \n                        \n                            jwtOptionsFactory   (src/.../app.module.ts)\n                        \n                        \n                            localStorageSyncReducer   (src/.../index.ts)\n                        \n                        \n                            logger   (src/.../index.ts)\n                        \n                        \n                            reducer   (src/.../layout.reducer.ts)\n                        \n                        \n                            reducer   (src/.../nursing-homes-page.reducer.ts)\n                        \n                        \n                            reducer   (src/.../views.reducer.ts)\n                        \n                        \n                            reducer   (src/.../patient-users.reducer.ts)\n                        \n                        \n                            reducer   (src/.../patients-page.reducer.ts)\n                        \n                        \n                            reducer   (src/.../patients.reducer.ts)\n                        \n                        \n                            reducer   (src/.../user-patients.reducer.ts)\n                        \n                        \n                            reducer   (src/.../users-page.reducer.ts)\n                        \n                        \n                            reducer   (src/.../users.reducer.ts)\n                        \n                        \n                            reducer   (src/.../auth.reducer.ts)\n                        \n                        \n                            reducer   (src/.../nursing-homes.reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createTanslateLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateTanslateLoader(http)\n                    \n                \n\n\n\n\n                \n                    \n                            factory function to instantiate and config\nthe tranlation service\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                ng http client\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBrowserLanguage\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBrowserLanguage()\n                    \n                \n\n\n\n\n                \n                    \n                            strip the preferred language from the browser\n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jwtOptionsFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \njwtOptionsFactory(store)\n                    \n                \n\n\n\n\n                \n                    \n                            jwt options factory to obtain token from the\nstore\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Store\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/core/helpers/url.helper.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getQueryParam\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetQueryParam(prop)\n                    \n                \n\n\n\n\n                \n                    \n                            helper to extract a query param from the URL\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        prop\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the property\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/reducers/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            localStorageSyncReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nlocalStorageSyncReducer(reducer)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reducer\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogger(reducer)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reducer\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/dashboard/reducers/layout.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/dashboard/reducers/nursing-homes-page.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n                            reducer for nursingHomes page\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/auth/reducers/views.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/dashboard/reducers/patient-users.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n                            reducer for the patient users state\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/dashboard/reducers/patients-page.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n                            reducer for patients page\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/dashboard/reducers/patients.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n                            reducer for the patients state\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/dashboard/reducers/user-patients.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n                            reducer for the user patients state\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/dashboard/reducers/users-page.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n                            reducer for users page\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/dashboard/reducers/users.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n                            reducer for the users state\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/auth/reducers/auth.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/dashboard/reducers/nursing-homes.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n                            reducer for the nursingHomes state\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMoioManagement\nThis is the description of how to setup development environment for the Moio-managemet\nGIT branches\n\nmaster: represents the production branch\ndevelop: represents the testing branch where code is tried and tested before production\n\nDevelopment Environment\nPre-Requisites\n\ngit\nnodejs\nnpm\nangular-cli\n\nUpdate your npm: $ npm i -g npm\nInstall the Angular CLI globally: $ npm install -g @angular/cli\nClone the repo to the host that you want to run from AM-Gitlab. Get the URL and the credentials, from the PO or the CTO (Alex Rückert: alexander.rueckert@appsolute-mobility.com)\n$ git clone [GITLAB URL]\nThis will create a new folder moio_management\ncd into the folder and checkout the develop-branch\n$ cd moio_management\n$ git checkout develop (or use your IDE to checkout develop)\nNext, install NPM-packages:\n$ npm install\nThat's it. You are now ready to start coding and run the moio_management\nRun the app locally\nTo run the app locally, start a server with:\n$ npm start\nThis will build the app and start a server on localhost:4200. For the other environment commands you can run, check under the \"scripts\" in the package.json file:\n\"scripts\": {\n    \"ng\": \"ng\",\n    \"start\": \"ng serve\",\n    \"build\": \"ng build\",\n    \"build:prod\": \"ng build --prod\",\n    \"test\": \"ng test\",\n    \"lint\": \"ng lint\",\n    \"e2e\": \"ng e2e\",\n    \"build:stage\": \"ng build --configuration=stage && node ./tasks/deploy-stage.js\"\n  },\nCheck this against the angular.json under \"configurations\" and environment.*.ts files in the /environments for the correct API-url which you want to use in your local machine.\nCreating your own environment\nTo work with a local env-file copy the environment.ts and give the copied file\na unique name, e.g. environment.calvin.ts. Make sure, the content is the same as\nin the environment.ts.\nNext open the angular.json in the root-dir of the project.\nLook for the section 'configurations'.\nCreate a new configuration and name it uniquely. Take note of the name\nas we need it later. At least your new configuration should look like the following:\n\"calvin\": {\n  \"fileReplacements\": [\n      {\n          \"replace\": \"src/environments/environment.ts\",\n          \"with\": \"src/environments/environment.calvin.ts\"\n      }\n  ]\n}Note the name of the configuration.\nFinally open package.json and add a new run configuration in the scripts-section:\n\"start:calvin\": \"ng serve --host 0.0.0.0 --port 4200 --configuration=calvin\",If you want to start the application with your environment enabled run this command:\n$ npm run start:calvin\nDeploy the App to the Stage-Server\nBuilding dependencies\nBuild dependencies are:\n\nnodejs / npm\nangular-cli installed globally\nthe cloned repo\nall packages from the package.json installed in the project folder\n\nBuilding\nSo if you want to build you need to setup your local dev-environment.\nWe use the npm-SCP2 package to connect to the remote server via SCP and upload\nthe build-package to the destination.\nNOTE: The SCP command will not remove files on the destination, it will just\noverwrite existing files. It might be a good idea to clean up the remote directory\nwith a FTP-program from time to time.\nTo build and upload the app run:\n$ npm run build:stage\nto build and upload the content of dist folder in project-dir.\nIf something changes for the remote server or the API-url look into the files:\n\ntasks/deploy-stage.js\nsrc/environments/environment.stage.ts\n\nand adjust the files to your needs.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardRoutingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_imports\n\n\n\ncluster_DashboardModule_exports\n\n\n\ncluster_DashboardModule_providers\n\n\n\ncluster_ErrorsModule\n\n\n\ncluster_ErrorsModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDashboardModule\n\nDashboardModule\n\nAppModule -->\n\nDashboardModule->AppModule\n\n\n\n\n\nDashboardLayoutComponent \n\nDashboardLayoutComponent \n\nDashboardLayoutComponent  -->\n\nDashboardModule->DashboardLayoutComponent \n\n\n\n\n\nDashboardRoutingModule \n\nDashboardRoutingModule \n\nDashboardRoutingModule  -->\n\nDashboardModule->DashboardRoutingModule \n\n\n\n\n\nErrorsModule\n\nErrorsModule\n\nAppModule -->\n\nErrorsModule->AppModule\n\n\n\n\n\nConfirmComponent\n\nConfirmComponent\n\nAuthModule -->\n\nConfirmComponent->AuthModule\n\n\n\nDashboardModule -->\n\nConfirmComponent->DashboardModule\n\n\n\nErrorsModule -->\n\nConfirmComponent->ErrorsModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nConfirmComponent->CoreModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAuthModule -->\n\nMaterialModule->AuthModule\n\n\n\nDashboardModule -->\n\nMaterialModule->DashboardModule\n\n\n\nErrorsModule -->\n\nMaterialModule->ErrorsModule\n\n\n\nAuthRoutingModule -->\n\nMaterialModule->AuthRoutingModule\n\n\n\nCoreModule -->\n\nMaterialModule->CoreModule\n\n\n\n\n\nDashboardRoutingModule\n\nDashboardRoutingModule\n\nDashboardRoutingModule -->\n\nMaterialModule->DashboardRoutingModule\n\n\n\nDashboardModule -->\n\nCoreModule->DashboardModule\n\n\n\n\n\nConfirmComponent \n\nConfirmComponent \n\nConfirmComponent  -->\n\nCoreModule->ConfirmComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nCoreModule->MaterialModule \n\n\n\nDashboardModule -->\n\nDashboardRoutingModule->DashboardModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nDashboardModule -->\n\nSharedModule->DashboardModule\n\n\n\n\n\nConfirmService\n\nConfirmService\n\nDashboardModule -->\n\nConfirmService->DashboardModule\n\n\n\n\n\nErrorsRoutingModule\n\nErrorsRoutingModule\n\nErrorsModule -->\n\nErrorsRoutingModule->ErrorsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    28 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    14 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    91 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    31 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        17 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthActionsUnion   (src/.../auth.actions.ts)\n                        \n                        \n                            AuthApiActionsUnion   (src/.../auth-api.actions.ts)\n                        \n                        \n                            AuthPageActionsUnion   (src/.../auth-page.actions.ts)\n                        \n                        \n                            LayoutActions   (src/.../layout.actions.ts)\n                        \n                        \n                            NursingHomesActionsUnion   (src/.../nursing-homes.actions.ts)\n                        \n                        \n                            NursingHomesApiActionsUnion   (src/.../nursing-homes-api.actions.ts)\n                        \n                        \n                            PatientsActionsUnion   (src/.../patients.actions.ts)\n                        \n                        \n                            PatientsApiActionsUnion   (src/.../patients-api.actions.ts)\n                        \n                        \n                            UsersActionsUnion   (src/.../users.actions.ts)\n                        \n                        \n                            UsersApiActionsUnion   (src/.../users-api.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/auth/actions/auth.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthActionsUnion\n                    \n                \n                \n                    \n                        AuthActionsUnion:     Logout | LogoutConfirmation | LogoutConfirmationDismiss\n\n                    \n                \n            \n        \n\n    src/app/auth/actions/auth-api.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthApiActionsUnion\n                    \n                \n                \n                    \n                        AuthApiActionsUnion:     LoginSuccess | LoginFailure | LoginRedirect | LogoutSuccess | LogoutFailure | SignUpSuccess | SignUpFailure | ForgotPasswordSuccess | ForgotPasswordFailure\n\n                    \n                \n            \n        \n\n    src/app/auth/actions/auth-page.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthPageActionsUnion\n                    \n                \n                \n                    \n                        AuthPageActionsUnion:     Login | Signup | ForgotPassword\n\n                    \n                \n            \n        \n\n    src/app/dashboard/actions/layout.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        LayoutActions\n                    \n                \n                \n                    \n                        LayoutActions:     OpenSideNav | CloseSideNav | CompactSideNav | SetNavigationPositionSide | SetNavigationPositionTop | SetDirectionLtr | SetDirectionRtr | TransitioningLayout | UseBreadcrumb | MakeBreadcrumbSimple | MakeBreadcrumbTitle | FixTopbar\n\n                    \n                \n            \n        \n\n    src/app/dashboard/actions/nursing-homes.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        NursingHomesActionsUnion\n                    \n                \n                    \n                        \n                            Export union of nursingHome Action\n\n                        \n                    \n                \n                    \n                        NursingHomesActionsUnion:     SelectNursingHome | ClearSelectedNursingHome | InitializeNursingHome | PopUpNursingHomeForm | CreateNursingHome | DismissPoppedUpNursingHomeForm | LoadNursingHomes | SearchNursingHome | SearchNursingHomeComplete | EditNursingHome | DismissEditNursingHome | ResetNursingHomesState\n\n                    \n                \n            \n        \n\n    src/app/dashboard/actions/nursing-homes-api.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        NursingHomesApiActionsUnion\n                    \n                \n                \n                    \n                        NursingHomesApiActionsUnion:     CreateNursingHomeSuccess | CreateNursingHomeFailure | EditNursingHomeSuccess | EditNursingHomeFailure | LoadNursingHomesSuccess | LoadNursingHomesFailure\n\n                    \n                \n            \n        \n\n    src/app/dashboard/actions/patients.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        PatientsActionsUnion\n                    \n                \n                    \n                        \n                            Export union of patient Action\n\n                        \n                    \n                \n                    \n                        PatientsActionsUnion:     SelectPatient | ClearSelectedPatient | InitializePatient | CreatePatientFormDialog | CreatePatient | DismissPatientFormDialog | LoadPatients | SearchPatient | SearchPatientComplete | EditPatient | DismissEditPatient | ResetPatientsState | LoadPatientUsers\n\n                    \n                \n            \n        \n\n    src/app/dashboard/actions/patients-api.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        PatientsApiActionsUnion\n                    \n                \n                \n                    \n                        PatientsApiActionsUnion:     CreatePatientSuccess | CreatePatientFailure | EditPatientSuccess | EditPatientFailure | LoadPatientsSuccess | LoadPatientsFailure | LoadPatientUsersSuccess | LoadPatientUsersFailure\n\n                    \n                \n            \n        \n\n    src/app/dashboard/actions/users.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        UsersActionsUnion\n                    \n                \n                    \n                        \n                            Export union of user Action\n\n                        \n                    \n                \n                    \n                        UsersActionsUnion:     SelectUser | ClearSelectedUser | InitializeUser | CreateUserFormDialog | CreateUser | DismissUserFormDialog | LoadUsers | SearchUser | SearchUserComplete | EditUser | DismissEditUser | ResetUsersState | LoadUserPatients\n\n                    \n                \n            \n        \n\n    src/app/dashboard/actions/users-api.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        UsersApiActionsUnion\n                    \n                \n                \n                    \n                        UsersApiActionsUnion:     CreateUserSuccess | CreateUserFailure | EditUserSuccess | EditUserFailure | LoadUsersSuccess | LoadUsersFailure | LoadUserPatientsSuccess | LoadUserPatientsFailure\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
