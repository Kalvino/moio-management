var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,1.075,1,1.774]],["body/components/AppComponent.html",[0,2.101,1,3.098,2,0.052,3,0.052,4,2.152,5,2.152,6,0.045,7,5.484,8,0.431,9,3.395,10,7.602,11,5.977,12,7.243,13,5.052,14,6.479,15,6.479,16,1.936,17,3.548,18,3.773,19,3.131,20,2.843,21,0.128,22,0.298,23,2.805,24,0.688,25,0.155,26,0.006,27,0.414,28,0.531,29,6.479,30,0.372,31,5.484,32,0.077,33,1.128,34,0.039,35,0.247,36,1.872,37,2.843,38,2.843,39,1.847,40,3.386,41,2.152,42,0.743,43,2.152,44,1.936,45,1.812,46,2.843,47,2.039,48,2.152,49,2.076,50,2.152,51,2.004,52,2.152,53,2.004,54,2.152,55,2.076,56,2.152,57,2.076,58,1.904,59,1.936,60,1.727,61,2.152,62,2.076,63,2.152,64,2.843,65,2.039,66,2.152,67,1.936,68,2.152,69,2.076,70,2.152,71,2.076,72,2.152,73,2.039,74,1.574,75,1.378,76,3.52,77,2.076,78,1.29,79,0.974,80,2.039,81,2.076,82,2.843,83,2.039,84,2.152,85,2.076,86,2.843,87,2.076,88,2.152,89,2.076,90,2.152,91,1.936,92,2.152,93,1.936,94,2.152,95,2.076,96,1.161,97,2.039,98,2.076,99,2.039,100,1.783,101,2.004,102,2.152,103,2.039,104,2.152,105,1.97,106,2.152,107,2.039,108,2.152,109,2.039,110,2.152,111,2.039,112,2.113,113,2.152,114,0.004,115,0.004]],["title/directives/AppDropdownDirective.html",[39,1.259,101,1.804]],["body/directives/AppDropdownDirective.html",[2,0.05,3,0.05,6,0.044,8,0.415,16,1.867,17,2.414,21,0.187,22,0.291,25,0.258,26,0.006,27,0.399,28,0.512,30,0.641,32,0.124,33,1.087,34,0.038,35,0.238,39,2.259,42,0.779,101,2.583,105,3.53,114,0.004,115,0.004,116,5.287,117,5.554,118,0.838,119,3.126,120,3.687,121,7.069,122,3.126,123,8.502,124,6.159,125,7.606,126,2.125,127,1.364,128,7.069,129,7.069,130,8.502,131,3.337,132,7.069,133,0.53,134,4.089,135,4.724,136,5.287,137,1.041,138,0.823,139,7.069,140,5.287,141,5.829,142,2.013,143,3.275,144,7.069,145,5.287,146,7.069,147,5.287,148,5.287,149,7.069,150,5.287,151,5.93,152,5.287,153,6.571,154,5.287,155,5.467,156,2.607,157,4.363,158,1.747,159,4.363,160,2.812,161,3.164,162,3.687,163,3.273,164,2.89,165,7.069,166,7.069,167,2.037,168,5.287,169,2.321,170,5.287,171,3.977,172,5.287,173,5.287,174,5.287,175,5.287,176,3.531,177,3.87,178,5.287,179,5.287,180,5.287,181,5.287,182,5.287,183,5.287,184,5.287,185,4.089,186,1.614,187,5.287,188,2.89]],["title/modules/AppModule.html",[189,1.975,190,3.819]],["body/modules/AppModule.html",[1,3.452,2,0.043,3,0.043,6,0.038,9,1.746,26,0.006,32,0.142,33,0.949,34,0.06,35,0.207,36,1.575,114,0.003,115,0.003,138,0.446,142,1.773,156,2.275,160,2.454,171,2.595,186,1.408,189,2.575,190,7.583,191,2.522,192,4.594,193,4.764,194,5.056,195,4.127,196,4.127,197,4.127,198,4.127,199,6.405,200,6.405,201,6.405,202,6.405,203,4.135,204,1.194,205,2.856,206,4.127,207,6.44,208,5.761,209,4.98,210,6.44,211,3.733,212,4.613,213,4.613,214,2.761,215,4.713,216,3.567,217,4.127,218,4.127,219,5.314,220,4.613,221,5.43,222,5.761,223,3.217,224,4.613,225,2.624,226,4.127,227,4.713,228,6.44,229,3.376,230,1.88,231,3.081,232,3.217,233,3.081,234,3.806,235,6.44,236,4.613,237,3.567,238,4.713,239,1.048,240,3.707,241,3.806,242,0.646,243,4.613,244,3.806,245,4.613,246,4.127,247,3.806,248,2.962,249,2.353,250,5.761,251,6.44,252,4.613,253,4.613,254,4.613,255,4.613,256,2.962,257,3.806,258,4.127,259,2.39,260,5.761,261,6.44,262,5.761,263,6.44,264,6.44,265,1.954,266,4.613,267,7.828,268,3.376,269,4.613,270,5.761,271,3.78,272,4.127,273,4.127,274,4.127,275,2.331,276,2.236,277,4.491,278,3.806,279,4.127,280,4.127,281,1.601,282,4.613,283,4.613,284,4.613,285,4.127,286,5.761,287,4.127,288,4.613,289,4.613,290,4.613,291,4.613,292,4.613,293,4.613,294,4.613,295,4.127,296,4.613,297,4.127,298,4.127,299,3.806,300,5.761,301,4.127,302,4.613,303,3.376,304,4.613,305,4.613,306,4.613,307,4.613,308,4.127,309,4.127,310,4.613,311,6.44,312,4.127,313,6.44,314,4.613,315,4.613,316,4.127,317,4.613,318,4.613,319,4.613,320,4.613,321,4.127,322,4.613,323,4.127,324,4.613,325,4.613]],["title/modules/AppRoutingModule.html",[189,1.975,199,3.614]],["body/modules/AppRoutingModule.html",[2,0.071,3,0.071,6,0.063,26,0.006,32,0.135,33,1.563,34,0.063,35,0.342,114,0.005,115,0.005,156,3.749,186,2.321,189,3.04,199,6.497,211,5.146,215,6.497,217,6.802,218,6.802,309,6.802,326,7.603,327,5.88,328,7.603]],["title/injectables/AuthApiService.html",[329,1.462,330,4.075]],["body/injectables/AuthApiService.html",[2,0.061,3,0.061,6,0.054,8,0.51,19,2.807,21,0.152,25,0.229,26,0.006,30,0.596,32,0.132,33,1.335,34,0.046,35,0.292,42,0.74,96,1.296,114,0.004,115,0.004,126,2.426,133,0.651,137,0.988,138,0.781,142,2.029,158,2.146,188,3.55,205,4.997,221,6.725,223,4.529,231,4.337,232,4.529,276,2.254,277,5.629,329,2.6,330,6.66,331,9.188,332,6.493,333,3.98,334,3.893,335,5.021,336,6.493,337,7.221,338,5.9,339,6.493,340,8.22,341,5.689,342,6.312,343,3.926,344,6.493,345,4.529,346,2.926,347,5.021,348,6.493,349,6.493]],["title/injectables/AuthEffects.html",[329,1.462,350,4.075]],["body/injectables/AuthEffects.html",[2,0.034,3,0.034,6,0.03,8,0.427,19,2.807,21,0.085,22,0.223,25,0.154,26,0.006,27,0.581,28,0.745,30,0.567,32,0.128,33,0.749,34,0.026,35,0.164,42,0.334,100,1.766,114,0.004,115,0.003,122,3.168,127,0.887,133,0.721,135,4.633,137,0.446,138,0.353,142,2.029,156,1.797,158,1.204,160,1.938,167,2.093,169,2.353,189,2.172,194,3.251,225,1.485,230,1.485,233,4.337,240,3.788,242,0.365,248,2.34,259,3.365,265,1.544,275,3.637,276,2.903,281,2.984,303,3.976,329,1.922,330,7.092,333,4.693,334,3.893,337,4.859,338,4.17,341,5.321,345,2.542,346,1.642,350,4.482,351,3.644,352,7.197,353,7.149,354,4.859,355,3.935,356,3.935,357,4.807,358,6.914,359,2.818,360,0.889,361,5.183,362,3.353,363,3.314,364,5.351,365,3.644,366,4.482,367,4.482,368,3.363,369,6.914,370,6.261,371,5.432,372,5.432,373,4.201,374,5.432,375,5.432,376,7.197,377,5.432,378,5.432,379,5.432,380,2.426,381,5.432,382,5.566,383,5.432,384,3.989,385,3.644,386,5.432,387,5.432,388,5.022,389,5.432,390,3.628,391,5.634,392,5.432,393,4.201,394,3.644,395,4.173,396,5.432,397,5.432,398,3.644,399,1.795,400,5.432,401,5.953,402,5.432,403,4.201,404,4.201,405,4.201,406,4.201,407,4.201,408,3.488,409,4.201,410,4.201,411,4.201,412,2.815,413,7.197,414,4.201,415,5.432,416,3.644,417,4.482,418,4.859,419,2.745,420,2.969,421,5.432,422,3.976,423,5.432,424,5.432,425,5.432,426,5.432,427,3.644,428,3.789,429,1.405,430,3.644,431,2.667,432,2.818,433,3.644,434,3.644,435,2.113,436,2.667,437,3.007,438,2.113,439,2.542,440,3.628]],["title/guards/AuthGuard.html",[441,4.075,442,4.075]],["body/guards/AuthGuard.html",[2,0.063,3,0.063,6,0.055,8,0.523,19,2.877,21,0.156,25,0.188,26,0.006,30,0.556,32,0.137,33,1.368,34,0.048,35,0.299,42,0.61,45,2.199,96,1.103,114,0.004,115,0.004,118,0.789,126,2.463,133,0.667,137,0.815,138,0.644,142,2.046,156,3.282,158,2.199,160,3.54,167,2.565,186,2.031,188,3.638,233,4.445,234,5.492,239,1.512,240,4.106,242,0.667,249,2.432,256,4.273,295,5.954,329,2.426,340,7.332,343,3.689,346,2.999,360,0.644,412,3.448,435,3.858,441,5.492,442,6.763,443,6.655,444,8.195,445,5.716,446,8.669,447,4.121,448,6.655,449,6.655,450,3.983,451,6.655,452,6.655,453,6.655]],["title/components/AuthLayoutComponent.html",[0,1.075,44,1.744]],["body/components/AuthLayoutComponent.html",[0,1.993,1,2.102,2,0.055,3,0.055,4,2.297,5,2.297,6,0.048,9,2.215,16,2.066,17,3.56,18,3.781,20,2.966,26,0.005,32,0.082,33,1.203,34,0.042,35,0.263,36,1.998,37,2.966,38,2.966,39,1.927,40,3.472,41,2.297,42,0.767,43,2.297,44,3.123,45,2.766,46,2.966,47,2.176,48,2.297,49,2.215,50,2.297,51,2.138,52,2.297,53,2.138,54,2.297,55,2.215,56,2.297,57,2.215,58,2.032,59,2.066,60,1.843,61,2.297,62,2.215,63,2.297,64,2.966,65,2.176,66,2.297,67,2.066,68,2.297,69,2.215,70,2.297,71,2.215,72,2.297,73,2.176,74,1.68,75,1.471,76,3.594,77,2.215,78,1.323,79,1.017,80,2.176,81,2.215,82,2.966,83,2.176,84,2.297,85,2.215,86,2.966,87,2.215,88,2.297,89,2.215,90,2.297,91,2.066,92,2.297,93,2.066,94,2.297,95,2.215,96,1.19,97,2.176,98,2.215,99,2.176,100,1.903,101,2.138,102,2.297,103,2.176,104,2.297,105,2.102,106,2.297,107,2.176,108,2.297,109,2.176,110,2.297,111,2.176,112,2.255,113,2.297,114,0.004,115,0.004,454,5.852,455,4.829,456,2.912]],["title/modules/AuthModule.html",[189,1.975,200,3.614]],["body/modules/AuthModule.html",[0,1.657,2,0.056,3,0.056,6,0.049,26,0.006,32,0.143,33,1.217,34,0.06,35,0.266,36,2.02,44,3.321,45,1.955,59,3.321,67,3.321,91,3.321,93,3.321,114,0.004,115,0.004,169,1.725,189,3.043,191,3.235,192,5.209,193,3.799,194,3.541,200,7.472,203,4.887,204,1.531,205,3.664,211,4.412,214,3.541,216,4.576,222,6.809,223,4.127,225,2.411,229,5.571,230,2.411,241,4.883,242,0.593,247,4.883,248,3.799,249,2.162,256,3.799,259,3.066,350,4.883,457,5.293,458,5.293,459,5.293,460,6.884,461,5.629,462,5.917,463,5.308,464,5.917,465,5.917,466,5.917,467,5.917,468,5.293,469,5.917,470,5.886,471,5.886,472,3.147,473,5.917,474,4.576,475,5.917,476,5.917,477,4.883,478,5.917,479,4.883]],["title/modules/AuthRoutingModule.html",[189,1.975,460,3.614]],["body/modules/AuthRoutingModule.html",[2,0.066,3,0.066,6,0.058,26,0.006,32,0.14,33,1.447,34,0.065,35,0.317,36,2.404,114,0.005,115,0.005,156,3.471,189,3.391,191,3.848,192,4.358,193,4.52,194,4.213,203,5.445,204,1.821,205,4.358,211,4.916,214,4.213,215,6.207,259,3.647,327,5.444,460,7.188,461,5.878,463,5.915,470,6.558,471,6.558,472,3.744,480,7.039,481,7.039,482,7.039,483,7.039,484,7.039,485,7.039]],["title/interfaces/AuthState.html",[486,1.045,487,4.075]],["body/interfaces/AuthState.html",[2,0.059,3,0.059,6,0.052,10,7.709,21,0.146,22,0.324,25,0.223,26,0.006,32,0.133,34,0.072,45,2.064,114,0.004,115,0.004,142,1.379,169,2.903,237,4.83,238,4.572,242,0.626,249,2.879,256,4.011,281,2.169,360,0.604,435,3.621,477,5.154,486,1.826,487,7.709,488,5.588,489,8.357,490,7.72,491,7.72,492,5.588,493,5.588,494,5.588,495,4.83,496,5.766,497,4.572,498,6.838,499,7.047,500,5.588,501,1.592,502,3.867,503,4.83,504,5.588,505,7.72,506,5.588,507,5.588,508,5.588,509,7.72,510,5.588,511,4.83,512,7.72,513,5.588,514,5.154,515,5.588,516,5.588,517,4.572,518,5.154,519,5.588,520,4.356,521,5.588,522,4.356,523,5.588]],["title/components/BlankComponent.html",[0,1.075,47,1.836]],["body/components/BlankComponent.html",[0,2.102,1,2.09,2,0.055,3,0.055,4,2.284,5,2.284,6,0.048,9,2.203,16,2.055,17,3.559,18,3.78,20,2.956,26,0.005,32,0.081,33,1.197,34,0.042,35,0.262,36,1.987,37,2.956,38,2.956,39,1.92,40,3.465,41,2.284,42,0.765,43,2.284,44,2.055,45,1.923,46,2.956,47,3.282,48,2.284,49,2.203,50,2.284,51,2.127,52,2.284,53,2.127,54,2.284,55,2.203,56,2.284,57,2.203,58,2.021,59,2.055,60,1.833,61,2.284,62,2.203,63,2.284,64,2.956,65,2.164,66,2.284,67,2.055,68,2.284,69,2.203,70,2.284,71,2.203,72,2.284,73,2.164,74,1.671,75,1.463,76,3.588,77,2.203,78,1.32,79,1.013,80,2.164,81,2.203,82,2.956,83,2.164,84,2.284,85,2.203,86,2.956,87,2.203,88,2.284,89,2.203,90,2.284,91,2.055,92,2.284,93,2.055,94,2.284,95,2.203,96,1.188,97,2.164,98,2.203,99,2.164,100,1.893,101,2.127,102,2.284,103,2.164,104,2.284,105,2.09,106,2.284,107,2.164,108,2.284,109,2.164,110,2.284,111,2.164,112,2.243,113,2.284,114,0.004,115,0.004,524,5.82,525,8.178]],["title/components/BreadcrumbComponent.html",[0,1.075,49,1.869]],["body/components/BreadcrumbComponent.html",[0,1.782,1,1.525,2,0.04,3,0.04,4,1.666,5,1.666,6,0.035,9,1.607,16,1.499,17,3.494,18,3.703,20,1.666,21,0.099,22,0.25,24,0.403,25,0.219,26,0.006,29,5.433,30,0.595,32,0.119,33,0.873,34,0.03,35,0.191,36,1.45,37,2.384,38,2.384,39,1.549,40,3.037,41,1.666,42,0.75,43,1.666,44,1.499,45,1.403,46,2.384,47,1.579,48,1.666,49,2.929,50,1.666,51,1.551,52,1.666,53,1.551,54,1.666,55,1.607,56,1.666,57,1.607,58,1.474,59,1.499,60,1.337,61,1.666,62,1.607,63,1.666,64,2.384,65,1.579,66,1.666,67,1.499,68,1.666,69,1.607,70,1.666,71,1.607,72,1.666,73,1.579,74,1.219,75,1.067,76,3.214,77,1.607,78,1.158,79,0.817,80,1.579,81,1.607,82,2.384,83,1.579,84,1.666,85,1.607,86,2.384,87,1.607,88,1.666,89,1.607,90,1.666,91,1.499,92,1.666,93,1.499,94,1.666,95,1.607,96,1.041,97,1.579,98,1.607,99,1.579,100,1.381,101,1.551,102,1.666,103,1.579,104,1.666,105,1.525,106,1.666,107,1.579,108,1.666,109,1.579,110,1.666,111,1.579,112,1.636,113,1.666,114,0.003,115,0.003,118,0.72,119,2.783,122,2.783,126,1.825,127,1.057,131,3.037,133,0.609,134,3.283,135,4.413,137,0.744,138,0.588,142,1.98,143,2.181,151,5.398,155,4.697,156,2.094,158,1.403,159,3.504,160,2.258,169,1.238,171,3.416,176,2.836,177,3.108,185,4.697,186,1.296,271,1.999,301,3.798,362,3.539,456,3.282,526,6.255,527,4.246,528,4.244,529,2.68,530,2.573,531,6.073,532,6.386,533,6.923,534,4.632,535,6.073,536,6.782,537,7.091,538,7.739,539,5.469,540,6.073,541,4.246,542,4.246,543,6.073,544,4.246,545,7.739,546,4.246,547,4.246,548,4.246,549,4.246,550,3.504,551,4.246,552,1.525,553,5.433,554,4.246,555,4.246,556,3.798,557,4.246,558,4.246,559,3.108,560,2.961,561,4.246,562,4.246,563,4.246,564,4.246,565,4.246,566,6.073,567,7.091,568,6.073,569,3.635,570,4.246,571,4.246,572,1.115,573,4.246,574,4.246,575,3.798,576,8.517,577,4.246,578,4.246,579,6.343,580,4.246,581,6.073,582,4.246,583,4.246]],["title/classes/ClearSelectedNursingHome.html",[35,0.222,584,2.559]],["body/classes/ClearSelectedNursingHome.html",[2,0.044,3,0.044,6,0.038,8,0.365,21,0.109,22,0.266,24,0.441,25,0.279,26,0.006,27,0.35,28,0.449,30,0.315,32,0.104,34,0.07,35,0.436,74,1.333,75,1.167,79,1.083,114,0.003,115,0.003,118,1.15,204,1.674,239,1.83,242,0.465,360,0.983,429,1.201,501,1.137,572,1.955,584,4.173,585,2.979,586,2.47,587,2.17,588,2.07,589,1.526,590,3.639,591,4.643,592,3.706,593,2.049,594,1.929,595,1.944,596,1.256,597,0.726,598,2.538,599,3.858,600,3.858,601,1.886,602,3.762,603,1.944,604,1.65,605,1.724,606,3.971,607,1.327,608,3.762,609,2.243,610,3.762,611,1.17,612,3.858,613,2.497,614,3.858,615,2.038,616,3.858,617,3.858,618,3.858,619,2.612,620,1.364,621,1.384,622,2.612,623,2.612,624,2.612,625,1.486,626,2.612,627,2.612,628,2.612,629,2.612,630,1.293,631,2.612,632,2.612,633,2.612,634,1.462,635,2.538]],["title/classes/ClearSelectedPatient.html",[35,0.222,636,2.435]],["body/classes/ClearSelectedPatient.html",[2,0.041,3,0.041,6,0.036,8,0.344,21,0.103,22,0.255,24,0.416,25,0.28,26,0.006,27,0.331,28,0.424,30,0.297,32,0.101,34,0.07,35,0.438,78,1.541,79,1.056,96,0.971,114,0.003,115,0.003,118,1.154,204,1.607,239,1.783,242,0.439,360,0.985,429,1.607,501,1.091,572,1.894,587,2.103,588,1.987,589,1.531,595,1.317,596,1.185,597,0.685,601,1.81,603,1.867,604,1.584,605,1.922,607,1.107,609,2.187,611,1.419,613,2.434,615,1.956,620,1.425,621,1.446,625,1.402,630,1.22,634,1.38,636,3.871,637,2.213,638,3.303,639,4.381,640,2.529,641,1.424,642,2.27,643,3.475,644,3.558,645,3.558,646,3.695,647,3.475,648,3.475,649,3.558,650,3.558,651,3.322,652,3.558,653,3.558,654,2.991,655,2.23,656,3.558,657,2.33,658,2.33,659,2.33,660,2.33,661,2.33,662,2.33,663,2.33,664,2.33,665,2.33,666,2.33,667,2.33,668,2.33,669,1.896,670,2.33,671,2.27]],["title/classes/ClearSelectedUser.html",[35,0.222,672,2.435]],["body/classes/ClearSelectedUser.html",[2,0.041,3,0.041,6,0.036,8,0.344,21,0.103,22,0.255,24,0.416,25,0.28,26,0.006,27,0.33,28,0.423,30,0.297,32,0.101,34,0.07,35,0.438,78,0.928,79,1.056,96,1.392,114,0.003,115,0.003,118,1.154,204,1.606,239,1.783,242,0.439,360,0.985,429,1.606,501,1.09,572,1.893,587,2.102,588,1.986,589,1.53,595,1.315,596,1.183,597,0.684,601,1.809,603,1.865,604,1.582,605,1.921,607,1.106,609,2.186,611,1.419,613,2.433,615,1.955,620,1.425,621,1.446,625,1.4,630,1.219,634,1.378,655,2.229,669,1.894,672,3.869,673,2.211,674,3.301,675,4.376,676,1.446,677,2.268,678,3.473,679,3.556,680,3.556,681,3.694,682,3.473,683,3.473,684,3.556,685,3.556,686,3.32,687,3.556,688,3.556,689,2.989,690,3.473,691,2.328,692,2.328,693,2.328,694,2.328,695,2.328,696,2.328,697,2.328,698,2.328,699,2.328,700,2.328,701,2.328,702,2.328,703,2.328,704,2.268]],["title/classes/CloseSideNav.html",[35,0.222,705,2.559]],["body/classes/CloseSideNav.html",[2,0.042,3,0.042,6,0.037,8,0.356,21,0.106,22,0.261,23,2.066,24,0.918,25,0.282,26,0.006,27,0.341,28,0.438,30,0.498,32,0.063,34,0.069,35,0.434,39,2.03,42,0.415,114,0.003,115,0.003,127,0.868,133,0.454,137,0.554,138,0.438,242,0.454,360,0.946,456,3.769,529,3.701,552,2.637,589,1.52,597,0.708,620,1.543,621,1.606,705,4.126,706,2.407,707,3.174,708,3.941,709,4.496,710,1.028,711,6.353,712,4.525,713,3.473,714,2.407,715,3.805,716,2.926,717,3.71,718,3.805,719,2.991,720,4.585,721,3.805,722,3.274,723,3.805,724,3.174,725,3.805,726,2.179,727,3.805,728,2.474,729,3.805,730,3.473,731,3.381,732,2.64,733,3.805,734,4.235,735,3.06,736,3.805,737,3.805,738,3.473,739,2.474,740,2.474,741,2.474,742,2.474,743,2.474,744,3.574,745,3.574,746,2.474,747,2.474,748,2.474,749,2.474,750,2.474,751,2.545,752,2.474,753,2.545,754,2.474,755,2.286]],["title/classes/CompactSideNav.html",[35,0.222,718,2.559]],["body/classes/CompactSideNav.html",[2,0.042,3,0.042,6,0.037,8,0.356,21,0.106,22,0.261,23,2.066,24,0.918,25,0.282,26,0.006,27,0.341,28,0.438,30,0.498,32,0.063,34,0.069,35,0.434,39,2.03,42,0.415,114,0.003,115,0.003,127,0.868,133,0.454,137,0.554,138,0.438,242,0.454,360,0.946,456,3.769,529,3.701,552,2.637,589,1.52,597,0.708,620,1.543,621,1.606,705,3.805,706,2.407,707,2.747,708,3.941,709,4.496,710,1.028,713,2.474,714,2.407,715,3.805,716,2.926,717,3.71,718,4.126,719,3.457,720,4.585,721,3.805,722,3.274,723,3.805,724,3.174,725,3.805,726,2.179,727,3.805,728,2.474,729,3.805,730,3.473,731,3.381,732,2.64,733,3.805,734,4.235,735,3.06,736,3.805,737,3.805,738,3.473,739,2.474,740,2.474,741,3.473,742,2.474,743,2.474,744,3.574,745,3.574,746,2.474,747,2.474,748,2.474,749,2.474,750,2.474,751,2.545,752,2.474,753,2.545,754,2.474,755,2.286,756,6.353,757,4.525]],["title/components/ConfirmComponent.html",[0,1.075,51,1.804]],["body/components/ConfirmComponent.html",[0,1.987,1,1.759,2,0.046,3,0.046,4,1.923,5,1.923,6,0.04,8,0.385,9,1.854,16,1.73,17,3.526,18,3.734,20,1.923,21,0.115,22,0.276,25,0.233,26,0.006,30,0.559,32,0.107,33,1.007,34,0.035,35,0.22,36,1.673,37,2.635,38,2.635,39,1.712,40,3.234,41,1.923,42,0.755,43,1.923,44,1.73,45,1.619,46,2.635,47,1.822,48,1.923,49,1.854,50,1.923,51,3.011,52,1.923,53,1.79,54,1.923,55,1.854,56,1.923,57,1.854,58,1.701,59,1.73,60,1.543,61,1.923,62,1.854,63,1.923,64,2.635,65,1.822,66,1.923,67,1.73,68,1.923,69,1.854,70,1.923,71,1.854,72,1.923,73,1.822,74,1.406,75,1.231,76,3.388,77,1.854,78,1.233,79,0.903,80,1.822,81,1.854,82,2.635,83,1.822,84,1.923,85,1.854,86,2.635,87,1.854,88,1.923,89,1.854,90,1.923,91,1.73,92,1.923,93,1.73,94,1.923,95,1.854,96,1.109,97,1.822,98,1.854,99,1.822,100,1.593,101,1.79,102,1.923,103,1.822,104,1.923,105,1.759,106,1.923,107,1.822,108,1.923,109,1.822,110,1.923,111,1.822,112,1.888,113,1.923,114,0.004,115,0.004,127,1.288,133,0.768,137,0.6,138,0.474,225,1.996,230,1.996,259,2.538,265,2.076,275,3.392,276,2.331,329,1.45,362,3.964,363,4.105,384,2.538,429,1.737,530,2.844,732,2.789,758,4.899,759,5.336,760,6.713,761,5.229,762,4.873,763,4.382,764,4.619,765,4.899,766,5.191,767,4.899,768,4.899,769,4.899,770,3.788,771,4.042,772,4.899,773,4.899,774,3.585,775,4.682,776,5.54,777,6.713,778,4.899,779,4.682]],["title/interfaces/ConfirmData.html",[486,1.045,780,4.075]],["body/interfaces/ConfirmData.html",[2,0.056,3,0.056,6,0.049,8,0.468,11,4.917,19,2.576,21,0.14,22,0.314,23,3.064,24,0.896,25,0.217,26,0.006,32,0.129,33,1.225,34,0.043,35,0.268,51,2.177,114,0.004,115,0.004,122,3.001,127,0.814,133,0.766,138,0.862,142,1.966,158,1.969,163,3.689,167,2.296,186,2.334,225,2.428,230,2.428,259,3.087,265,2.525,275,4.499,276,2.931,329,2.263,343,3.7,346,2.685,362,3.507,363,3.52,364,3.566,367,4.917,380,2.832,429,2.383,438,4.432,486,1.786,716,2.744,759,5.512,761,5.01,762,4.615,764,4.374,771,6.308,775,5.887,776,6.966,780,7.348,781,5.33,782,4.917,783,5.33,784,5.33,785,3.689,786,5.33,787,3.454,788,4.608,789,5.33,790,5.33,791,5.33,792,5.33,793,5.33,794,3.454,795,5.33,796,3.826,797,4.361]],["title/injectables/ConfirmService.html",[329,1.462,364,2.956]],["body/injectables/ConfirmService.html",[2,0.052,3,0.052,6,0.046,8,0.641,11,6.017,19,2.395,21,0.13,23,2.816,24,0.693,25,0.207,26,0.006,27,0.418,28,0.536,30,0.494,32,0.126,33,1.139,34,0.04,35,0.249,42,0.668,51,2.025,114,0.004,115,0.004,122,2.862,126,2.192,127,1.114,133,0.868,137,0.893,138,0.706,142,2.08,158,1.831,163,3.431,167,2.81,186,2.488,225,2.258,230,2.258,259,3.779,265,2.348,275,4.547,276,2.83,329,2.413,343,3.913,346,2.497,362,3.838,363,3.988,364,4.365,367,6.017,380,2.603,429,2.502,438,5.021,486,1.725,716,3.358,759,5.787,761,4.872,762,4.735,764,4.488,771,7.147,775,5.685,776,6.726,780,7.624,781,4.957,782,4.572,783,6.524,784,6.524,785,4.515,786,6.524,787,4.228,788,5.639,789,6.524,790,6.524,791,4.957,792,4.957,793,4.957,794,3.212,795,4.957,796,3.558,797,4.055,798,4.957,799,5.541,800,5.541]],["title/modules/CoreModule.html",[189,1.975,801,3.614]],["body/modules/CoreModule.html",[0,2.055,2,0.056,3,0.056,6,0.05,8,0.472,26,0.006,32,0.132,33,1.234,34,0.066,35,0.27,36,2.049,44,3.466,51,3.262,59,3.466,67,3.466,91,3.466,93,3.466,114,0.004,115,0.004,169,1.749,189,3.69,191,3.28,192,5.244,193,3.853,194,4.596,203,4.931,204,1.553,205,3.715,211,4.452,225,2.445,229,6.199,230,2.445,259,3.109,275,3.88,354,6.87,461,5.994,479,6.337,782,4.951,801,7.538,802,5.368,803,6,804,6,805,5.368,806,6,807,7.679,808,5.939,809,4.008]],["title/classes/CreateNursingHome.html",[35,0.222,606,2.435]],["body/classes/CreateNursingHome.html",[2,0.042,3,0.042,6,0.037,8,0.354,21,0.106,22,0.26,24,0.428,25,0.284,26,0.006,27,0.34,28,0.436,30,0.497,32,0.102,34,0.07,35,0.434,42,0.413,74,1.294,75,1.132,79,1.069,114,0.003,115,0.003,118,1.144,127,0.865,133,0.452,137,0.552,138,0.436,204,1.639,239,1.664,242,0.452,360,0.98,429,1.166,501,1.113,572,1.923,584,3.796,585,3.66,586,2.397,587,1.847,588,1.442,589,1.519,590,2.535,592,3.703,593,1.988,594,1.872,595,1.904,596,1.218,597,0.705,598,2.463,599,3.796,600,3.796,601,1.847,602,3.701,603,1.904,604,1.615,605,1.688,606,4.13,607,1.417,608,3.701,609,2.214,610,3.701,611,1.146,612,3.796,613,2.464,614,3.796,615,1.995,616,3.796,617,3.796,618,3.796,619,2.535,620,1.349,621,1.513,622,2.535,623,2.535,624,3.563,625,1.442,626,2.535,627,2.535,628,2.535,629,2.535,630,1.255,631,2.535,632,2.535,633,2.535,634,1.419,635,2.463,710,1.024,810,2.626,811,6.335,812,4.506]],["title/classes/CreateNursingHomeFailure.html",[35,0.222,813,3.058]],["body/classes/CreateNursingHomeFailure.html",[2,0.049,3,0.049,6,0.043,8,0.406,21,0.121,22,0.286,24,0.748,25,0.285,26,0.006,27,0.39,28,0.5,30,0.534,32,0.097,34,0.068,35,0.416,42,0.473,75,2.117,79,1.133,114,0.004,115,0.004,118,1.098,127,1.317,133,0.518,137,0.633,138,0.5,242,0.518,360,0.967,380,2.366,399,2.993,585,3.878,589,1.472,592,3.636,593,2.279,594,2.146,597,0.808,607,1.241,611,1.523,620,1.459,621,1.575,710,1.174,810,2.783,813,5.215,814,1.855,815,3.089,816,3.309,817,6.959,818,5.165,819,4.854,820,1.824,821,3.45,822,4.873,823,6.049,824,4.873,825,4.873,826,4.873,827,4.873,828,3.603,829,3.603,830,3.603,831,3.603,832,3.603,833,3.45]],["title/classes/CreateNursingHomeSuccess.html",[35,0.222,822,3.058]],["body/classes/CreateNursingHomeSuccess.html",[2,0.049,3,0.049,6,0.043,8,0.406,21,0.121,22,0.286,24,0.748,25,0.285,26,0.006,27,0.39,28,0.5,30,0.534,32,0.097,34,0.068,35,0.416,42,0.473,75,2.117,79,1.133,114,0.004,115,0.004,118,1.098,127,1.317,133,0.518,137,0.633,138,0.5,242,0.518,360,0.967,380,2.366,399,3.059,585,3.878,589,1.472,592,3.636,593,2.279,594,2.146,597,0.808,607,1.241,611,1.523,620,1.459,621,1.575,710,1.174,810,2.783,813,4.873,814,1.855,815,3.089,816,3.212,819,3.603,820,1.824,821,3.45,822,5.215,823,6.049,824,4.873,825,4.873,826,4.873,827,4.873,828,4.854,829,3.603,830,3.603,831,3.603,832,3.603,833,3.45,834,6.959,835,5.165]],["title/classes/CreatePatient.html",[35,0.222,646,2.325]],["body/classes/CreatePatient.html",[2,0.04,3,0.04,6,0.035,8,0.335,21,0.1,22,0.251,24,0.406,25,0.284,26,0.006,27,0.322,28,0.413,30,0.482,32,0.099,34,0.07,35,0.436,42,0.391,78,1.54,79,1.044,96,0.957,114,0.003,115,0.003,118,1.15,127,0.833,133,0.428,137,0.523,138,0.413,204,1.577,239,1.616,242,0.428,360,0.983,429,1.577,501,1.071,572,1.867,587,1.777,588,1.365,589,1.525,595,1.283,596,1.154,597,0.667,601,1.777,603,1.832,604,1.554,605,1.895,607,1.268,609,2.161,611,1.403,613,2.405,615,1.92,620,1.414,621,1.534,625,1.365,630,1.189,634,1.344,636,3.506,637,2.156,638,2.27,640,2.504,641,1.387,642,2.211,643,3.425,644,3.506,645,3.506,646,3.862,647,3.425,648,3.425,649,3.506,650,3.506,651,3.274,652,3.506,653,3.506,654,2.936,655,2.189,656,3.506,657,2.27,658,2.27,659,2.27,660,3.242,661,2.27,662,2.27,663,2.27,664,2.27,665,2.27,666,2.27,667,2.27,668,2.27,669,1.861,670,2.27,671,2.211,710,0.969,810,2.563,836,6.095,837,4.267]],["title/classes/CreatePatientFailure.html",[35,0.222,838,2.863]],["body/classes/CreatePatientFailure.html",[2,0.045,3,0.045,6,0.039,8,0.373,21,0.111,22,0.27,24,0.624,25,0.284,26,0.006,27,0.358,28,0.459,30,0.51,32,0.105,34,0.068,35,0.421,42,0.434,78,1.501,79,1.093,96,1.217,114,0.004,115,0.004,118,1.11,127,1.32,133,0.475,137,0.581,138,0.459,242,0.475,360,0.971,380,2.442,399,3.048,589,1.482,597,0.741,607,1.17,611,1.668,620,1.485,621,1.578,640,2.48,641,1.542,676,1.567,710,1.077,810,2.685,814,1.703,815,2.955,816,3.37,820,1.674,838,4.711,839,4.863,840,5.872,841,4.241,842,4.215,843,2.935,844,4.235,845,5.464,846,4.364,847,4.364,848,4.364,849,4.364,850,4.364,851,3.237,852,4.364,853,3.044,854,3.044,855,3.044,856,3.044,857,3.044,858,3.044,859,3.044,860,2.935]],["title/classes/CreatePatientFormDialog.html",[35,0.222,645,2.435]],["body/classes/CreatePatientFormDialog.html",[2,0.041,3,0.041,6,0.036,8,0.344,21,0.103,22,0.255,24,0.416,25,0.28,26,0.006,27,0.33,28,0.423,30,0.297,32,0.101,34,0.07,35,0.438,78,1.542,79,1.056,96,0.97,114,0.003,115,0.003,118,1.154,204,1.606,239,1.638,242,0.439,360,0.985,429,1.606,501,1.09,572,1.893,587,1.809,588,1.4,589,1.53,595,1.315,596,1.183,597,0.684,601,1.809,603,2.167,604,1.839,605,2.09,607,1.106,609,2.186,611,1.419,613,2.433,615,1.955,620,1.425,621,1.446,625,1.4,630,1.219,634,1.378,636,3.556,637,2.211,638,2.328,640,2.528,641,1.423,642,2.268,643,3.473,644,3.556,645,3.869,646,3.694,647,3.473,648,3.473,649,3.556,650,3.556,651,3.32,652,3.556,653,3.556,654,2.989,655,2.229,656,3.556,657,2.328,658,2.328,659,3.301,660,2.328,661,2.328,662,2.328,663,2.328,664,2.328,665,2.328,666,2.328,667,2.328,668,2.328,669,1.894,670,2.328,671,2.268,861,4.376]],["title/classes/CreatePatientSuccess.html",[35,0.222,844,2.778]],["body/classes/CreatePatientSuccess.html",[2,0.045,3,0.045,6,0.039,8,0.373,21,0.111,22,0.27,24,0.624,25,0.284,26,0.006,27,0.358,28,0.459,30,0.51,32,0.105,34,0.068,35,0.421,42,0.434,78,1.501,79,1.093,96,1.217,114,0.004,115,0.004,118,1.11,127,1.32,133,0.475,137,0.581,138,0.459,242,0.475,360,0.971,380,2.442,399,3.094,589,1.482,597,0.741,607,1.17,611,1.668,620,1.485,621,1.578,640,2.48,641,1.542,676,1.567,710,1.077,810,2.685,814,1.703,815,2.955,816,3.306,820,1.674,838,4.364,839,4.863,842,3.044,843,2.935,844,4.571,845,5.464,846,4.364,847,4.364,848,4.364,849,4.364,850,4.364,851,3.237,852,4.364,853,4.215,854,3.044,855,3.044,856,3.044,857,3.044,858,3.044,859,3.044,860,2.935,862,5.872,863,4.241]],["title/classes/CreateUser.html",[35,0.222,681,2.325]],["body/classes/CreateUser.html",[2,0.04,3,0.04,6,0.035,8,0.335,21,0.1,22,0.25,24,0.405,25,0.284,26,0.006,27,0.322,28,0.412,30,0.482,32,0.099,34,0.07,35,0.436,42,0.391,78,0.911,79,1.043,96,1.391,114,0.003,115,0.003,118,1.149,127,0.832,133,0.427,137,0.522,138,0.412,204,1.576,239,1.615,242,0.427,360,0.983,429,1.576,501,1.07,572,1.866,587,1.775,588,1.364,589,1.525,595,1.281,596,1.153,597,0.667,601,1.775,603,1.831,604,1.553,605,1.894,607,1.267,609,2.16,611,1.402,613,2.404,615,1.918,620,1.414,621,1.533,625,1.364,630,1.188,634,1.343,655,2.187,669,1.859,672,3.504,673,2.154,674,2.267,676,1.409,677,2.209,678,3.423,679,3.504,680,3.504,681,3.861,682,3.423,683,3.423,684,3.504,685,3.504,686,3.272,687,3.504,688,3.504,689,2.934,690,3.423,691,2.267,692,2.267,693,2.267,694,3.24,695,2.267,696,2.267,697,2.267,698,2.267,699,2.267,700,2.267,701,2.267,702,2.267,703,2.267,704,2.209,710,0.969,810,2.562,864,6.091,865,4.263]],["title/classes/CreateUserFailure.html",[35,0.222,866,2.863]],["body/classes/CreateUserFailure.html",[2,0.044,3,0.044,6,0.039,8,0.372,21,0.111,22,0.27,24,0.623,25,0.284,26,0.006,27,0.357,28,0.458,30,0.51,32,0.105,34,0.068,35,0.421,42,0.434,78,1.276,79,1.093,96,1.364,114,0.004,115,0.004,118,1.11,127,1.319,133,0.475,137,0.58,138,0.458,242,0.475,360,0.971,380,2.441,399,3.047,589,1.482,597,0.741,607,1.169,611,1.667,620,1.485,621,1.578,640,2.002,641,1.54,676,1.565,710,1.076,810,2.684,814,1.701,815,2.953,816,3.421,820,1.672,840,5.867,841,4.236,851,4.547,866,4.708,867,4.861,868,4.211,869,2.932,870,4.232,871,4.362,872,4.362,873,4.232,874,4.362,875,4.362,876,4.362,877,3.041,878,3.041,879,3.041,880,3.041,881,3.041,882,3.041,883,3.041,884,2.932]],["title/classes/CreateUserFormDialog.html",[35,0.222,680,2.435]],["body/classes/CreateUserFormDialog.html",[2,0.041,3,0.041,6,0.036,8,0.344,21,0.102,22,0.255,24,0.415,25,0.28,26,0.006,27,0.33,28,0.423,30,0.296,32,0.101,34,0.07,35,0.438,78,0.928,79,1.055,96,1.393,114,0.003,115,0.003,118,1.154,204,1.605,239,1.637,242,0.438,360,0.984,429,1.605,501,1.09,572,1.892,587,1.808,588,1.399,589,1.53,595,1.314,596,1.182,597,0.684,601,1.808,603,2.166,604,1.838,605,2.09,607,1.105,609,2.185,611,1.418,613,2.431,615,1.953,620,1.425,621,1.446,625,1.399,630,1.218,634,1.377,655,2.227,669,1.893,672,3.554,673,2.209,674,2.325,676,1.445,677,2.265,678,3.471,679,3.554,680,3.867,681,3.692,682,3.471,683,3.471,684,3.554,685,3.554,686,3.318,687,3.554,688,3.554,689,2.987,690,3.471,691,2.325,692,2.325,693,3.299,694,2.325,695,2.325,696,2.325,697,2.325,698,2.325,699,2.325,700,2.325,701,2.325,702,2.325,703,2.325,704,2.265,885,4.372]],["title/classes/CreateUserSuccess.html",[35,0.222,870,2.778]],["body/classes/CreateUserSuccess.html",[2,0.044,3,0.044,6,0.039,8,0.372,21,0.111,22,0.27,24,0.623,25,0.284,26,0.006,27,0.357,28,0.458,30,0.51,32,0.105,34,0.068,35,0.421,42,0.434,78,1.276,79,1.093,96,1.364,114,0.004,115,0.004,118,1.11,127,1.319,133,0.475,137,0.58,138,0.458,242,0.475,360,0.971,380,2.441,399,3.093,589,1.482,597,0.741,607,1.169,611,1.667,620,1.485,621,1.578,640,2.002,641,1.54,676,1.565,710,1.076,810,2.684,814,1.701,815,2.953,816,3.369,820,1.672,851,4.547,862,5.867,863,4.236,866,4.362,867,4.861,868,3.041,869,2.932,870,4.569,871,4.362,872,4.362,873,4.232,874,4.362,875,4.362,876,4.362,877,4.211,878,3.041,879,3.041,880,3.041,881,3.041,882,3.041,883,3.041,884,2.932]],["title/components/DashboardLayoutComponent.html",[0,1.075,53,1.804]],["body/components/DashboardLayoutComponent.html",[0,1.556,1,1.107,2,0.029,3,0.029,4,1.209,5,1.209,6,0.025,9,1.166,16,1.088,17,3.414,18,3.571,20,1.209,21,0.072,22,0.197,24,0.813,25,0.262,26,0.006,27,0.442,28,0.567,30,0.647,32,0.122,33,0.634,34,0.022,35,0.139,36,1.052,37,1.877,38,2.299,39,1.219,40,2.591,41,1.209,42,0.655,43,1.209,44,1.088,45,1.018,46,1.877,47,1.146,48,1.209,49,1.166,50,1.209,51,1.126,52,1.209,53,2.412,54,1.209,55,1.166,56,1.209,57,1.166,58,1.07,59,1.088,60,0.97,61,1.209,62,1.166,63,1.209,64,1.877,65,1.146,66,1.209,67,1.088,68,1.209,69,1.166,70,1.209,71,1.166,72,1.209,73,1.146,74,0.885,75,0.774,76,2.805,77,1.166,78,0.988,79,0.643,80,1.146,81,1.166,82,1.877,83,1.146,84,1.209,85,1.166,86,1.877,87,1.166,88,1.209,89,1.166,90,1.209,91,1.088,92,1.209,93,1.088,94,1.209,95,1.166,96,0.888,97,1.146,98,1.166,99,1.146,100,1.002,101,1.126,102,1.209,103,1.146,104,1.209,105,1.107,106,1.209,107,1.146,108,1.209,109,1.146,110,1.209,111,1.146,112,1.187,113,1.209,114,0.003,115,0.003,118,0.567,119,2.299,122,3.705,126,1.437,127,1.346,131,2.591,133,0.479,135,4.088,137,0.585,138,0.463,142,1.578,143,2.567,151,6.253,155,4.53,156,1.519,158,1.018,159,2.543,160,1.639,167,2.258,169,1.394,176,5.27,177,5.23,185,2.383,186,1.788,189,1.232,219,2.543,225,1.256,227,2.255,230,1.256,239,0.7,240,3.204,242,0.309,249,1.126,281,1.66,362,3.278,363,3.482,370,2.058,412,1.597,447,1.908,455,2.543,456,2.544,528,3.506,530,2.026,533,5.906,534,3.951,539,4.239,550,2.543,552,3.178,553,4.277,556,2.756,575,2.756,707,1.332,708,1.332,755,1.557,886,9.59,887,4.834,888,3.827,889,4.781,890,5.105,891,6.602,892,4.832,893,6.602,894,5.274,895,6.602,896,6.602,897,7.562,898,6.602,899,4.605,900,6.172,901,5.274,902,6.602,903,5.448,904,4.781,905,4.834,906,4.781,907,5.241,908,5.906,909,4.781,910,2.543,911,3.081,912,3.081,913,3.081,914,3.081,915,3.081,916,3.081,917,4.781,918,3.081,919,3.081,920,3.081,921,3.081,922,3.081,923,3.081,924,3.081,925,3.081,926,3.081,927,4.277,928,3.081,929,3.081,930,3.081,931,3.081,932,3.081,933,4.781,934,4.781,935,4.781,936,4.781,937,2.543,938,2.383,939,1.733,940,2.543,941,2.543,942,4.834,943,3.081,944,3.081,945,2.058,946,1.844,947,1.597,948,3.081,949,3.081,950,3.081,951,3.081,952,3.081,953,2.255,954,4.781,955,3.081,956,3.081,957,2.756,958,3.945,959,2.756,960,3.081,961,3.081,962,3.081,963,3.081,964,3.081,965,3.081,966,3.081,967,3.193,968,3.081,969,2.255,970,3.081,971,3.081,972,4.781,973,3.081,974,4.781,975,3.081,976,3.081,977,3.081,978,4.781,979,3.081,980,3.081,981,3.081,982,3.081,983,3.081,984,3.081,985,5.858,986,4.781,987,5.858,988,4.781,989,3.081,990,5.448,991,4.781,992,3.945,993,3.081,994,3.081,995,4.781,996,3.081,997,2.543,998,3.081,999,3.081,1000,3.081,1001,3.081,1002,2.756]],["title/modules/DashboardModule.html",[189,1.975,201,3.614]],["body/modules/DashboardModule.html",[0,1.544,2,0.04,3,0.04,6,0.035,8,0.334,26,0.006,32,0.144,33,0.873,34,0.061,35,0.191,36,1.45,44,2.732,47,2.637,49,2.299,53,3.277,59,2.732,62,2.299,65,2.258,67,2.732,71,2.684,73,2.258,75,1.526,77,2.299,79,1.041,80,2.878,81,2.299,83,2.258,85,2.299,87,2.299,89,2.299,91,2.732,93,2.732,95,2.299,97,2.878,98,2.299,99,2.258,101,2.219,103,2.258,105,2.181,107,2.258,109,2.258,111,2.258,114,0.003,115,0.003,157,3.504,169,1.77,189,3.406,191,2.321,192,4.39,193,2.726,194,4.244,201,7.376,203,3.9,204,1.099,205,2.629,211,3.521,214,2.541,216,3.283,225,2.475,229,4.445,230,1.73,241,3.504,242,0.426,247,3.504,248,2.726,249,1.551,259,2.2,353,4.445,364,5.098,368,2.629,439,2.961,461,5.098,463,4.236,470,4.697,471,4.697,472,2.258,474,3.283,479,5.012,708,1.835,717,2.145,801,6.234,809,4.057,888,4.111,939,2.388,1003,3.798,1004,4.246,1005,3.798,1006,3.798,1007,3.798,1008,6.932,1009,6.234,1010,4.246,1011,6.073,1012,3.283,1013,3.283,1014,8.517,1015,4.246,1016,4.246,1017,3.798,1018,3.798,1019,6.073,1020,5.012,1021,3.798,1022,3.798,1023,4.246,1024,3.798,1025,4.246,1026,3.798,1027,5.012,1028,4.246,1029,5.012,1030,4.246,1031,5.012,1032,4.246,1033,4.246,1034,4.246,1035,4.246,1036,6.343,1037,3.798,1038,6.073,1039,6.343,1040,3.798,1041,3.798,1042,3.798,1043,6.073,1044,3.798,1045,3.283,1046,6.073,1047,3.798,1048,5.433,1049,4.246,1050,3.798,1051,4.236,1052,5.258,1053,4.236,1054,3.798,1055,3.504,1056,3.504,1057,4.246,1058,4.246,1059,6.073,1060,4.246,1061,4.246,1062,4.246,1063,4.246,1064,4.246,1065,4.246,1066,4.246,1067,4.246,1068,4.246,1069,4.246]],["title/modules/DashboardRoutingModule.html",[189,1.975,1008,3.614]],["body/modules/DashboardRoutingModule.html",[0,1.95,2,0.057,3,0.057,6,0.05,23,2.912,26,0.006,32,0.14,33,1.244,34,0.064,35,0.272,36,2.066,47,2.871,53,2.821,78,1.272,83,2.871,96,1.144,99,2.871,114,0.004,115,0.004,124,4.68,156,3.807,169,1.764,189,3.4,191,3.308,192,3.747,193,3.886,194,3.622,203,4.958,204,1.566,205,3.747,211,4.476,214,3.622,215,5.651,259,3.136,327,4.68,442,7.016,446,5.414,461,5.663,463,5.385,474,4.68,525,8.013,529,3.952,761,5.038,888,5.193,946,5.089,1008,6.925,1024,5.414,1026,5.414,1041,5.414,1042,5.414,1070,6.051,1071,6.051,1072,6.051,1073,6.051,1074,6.051,1075,9.253,1076,6.051,1077,6.051,1078,6.051,1079,4.042,1080,6.051]],["title/interfaces/DashboardState.html",[486,1.045,1081,4.075]],["body/interfaces/DashboardState.html",[2,0.029,3,0.029,6,0.026,8,0.243,17,1.635,21,0.072,22,0.197,25,0.237,26,0.006,32,0.122,34,0.073,58,2.909,74,2.267,75,1.902,78,1.435,79,0.889,96,1.291,100,1.907,114,0.003,115,0.003,169,2.957,239,1.72,240,4.045,242,0.31,249,2.144,271,3.368,360,0.299,456,3.043,486,1.241,495,2.388,496,3.505,497,2.26,498,7.279,501,1.757,502,1.912,503,2.388,517,2.26,592,2.569,596,1.934,607,1.275,611,1.195,785,3.632,888,3.832,890,2.388,1081,7.305,1082,2.762,1083,4.841,1084,7.064,1085,7.064,1086,5.903,1087,7.064,1088,5.903,1089,5.248,1090,5.248,1091,5.248,1092,5.248,1093,5.248,1094,5.248,1095,5.248,1096,5.248,1097,5.248,1098,2.762,1099,5.248,1100,2.762,1101,2.762,1102,2.762,1103,4.284,1104,2.762,1105,4.284,1106,2.762,1107,2.762,1108,2.762,1109,2.762,1110,2.762,1111,2.762,1112,2.388,1113,2.762,1114,2.762,1115,2.762,1116,2.762,1117,2.762,1118,2.762,1119,2.762,1120,2.762,1121,2.762,1122,2.762,1123,7.66,1124,2.762,1125,7.496,1126,2.762,1127,2.762,1128,2.762,1129,4.581,1130,2.762,1131,2.762,1132,2.762,1133,2.762,1134,2.762,1135,2.762,1136,2.762,1137,2.762,1138,2.762,1139,2.762,1140,2.548,1141,2.762,1142,2.548,1143,2.762,1144,4.284,1145,3.563,1146,3.952,1147,2.762,1148,6.399,1149,6.399,1150,3.918,1151,2.762,1152,6.399,1153,4.284,1154,6.399,1155,2.762,1156,6.399,1157,2.762,1158,2.762,1159,4.536,1160,2.762,1161,3.918,1162,5.248,1163,2.762,1164,2.762,1165,2.762,1166,2.762,1167,2.762,1168,2.762,1169,5.248,1170,2.762,1171,2.762,1172,2.762,1173,2.762,1174,2.762,1175,4.284,1176,2.762,1177,3.952,1178,2.762,1179,2.762,1180,4.284,1181,2.762,1182,2.762,1183,2.762,1184,2.762,1185,7.496,1186,2.762,1187,2.762,1188,2.762,1189,2.762,1190,2.762,1191,2.762,1192,2.762,1193,2.762,1194,2.762,1195,2.762,1196,2.762,1197,2.762,1198,2.762,1199,2.548,1200,2.762,1201,2.548,1202,2.762,1203,4.284,1204,2.762,1205,3.952,1206,2.762,1207,2.762,1208,4.284,1209,2.762,1210,2.762,1211,2.762,1212,2.762,1213,2.762,1214,2.762,1215,2.762,1216,2.762,1217,2.762,1218,2.762,1219,2.762,1220,2.762,1221,2.063,1222,2.548,1223,7.301,1224,2.762,1225,2.548,1226,2.762,1227,2.548,1228,2.762,1229,2.548,1230,2.762,1231,2.762,1232,2.548,1233,2.762,1234,2.548,1235,2.762,1236,2.548,1237,2.762]],["title/classes/DeletePatient.html",[35,0.222,654,2.379]],["body/classes/DeletePatient.html",[2,0.04,3,0.04,6,0.035,8,0.337,21,0.1,22,0.251,24,0.407,25,0.281,26,0.006,27,0.323,28,0.415,30,0.483,32,0.1,34,0.07,35,0.436,42,0.393,78,1.541,79,1.045,96,0.959,114,0.003,115,0.003,118,1.15,127,0.835,133,0.429,137,0.525,138,0.415,204,1.582,239,1.619,242,0.429,360,0.983,429,1.582,501,1.074,572,1.871,587,1.782,588,1.371,589,1.526,595,1.288,596,1.159,597,0.67,601,1.782,603,1.837,604,1.559,605,1.899,607,1.09,609,2.165,611,1.405,613,2.409,615,1.925,620,1.416,621,1.535,625,1.371,630,1.194,634,1.349,636,3.514,637,2.165,638,2.279,640,2.508,641,1.393,642,2.22,643,3.432,644,3.514,645,3.514,646,3.658,647,3.432,648,3.432,649,3.514,650,3.514,651,3.281,652,3.514,653,3.514,654,3.432,655,2.559,656,3.514,657,2.279,658,2.279,659,2.279,660,2.279,661,2.279,662,2.279,663,2.279,664,2.279,665,2.279,666,2.279,667,2.279,668,3.251,669,2.608,670,2.279,671,2.22,710,0.973,1238,6.112,1239,4.284]],["title/classes/DeleteUser.html",[35,0.222,689,2.379]],["body/classes/DeleteUser.html",[2,0.04,3,0.04,6,0.035,8,0.336,21,0.1,22,0.251,24,0.407,25,0.281,26,0.006,27,0.323,28,0.414,30,0.483,32,0.099,34,0.07,35,0.436,42,0.392,78,0.914,79,1.045,96,1.391,114,0.003,115,0.003,118,1.15,127,0.835,133,0.429,137,0.524,138,0.414,204,1.58,239,1.618,242,0.429,360,0.983,429,1.58,501,1.073,572,1.87,587,1.78,588,1.37,589,1.525,595,1.286,596,1.157,597,0.669,601,1.78,603,1.836,604,1.557,605,1.898,607,1.089,609,2.164,611,1.405,613,2.408,615,1.924,620,1.416,621,1.535,625,1.37,630,1.192,634,1.348,655,2.558,669,2.607,672,3.512,673,2.162,674,2.277,676,1.414,677,2.218,678,3.43,679,3.512,680,3.512,681,3.657,682,3.43,683,3.43,684,3.512,685,3.512,686,3.28,687,3.512,688,3.512,689,3.43,690,3.43,691,2.277,692,2.277,693,2.277,694,2.277,695,2.277,696,2.277,697,2.277,698,2.277,699,2.277,700,2.277,701,2.277,702,3.249,703,2.277,704,2.218,710,0.972,1240,6.108,1241,4.28]],["title/classes/DismissEditNursingHome.html",[35,0.222,617,2.559]],["body/classes/DismissEditNursingHome.html",[2,0.044,3,0.044,6,0.038,8,0.365,21,0.109,22,0.266,24,0.441,25,0.279,26,0.006,27,0.35,28,0.449,30,0.315,32,0.104,34,0.07,35,0.436,74,1.333,75,1.167,79,1.139,114,0.003,115,0.003,118,1.15,204,1.674,239,1.692,242,0.465,360,0.983,429,1.201,501,1.137,572,1.955,584,3.858,585,2.979,586,2.47,587,1.886,588,1.486,589,1.526,590,2.612,592,3.709,593,2.049,594,1.929,595,1.944,596,1.256,597,0.726,598,2.538,599,3.858,600,3.858,601,1.886,602,3.762,603,1.944,604,1.65,605,1.724,606,3.971,607,1.327,608,3.762,609,2.359,610,3.762,611,1.17,612,3.858,613,2.497,614,3.858,615,2.038,616,3.858,617,4.173,618,3.858,619,2.612,620,1.364,621,1.384,622,2.612,623,2.612,624,2.612,625,1.486,626,2.612,627,2.612,628,2.612,629,2.612,630,1.293,631,2.612,632,3.639,633,2.612,634,1.462,635,2.538,1242,4.643]],["title/classes/DismissEditPatient.html",[35,0.222,652,2.435]],["body/classes/DismissEditPatient.html",[2,0.041,3,0.041,6,0.036,8,0.344,21,0.103,22,0.255,24,0.416,25,0.28,26,0.006,27,0.331,28,0.424,30,0.297,32,0.101,34,0.07,35,0.438,78,1.542,79,1.115,96,0.971,114,0.003,115,0.003,118,1.154,204,1.607,239,1.639,242,0.439,360,0.985,429,1.607,501,1.091,572,1.894,587,1.81,588,1.402,589,1.531,595,1.317,596,1.185,597,0.685,601,1.81,603,1.867,604,1.584,605,1.922,607,1.107,609,2.309,611,1.419,613,2.434,615,1.956,620,1.425,621,1.446,625,1.402,630,1.22,634,1.38,636,3.558,637,2.213,638,2.33,640,2.529,641,1.424,642,2.27,643,3.475,644,3.558,645,3.558,646,3.695,647,3.475,648,3.475,649,3.558,650,3.558,651,3.322,652,3.871,653,3.558,654,2.991,655,2.23,656,3.558,657,2.33,658,2.33,659,2.33,660,2.33,661,2.33,662,2.33,663,2.33,664,2.33,665,2.33,666,3.303,667,2.33,668,2.33,669,1.896,670,2.33,671,2.27,1243,4.381]],["title/classes/DismissEditUser.html",[35,0.222,687,2.435]],["body/classes/DismissEditUser.html",[2,0.041,3,0.041,6,0.036,8,0.344,21,0.103,22,0.255,24,0.416,25,0.28,26,0.006,27,0.33,28,0.423,30,0.297,32,0.101,34,0.07,35,0.438,78,0.928,79,1.114,96,1.393,114,0.003,115,0.003,118,1.154,204,1.606,239,1.638,242,0.439,360,0.985,429,1.606,501,1.09,572,1.893,587,1.809,588,1.4,589,1.53,595,1.315,596,1.183,597,0.684,601,1.809,603,1.865,604,1.582,605,1.921,607,1.106,609,2.308,611,1.419,613,2.433,615,1.955,620,1.425,621,1.446,625,1.4,630,1.219,634,1.378,655,2.229,669,1.894,672,3.556,673,2.211,674,2.328,676,1.446,677,2.268,678,3.473,679,3.556,680,3.556,681,3.694,682,3.473,683,3.473,684,3.556,685,3.556,686,3.32,687,3.869,688,3.556,689,2.989,690,3.473,691,2.328,692,2.328,693,2.328,694,2.328,695,2.328,696,2.328,697,2.328,698,2.328,699,2.328,700,3.301,701,2.328,702,2.328,703,2.328,704,2.268,1244,4.376]],["title/classes/DismissPatientFormDialog.html",[35,0.222,647,2.379]],["body/classes/DismissPatientFormDialog.html",[2,0.041,3,0.041,6,0.036,8,0.344,21,0.103,22,0.255,24,0.416,25,0.28,26,0.006,27,0.331,28,0.424,30,0.297,32,0.101,34,0.07,35,0.438,78,1.541,79,1.056,96,0.971,114,0.003,115,0.003,118,1.154,204,1.607,239,1.639,242,0.439,360,0.983,429,1.867,501,1.091,572,1.894,587,1.81,588,1.402,589,1.531,595,1.317,596,1.185,597,0.685,601,1.81,603,1.867,604,1.584,605,1.922,607,1.107,609,2.309,611,1.419,613,2.434,615,1.956,620,1.425,621,1.446,625,1.987,630,1.22,634,1.38,636,3.558,637,2.213,638,2.33,640,2.529,641,1.424,642,2.27,643,3.475,644,3.558,645,3.558,646,3.901,647,3.781,648,3.475,649,3.558,650,3.558,651,3.322,652,3.558,653,3.558,654,2.991,655,2.23,656,3.558,657,2.33,658,2.33,659,2.33,660,2.33,661,3.303,662,2.33,663,2.33,664,2.33,665,2.33,666,2.33,667,2.33,668,2.33,669,1.896,670,2.33,671,2.27,1245,4.381]],["title/classes/DismissPoppedUpNursingHomeForm.html",[35,0.222,608,2.495]],["body/classes/DismissPoppedUpNursingHomeForm.html",[2,0.044,3,0.044,6,0.038,8,0.365,21,0.109,22,0.266,24,0.441,25,0.279,26,0.006,27,0.35,28,0.449,30,0.315,32,0.104,34,0.07,35,0.436,74,1.333,75,1.167,79,1.083,114,0.003,115,0.003,118,1.15,204,1.674,239,1.692,242,0.465,360,0.981,429,1.674,501,1.137,572,1.955,584,3.858,585,2.979,586,2.47,587,1.886,588,1.486,589,1.526,590,2.612,592,3.706,593,2.049,594,1.929,595,1.944,596,1.256,597,0.726,598,2.538,599,3.858,600,3.858,601,1.886,602,3.762,603,1.944,604,1.65,605,1.724,606,4.175,607,1.327,608,4.069,609,2.359,610,3.762,611,1.17,612,3.858,613,2.497,614,3.858,615,2.038,616,3.858,617,3.858,618,3.858,619,2.612,620,1.364,621,1.384,622,2.612,623,2.612,624,2.612,625,2.07,626,3.639,627,2.612,628,2.612,629,2.612,630,1.293,631,2.612,632,2.612,633,2.612,634,1.462,635,2.538,1246,4.643]],["title/classes/DismissUserFormDialog.html",[35,0.222,682,2.379]],["body/classes/DismissUserFormDialog.html",[2,0.041,3,0.041,6,0.036,8,0.344,21,0.103,22,0.255,24,0.416,25,0.28,26,0.006,27,0.33,28,0.423,30,0.297,32,0.101,34,0.07,35,0.438,78,0.928,79,1.056,96,1.392,114,0.003,115,0.003,118,1.154,204,1.606,239,1.638,242,0.439,360,0.983,429,1.866,501,1.09,572,1.893,587,1.809,588,1.4,589,1.53,595,1.315,596,1.183,597,0.684,601,1.809,603,1.865,604,1.582,605,1.921,607,1.106,609,2.308,611,1.419,613,2.433,615,1.955,620,1.425,621,1.446,625,1.986,630,1.219,634,1.378,655,2.229,669,1.894,672,3.556,673,2.211,674,2.328,676,1.446,677,2.268,678,3.473,679,3.556,680,3.556,681,3.9,682,3.779,683,3.473,684,3.556,685,3.556,686,3.32,687,3.556,688,3.556,689,2.989,690,3.473,691,2.328,692,2.328,693,2.328,694,2.328,695,3.301,696,2.328,697,2.328,698,2.328,699,2.328,700,2.328,701,2.328,702,2.328,703,2.328,704,2.268,1247,4.376]],["title/directives/DropdownAnchorDirective.html",[39,1.259,103,1.836]],["body/directives/DropdownAnchorDirective.html",[2,0.064,3,0.064,6,0.056,8,0.534,16,2.398,17,2.834,21,0.159,22,0.341,25,0.235,26,0.006,30,0.608,32,0.116,33,1.397,34,0.049,35,0.305,39,2.441,42,0.622,103,3.086,105,3.541,114,0.004,115,0.004,117,4.738,120,4.738,124,6.93,125,8.821,133,0.681,137,0.832,138,0.657,157,5.605,161,4.066,162,4.738,163,4.206,164,3.713,176,5.543,329,2.011,788,6.418,905,7.395,910,5.605,1248,8.35,1249,6.793,1250,8.299,1251,8.299,1252,6.793,1253,8.299,1254,6.793,1255,6.793,1256,6.793,1257,6.793,1258,6.077,1259,6.793,1260,6.793]],["title/directives/DropdownLinkDirective.html",[39,1.259,105,1.774]],["body/directives/DropdownLinkDirective.html",[2,0.054,3,0.054,6,0.047,8,0.451,16,2.027,17,2.549,21,0.135,22,0.307,25,0.264,26,0.006,28,0.802,30,0.66,32,0.104,33,1.181,34,0.041,35,0.258,39,2.321,42,0.684,101,3.471,105,2.681,114,0.004,115,0.004,118,0.885,119,3.255,120,4.005,124,7.215,126,2.244,127,1.36,131,3.447,133,0.576,137,0.914,138,0.722,142,2.01,143,2.062,161,3.437,162,4.005,163,3.555,164,3.139,329,1.7,528,4.964,534,5.256,552,3.459,716,4.192,717,4.8,722,2.062,1248,8.786,1261,5.742,1262,7.464,1263,7.464,1264,8.781,1265,7.856,1266,7.039,1267,5.135,1268,7.464,1269,5.742,1270,7.464,1271,5.742,1272,5.742,1273,5.742,1274,5.742,1275,5.742,1276,5.742,1277,5.742,1278,5.742,1279,5.742,1280,5.742,1281,5.742,1282,7.464,1283,5.742,1284,5.742,1285,5.742,1286,5.742,1287,5.742,1288,5.742,1289,7.464]],["title/classes/EditNursingHome.html",[35,0.222,616,2.559]],["body/classes/EditNursingHome.html",[2,0.042,3,0.042,6,0.037,8,0.355,21,0.106,22,0.261,24,0.43,25,0.281,26,0.006,27,0.341,28,0.437,30,0.498,32,0.102,34,0.07,35,0.434,42,0.414,74,1.298,75,1.136,79,1.128,114,0.003,115,0.003,118,1.145,127,0.867,133,0.453,137,0.554,138,0.437,204,1.643,239,1.667,242,0.453,360,0.98,429,1.17,501,1.116,572,1.927,584,3.803,585,3.665,586,2.404,587,1.851,588,1.446,589,1.52,590,2.543,592,3.704,593,1.995,594,1.878,595,2.613,596,1.222,597,0.707,598,2.471,599,3.803,600,3.803,601,1.851,602,3.708,603,1.908,604,1.619,605,1.692,606,3.925,607,1.308,608,3.708,609,2.217,610,3.708,611,1.148,612,3.803,613,2.468,614,3.803,615,2,616,4.124,617,3.803,618,3.803,619,2.543,620,1.35,621,1.514,622,2.543,623,2.543,624,2.543,625,1.446,626,2.543,627,2.543,628,2.543,629,2.543,630,1.769,631,3.571,632,2.543,633,2.543,634,1.424,635,2.471,710,1.027,1290,6.349,1291,4.52]],["title/classes/EditNursingHomeFailure.html",[35,0.222,827,3.058]],["body/classes/EditNursingHomeFailure.html",[2,0.049,3,0.049,6,0.043,8,0.406,21,0.121,22,0.286,24,0.748,25,0.285,26,0.006,27,0.39,28,0.5,30,0.534,32,0.097,34,0.068,35,0.416,42,0.473,75,2.117,79,1.183,114,0.004,115,0.004,118,1.098,127,1.317,133,0.518,137,0.633,138,0.5,242,0.518,360,0.967,380,2.366,399,2.993,585,3.878,589,1.472,592,3.636,593,2.279,594,2.146,597,0.808,607,1.241,611,1.523,620,1.459,621,1.575,710,1.174,810,2.783,813,4.873,814,1.855,815,2.732,816,3.309,819,3.603,820,1.824,821,3.45,822,4.873,823,6.049,824,4.873,825,4.873,826,4.873,827,5.215,828,3.603,829,3.603,830,3.603,831,3.603,832,4.854,833,3.45,1292,6.959,1293,5.165]],["title/classes/EditNursingHomeSuccess.html",[35,0.222,826,3.058]],["body/classes/EditNursingHomeSuccess.html",[2,0.049,3,0.049,6,0.043,8,0.406,21,0.121,22,0.286,24,0.748,25,0.285,26,0.006,27,0.39,28,0.5,30,0.534,32,0.097,34,0.068,35,0.416,42,0.473,75,2.117,79,1.183,114,0.004,115,0.004,118,1.098,127,1.317,133,0.518,137,0.633,138,0.5,242,0.518,360,0.967,380,2.366,399,3.059,585,3.878,589,1.472,592,3.636,593,2.279,594,2.146,597,0.808,607,1.241,611,1.523,620,1.459,621,1.575,710,1.174,810,2.783,813,4.873,814,1.855,815,2.732,816,3.212,819,3.603,820,1.824,821,3.45,822,4.873,823,6.049,824,4.873,825,4.873,826,5.215,827,4.873,828,3.603,829,3.603,830,3.603,831,4.854,832,3.603,833,3.45,1294,6.959,1295,5.165]],["title/classes/EditPatient.html",[35,0.222,651,2.274]],["body/classes/EditPatient.html",[2,0.04,3,0.04,6,0.035,8,0.336,21,0.1,22,0.251,24,0.407,25,0.281,26,0.006,27,0.323,28,0.414,30,0.483,32,0.099,34,0.07,35,0.436,42,0.392,78,1.54,79,1.105,96,0.958,114,0.003,115,0.003,118,1.15,127,0.835,133,0.429,137,0.524,138,0.414,204,1.58,239,1.618,242,0.429,360,0.983,429,1.58,501,1.073,572,1.87,587,1.78,588,1.37,589,1.525,595,1.286,596,1.157,597,0.669,601,1.78,603,1.836,604,1.557,605,1.898,607,1.089,609,2.164,611,1.405,613,2.408,615,1.924,620,1.416,621,1.535,625,1.37,630,1.702,634,1.348,636,3.512,637,2.162,638,2.277,640,2.792,641,1.392,642,2.218,643,3.43,644,3.512,645,3.512,646,3.657,647,3.43,648,3.43,649,3.512,650,3.512,651,3.577,652,3.512,653,3.512,654,2.942,655,2.194,656,3.512,657,2.277,658,2.277,659,2.277,660,2.277,661,2.277,662,2.277,663,2.277,664,2.277,665,3.249,666,2.277,667,2.277,668,2.277,669,1.865,670,2.277,671,2.218,710,0.972,1296,6.108,1297,4.28]],["title/classes/EditPatientFailure.html",[35,0.222,849,2.863]],["body/classes/EditPatientFailure.html",[2,0.045,3,0.045,6,0.039,8,0.373,21,0.111,22,0.27,24,0.624,25,0.284,26,0.006,27,0.358,28,0.459,30,0.51,32,0.105,34,0.068,35,0.421,42,0.434,78,1.501,79,1.148,96,1.217,114,0.004,115,0.004,118,1.11,127,1.32,133,0.475,137,0.581,138,0.459,242,0.475,360,0.971,380,2.442,399,3.048,589,1.482,597,0.741,607,1.17,611,1.668,620,1.485,621,1.578,640,2.48,641,1.542,676,1.567,710,1.077,810,2.685,814,1.703,815,2.576,816,3.37,820,1.674,838,4.364,839,4.863,842,3.044,843,2.935,844,4.235,845,5.464,846,4.364,847,4.364,848,4.364,849,4.711,850,4.364,851,3.237,852,4.364,853,3.044,854,3.044,855,3.044,856,3.044,857,4.215,858,3.044,859,3.044,860,2.935,1298,5.416,1299,3.912]],["title/classes/EditPatientSuccess.html",[35,0.222,848,2.863]],["body/classes/EditPatientSuccess.html",[2,0.045,3,0.045,6,0.039,8,0.373,21,0.111,22,0.27,24,0.624,25,0.284,26,0.006,27,0.358,28,0.459,30,0.51,32,0.105,34,0.068,35,0.421,42,0.434,78,1.501,79,1.148,96,1.217,114,0.004,115,0.004,118,1.11,127,1.32,133,0.475,137,0.581,138,0.459,242,0.475,360,0.971,380,2.442,399,3.094,589,1.482,597,0.741,607,1.17,611,1.668,620,1.485,621,1.578,640,2.48,641,1.542,676,1.567,710,1.077,810,2.685,814,1.703,815,2.576,816,3.306,820,1.674,838,4.364,839,4.863,842,3.044,843,2.935,844,4.235,845,5.464,846,4.364,847,4.364,848,4.711,849,4.364,850,4.364,851,3.237,852,4.364,853,3.044,854,3.044,855,3.044,856,4.215,857,3.044,858,3.044,859,3.044,860,2.935,1300,5.416,1301,3.912]],["title/classes/EditUser.html",[35,0.222,686,2.274]],["body/classes/EditUser.html",[2,0.04,3,0.04,6,0.035,8,0.336,21,0.1,22,0.251,24,0.406,25,0.281,26,0.006,27,0.323,28,0.414,30,0.483,32,0.099,34,0.07,35,0.436,42,0.392,78,0.913,79,1.105,96,1.395,114,0.003,115,0.003,118,1.15,127,0.834,133,0.429,137,0.524,138,0.414,204,1.579,239,1.617,242,0.429,360,0.983,429,1.579,501,1.073,572,1.869,587,1.779,588,1.368,589,1.525,595,1.285,596,1.156,597,0.669,601,1.779,603,1.835,604,1.556,605,1.897,607,1.088,609,2.163,611,1.404,613,2.407,615,1.922,620,1.415,621,1.534,625,1.368,630,1.7,634,1.347,655,2.192,669,1.863,672,3.51,673,2.16,674,2.274,676,1.413,677,2.215,678,3.429,679,3.51,680,3.51,681,3.655,682,3.429,683,3.429,684,3.51,685,3.51,686,3.575,687,3.51,688,3.51,689,2.94,690,3.429,691,2.274,692,2.274,693,2.274,694,2.274,695,2.274,696,2.274,697,2.274,698,2.274,699,3.247,700,2.274,701,2.274,702,2.274,703,2.274,704,2.215,710,0.971,1302,6.104,1303,4.276]],["title/classes/EditUserFailure.html",[35,0.222,874,2.863]],["body/classes/EditUserFailure.html",[2,0.044,3,0.044,6,0.039,8,0.372,21,0.111,22,0.27,24,0.623,25,0.284,26,0.006,27,0.357,28,0.458,30,0.51,32,0.105,34,0.068,35,0.421,42,0.434,78,1.276,79,1.147,96,1.364,114,0.004,115,0.004,118,1.11,127,1.319,133,0.475,137,0.58,138,0.458,242,0.475,360,0.971,380,2.441,399,3.047,589,1.482,597,0.741,607,1.169,611,1.667,620,1.485,621,1.578,640,2.002,641,1.54,676,1.565,710,1.076,810,2.684,814,1.701,815,2.574,816,3.421,820,1.672,851,4.547,866,4.362,867,4.861,868,3.041,869,2.932,870,4.232,871,4.362,872,4.362,873,4.232,874,4.708,875,4.362,876,4.362,877,3.041,878,3.041,879,3.041,880,3.041,881,4.211,882,3.041,883,3.041,884,2.932,1298,5.412,1299,3.908]],["title/classes/EditUserSuccess.html",[35,0.222,873,2.778]],["body/classes/EditUserSuccess.html",[2,0.044,3,0.044,6,0.039,8,0.372,21,0.111,22,0.27,24,0.623,25,0.284,26,0.006,27,0.357,28,0.458,30,0.51,32,0.105,34,0.068,35,0.421,42,0.434,78,1.276,79,1.147,96,1.364,114,0.004,115,0.004,118,1.11,127,1.319,133,0.475,137,0.58,138,0.458,242,0.475,360,0.971,380,2.441,399,3.093,589,1.482,597,0.741,607,1.169,611,1.667,620,1.485,621,1.578,640,2.002,641,1.54,676,1.565,710,1.076,810,2.684,814,1.701,815,2.574,816,3.369,820,1.672,851,4.547,866,4.362,867,4.861,868,3.041,869,2.932,870,4.232,871,4.362,872,4.362,873,4.569,874,4.362,875,4.362,876,4.362,877,3.041,878,3.041,879,3.041,880,4.211,881,3.041,882,3.041,883,3.041,884,2.932,1300,5.412,1301,3.908]],["title/directives/EgretSideNavToggleDirective.html",[39,1.259,107,1.836]],["body/directives/EgretSideNavToggleDirective.html",[2,0.052,3,0.052,6,0.046,8,0.433,16,1.946,17,2.481,21,0.129,22,0.299,25,0.23,26,0.006,30,0.647,32,0.121,33,1.133,34,0.039,35,0.248,39,2.291,42,0.505,107,2.702,114,0.004,115,0.004,118,0.862,119,3.191,120,3.845,122,2.164,126,2.184,127,1.111,131,3.393,133,0.728,137,0.675,138,0.787,142,1.909,143,3.104,151,6.029,158,1.821,161,3.299,162,3.845,163,3.413,164,3.013,169,1.607,265,2.336,384,2.856,456,2.124,528,4.866,534,5.173,708,4.216,717,4.881,808,4.263,907,6.501,908,7.733,938,4.263,945,6.377,967,5.773,1265,6.501,1304,9.66,1305,5.512,1306,7.267,1307,8.644,1308,8.644,1309,8.644,1310,5.512,1311,9.226,1312,7.267,1313,5.512,1314,5.512,1315,5.512,1316,5.512,1317,5.512,1318,5.512,1319,5.512,1320,6.501,1321,8.13,1322,7.267,1323,5.512,1324,7.267,1325,5.512,1326,3.682,1327,5.512,1328,7.267,1329,5.512,1330,5.319,1331,5.512,1332,5.512,1333,7.267,1334,5.512,1335,7.267,1336,5.512,1337,5.512]],["title/components/ErrorComponent.html",[0,1.075,55,1.869]],["body/components/ErrorComponent.html",[0,1.958,1,1.987,2,0.052,3,0.052,4,2.172,5,2.172,6,0.046,9,2.094,16,1.954,17,3.55,18,3.767,20,2.172,21,0.13,26,0.005,30,0.494,32,0.077,33,1.138,34,0.04,35,0.249,36,1.889,37,2.86,38,2.86,39,1.858,40,3.398,41,2.172,42,0.746,43,2.172,44,1.954,45,1.829,46,2.86,47,2.058,48,2.172,49,2.094,50,2.172,51,2.022,52,2.172,53,2.022,54,2.172,55,3.277,56,2.172,57,2.094,58,3.123,59,1.954,60,1.743,61,2.172,62,2.094,63,2.172,64,2.86,65,2.058,66,2.172,67,1.954,68,2.172,69,2.094,70,2.172,71,2.094,72,2.172,73,2.058,74,1.589,75,1.391,76,3.531,77,2.094,78,1.295,79,0.98,80,2.058,81,2.094,82,2.86,83,2.058,84,2.172,85,2.094,86,2.86,87,2.094,88,2.172,89,2.094,90,2.172,91,1.954,92,2.172,93,1.954,94,2.172,95,2.094,96,1.165,97,2.058,98,2.094,99,2.058,100,1.799,101,2.022,102,2.172,103,2.058,104,2.172,105,1.987,106,2.172,107,2.058,108,2.172,109,2.058,110,2.172,111,2.058,112,2.133,113,2.172,114,0.004,115,0.004,118,0.864,119,3.197,126,2.19,131,3.398,133,0.817,142,1.222,143,1.987,530,3.087,888,4.224,1338,5.534,1339,7.286,1340,5.534,1341,5.534,1342,6.518,1343,7.286,1344,6.012,1345,6.518,1346,7.286,1347,7.286]],["title/components/ErrorLayoutComponent.html",[0,1.075,57,1.869]],["body/components/ErrorLayoutComponent.html",[0,1.993,1,2.102,2,0.055,3,0.055,4,2.297,5,2.297,6,0.048,9,2.215,16,2.066,17,3.56,18,3.781,20,2.966,26,0.005,32,0.082,33,1.203,34,0.042,35,0.263,36,1.998,37,2.966,38,2.966,39,1.927,40,3.472,41,2.297,42,0.767,43,2.297,44,2.066,45,1.934,46,2.966,47,2.176,48,2.297,49,2.215,50,2.297,51,2.138,52,2.297,53,2.138,54,2.297,55,2.215,56,2.297,57,3.348,58,2.906,59,2.066,60,1.843,61,2.297,62,2.215,63,2.297,64,2.966,65,2.176,66,2.297,67,2.066,68,2.297,69,2.215,70,2.297,71,2.215,72,2.297,73,2.176,74,1.68,75,1.471,76,3.594,77,2.215,78,1.323,79,1.017,80,2.176,81,2.215,82,2.966,83,2.176,84,2.297,85,2.215,86,2.966,87,2.215,88,2.297,89,2.215,90,2.297,91,2.066,92,2.297,93,2.066,94,2.297,95,2.215,96,1.19,97,2.176,98,2.215,99,2.176,100,1.903,101,2.138,102,2.297,103,2.176,104,2.297,105,2.102,106,2.297,107,2.176,108,2.297,109,2.176,110,2.297,111,2.176,112,2.255,113,2.297,114,0.004,115,0.004,455,4.829,456,2.912,1348,5.852]],["title/modules/ErrorsModule.html",[189,1.975,202,3.614]],["body/modules/ErrorsModule.html",[0,1.734,2,0.06,3,0.06,6,0.053,26,0.006,32,0.139,33,1.307,34,0.062,35,0.286,36,2.171,44,3.22,55,3.015,57,3.015,58,2.207,59,3.22,67,3.22,69,3.015,91,3.22,93,3.22,114,0.004,115,0.004,169,1.853,189,3.185,191,3.476,192,5.386,193,4.082,194,3.805,202,7.522,203,5.115,204,1.645,205,3.936,211,4.618,214,3.805,216,4.917,225,2.591,229,5.83,230,2.591,259,3.294,461,5.735,463,5.556,474,4.917,1349,5.688,1350,6.358,1351,5.688,1352,7.013,1353,6.358,1354,6.358,1355,5.688,1356,6.358,1357,6.358,1358,6.358]],["title/modules/ErrorsRoutingModule.html",[189,1.975,1352,3.614]],["body/modules/ErrorsRoutingModule.html",[2,0.072,3,0.072,6,0.063,26,0.006,32,0.135,33,1.569,34,0.064,35,0.343,114,0.005,115,0.005,156,3.763,189,3.051,211,5.157,215,6.511,327,5.901,1352,6.511,1359,7.63,1360,7.63,1361,7.63,1362,7.63]],["title/classes/FixTopbar.html",[35,0.222,737,2.559]],["body/classes/FixTopbar.html",[2,0.042,3,0.042,6,0.037,8,0.356,21,0.106,22,0.261,23,2.066,24,0.881,25,0.282,26,0.006,27,0.341,28,0.438,30,0.498,32,0.063,34,0.069,35,0.434,39,2.03,42,0.415,114,0.003,115,0.003,127,0.868,133,0.454,137,0.554,138,0.438,242,0.454,360,0.946,456,3.769,529,3.701,552,3.208,589,1.52,597,0.708,620,1.543,621,1.606,705,3.805,706,2.407,707,2.747,708,3.861,709,4.405,710,1.028,713,2.474,714,2.407,715,3.805,716,2.926,717,3.71,718,3.805,719,2.991,720,4.585,721,3.805,722,3.274,723,3.805,724,3.442,725,3.805,726,2.179,727,3.805,728,2.474,729,3.805,730,3.473,731,3.381,732,2.64,733,3.805,734,4.235,735,3.06,736,3.805,737,4.126,738,4.014,739,2.474,740,2.474,741,2.474,742,2.474,743,2.474,744,3.574,745,3.574,746,2.474,747,2.474,748,2.474,749,2.474,750,2.474,751,2.545,752,2.474,753,3.574,754,3.473,755,2.286,1363,6.353,1364,4.525]],["title/directives/FontSizeDirective.html",[39,1.259,109,1.836]],["body/directives/FontSizeDirective.html",[2,0.063,3,0.063,6,0.056,8,0.529,16,2.376,17,2.297,21,0.158,22,0.339,24,0.907,25,0.234,26,0.006,30,0.605,32,0.094,33,1.384,34,0.048,35,0.303,39,2.372,42,0.617,109,3.068,114,0.004,115,0.004,118,0.978,119,3.503,120,4.693,122,2.641,126,2.48,127,1.219,131,3.651,133,0.674,137,0.824,138,0.651,142,1.486,143,2.417,161,4.027,162,4.693,163,4.166,164,3.678,384,3.486,1365,9.303,1366,6.728,1367,8.251,1368,8.251,1369,9.841,1370,6.728,1371,7.983,1372,8.323,1373,6.728,1374,6.728,1375,6.728,1376,6.728,1377,6.019,1378,6.728,1379,6.728,1380,6.019,1381,6.728,1382,6.728,1383,6.728]],["title/classes/ForgotPassword.html",[35,0.222,1384,3.444]],["body/classes/ForgotPassword.html",[2,0.057,3,0.057,6,0.05,8,0.479,21,0.143,22,0.319,24,0.579,25,0.286,26,0.006,27,0.46,28,0.59,30,0.578,32,0.108,34,0.066,35,0.404,42,0.558,60,2.687,100,3.015,114,0.004,115,0.004,118,1.065,127,1.06,133,0.611,137,0.746,138,0.59,242,0.611,333,4.573,338,5.478,342,5.181,345,4.251,360,0.952,589,1.45,597,0.953,620,1.374,621,1.574,710,1.385,810,2.967,1384,6.263,1385,4.777,1386,4.461,1387,3.963,1388,7.756,1389,6.094,1390,6.4,1391,4.713,1392,4.713,1393,6.194,1394,4.713,1395,4.713,1396,5.029,1397,5.029,1398,3.648,1399,4.713]],["title/components/ForgotPasswordComponent.html",[0,1.075,59,1.744]],["body/components/ForgotPasswordComponent.html",[0,1.877,1,1.755,2,0.046,3,0.046,4,1.918,5,1.918,6,0.04,9,1.85,16,1.726,17,3.525,18,3.733,20,1.918,21,0.114,22,0.275,25,0.19,26,0.006,30,0.604,32,0.094,33,1.005,34,0.035,35,0.22,36,1.669,37,2.631,38,2.631,39,1.709,40,3.231,41,1.918,42,0.701,43,1.918,44,1.726,45,1.615,46,2.631,47,1.817,48,1.918,49,1.85,50,1.918,51,1.786,52,1.918,53,1.786,54,1.918,55,1.85,56,1.918,57,1.85,58,1.697,59,2.906,60,2.716,61,1.918,62,1.85,63,1.918,64,2.631,65,1.817,66,1.918,67,1.726,68,1.918,69,1.85,70,1.918,71,1.85,72,1.918,73,1.817,74,1.403,75,1.228,76,3.385,77,1.85,78,1.231,79,0.902,80,1.817,81,1.85,82,2.631,83,1.817,84,1.918,85,1.85,86,2.631,87,1.85,88,1.918,89,1.85,90,1.918,91,1.726,92,1.918,93,1.726,94,1.918,95,1.85,96,1.107,97,1.817,98,1.85,99,1.817,100,1.589,101,1.786,102,1.918,103,1.817,104,1.918,105,1.755,106,1.918,107,1.817,108,1.918,109,1.817,110,1.918,111,1.817,112,1.884,113,1.918,114,0.004,115,0.004,118,0.795,119,3.002,126,2.015,131,3.231,133,0.767,142,1.48,143,2.407,186,1.492,265,2.071,362,3.86,384,3.473,468,8.161,530,2.84,630,1.867,1387,2.958,1400,9.123,1401,4.887,1402,6.703,1403,6.365,1404,6.365,1405,8.231,1406,8.231,1407,6.703,1408,4.887,1409,4.887,1410,5.741,1411,5.183,1412,4.887,1413,5.741,1414,5.183,1415,4.887,1416,3.78,1417,4.033,1418,3.78,1419,3.78,1420,6.703,1421,6.703,1422,5.996]],["title/classes/ForgotPasswordFailure.html",[35,0.222,1423,2.778]],["body/classes/ForgotPasswordFailure.html",[2,0.047,3,0.047,6,0.041,8,0.389,21,0.116,22,0.278,25,0.285,26,0.006,27,0.374,28,0.479,30,0.522,32,0.069,34,0.069,35,0.43,42,0.454,60,2.131,114,0.004,115,0.004,118,1.134,127,0.924,133,0.497,137,0.607,138,0.479,242,0.497,333,4.274,334,3.265,355,4.212,356,4.212,360,0.948,380,2.689,395,3.923,399,3.026,420,4.212,589,1.51,597,0.775,604,2.335,620,1.475,621,1.578,710,1.126,810,2.736,814,1.78,816,3.454,1385,4.404,1387,2.986,1423,4.657,1424,5.308,1425,5.583,1426,4.089,1427,4.189,1428,2.966,1429,5.658,1430,4.334,1431,4.334,1432,4.334,1433,4.334,1434,4.334,1435,3.068,1436,3.068,1437,3.068,1438,3.068,1439,3.068,1440,3.068,1441,3.068,1442,3.068,1443,3.068,1444,3.068,1445,2.966]],["title/classes/ForgotPasswordSuccess.html",[35,0.222,1434,2.778]],["body/classes/ForgotPasswordSuccess.html",[2,0.047,3,0.047,6,0.041,8,0.389,21,0.116,22,0.278,25,0.285,26,0.006,27,0.374,28,0.479,30,0.522,32,0.069,34,0.069,35,0.43,42,0.454,60,2.131,114,0.004,115,0.004,118,1.134,127,0.924,133,0.497,137,0.607,138,0.479,242,0.497,333,4.274,334,3.265,355,4.212,356,4.212,360,0.948,380,2.689,395,3.923,399,3.08,420,4.212,589,1.51,597,0.775,604,2.335,620,1.475,621,1.578,710,1.126,810,2.736,814,1.78,816,3.406,1385,4.404,1387,2.986,1423,4.334,1424,5.308,1427,3.068,1428,2.966,1429,5.658,1430,4.334,1431,4.334,1432,4.334,1433,4.334,1434,4.657,1435,3.068,1436,3.068,1437,3.068,1438,3.068,1439,3.068,1440,3.068,1441,3.068,1442,3.068,1443,3.068,1444,4.189,1445,2.966,1446,5.583,1447,4.089]],["title/classes/GenericValidator.html",[35,0.222,1448,3.819]],["body/classes/GenericValidator.html",[2,0.054,3,0.054,6,0.048,15,5.179,21,0.136,24,0.867,25,0.258,26,0.006,30,0.509,32,0.081,34,0.041,35,0.374,42,0.688,114,0.004,115,0.004,118,0.686,126,2.255,133,0.58,137,0.919,138,0.726,142,1.838,169,2.568,177,4.237,188,3.164,194,3.465,275,2.925,380,2.977,418,6.713,472,3.079,501,1.017,559,4.237,605,1.999,722,2.695,810,2.751,1448,5.803,1449,8.326,1450,5.179,1451,7.504,1452,5.789,1453,5.179,1454,6.192,1455,7.504,1456,6.112,1457,5.789,1458,4.777,1459,6.398,1460,5.789,1461,4.777,1462,5.789,1463,5.789,1464,7.504,1465,7.504,1466,7.504,1467,7.504,1468,5.155,1469,5.789,1470,6.439,1471,5.789,1472,3.866,1473,5.789,1474,5.789,1475,5.789,1476,5.789,1477,6.713,1478,5.789,1479,7.504,1480,5.789,1481,5.789,1482,5.789,1483,7.504,1484,5.789,1485,5.789,1486,5.789,1487,5.789,1488,7.504]],["title/components/HeaderSideComponent.html",[0,1.075,62,1.869]],["body/components/HeaderSideComponent.html",[0,1.652,1,1.267,2,0.033,3,0.033,4,1.384,5,1.384,6,0.029,9,1.335,16,1.245,17,3.447,18,3.625,20,1.384,21,0.083,22,0.218,24,0.721,25,0.215,26,0.006,27,0.4,28,0.513,30,0.632,32,0.124,33,0.725,34,0.025,35,0.159,36,1.204,37,2.08,38,2.08,39,1.352,40,2.779,41,1.384,42,0.813,43,1.384,44,1.245,45,1.165,46,2.08,47,1.311,48,1.384,49,1.335,50,1.384,51,1.289,52,1.384,53,1.289,54,1.384,55,1.335,56,1.384,57,1.335,58,1.224,59,1.245,60,1.111,61,1.384,62,2.68,63,2.979,64,2.08,65,1.311,66,1.384,67,1.245,68,1.384,69,1.335,70,1.384,71,1.335,72,1.384,73,1.311,74,1.013,75,0.886,76,2.979,77,1.335,78,1.059,79,0.713,80,1.311,81,1.335,82,2.08,83,1.311,84,1.384,85,1.335,86,2.08,87,1.335,88,1.384,89,1.335,90,1.384,91,1.245,92,1.384,93,1.245,94,1.384,95,1.335,96,1.073,97,1.311,98,1.335,99,1.311,100,1.147,101,1.289,102,1.384,103,1.311,104,1.384,105,1.267,106,1.384,107,1.311,108,1.384,109,1.311,110,1.384,111,1.311,112,1.359,113,1.384,114,0.003,115,0.003,118,0.629,119,2.499,122,2.979,126,1.593,127,1.247,131,2.779,133,0.531,137,0.78,138,0.616,142,1.879,143,2.864,158,1.165,176,2.356,186,1.618,219,5.843,225,1.437,230,1.437,239,0.801,240,3.758,242,0.354,249,1.289,256,2.265,257,2.91,299,2.91,334,2.246,343,1.465,362,3.684,363,3.672,412,2.746,436,2.581,445,3.697,456,2.454,526,6.553,530,2.246,539,4.547,550,2.91,613,1.643,707,1.525,708,2.291,719,3.334,722,2.543,755,1.782,787,2.045,899,5.769,900,5.769,937,2.91,939,1.984,940,2.91,947,1.827,957,3.155,958,2.91,959,5.697,1002,3.155,1017,8.405,1018,8.405,1079,3.54,1266,5.476,1489,3.155,1490,5.3,1491,7.081,1492,7.081,1493,5.843,1494,4.742,1495,6.335,1496,5.3,1497,7.081,1498,7.081,1499,7.081,1500,5.697,1501,3.155,1502,6.368,1503,5.843,1504,5.3,1505,4.742,1506,3.155,1507,5.3,1508,3.527,1509,4.374,1510,3.527,1511,3.527,1512,5.3,1513,3.527,1514,3.527,1515,3.527,1516,3.527,1517,5.3,1518,6.335,1519,5.3,1520,5.3,1521,3.155,1522,3.155,1523,3.155,1524,3.527,1525,2.356,1526,3.527,1527,3.527,1528,5.3,1529,5.697,1530,2.727,1531,3.527,1532,3.527,1533,3.527,1534,3.527,1535,3.527,1536,5.3,1537,3.879,1538,3.155,1539,3.155,1540,3.879,1541,5.3,1542,5.3,1543,5.3,1544,4.742,1545,4.742,1546,4.742,1547,4.742,1548,4.374,1549,5.3,1550,3.879,1551,5.3,1552,4.742,1553,4.742]],["title/interfaces/IAdjustScreenOptions.html",[486,1.045,1554,3.614]],["body/interfaces/IAdjustScreenOptions.html",[2,0.046,3,0.046,6,0.04,19,2.884,21,0.114,22,0.274,23,2.478,24,0.894,25,0.189,26,0.006,27,0.366,32,0.106,33,0.998,34,0.035,35,0.218,114,0.004,115,0.004,127,1.121,133,0.669,138,0.921,142,1.683,158,1.604,161,2.905,164,2.654,167,2.571,169,1.945,171,2.731,186,2.036,275,2.453,276,2.646,281,1.685,329,2.256,346,2.187,408,4.894,456,3.67,486,1.736,529,2.944,539,3.117,552,3.193,572,1.752,669,1.482,707,3.548,708,3.295,719,3.141,722,2.738,724,2.884,726,3.671,731,3.072,735,3.213,794,4.419,820,1.714,892,4.883,894,5.316,899,6.351,901,4.653,946,4.912,947,3.457,967,5.482,969,6.297,1079,5.091,1221,3.242,1326,3.242,1330,5.579,1537,3.553,1554,5.579,1555,3.754,1556,6.347,1557,3.117,1558,3.242,1559,3.386,1560,3.553,1561,5.579,1562,4.883,1563,4.883,1564,4.883,1565,4.883,1566,3.754,1567,3.754,1568,3.754,1569,3.754,1570,3.754,1571,3.754,1572,3.754,1573,3.754,1574,3.117,1575,3.754,1576,5.895,1577,3.754,1578,5.159,1579,3.754,1580,3.754,1581,3.754,1582,3.754,1583,5.895,1584,5.895,1585,3.553,1586,3.754,1587,3.754,1588,3.754,1589,3.242,1590,3.754,1591,3.386,1592,3.386,1593,3.553,1594,3.754,1595,3.553,1596,4.883,1597,3.754,1598,3.754,1599,5.895,1600,3.754,1601,3.754,1602,3.754,1603,3.754,1604,3.754,1605,3.754,1606,3.553,1607,3.754,1608,3.754,1609,3.754,1610,3.754]],["title/interfaces/IBadge.html",[486,1.045,1611,3.614]],["body/interfaces/IBadge.html",[0,1.787,2,0.053,3,0.053,6,0.046,19,2.43,21,0.132,22,0.303,23,2.669,24,0.96,25,0.277,26,0.006,27,0.424,28,0.875,32,0.103,33,1.156,34,0.04,35,0.253,42,0.85,78,1.101,96,1.104,114,0.004,115,0.004,117,3.92,126,2.467,133,0.563,135,3.814,141,6.008,158,1.857,186,1.716,259,2.913,281,1.952,329,2.179,343,2.335,346,2.533,486,1.843,501,1.661,552,2.019,569,5.213,709,3.63,722,2.019,724,2.43,732,3.058,774,4.114,787,3.259,888,4.759,945,3.754,947,2.913,1267,4.558,1472,5.483,1540,6.375,1550,4.114,1557,3.609,1611,6.008,1612,4.347,1613,6.617,1614,5.388,1615,4.347,1616,4.347,1617,6.736,1618,4.114,1619,6.404,1620,6.992,1621,5.693,1622,5.693,1623,6.008,1624,4.347,1625,4.347,1626,4.347,1627,3.754,1628,5.693,1629,4.347,1630,4.347,1631,4.347,1632,4.347,1633,4.347,1634,3.92,1635,4.347,1636,4.917,1637,4.347,1638,4.347,1639,6.348,1640,4.114,1641,4.347,1642,5.693,1643,4.347,1644,4.347]],["title/interfaces/IChildItem.html",[486,1.045,1623,3.614]],["body/interfaces/IChildItem.html",[0,1.754,2,0.051,3,0.051,6,0.045,19,2.341,21,0.127,22,0.295,23,2.62,24,0.967,25,0.285,26,0.006,27,0.409,28,0.695,32,0.1,33,1.113,34,0.039,35,0.244,42,0.882,78,1.074,96,1.084,114,0.004,115,0.004,117,3.776,126,2.422,133,0.543,135,3.721,138,0.92,141,5.899,158,1.789,186,1.653,259,2.805,281,1.88,329,2.126,343,2.249,346,2.44,486,1.816,501,1.708,552,1.945,569,5.137,709,3.542,722,1.945,724,2.341,732,2.984,774,3.963,787,3.139,888,4.672,945,3.616,947,2.805,1267,4.447,1472,5.383,1540,6.282,1550,3.963,1557,3.477,1611,5.257,1612,4.187,1613,5.257,1614,5.257,1615,4.187,1616,4.187,1617,6.637,1618,3.963,1619,6.545,1620,6.907,1621,5.554,1622,6.907,1623,6.719,1624,4.187,1625,4.187,1626,4.187,1627,3.616,1628,5.554,1629,4.187,1630,4.187,1631,4.187,1632,4.187,1633,4.187,1634,3.776,1635,4.187,1636,4.797,1637,4.187,1638,4.187,1639,6.232,1640,3.963,1641,4.187,1642,5.554,1643,4.187,1644,4.187]],["title/interfaces/ICredentials.html",[338,3.171,486,1.045]],["body/interfaces/ICredentials.html",[2,0.069,3,0.069,6,0.061,8,0.577,21,0.172,22,0.357,24,0.973,25,0.246,26,0.006,34,0.062,114,0.005,115,0.005,338,5.584,342,5.808,486,1.96,820,3.07,1387,4.315,1398,4.394,1645,6.568,1646,6.82,1647,5.678,1648,4.714,1649,4.714]],["title/interfaces/IDevice.html",[486,1.045,1650,4.075]],["body/interfaces/IDevice.html",[2,0.064,3,0.064,6,0.056,8,0.653,21,0.159,22,0.341,24,0.968,25,0.276,26,0.006,34,0.049,114,0.004,115,0.004,138,0.985,486,1.757,669,2.974,1145,4.397,1650,6.855,1651,6.804,1652,6.086,1653,9.339,1654,9.339,1655,8.354,1656,9.339,1657,9.339,1658,4.831]],["title/interfaces/ILayoutChangeOptions.html",[486,1.045,1565,3.614]],["body/interfaces/ILayoutChangeOptions.html",[2,0.045,3,0.045,6,0.04,8,0.378,19,2.868,21,0.113,22,0.273,23,2.468,24,0.864,25,0.188,26,0.006,27,0.363,32,0.106,33,0.99,34,0.034,35,0.217,114,0.004,115,0.004,127,1.118,133,0.665,138,0.929,142,1.676,158,1.591,161,2.882,164,2.633,167,2.557,169,1.934,171,2.709,186,2.025,275,2.433,276,2.635,281,1.672,329,2.247,346,2.17,408,5.694,456,3.701,486,1.731,529,2.928,539,3.092,552,3.325,572,1.742,669,2.317,707,3.536,708,3.281,719,3.124,722,2.726,724,2.868,726,3.656,731,3.055,735,3.196,794,4.401,820,2.343,892,4.856,894,5.294,899,6.338,901,4.628,946,2.882,947,3.933,967,5.464,969,6.28,1079,5.07,1221,3.217,1326,3.217,1330,5.556,1537,5.987,1554,4.856,1555,3.724,1556,3.724,1557,3.092,1558,3.217,1559,3.359,1560,3.525,1561,5.556,1562,4.856,1563,4.856,1564,4.856,1565,5.556,1566,3.724,1567,3.724,1568,3.724,1569,3.724,1570,3.724,1571,3.724,1572,3.724,1573,3.724,1574,3.092,1575,3.724,1576,5.87,1577,3.724,1578,5.131,1579,3.724,1580,3.724,1581,3.724,1582,3.724,1583,5.87,1584,5.87,1585,3.525,1586,3.724,1587,3.724,1588,3.724,1589,3.217,1590,3.724,1591,3.359,1592,3.359,1593,3.525,1594,3.724,1595,3.525,1596,4.856,1597,3.724,1598,3.724,1599,5.87,1600,3.724,1601,3.724,1602,3.724,1603,3.724,1604,3.724,1605,3.724,1606,3.525,1607,3.724,1608,3.724,1609,3.724,1610,3.724]],["title/interfaces/ILayoutConf.html",[486,1.045,1561,3.614]],["body/interfaces/ILayoutConf.html",[2,0.043,3,0.043,6,0.038,8,0.357,19,2.755,21,0.106,22,0.262,23,2.393,24,0.93,25,0.258,26,0.006,27,0.343,32,0.103,33,0.934,34,0.032,35,0.204,114,0.003,115,0.003,127,1.09,133,0.639,138,0.972,142,1.625,158,1.502,161,2.72,164,2.484,167,2.456,169,1.858,171,2.556,186,1.945,275,2.296,276,2.555,281,1.578,329,2.178,346,2.048,408,4.726,456,3.661,486,1.688,529,3.707,539,2.918,552,3.494,572,1.673,669,1.387,707,3.449,708,3.182,719,3,722,2.643,724,2.755,726,3.545,731,3.868,735,3.069,794,4.267,820,1.604,892,4.664,894,6.074,899,6.554,901,5.859,946,2.72,947,3.302,967,5.973,969,6.149,1079,4.916,1221,4.256,1326,3.035,1330,5.387,1537,3.326,1554,4.664,1555,3.514,1556,3.514,1557,2.918,1558,3.035,1559,3.169,1560,4.664,1561,5.839,1562,6.149,1563,6.149,1564,4.664,1565,4.664,1566,3.514,1567,3.514,1568,3.514,1569,3.514,1570,3.514,1571,3.514,1572,3.514,1573,3.514,1574,2.918,1575,3.514,1576,5.691,1577,3.514,1578,4.928,1579,3.514,1580,3.514,1581,3.514,1582,3.514,1583,5.691,1584,5.691,1585,3.326,1586,3.514,1587,3.514,1588,3.514,1589,3.035,1590,3.514,1591,3.169,1592,3.169,1593,3.326,1594,3.514,1595,3.326,1596,4.664,1597,3.514,1598,3.514,1599,5.691,1600,3.514,1601,3.514,1602,3.514,1603,3.514,1604,3.514,1605,3.514,1606,3.326,1607,3.514,1608,3.514,1609,3.514,1610,3.514]],["title/interfaces/IMenuItem.html",[486,1.045,1614,3.614]],["body/interfaces/IMenuItem.html",[0,1.725,2,0.049,3,0.049,6,0.043,19,2.263,21,0.123,22,0.289,23,2.577,24,0.968,25,0.286,26,0.006,27,0.395,28,0.679,32,0.098,33,1.076,34,0.037,35,0.235,42,0.876,78,1.051,96,1.066,114,0.004,115,0.004,117,3.651,126,2.382,133,0.525,135,3.639,138,0.961,141,5.8,158,1.73,186,1.598,259,2.713,281,1.818,329,2.078,343,2.175,346,2.359,486,1.792,501,1.698,552,2.846,569,5.068,709,3.463,722,1.88,724,2.263,732,2.917,774,3.832,787,3.035,888,4.594,945,3.497,947,2.713,1267,4.348,1472,5.293,1540,6.198,1550,6.198,1557,3.361,1611,6.198,1612,4.048,1613,5.14,1614,5.8,1615,4.048,1616,4.048,1617,6.549,1618,3.832,1619,6.509,1620,7.3,1621,5.431,1622,6.83,1623,6.464,1624,6.549,1625,4.048,1626,4.048,1627,3.497,1628,5.431,1629,4.048,1630,4.048,1631,4.048,1632,4.048,1633,4.048,1634,3.651,1635,4.048,1636,4.691,1637,4.048,1638,4.048,1639,6.128,1640,3.832,1641,4.048,1642,5.431,1643,4.048,1644,4.048]],["title/interfaces/IPatient.html",[486,1.045,640,1.507]],["body/interfaces/IPatient.html",[2,0.053,3,0.053,6,0.046,8,0.644,21,0.131,22,0.302,24,0.965,25,0.282,26,0.006,32,0.114,34,0.04,74,1.607,78,1.098,96,1.289,114,0.004,115,0.004,138,0.998,486,1.553,559,4.098,560,3.905,592,3.123,594,2.326,640,2.241,669,3.027,1145,4.094,1648,5.584,1649,5.584,1650,7.176,1652,7.78,1655,7.78,1658,4.924,1659,5.599,1660,7.342,1661,8.697,1662,7.78,1663,9.03,1664,6.725,1665,7.78,1666,8.697,1667,8.697,1668,5.599,1669,5.599,1670,5.599,1671,5.599,1672,5.599,1673,5.599]],["title/interfaces/IRoutePart.html",[486,1.045,1674,4.075]],["body/interfaces/IRoutePart.html",[2,0.061,3,0.061,6,0.054,19,2.803,21,0.152,22,0.331,23,3.071,24,0.946,25,0.268,26,0.006,32,0.113,33,1.333,34,0.046,35,0.292,114,0.004,115,0.004,118,0.769,119,3.165,127,0.886,131,2.545,135,4.548,138,0.78,142,1.432,156,3.197,188,3.544,276,3.455,329,2.387,346,2.922,486,1.706,529,4.168,532,7.578,536,5.014,560,6.588,1674,7.578,1675,5.8,1676,5.8,1677,8.45,1678,7.214,1679,5.8,1680,5.8,1681,5.8,1682,5.8,1683,7.214,1684,5.8,1685,5.8,1686,7.214,1687,5.8,1688,5.8,1689,5.8,1690,5.8]],["title/interfaces/ITheme.html",[486,1.045,1691,4.075]],["body/interfaces/ITheme.html",[1,2.04,2,0.053,3,0.053,6,0.047,19,2.456,21,0.133,22,0.305,24,0.884,25,0.234,26,0.006,27,0.429,32,0.115,33,1.168,34,0.041,35,0.255,42,0.881,114,0.004,115,0.004,122,2.23,127,1.013,133,0.569,138,0.846,167,3.37,169,1.656,186,2.263,214,3.4,281,1.972,329,2.442,346,2.56,486,1.568,552,2.963,722,2.04,900,3.962,997,6.809,1112,4.393,1493,4.688,1503,6.809,1509,7.217,1558,3.794,1559,3.962,1574,3.648,1589,3.794,1591,3.962,1592,3.962,1691,7.677,1692,5.082,1693,8.597,1694,8.597,1695,7.824,1696,6.631,1697,5.082,1698,5.082,1699,5.082,1700,5.082,1701,5.082,1702,5.082,1703,5.082,1704,5.082,1705,7.381,1706,5.082,1707,5.082,1708,5.082,1709,5.082,1710,5.082,1711,8.477,1712,5.082,1713,5.082,1714,5.082,1715,5.082,1716,6.631,1717,5.082,1718,5.082,1719,5.082,1720,5.082,1721,5.082,1722,5.082,1723,6.631,1724,5.082,1725,5.082,1726,5.082,1727,6.631,1728,5.082,1729,5.082,1730,5.082,1731,5.082,1732,5.082,1733,5.082]],["title/interfaces/IUser.html",[486,1.045,1647,3.819]],["body/interfaces/IUser.html",[2,0.065,3,0.065,6,0.058,8,0.548,21,0.163,22,0.346,24,0.983,25,0.273,26,0.006,34,0.06,96,0.938,114,0.005,115,0.005,138,0.98,338,4.476,342,4.656,486,1.917,820,2.976,1387,4.254,1398,5.636,1645,6.236,1646,6.725,1647,6.519,1648,6.046,1649,6.046]],["title/classes/InitializeNursingHome.html",[35,0.222,600,2.559]],["body/classes/InitializeNursingHome.html",[2,0.044,3,0.044,6,0.038,8,0.365,21,0.109,22,0.266,24,0.442,25,0.279,26,0.006,27,0.351,28,0.45,30,0.315,32,0.104,34,0.07,35,0.436,74,1.334,75,1.168,79,1.084,114,0.004,115,0.004,118,1.15,204,1.675,239,1.693,242,0.466,360,0.983,429,1.203,501,1.138,572,1.956,584,3.86,585,2.981,586,2.472,587,1.887,588,1.487,589,1.527,590,2.615,592,3.71,593,2.051,594,1.931,595,1.946,596,1.257,597,0.727,598,2.541,599,3.86,600,4.175,601,2.171,602,3.764,603,1.946,604,1.651,605,1.725,606,3.973,607,1.328,608,3.764,609,2.244,610,3.764,611,1.171,612,3.86,613,2.498,614,3.86,615,2.039,616,3.86,617,3.86,618,3.86,619,2.615,620,1.364,621,1.384,622,3.642,623,2.615,624,2.615,625,1.487,626,2.615,627,2.615,628,2.615,629,2.615,630,1.295,631,2.615,632,2.615,633,2.615,634,1.464,635,2.541,1734,4.648]],["title/classes/InitializePatient.html",[35,0.222,644,2.435]],["body/classes/InitializePatient.html",[2,0.041,3,0.041,6,0.036,8,0.345,21,0.103,22,0.255,24,0.417,25,0.28,26,0.006,27,0.331,28,0.424,30,0.297,32,0.101,34,0.07,35,0.438,78,1.543,79,1.057,96,0.971,114,0.003,115,0.003,118,1.154,204,1.608,239,1.64,242,0.44,360,0.985,429,1.608,501,1.092,572,1.895,587,1.812,588,1.403,589,1.531,595,1.318,596,1.186,597,0.686,601,2.104,603,1.868,604,1.585,605,1.923,607,1.108,609,2.188,611,1.42,613,2.435,615,1.957,620,1.426,621,1.447,625,1.403,630,1.222,634,1.381,636,3.56,637,2.216,638,2.333,640,2.53,641,1.426,642,2.272,643,3.477,644,3.872,645,3.56,646,3.697,647,3.477,648,3.477,649,3.56,650,3.56,651,3.324,652,3.56,653,3.56,654,2.993,655,2.232,656,3.56,657,2.333,658,3.306,659,2.333,660,2.333,661,2.333,662,2.333,663,2.333,664,2.333,665,2.333,666,2.333,667,2.333,668,2.333,669,1.897,670,2.333,671,2.272,1735,4.385]],["title/classes/InitializeUser.html",[35,0.222,679,2.435]],["body/classes/InitializeUser.html",[2,0.041,3,0.041,6,0.036,8,0.344,21,0.103,22,0.255,24,0.416,25,0.28,26,0.006,27,0.331,28,0.424,30,0.297,32,0.101,34,0.07,35,0.438,78,0.929,79,1.056,96,1.393,114,0.003,115,0.003,118,1.154,204,1.607,239,1.639,242,0.439,360,0.985,429,1.607,501,1.091,572,1.894,587,1.81,588,1.402,589,1.531,595,1.317,596,1.185,597,0.685,601,2.103,603,1.867,604,1.584,605,1.922,607,1.107,609,2.187,611,1.419,613,2.434,615,1.956,620,1.425,621,1.446,625,1.402,630,1.22,634,1.38,655,2.23,669,1.896,672,3.558,673,2.213,674,2.33,676,1.448,677,2.27,678,3.475,679,3.871,680,3.558,681,3.695,682,3.475,683,3.475,684,3.558,685,3.558,686,3.322,687,3.558,688,3.558,689,2.991,690,3.475,691,2.33,692,3.303,693,2.33,694,2.33,695,2.33,696,2.33,697,2.33,698,2.33,699,2.33,700,2.33,701,2.33,702,2.33,703,2.33,704,2.27,1736,4.381]],["title/injectables/LayoutService.html",[329,1.462,539,3.171]],["body/injectables/LayoutService.html",[2,0.039,3,0.039,6,0.034,8,0.547,19,3.01,21,0.096,22,0.244,23,2.264,24,0.861,25,0.239,26,0.006,27,0.655,28,0.782,30,0.638,32,0.097,33,0.845,34,0.029,35,0.185,42,0.544,114,0.003,115,0.003,126,1.784,127,1.286,133,0.81,137,0.727,138,0.911,142,2,143,2.501,158,1.358,161,2.46,164,2.247,167,2.287,169,1.73,171,2.313,186,1.811,275,2.998,276,2.418,281,2.06,329,2.393,346,1.853,408,4.471,456,3.757,486,1.473,529,2.618,539,3.81,552,3.193,572,2.002,669,1.255,707,3.296,708,3.01,719,2.794,722,2.904,724,2.565,726,3.354,731,2.732,735,2.858,794,4.688,820,1.451,892,6.508,894,4.857,899,6.058,901,4.139,946,2.46,947,3.608,967,5.939,969,5.918,1079,4.651,1221,2.746,1326,2.746,1330,5.097,1537,3.009,1554,5.581,1555,3.179,1556,3.179,1557,2.64,1558,2.746,1559,2.867,1560,3.009,1561,6.357,1562,4.343,1563,4.343,1564,4.343,1565,5.581,1566,5.896,1567,4.589,1568,4.589,1569,5.896,1570,5.896,1571,4.589,1572,3.179,1573,5.896,1574,2.64,1575,4.589,1576,5.896,1577,4.589,1578,5.896,1579,4.589,1580,3.179,1581,3.179,1582,3.179,1583,5.385,1584,5.385,1585,4.343,1586,5.896,1587,3.179,1588,3.179,1589,2.746,1590,3.179,1591,2.867,1592,2.867,1593,4.343,1594,4.589,1595,4.343,1596,5.581,1597,4.589,1598,3.179,1599,5.385,1600,3.179,1601,3.179,1602,3.179,1603,3.179,1604,3.179,1605,4.589,1606,4.343,1607,4.589,1608,5.896,1609,3.179,1610,3.179,1737,5.934,1738,5.934,1739,5.934,1740,4.111,1741,4.111,1742,4.111,1743,4.111,1744,4.111,1745,4.111,1746,4.111,1747,4.111,1748,4.111,1749,4.111]],["title/classes/LoadNursingHomes.html",[35,0.222,610,2.495]],["body/classes/LoadNursingHomes.html",[2,0.044,3,0.044,6,0.038,8,0.365,21,0.109,22,0.266,24,0.442,25,0.279,26,0.006,27,0.351,28,0.45,30,0.315,32,0.104,34,0.07,35,0.436,74,1.334,75,1.168,79,1.084,114,0.004,115,0.004,118,1.15,204,1.675,239,1.693,242,0.466,360,0.983,429,1.203,501,1.138,572,1.956,584,3.86,585,2.981,586,2.472,587,1.887,588,1.487,589,1.527,590,2.615,592,3.71,593,2.051,594,1.931,595,1.946,596,1.257,597,0.727,598,2.541,599,3.86,600,3.86,601,1.887,602,3.764,603,1.946,604,1.651,605,1.725,606,3.973,607,1.328,608,3.764,609,2.244,610,4.071,611,1.347,612,3.86,613,2.498,614,3.86,615,2.039,616,3.86,617,3.86,618,3.86,619,2.615,620,1.364,621,1.384,622,2.615,623,2.615,624,2.615,625,1.487,626,2.615,627,3.642,628,2.615,629,2.615,630,1.295,631,2.615,632,2.615,633,2.615,634,1.464,635,2.541,1750,4.648]],["title/classes/LoadNursingHomesFailure.html",[35,0.222,825,3.058]],["body/classes/LoadNursingHomesFailure.html",[2,0.049,3,0.049,6,0.043,8,0.406,21,0.121,22,0.286,24,0.748,25,0.285,26,0.006,27,0.39,28,0.5,30,0.534,32,0.097,34,0.068,35,0.416,42,0.474,75,2.118,79,1.134,114,0.004,115,0.004,118,1.098,127,1.317,133,0.518,137,0.633,138,0.5,242,0.518,360,0.967,380,2.367,399,2.994,585,3.88,589,1.472,592,3.637,593,2.282,594,2.149,597,0.809,607,1.242,611,1.591,620,1.459,621,1.575,710,1.175,810,2.784,813,4.876,814,1.857,815,2.734,816,3.214,819,3.607,820,1.826,821,3.454,822,4.876,823,6.051,824,4.876,825,5.217,826,4.876,827,4.876,828,3.607,829,3.607,830,4.858,831,3.607,832,3.607,833,3.454,1751,6.965,1752,5.172]],["title/classes/LoadNursingHomesSuccess.html",[35,0.222,824,3.058]],["body/classes/LoadNursingHomesSuccess.html",[2,0.049,3,0.049,6,0.043,8,0.406,21,0.121,22,0.286,24,0.748,25,0.285,26,0.006,27,0.39,28,0.5,30,0.534,32,0.097,34,0.068,35,0.416,42,0.473,75,2.117,79,1.133,114,0.004,115,0.004,118,1.098,127,1.317,133,0.518,137,0.633,138,0.5,242,0.518,360,0.967,380,2.366,399,3.059,585,3.878,589,1.472,592,3.636,593,2.279,594,2.146,597,0.808,607,1.241,611,1.59,620,1.459,621,1.575,710,1.174,810,2.783,813,4.873,814,1.855,815,2.732,816,3.212,819,3.603,820,1.824,821,3.45,822,4.873,823,6.049,824,5.215,825,4.873,826,4.873,827,4.873,828,3.603,829,4.854,830,3.603,831,3.603,832,3.603,833,3.45,1753,6.959,1754,5.165]],["title/classes/LoadPatientUsers.html",[35,0.222,656,2.435]],["body/classes/LoadPatientUsers.html",[2,0.04,3,0.04,6,0.035,8,0.336,21,0.1,22,0.251,24,0.407,25,0.281,26,0.006,27,0.323,28,0.414,30,0.483,32,0.099,34,0.07,35,0.436,42,0.392,78,1.54,79,1.045,96,1.045,114,0.003,115,0.003,118,1.15,127,0.835,133,0.429,137,0.524,138,0.414,204,1.58,239,1.618,242,0.429,360,0.983,429,1.58,501,1.073,572,1.87,587,1.78,588,1.37,589,1.525,595,1.286,596,1.157,597,0.669,601,1.78,603,1.836,604,1.557,605,1.898,607,1.089,609,2.164,611,1.485,613,2.408,615,1.924,620,1.416,621,1.535,625,1.37,630,1.192,634,1.348,636,3.512,637,2.162,638,2.277,640,2.507,641,1.392,642,2.218,643,3.43,644,3.512,645,3.512,646,3.657,647,3.43,648,3.43,649,3.512,650,3.512,651,3.28,652,3.512,653,3.512,654,2.942,655,2.194,656,3.83,657,2.277,658,2.277,659,2.277,660,2.277,661,2.277,662,2.277,663,2.277,664,2.277,665,2.277,666,2.277,667,2.277,668,2.277,669,2.607,670,3.249,671,2.218,710,0.972,1755,6.108,1756,4.28]],["title/classes/LoadPatientUsersFailure.html",[35,0.222,852,2.863]],["body/classes/LoadPatientUsersFailure.html",[2,0.044,3,0.044,6,0.039,8,0.372,21,0.111,22,0.27,24,0.623,25,0.284,26,0.006,27,0.357,28,0.458,30,0.51,32,0.105,34,0.068,35,0.421,42,0.434,78,1.501,79,1.093,96,1.241,114,0.004,115,0.004,118,1.11,127,1.319,133,0.475,137,0.58,138,0.458,242,0.475,360,0.971,380,2.441,399,3.047,589,1.482,597,0.741,607,1.169,611,1.693,620,1.485,621,1.578,640,2.479,641,1.54,676,1.565,710,1.076,810,2.684,814,1.701,815,2.574,816,3.369,820,1.672,838,4.362,839,4.861,842,3.041,843,2.932,844,4.232,845,5.463,846,4.362,847,4.362,848,4.362,849,4.362,850,4.362,851,3.234,852,4.708,853,3.041,854,3.041,855,3.041,856,3.041,857,3.041,858,3.041,859,4.211,860,2.932,1425,5.412,1426,3.908]],["title/classes/LoadPatientUsersSuccess.html",[35,0.222,850,2.863]],["body/classes/LoadPatientUsersSuccess.html",[2,0.044,3,0.044,6,0.039,8,0.372,21,0.111,22,0.27,24,0.623,25,0.284,26,0.006,27,0.357,28,0.458,30,0.51,32,0.105,34,0.068,35,0.421,42,0.434,78,1.501,79,1.093,96,1.241,114,0.004,115,0.004,118,1.11,127,1.319,133,0.475,137,0.58,138,0.458,242,0.475,360,0.971,380,2.441,399,3.093,589,1.482,597,0.741,607,1.169,611,1.693,620,1.485,621,1.578,640,2.479,641,1.54,676,1.565,710,1.076,810,2.684,814,1.701,815,2.574,816,3.305,820,1.672,838,4.362,839,4.861,842,3.041,843,2.932,844,4.232,845,5.463,846,4.362,847,4.362,848,4.362,849,4.362,850,4.708,851,3.234,852,4.362,853,3.041,854,3.041,855,3.041,856,3.041,857,3.041,858,4.211,859,3.041,860,2.932,1446,5.412,1447,3.908]],["title/classes/LoadPatients.html",[35,0.222,648,2.379]],["body/classes/LoadPatients.html",[2,0.041,3,0.041,6,0.036,8,0.345,21,0.103,22,0.255,24,0.417,25,0.28,26,0.006,27,0.331,28,0.424,30,0.297,32,0.101,34,0.07,35,0.438,78,1.543,79,1.057,96,0.971,114,0.003,115,0.003,118,1.154,204,1.608,239,1.64,242,0.44,360,0.985,429,1.608,501,1.092,572,1.895,587,1.812,588,1.403,589,1.531,595,1.318,596,1.186,597,0.686,601,1.812,603,1.868,604,1.585,605,1.923,607,1.108,609,2.188,611,1.499,613,2.435,615,1.957,620,1.426,621,1.447,625,1.403,630,1.222,634,1.381,636,3.56,637,2.216,638,2.333,640,2.53,641,1.426,642,2.272,643,3.477,644,3.56,645,3.56,646,3.697,647,3.477,648,3.782,649,3.56,650,3.56,651,3.324,652,3.56,653,3.56,654,2.993,655,2.232,656,3.56,657,2.333,658,2.333,659,2.333,660,2.333,661,2.333,662,3.306,663,2.333,664,2.333,665,2.333,666,2.333,667,2.333,668,2.333,669,1.897,670,2.333,671,2.272,1757,4.385]],["title/classes/LoadPatientsFailure.html",[35,0.222,847,2.863]],["body/classes/LoadPatientsFailure.html",[2,0.045,3,0.045,6,0.039,8,0.373,21,0.111,22,0.27,24,0.624,25,0.284,26,0.006,27,0.358,28,0.459,30,0.511,32,0.105,34,0.068,35,0.421,42,0.435,78,1.502,79,1.094,96,1.218,114,0.004,115,0.004,118,1.111,127,1.32,133,0.476,137,0.581,138,0.459,242,0.476,360,0.971,380,2.443,399,3.048,589,1.483,597,0.742,607,1.171,611,1.694,620,1.486,621,1.579,640,2.482,641,1.543,676,1.568,710,1.078,810,2.686,814,1.705,815,2.578,816,3.307,820,1.676,838,4.367,839,4.866,842,3.048,843,2.939,844,4.237,845,5.466,846,4.367,847,4.713,848,4.367,849,4.367,850,4.367,851,3.239,852,4.367,853,3.048,854,3.048,855,4.218,856,3.048,857,3.048,858,3.048,859,3.048,860,2.939,1758,5.876,1759,4.246]],["title/classes/LoadPatientsSuccess.html",[35,0.222,846,2.863]],["body/classes/LoadPatientsSuccess.html",[2,0.045,3,0.045,6,0.039,8,0.373,21,0.111,22,0.27,24,0.624,25,0.284,26,0.006,27,0.358,28,0.459,30,0.51,32,0.105,34,0.068,35,0.421,42,0.434,78,1.501,79,1.093,96,1.217,114,0.004,115,0.004,118,1.11,127,1.32,133,0.475,137,0.581,138,0.459,242,0.475,360,0.971,380,2.442,399,3.094,589,1.482,597,0.741,607,1.17,611,1.693,620,1.485,621,1.578,640,2.48,641,1.542,676,1.567,710,1.077,810,2.685,814,1.703,815,2.576,816,3.306,820,1.674,838,4.364,839,4.863,842,3.044,843,2.935,844,4.235,845,5.464,846,4.711,847,4.364,848,4.364,849,4.364,850,4.364,851,3.237,852,4.364,853,3.044,854,4.215,855,3.044,856,3.044,857,3.044,858,3.044,859,3.044,860,2.935,1760,5.872,1761,4.241]],["title/classes/LoadUserPatients.html",[35,0.222,690,2.379]],["body/classes/LoadUserPatients.html",[2,0.04,3,0.04,6,0.035,8,0.336,21,0.1,22,0.251,24,0.406,25,0.281,26,0.006,27,0.323,28,0.414,30,0.483,32,0.099,34,0.07,35,0.436,42,0.392,78,1.065,79,1.045,96,1.391,114,0.003,115,0.003,118,1.15,127,0.834,133,0.429,137,0.524,138,0.414,204,1.579,239,1.617,242,0.429,360,0.983,429,1.579,501,1.073,572,1.869,587,1.779,588,1.368,589,1.525,595,1.285,596,1.156,597,0.669,601,1.779,603,1.835,604,1.556,605,1.897,607,1.088,609,2.163,611,1.485,613,2.407,615,1.922,620,1.415,621,1.534,625,1.368,630,1.191,634,1.347,655,2.192,669,2.606,672,3.51,673,2.16,674,2.274,676,1.413,677,2.215,678,3.429,679,3.51,680,3.51,681,3.655,682,3.429,683,3.429,684,3.51,685,3.51,686,3.278,687,3.51,688,3.51,689,2.94,690,3.739,691,2.274,692,2.274,693,2.274,694,2.274,695,2.274,696,2.274,697,2.274,698,2.274,699,2.274,700,2.274,701,2.274,702,2.274,703,3.247,704,2.215,710,0.971,1762,6.104,1763,4.276]],["title/classes/LoadUserPatientsFailure.html",[35,0.222,876,2.863]],["body/classes/LoadUserPatientsFailure.html",[2,0.044,3,0.044,6,0.039,8,0.372,21,0.111,22,0.269,24,0.623,25,0.284,26,0.006,27,0.357,28,0.458,30,0.51,32,0.105,34,0.068,35,0.421,42,0.433,78,1.319,79,1.092,96,1.363,114,0.004,115,0.004,118,1.11,127,1.319,133,0.474,137,0.579,138,0.458,242,0.474,360,0.971,380,2.44,399,3.046,589,1.482,597,0.74,607,1.168,611,1.692,620,1.485,621,1.578,640,2,641,1.538,676,1.563,710,1.075,810,2.682,814,1.699,815,2.572,816,3.42,820,1.67,851,4.546,866,4.359,867,4.859,868,3.037,869,2.929,870,4.23,871,4.359,872,4.359,873,4.23,874,4.359,875,4.359,876,4.706,877,3.037,878,3.037,879,3.037,880,3.037,881,3.037,882,3.037,883,4.208,884,2.929,1425,5.408,1426,3.903]],["title/classes/LoadUserPatientsSuccess.html",[35,0.222,875,2.863]],["body/classes/LoadUserPatientsSuccess.html",[2,0.044,3,0.044,6,0.039,8,0.372,21,0.111,22,0.269,24,0.623,25,0.284,26,0.006,27,0.357,28,0.458,30,0.51,32,0.105,34,0.068,35,0.421,42,0.433,78,1.319,79,1.092,96,1.363,114,0.004,115,0.004,118,1.11,127,1.319,133,0.474,137,0.579,138,0.458,242,0.474,360,0.971,380,2.44,399,3.093,589,1.482,597,0.74,607,1.168,611,1.692,620,1.485,621,1.578,640,2,641,1.538,676,1.563,710,1.075,810,2.682,814,1.699,815,2.572,816,3.368,820,1.67,851,4.546,866,4.359,867,4.859,868,3.037,869,2.929,870,4.23,871,4.359,872,4.359,873,4.23,874,4.359,875,4.706,876,4.359,877,3.037,878,3.037,879,3.037,880,3.037,881,3.037,882,4.208,883,3.037,884,2.929,1446,5.408,1447,3.903]],["title/classes/LoadUsers.html",[35,0.222,683,2.379]],["body/classes/LoadUsers.html",[2,0.041,3,0.041,6,0.036,8,0.344,21,0.103,22,0.255,24,0.416,25,0.28,26,0.006,27,0.331,28,0.424,30,0.297,32,0.101,34,0.07,35,0.438,78,0.929,79,1.056,96,1.393,114,0.003,115,0.003,118,1.154,204,1.607,239,1.639,242,0.439,360,0.985,429,1.607,501,1.091,572,1.894,587,1.81,588,1.402,589,1.531,595,1.317,596,1.185,597,0.685,601,1.81,603,1.867,604,1.584,605,1.922,607,1.107,609,2.187,611,1.499,613,2.434,615,1.956,620,1.425,621,1.446,625,1.402,630,1.22,634,1.38,655,2.23,669,1.896,672,3.558,673,2.213,674,2.33,676,1.448,677,2.27,678,3.475,679,3.558,680,3.558,681,3.695,682,3.475,683,3.781,684,3.558,685,3.558,686,3.322,687,3.558,688,3.558,689,2.991,690,3.475,691,2.33,692,2.33,693,2.33,694,2.33,695,2.33,696,3.303,697,2.33,698,2.33,699,2.33,700,2.33,701,2.33,702,2.33,703,2.33,704,2.27,1764,4.381]],["title/classes/LoadUsersFailure.html",[35,0.222,872,2.863]],["body/classes/LoadUsersFailure.html",[2,0.044,3,0.044,6,0.039,8,0.372,21,0.111,22,0.27,24,0.623,25,0.284,26,0.006,27,0.357,28,0.458,30,0.51,32,0.105,34,0.068,35,0.421,42,0.434,78,1.276,79,1.093,96,1.364,114,0.004,115,0.004,118,1.11,127,1.319,133,0.475,137,0.58,138,0.458,242,0.475,360,0.971,380,2.441,399,3.047,589,1.482,597,0.741,607,1.169,611,1.693,620,1.485,621,1.578,640,2.002,641,1.54,676,1.565,710,1.076,810,2.684,814,1.701,815,2.574,816,3.421,820,1.672,851,4.547,866,4.362,867,4.861,868,3.041,869,2.932,870,4.232,871,4.362,872,4.708,873,4.232,874,4.362,875,4.362,876,4.362,877,3.041,878,3.041,879,4.211,880,3.041,881,3.041,882,3.041,883,3.041,884,2.932,1758,5.867,1759,4.236]],["title/classes/LoadUsersSuccess.html",[35,0.222,871,2.863]],["body/classes/LoadUsersSuccess.html",[2,0.044,3,0.044,6,0.039,8,0.372,21,0.111,22,0.27,24,0.623,25,0.284,26,0.006,27,0.357,28,0.458,30,0.51,32,0.105,34,0.068,35,0.421,42,0.434,78,1.276,79,1.093,96,1.364,114,0.004,115,0.004,118,1.11,127,1.319,133,0.475,137,0.58,138,0.458,242,0.475,360,0.971,380,2.441,399,3.093,589,1.482,597,0.741,607,1.169,611,1.693,620,1.485,621,1.578,640,2.002,641,1.54,676,1.565,710,1.076,810,2.684,814,1.701,815,2.574,816,3.369,820,1.672,851,4.547,866,4.362,867,4.861,868,3.041,869,2.932,870,4.232,871,4.708,872,4.362,873,4.232,874,4.362,875,4.362,876,4.362,877,3.041,878,4.211,879,3.041,880,3.041,881,3.041,882,3.041,883,3.041,884,2.932,1760,5.867,1761,4.236]],["title/components/LoaderComponent.html",[0,1.075,65,1.836]],["body/components/LoaderComponent.html",[0,1.921,1,1.876,2,0.049,3,0.049,4,2.05,5,2.05,6,0.043,9,2.996,13,3.642,16,1.844,17,3.539,18,3.752,20,2.05,21,0.122,22,0.288,23,2.954,25,0.199,26,0.006,30,0.598,32,0.098,33,1.074,34,0.037,35,0.235,36,1.783,37,2.752,38,2.752,39,1.788,40,3.32,41,2.05,42,0.775,43,2.05,44,1.844,45,1.726,46,2.752,47,1.942,48,2.05,49,1.977,50,2.05,51,1.908,52,2.05,53,1.908,54,2.05,55,1.977,56,2.05,57,1.977,58,1.813,59,1.844,60,1.645,61,2.05,62,1.977,63,2.05,64,2.752,65,3.146,66,2.05,67,1.844,68,2.05,69,1.977,70,2.05,71,1.977,72,2.05,73,1.942,74,1.499,75,1.312,76,3.464,77,1.977,78,1.266,79,0.943,80,1.942,81,1.977,82,2.752,83,1.942,84,2.05,85,1.977,86,2.752,87,1.977,88,2.05,89,1.977,90,2.05,91,1.844,92,2.05,93,1.844,94,2.05,95,1.977,96,1.138,97,1.942,98,1.977,99,1.942,100,1.698,101,1.908,102,2.05,103,1.942,104,2.05,105,1.876,106,2.05,107,1.942,108,2.05,109,1.942,110,2.05,111,1.942,112,2.013,113,2.05,114,0.004,115,0.004,118,0.831,119,3.106,126,2.107,127,0.958,131,3.32,133,0.523,137,0.64,138,0.505,142,1.153,143,1.876,227,5.131,265,2.213,380,2.543,429,1.351,530,2.97,620,0.841,762,4.824,763,4.672,764,4.708,990,4.309,1765,5.222,1766,5.131,1767,7.914,1768,7.011,1769,7.011,1770,5.222,1771,5.222,1772,5.222,1773,4.672,1774,4.309,1775,5.222,1776,5.222]],["title/injectables/LoaderService.html",[329,1.462,1777,4.418]],["body/injectables/LoaderService.html",[2,0.053,3,0.053,6,0.047,8,0.648,19,2.453,21,0.133,22,0.304,23,2.842,24,0.862,25,0.234,26,0.006,27,0.622,28,0.549,30,0.593,32,0.127,33,1.167,34,0.041,35,0.255,42,0.679,65,2.11,114,0.004,115,0.004,122,2.907,126,2.226,127,1.271,133,0.876,137,0.907,138,0.717,142,1.93,143,2.038,158,1.875,186,1.732,225,2.312,227,7.174,230,2.312,265,2.404,275,3.742,276,2.863,329,2.441,343,3.767,346,2.557,362,3.631,363,4.282,428,5.166,429,2.451,438,5.392,707,4.02,716,4.025,762,5.084,764,4.529,796,3.643,798,5.075,1773,6.626,1777,6.626,1778,5.673,1779,7.406,1780,7.406,1781,5.673,1782,7.406,1783,7.406,1784,5.673,1785,8.741,1786,8.741,1787,5.673,1788,7.406,1789,5.673,1790,5.673,1791,5.673,1792,5.673,1793,5.673,1794,5.673,1795,5.673,1796,5.673,1797,5.673,1798,5.673]],["title/components/LockscreenComponent.html",[0,1.075,67,1.744]],["body/components/LockscreenComponent.html",[0,1.985,1,1.751,2,0.046,3,0.046,4,1.914,5,1.914,6,0.04,8,0.383,9,1.846,14,4.362,16,1.722,17,3.525,18,3.732,20,1.914,21,0.114,22,0.275,25,0.216,26,0.006,27,0.368,28,0.472,30,0.604,32,0.093,33,1.003,34,0.035,35,0.219,36,1.665,37,2.627,38,2.627,39,1.706,40,3.228,41,1.914,42,0.7,43,1.914,44,1.722,45,1.611,46,2.627,47,1.813,48,1.914,49,1.846,50,1.914,51,1.782,52,1.914,53,1.782,54,1.914,55,1.846,56,1.914,57,1.846,58,1.693,59,1.722,60,1.536,61,1.914,62,1.846,63,1.914,64,2.627,65,1.813,66,1.914,67,2.903,68,1.914,69,1.846,70,1.914,71,1.846,72,1.914,73,1.813,74,1.4,75,1.225,76,3.382,77,1.846,78,1.23,79,0.9,80,1.813,81,1.846,82,2.627,83,1.813,84,1.914,85,1.846,86,2.627,87,1.846,88,1.914,89,1.846,90,1.914,91,1.722,92,1.914,93,1.722,94,1.914,95,1.846,96,1.106,97,1.813,98,1.846,99,1.813,100,1.586,101,1.782,102,1.914,103,1.813,104,1.914,105,1.751,106,1.914,107,1.813,108,1.914,109,1.813,110,1.914,111,1.813,112,1.879,113,1.914,114,0.004,115,0.004,118,0.794,119,2.999,126,2.011,131,3.228,133,0.766,142,1.478,143,2.403,171,3.765,186,1.488,265,2.066,268,4.898,271,3.151,384,3.468,428,4.667,530,2.835,927,5.987,1387,3.629,1403,6.359,1404,6.359,1410,5.735,1411,5.175,1413,5.735,1414,5.175,1416,3.771,1417,4.024,1418,3.771,1419,3.771,1596,4.898,1799,4.876,1800,5.987,1801,6.692,1802,6.692,1803,8.223,1804,9.286,1805,4.876,1806,4.876,1807,4.876,1808,4.876,1809,4.876,1810,4.876,1811,4.876,1812,6.692,1813,6.692,1814,6.692,1815,6.692,1816,6.692,1817,5.987,1818,4.876]],["title/classes/Login.html",[35,0.222,333,2.435]],["body/classes/Login.html",[2,0.057,3,0.057,6,0.051,8,0.48,21,0.143,22,0.319,24,0.581,25,0.286,26,0.006,27,0.461,28,0.591,30,0.579,32,0.109,34,0.066,35,0.404,42,0.56,60,2.447,100,2.923,114,0.004,115,0.004,118,1.066,127,1.062,133,0.613,137,0.748,138,0.591,242,0.613,333,4.753,338,5.485,342,5.19,345,4.263,360,0.953,589,1.452,597,0.956,620,1.376,621,1.575,710,1.389,810,2.971,1384,5.958,1385,4.782,1386,4.474,1387,3.77,1390,5.043,1391,4.727,1392,4.727,1393,6.199,1394,4.727,1395,4.727,1396,6.412,1397,5.043,1398,3.658,1399,4.727,1819,7.77,1820,6.112]],["title/classes/LoginFailure.html",[35,0.222,1430,2.778]],["body/classes/LoginFailure.html",[2,0.047,3,0.047,6,0.041,8,0.39,21,0.116,22,0.278,25,0.285,26,0.006,27,0.374,28,0.48,30,0.523,32,0.069,34,0.069,35,0.43,42,0.455,60,2.133,114,0.004,115,0.004,118,1.134,127,0.925,133,0.497,137,0.608,138,0.48,242,0.497,333,4.413,334,3.267,355,4.215,356,4.215,360,0.948,380,2.69,395,3.926,399,3.027,420,4.215,589,1.51,597,0.776,604,2.282,620,1.475,621,1.578,710,1.127,810,2.737,814,1.782,816,3.455,1385,4.406,1387,2.988,1423,4.337,1424,5.188,1427,3.072,1428,2.969,1429,5.659,1430,4.66,1431,4.337,1432,4.337,1433,4.337,1434,4.337,1435,3.072,1436,3.072,1437,4.193,1438,3.072,1439,3.072,1440,3.072,1441,3.072,1442,3.072,1443,3.072,1444,3.072,1445,2.969,1821,6.772,1822,4.961]],["title/classes/LoginRedirect.html",[35,0.222,355,2.7]],["body/classes/LoginRedirect.html",[2,0.048,3,0.048,6,0.042,8,0.403,21,0.12,22,0.285,25,0.279,26,0.006,27,0.387,28,0.497,30,0.348,32,0.072,34,0.069,35,0.433,60,2.183,114,0.004,115,0.004,118,1.142,242,0.515,333,4.326,334,3.325,355,4.593,356,4.289,360,0.958,380,2.717,395,4.549,399,3.054,420,4.289,589,1.519,597,0.803,604,2.305,620,1.488,621,1.51,814,1.844,816,3.434,1385,3.687,1387,3.059,1423,4.414,1424,5.241,1427,3.179,1428,3.073,1429,5.7,1430,4.414,1431,4.414,1432,4.414,1433,4.414,1434,4.414,1435,3.179,1436,3.179,1437,3.179,1438,3.179,1439,3.179,1440,3.179,1441,4.292,1442,3.179,1443,3.179,1444,3.179,1445,3.073,1823,5.134]],["title/classes/LoginSuccess.html",[35,0.222,356,2.7]],["body/classes/LoginSuccess.html",[2,0.047,3,0.047,6,0.041,8,0.39,21,0.116,22,0.278,25,0.285,26,0.006,27,0.374,28,0.48,30,0.523,32,0.069,34,0.069,35,0.43,42,0.455,60,2.133,114,0.004,115,0.004,118,1.134,127,0.925,133,0.497,137,0.608,138,0.48,242,0.497,333,4.413,334,3.267,355,4.215,356,4.528,360,0.953,380,2.69,395,3.926,399,3.027,420,4.215,589,1.51,597,0.776,604,2.282,620,1.475,621,1.578,710,1.127,810,2.737,814,1.782,816,3.407,1385,4.406,1387,2.988,1423,4.337,1424,5.188,1427,3.072,1428,2.969,1429,5.659,1430,4.337,1431,4.337,1432,4.337,1433,4.337,1434,4.337,1435,4.193,1436,3.072,1437,3.072,1438,3.072,1439,3.072,1440,3.072,1441,3.072,1442,3.072,1443,3.072,1444,3.072,1445,2.969,1824,6.772,1825,4.961]],["title/classes/Logout.html",[35,0.222,334,2.092]],["body/classes/Logout.html",[2,0.063,3,0.063,6,0.055,8,0.525,21,0.156,22,0.337,25,0.278,26,0.006,27,0.504,28,0.646,30,0.453,32,0.093,34,0.068,35,0.417,45,2.939,96,1.105,114,0.004,115,0.004,118,1.1,242,0.669,334,4.263,357,5.94,360,0.968,589,1.49,597,1.044,609,2.288,759,5.322,1826,4.886,1827,6.776,1828,6.676,1829,5.163,1830,6.202,1831,4.886,1832,5.509,1833,5.509,1834,5.509,1835,5.163]],["title/classes/LogoutConfirmation.html",[35,0.222,357,3.298]],["body/classes/LogoutConfirmation.html",[2,0.062,3,0.062,6,0.055,8,0.522,21,0.156,22,0.337,25,0.278,26,0.006,27,0.501,28,0.643,30,0.451,32,0.093,34,0.068,35,0.417,45,2.932,96,1.194,114,0.004,115,0.004,118,1.098,242,0.666,334,4.233,357,6.187,360,0.967,589,1.488,597,1.039,609,2.281,759,5.544,1826,4.863,1827,5.483,1829,5.139,1830,6.189,1831,5.993,1832,6.756,1833,5.483,1834,5.483,1835,5.139,1836,6.645]],["title/classes/LogoutConfirmationDismiss.html",[35,0.222,1830,3.444]],["body/classes/LogoutConfirmationDismiss.html",[2,0.063,3,0.063,6,0.055,8,0.523,21,0.156,22,0.337,25,0.278,26,0.006,27,0.502,28,0.644,30,0.451,32,0.093,34,0.068,35,0.417,45,2.934,96,1.195,114,0.004,115,0.004,118,1.099,242,0.667,334,4.202,357,5.931,360,0.967,589,1.488,597,1.041,609,2.474,759,5.315,1826,4.871,1827,5.492,1829,5.147,1830,6.464,1831,4.871,1832,5.492,1833,6.763,1834,6.763,1835,5.147,1837,6.655]],["title/classes/LogoutFailure.html",[35,0.222,1431,2.778]],["body/classes/LogoutFailure.html",[2,0.047,3,0.047,6,0.041,8,0.39,21,0.116,22,0.278,25,0.285,26,0.006,27,0.374,28,0.48,30,0.523,32,0.069,34,0.069,35,0.43,42,0.455,60,2.133,114,0.004,115,0.004,118,1.134,127,0.925,133,0.497,137,0.608,138,0.48,242,0.497,333,4.275,334,3.267,355,4.215,356,4.215,360,0.948,380,2.69,395,3.926,399,3.027,420,4.215,589,1.51,597,0.776,604,2.282,620,1.475,621,1.578,710,1.127,810,2.737,814,1.782,816,3.455,1385,4.406,1387,2.988,1423,4.337,1424,5.188,1427,3.072,1428,2.969,1429,5.659,1430,4.337,1431,4.66,1432,4.337,1433,4.337,1434,4.337,1435,3.072,1436,3.072,1437,3.072,1438,3.072,1439,4.193,1440,4.193,1441,3.072,1442,3.072,1443,3.072,1444,3.072,1445,2.969,1838,6.772,1839,4.961]],["title/classes/LogoutSuccess.html",[35,0.222,420,2.7]],["body/classes/LogoutSuccess.html",[2,0.048,3,0.048,6,0.042,8,0.403,21,0.12,22,0.285,25,0.279,26,0.006,27,0.387,28,0.497,30,0.348,32,0.072,34,0.069,35,0.433,60,2.183,114,0.004,115,0.004,118,1.142,242,0.515,333,4.326,334,3.56,355,4.289,356,4.289,360,0.953,380,2.717,395,4.018,399,3.106,420,4.593,589,1.519,597,0.803,604,2.305,620,1.488,621,1.51,814,1.844,816,3.434,1385,3.687,1387,3.059,1423,4.414,1424,5.241,1427,3.179,1428,3.073,1429,5.7,1430,4.414,1431,4.414,1432,4.414,1433,4.414,1434,4.414,1435,3.179,1436,3.179,1437,3.179,1438,4.292,1439,3.179,1440,3.179,1441,3.179,1442,3.179,1443,3.179,1444,3.179,1445,3.073,1840,5.134]],["title/classes/MakeBreadcrumbSimple.html",[35,0.222,733,2.559]],["body/classes/MakeBreadcrumbSimple.html",[2,0.042,3,0.042,6,0.037,8,0.356,21,0.106,22,0.261,23,2.066,24,0.918,25,0.282,26,0.006,27,0.341,28,0.438,30,0.498,32,0.063,34,0.069,35,0.434,39,2.03,42,0.415,114,0.003,115,0.003,127,0.868,133,0.454,137,0.554,138,0.438,242,0.454,360,0.946,456,3.769,529,3.838,552,2.637,589,1.52,597,0.708,620,1.543,621,1.606,705,3.805,706,2.407,707,2.747,708,3.861,709,4.405,710,1.028,713,2.474,714,2.407,715,3.805,716,2.926,717,3.71,718,3.805,719,2.991,720,4.585,721,3.805,722,3.274,723,3.805,724,3.174,725,3.805,726,2.179,727,3.805,728,2.474,729,3.805,730,3.473,731,3.381,732,2.64,733,4.126,734,4.461,735,3.537,736,3.805,737,3.805,738,3.473,739,2.474,740,2.474,741,2.474,742,2.474,743,2.474,744,3.574,745,3.574,746,2.474,747,2.474,748,2.474,749,2.474,750,3.473,751,2.545,752,2.474,753,2.545,754,2.474,755,2.286,1841,6.353,1842,4.525]],["title/classes/MakeBreadcrumbTitle.html",[35,0.222,736,2.559]],["body/classes/MakeBreadcrumbTitle.html",[2,0.042,3,0.042,6,0.037,8,0.356,21,0.106,22,0.261,23,2.388,24,0.918,25,0.282,26,0.006,27,0.341,28,0.438,30,0.498,32,0.063,34,0.069,35,0.434,39,2.03,42,0.415,114,0.003,115,0.003,127,0.868,133,0.454,137,0.554,138,0.438,242,0.454,360,0.946,456,3.769,529,3.701,552,2.637,589,1.52,597,0.708,620,1.543,621,1.606,705,3.805,706,2.407,707,2.747,708,3.861,709,4.405,710,1.028,713,2.474,714,2.407,715,3.805,716,2.926,717,3.71,718,3.805,719,2.991,720,4.585,721,3.805,722,3.274,723,3.805,724,3.174,725,3.805,726,2.179,727,3.805,728,2.474,729,3.805,730,3.473,731,3.381,732,2.64,733,3.805,734,4.461,735,3.06,736,4.126,737,3.805,738,3.473,739,2.474,740,2.474,741,2.474,742,2.474,743,2.474,744,3.574,745,3.574,746,2.474,747,2.474,748,2.474,749,2.474,750,2.474,751,3.574,752,3.473,753,2.545,754,2.474,755,2.286,1843,6.353,1844,4.525]],["title/modules/MaterialModule.html",[189,1.975,461,2.956]],["body/modules/MaterialModule.html",[2,0.066,3,0.066,6,0.058,26,0.006,32,0.132,33,1.452,34,0.061,35,0.318,114,0.005,115,0.005,169,2.059,189,3.782,192,4.373,211,4.926,260,7.601,262,7.601,265,2.992,456,2.722,461,5.086,938,5.462,1845,7.062,1846,8.497,1847,8.497,1848,8.497,1849,8.497,1850,8.497,1851,8.497,1852,8.497,1853,8.497,1854,8.497,1855,8.497,1856,8.497,1857,8.497,1858,8.497,1859,8.497,1860,8.497,1861,8.497,1862,8.497,1863,8.497]],["title/injectables/NavigationService.html",[329,1.462,1627,3.298]],["body/injectables/NavigationService.html",[0,1.688,2,0.047,3,0.047,6,0.041,19,2.17,21,0.118,22,0.281,23,2.522,24,0.947,25,0.28,26,0.006,27,0.657,28,0.869,30,0.609,32,0.095,33,1.032,34,0.036,35,0.226,42,0.878,78,1.245,96,1.171,114,0.004,115,0.004,117,3.501,126,2.617,133,0.777,135,3.537,137,0.615,138,0.486,141,6.573,142,1.108,143,1.803,158,1.659,186,1.532,259,2.601,281,2.37,329,2.296,343,2.085,346,2.262,486,1.641,501,1.684,552,1.803,569,4.982,709,3.366,722,1.803,724,2.17,732,2.836,774,4.996,787,2.91,888,5.206,945,3.353,947,2.601,1267,5.154,1472,5.181,1540,6.092,1550,3.674,1557,3.223,1611,4.996,1612,3.882,1613,4.996,1614,6.092,1615,3.882,1616,3.882,1617,6.437,1618,3.674,1619,6.462,1620,7.23,1621,5.279,1622,5.279,1623,5.677,1624,3.882,1625,3.882,1626,3.882,1627,4.559,1628,6.732,1629,5.279,1630,5.279,1631,5.279,1632,3.882,1633,3.882,1634,5.805,1635,5.279,1636,6.245,1637,5.279,1638,5.279,1639,5.998,1640,3.674,1641,3.882,1642,5.279,1643,5.279,1644,3.882,1864,6.826,1865,5.02,1866,5.02,1867,5.02,1868,5.02,1869,5.02,1870,5.02,1871,5.02]],["title/components/NotFoundComponent.html",[0,1.075,69,1.869]],["body/components/NotFoundComponent.html",[0,1.953,1,1.972,2,0.052,3,0.052,4,2.155,5,2.155,6,0.045,9,2.078,16,1.939,17,3.548,18,3.765,20,2.155,21,0.129,26,0.006,30,0.492,32,0.077,33,1.129,34,0.039,35,0.247,36,1.875,37,2.845,38,2.845,39,1.848,40,3.388,41,2.155,42,0.744,43,2.155,44,1.939,45,1.814,46,2.845,47,2.042,48,2.155,49,2.078,50,2.155,51,2.006,52,2.155,53,2.006,54,2.155,55,2.078,56,2.155,57,2.078,58,2.817,59,1.939,60,1.729,61,2.155,62,2.078,63,2.155,64,2.845,65,2.042,66,2.155,67,1.939,68,2.155,69,3.267,70,2.155,71,2.078,72,2.155,73,2.042,74,1.576,75,1.38,76,3.522,77,2.078,78,1.291,79,0.975,80,2.042,81,2.078,82,2.845,83,2.042,84,2.155,85,2.078,86,2.845,87,2.078,88,2.155,89,2.078,90,2.155,91,1.939,92,2.155,93,1.939,94,2.155,95,2.078,96,1.161,97,2.042,98,2.078,99,2.042,100,2.639,101,2.006,102,2.155,103,2.042,104,2.155,105,1.972,106,2.155,107,2.042,108,2.155,109,2.042,110,2.155,111,2.042,112,2.116,113,2.155,114,0.004,115,0.004,118,0.86,119,3.185,126,2.179,131,3.388,133,0.813,142,1.212,143,1.972,362,3.012,530,3.071,888,4.203,1345,6.485,1355,7.26,1872,8.115,1873,5.491,1874,8.631,1875,7.249,1876,5.491,1877,5.491,1878,7.249]],["title/components/NotificationsComponent.html",[0,1.075,71,1.869]],["body/components/NotificationsComponent.html",[0,1.825,1,1.623,2,0.042,3,0.042,4,1.774,5,1.774,6,0.037,9,1.711,16,1.596,17,3.508,18,3.71,20,1.774,21,0.106,22,0.261,25,0.18,26,0.006,27,0.341,28,0.437,30,0.569,32,0.089,33,0.929,34,0.032,35,0.203,36,1.543,37,2.492,38,2.492,39,1.619,40,3.124,41,1.774,42,0.768,43,1.774,44,1.596,45,1.494,46,2.492,47,1.681,48,1.774,49,1.711,50,1.774,51,1.652,52,1.774,53,1.652,54,1.774,55,1.711,56,1.774,57,1.711,58,1.569,59,1.596,60,1.424,61,1.774,62,1.711,63,1.774,64,2.492,65,1.681,66,1.774,67,1.596,68,1.774,69,1.711,70,1.774,71,3.012,72,1.774,73,1.681,74,1.298,75,1.136,76,3.291,77,1.711,78,1.191,79,0.854,80,1.681,81,1.711,82,2.492,83,1.681,84,1.774,85,1.711,86,2.492,87,1.711,88,1.774,89,1.711,90,1.774,91,1.596,92,1.774,93,1.596,94,1.774,95,1.711,96,1.071,97,1.681,98,1.711,99,1.681,100,1.47,101,1.652,102,1.774,103,1.681,104,1.774,105,1.623,106,1.774,107,1.681,108,1.774,109,1.681,110,1.774,111,1.681,112,1.742,113,1.774,114,0.003,115,0.003,118,0.753,119,2.88,126,1.908,131,3.124,133,0.453,134,3.495,135,4.505,137,0.777,138,0.614,142,1.402,143,2.28,155,4.91,156,2.229,171,3.571,176,3.019,177,3.308,188,2.471,281,2.763,380,2.74,526,6.064,530,2.69,587,2.32,946,5.203,1266,6.155,1342,5.68,1344,5.239,1500,6.565,1544,8.636,1613,6.363,1619,5.807,1774,7.174,1817,7.777,1879,4.52,1880,6.349,1881,6.349,1882,4.52,1883,4.52,1884,6.349,1885,4.52,1886,4.52,1887,6.349,1888,4.91,1889,6.349,1890,7.777,1891,6.349,1892,6.349,1893,7.959,1894,5.68,1895,6.349,1896,6.349,1897,6.349,1898,5.68,1899,6.349,1900,4.52,1901,4.52,1902,4.52,1903,4.52,1904,4.52,1905,4.52,1906,4.52,1907,6.349,1908,6.349,1909,6.349]],["title/classes/NumberValidators.html",[35,0.222,1910,3.819]],["body/classes/NumberValidators.html",[2,0.066,3,0.066,6,0.058,21,0.165,24,0.669,25,0.199,26,0.006,30,0.477,32,0.098,34,0.05,35,0.381,42,0.645,114,0.005,115,0.005,126,2.549,137,0.862,138,0.681,142,2.086,186,2.149,472,3.744,552,2.528,669,2.998,1450,6.297,1453,6.297,1468,4.358,1477,6.297,1606,6.915,1658,4.085,1774,5.809,1910,6.558,1911,8.48,1912,9.101,1913,9.101,1914,8.48,1915,9.101,1916,6.998,1917,8.48,1918,7.039]],["title/interfaces/NursingHome.html",[486,1.045,592,1.774]],["body/interfaces/NursingHome.html",[2,0.069,3,0.069,6,0.06,8,0.574,21,0.171,22,0.356,24,0.941,25,0.262,26,0.006,34,0.052,42,0.876,74,2.097,75,1.836,114,0.005,115,0.005,138,0.958,486,1.834,592,3.114,669,2.822,1145,4.502,1468,5.921,1560,5.346,1658,4.453,1919,6.027,1920,7.304]],["title/components/NursingHomeFormComponent.html",[0,1.075,73,1.836]],["body/components/NursingHomeFormComponent.html",[0,1.754,1,1.464,2,0.038,3,0.038,4,1.6,5,1.6,6,0.034,9,1.543,16,1.439,17,3.484,18,3.66,20,1.6,21,0.095,22,0.242,25,0.228,26,0.006,30,0.613,32,0.128,33,0.838,34,0.029,35,0.183,36,1.392,37,2.315,38,2.315,39,1.504,40,2.981,41,1.6,42,0.794,43,1.6,44,1.439,45,1.347,46,2.315,47,1.515,48,1.6,49,1.543,50,1.6,51,1.489,52,1.6,53,1.489,54,1.6,55,1.543,56,1.6,57,1.543,58,1.415,59,1.439,60,1.284,61,1.6,62,1.543,63,1.6,64,2.315,65,1.515,66,1.6,67,1.439,68,1.6,69,1.543,70,1.6,71,1.543,72,1.6,73,2.824,74,2.314,75,2.517,76,3.163,77,1.543,78,1.136,79,0.793,80,1.515,81,1.543,82,2.315,83,1.515,84,1.6,85,1.543,86,2.315,87,1.543,88,1.6,89,1.543,90,1.6,91,1.439,92,1.6,93,1.439,94,1.6,95,1.543,96,1.022,97,1.515,98,1.543,99,1.515,100,1.325,101,1.489,102,1.6,103,1.515,104,1.6,105,1.464,106,1.6,107,1.515,108,1.6,109,1.515,110,1.6,111,1.515,112,1.571,113,1.6,114,0.003,115,0.003,118,0.699,119,2.72,122,2.72,126,1.772,127,1.235,131,2.981,133,0.591,137,0.849,138,0.67,142,1.779,143,2.894,158,1.347,225,1.661,230,1.661,239,0.926,240,3.67,242,0.409,249,1.489,265,1.727,276,1.415,281,2.047,329,1.206,343,1.693,360,0.67,362,2.879,363,3.497,368,2.523,384,2.112,412,3.591,440,3.939,472,2.168,530,2.499,569,2.439,592,3.186,593,1.798,594,1.693,605,2.024,607,1.051,630,2.34,761,4.533,762,4.592,764,4.353,766,4.56,770,3.152,775,4.113,779,5.859,939,2.293,1055,7.575,1056,7.575,1456,4.876,1459,2.617,1468,2.523,1921,9.179,1922,2.983,1923,4.316,1924,7.594,1925,5.897,1926,5.897,1927,3.363,1928,5.072,1929,5.558,1930,5.897,1931,5.897,1932,3.363,1933,3.152,1934,3.363,1935,5.897,1936,3.152,1937,4.075,1938,4.075,1939,3.363,1940,3.363,1941,3.363,1942,3.363,1943,3.152,1944,3.152,1945,4.075,1946,3.363,1947,4.075,1948,2.983,1949,4.075,1950,3.939,1951,4.075,1952,4.075,1953,4.075,1954,4.075,1955,4.113]],["title/injectables/NursingHomesEffects.html",[329,1.462,1031,4.075]],["body/injectables/NursingHomesEffects.html",[2,0.035,3,0.035,6,0.031,8,0.291,21,0.087,22,0.226,23,2.64,25,0.156,26,0.006,27,0.547,28,0.702,30,0.551,32,0.129,33,0.762,34,0.026,35,0.167,42,0.339,73,1.377,74,1.579,75,1.823,114,0.004,115,0.003,122,3.187,127,0.896,133,0.727,135,4.474,137,0.454,138,0.358,142,2.076,156,1.827,158,1.224,160,1.97,167,1.428,169,2.517,186,1.678,225,1.509,230,1.509,233,4.38,240,3.659,242,0.371,248,2.379,265,1.569,276,2.691,281,2.998,303,2.711,329,1.941,341,3.404,353,6.984,358,6.28,359,2.865,360,0.869,361,5.214,362,2.724,363,3.341,369,6.678,370,6.158,373,4.252,380,2.595,382,5.611,384,3.759,388,2.865,391,5.673,393,2.865,401,5.994,403,4.252,404,4.252,405,4.252,406,4.252,407,4.252,408,3.531,409,4.252,410,4.252,411,4.252,412,2.849,414,4.252,428,3.835,429,2.175,431,2.711,432,2.865,438,4.206,440,4.38,592,3.449,593,1.635,594,1.539,602,3.666,603,1.653,604,1.402,605,1.933,606,3.578,607,1.293,608,3.666,609,1.532,610,3.666,611,0.994,630,1.532,761,4.081,762,3.006,764,3.398,794,3.188,796,3.531,797,4.024,1031,4.537,1052,2.379,1054,3.314,1055,3.057,1056,3.057,1888,4.252,1943,2.865,1944,2.865,1956,8.407,1957,3.704,1958,7.126,1959,3.704,1960,5.498,1961,5.498,1962,5.498,1963,5.498,1964,5.987,1965,5.498,1966,5.498,1967,5.498,1968,6.491,1969,7.255,1970,3.704,1971,4.537,1972,4.537,1973,4.537,1974,5.498,1975,5.498,1976,3.704,1977,5.31,1978,5.498,1979,5.498,1980,5.498,1981,5.498,1982,5.498,1983,4.537,1984,4.537,1985,4.537,1986,5.498,1987,5.498,1988,5.498,1989,3.704,1990,5.498,1991,5.498,1992,4.024,1993,3.704,1994,3.704,1995,3.704,1996,3.704,1997,3.057]],["title/injectables/NursingHomesService.html",[329,1.462,1958,4.075]],["body/injectables/NursingHomesService.html",[2,0.06,3,0.06,6,0.053,18,2.93,19,2.777,21,0.151,25,0.227,26,0.006,30,0.593,32,0.134,33,1.321,34,0.046,35,0.289,42,0.735,74,2.302,75,2.015,114,0.004,115,0.004,126,2.41,133,0.644,137,0.982,138,0.776,142,2.021,158,2.123,160,3.417,188,3.512,221,6.7,223,4.481,231,4.291,232,4.481,233,4.291,276,2.231,277,5.592,281,2.784,329,2.587,335,4.968,341,4.965,343,3.914,346,2.895,347,4.968,391,4.702,431,4.702,592,3.568,593,2.835,594,2.669,606,3.954,607,1.429,1958,6.617,1998,9.153,1999,6.425,2000,9.153,2001,6.425,2002,8.018,2003,6.425,2004,6.425,2005,6.617,2006,6.425,2007,6.425,2008,6.425,2009,6.425]],["title/classes/OpenSideNav.html",[35,0.222,715,2.559]],["body/classes/OpenSideNav.html",[2,0.042,3,0.042,6,0.037,8,0.356,21,0.106,22,0.261,23,2.066,24,0.918,25,0.282,26,0.006,27,0.341,28,0.438,30,0.498,32,0.063,34,0.069,35,0.434,39,2.03,42,0.415,114,0.003,115,0.003,127,0.868,133,0.454,137,0.554,138,0.438,242,0.454,360,0.946,456,3.769,529,3.701,552,2.637,589,1.52,597,0.708,620,1.543,621,1.606,705,3.805,706,2.407,707,2.747,708,3.941,709,4.496,710,1.028,713,2.474,714,2.407,715,4.126,716,3.381,717,3.71,718,3.805,719,2.991,720,4.585,721,3.805,722,3.274,723,3.805,724,3.174,725,3.805,726,2.179,727,3.805,728,2.474,729,3.805,730,3.473,731,3.381,732,2.64,733,3.805,734,4.235,735,3.06,736,3.805,737,3.805,738,3.473,739,2.474,740,3.473,741,2.474,742,2.474,743,2.474,744,3.574,745,3.574,746,2.474,747,2.474,748,2.474,749,2.474,750,2.474,751,2.545,752,2.474,753,2.545,754,2.474,755,2.286,2010,6.353,2011,4.525]],["title/components/PatientEditFormComponent.html",[0,1.075,77,1.869]],["body/components/PatientEditFormComponent.html",[0,1.474,1,0.988,2,0.026,3,0.026,4,1.08,5,1.08,6,0.036,9,1.041,13,1.919,16,0.972,17,3.372,18,3.521,20,1.08,21,0.064,22,0.224,23,1.77,24,0.718,25,0.258,26,0.006,27,0.511,28,0.782,30,0.643,32,0.122,33,0.566,34,0.02,35,0.197,36,0.94,37,1.717,38,1.717,39,1.115,40,2.435,41,1.08,42,0.62,43,1.08,44,0.972,45,0.909,46,1.717,47,1.023,48,1.08,49,1.041,50,1.08,51,1.005,52,1.08,53,1.005,54,1.08,55,1.041,56,1.08,57,1.041,58,2.154,59,0.972,60,0.867,61,1.08,62,1.041,63,1.08,64,1.717,65,1.023,66,1.08,67,0.972,68,1.08,69,1.041,70,1.08,71,1.041,72,1.08,73,1.023,74,0.79,75,0.691,76,2.657,77,2.348,78,1.483,79,1.365,80,1.023,81,1.041,82,1.717,83,1.023,84,1.08,85,1.041,86,1.717,87,1.041,88,1.08,89,1.041,90,1.08,91,0.972,92,1.08,93,0.972,94,1.08,95,1.041,96,1.087,97,1.023,98,1.041,99,1.023,100,1.422,101,1.005,102,1.08,103,1.023,104,1.08,105,0.988,106,1.08,107,1.023,108,1.08,109,1.023,110,1.08,111,1.023,112,1.06,113,1.08,114,0.002,115,0.002,118,0.519,119,2.137,122,3.079,126,1.315,127,0.744,131,2.435,133,0.276,137,0.536,138,0.423,142,1.669,143,3.089,158,0.909,160,1.464,164,1.504,167,1.06,169,1.808,186,1.335,188,1.504,225,1.121,230,1.121,239,1.237,240,3.054,242,0.276,249,1.005,268,3.985,281,0.955,343,3.512,362,3.628,363,2.857,364,5.148,380,2.272,412,3.735,422,2.014,439,1.919,447,1.704,450,4.314,472,1.464,501,0.769,528,3.259,530,1.853,534,3.713,559,2.014,572,1.149,605,2.014,611,0.791,640,0.84,641,0.895,651,2.857,654,2.988,655,1.571,676,0.909,722,0.988,732,1.817,779,3.051,787,1.595,808,3.383,810,2.05,939,1.548,947,2.821,1053,6.541,1086,5.586,1129,1.504,1145,2.563,1267,1.704,1448,6.066,1454,5.119,1456,3.983,1459,5.189,1461,2.271,1468,3.371,1472,1.838,1648,2.809,1649,2.809,1662,5.55,1665,2.462,1766,3.202,1910,2.128,1922,2.014,1923,3.202,1928,3.985,1929,4.541,1932,2.271,1933,2.128,1934,2.271,1948,2.014,1950,1.838,1955,1.919,2012,7.739,2013,4.871,2014,4.797,2015,5.55,2016,4.541,2017,6.204,2018,6.204,2019,6.449,2020,6.204,2021,6.056,2022,5.55,2023,4.374,2024,2.752,2025,2.462,2026,2.462,2027,4.374,2028,2.752,2029,2.462,2030,2.752,2031,2.752,2032,2.752,2033,2.462,2034,2.462,2035,4.374,2036,2.271,2037,4.374,2038,2.462,2039,2.462,2040,2.462,2041,2.462,2042,2.752,2043,2.128,2044,2.462,2045,2.462,2046,3.383,2047,1.838,2048,2.462,2049,2.752,2050,2.462,2051,2.462,2052,2.462,2053,2.462,2054,3.913,2055,2.462,2056,2.462,2057,2.462,2058,2.462,2059,2.462,2060,2.128,2061,4.871,2062,2.462,2063,3.383,2064,3.913,2065,2.752,2066,2.752,2067,4.374,2068,3.913,2069,2.752,2070,2.462,2071,2.462,2072,2.462,2073,2.462,2074,3.913,2075,4.374,2076,2.462,2077,2.462,2078,4.374,2079,2.752,2080,2.752,2081,2.271,2082,2.752,2083,2.752,2084,2.752,2085,2.752,2086,2.462,2087,2.752,2088,2.462,2089,2.271,2090,2.462,2091,5.55,2092,2.128,2093,2.128,2094,4.374,2095,2.128,2096,2.128,2097,2.752,2098,2.462,2099,2.752,2100,2.462,2101,2.752,2102,2.752,2103,3.61,2104,2.462,2105,2.462,2106,2.462,2107,2.462,2108,2.752,2109,2.752,2110,2.752,2111,2.752,2112,2.752,2113,2.752,2114,2.462,2115,2.271,2116,3.61,2117,4.374,2118,4.374,2119,4.374,2120,3.61,2121,3.61,2122,4.374]],["title/components/PatientFormComponent.html",[0,1.075,80,1.836]],["body/components/PatientFormComponent.html",[0,1.559,1,1.112,2,0.029,3,0.029,4,1.216,5,1.216,6,0.026,9,1.172,16,1.093,17,3.41,18,3.549,20,1.216,21,0.073,22,0.197,23,1.561,24,0.456,25,0.251,26,0.006,27,0.54,28,0.693,30,0.622,32,0.124,33,0.637,34,0.022,35,0.139,36,1.057,37,1.884,38,1.884,39,1.224,40,2.598,41,1.216,42,0.656,43,1.216,44,1.093,45,1.023,46,1.884,47,1.152,48,1.216,49,1.172,50,1.216,51,1.132,52,1.216,53,1.132,54,1.216,55,1.172,56,1.216,57,1.172,58,2.298,59,1.093,60,0.975,61,1.216,62,1.172,63,1.216,64,1.884,65,1.152,66,1.216,67,1.093,68,1.216,69,1.172,70,1.216,71,1.172,72,1.216,73,1.152,74,1.687,75,1.477,76,2.811,77,1.172,78,1.395,79,0.646,80,2.462,81,1.172,82,1.884,83,1.152,84,1.216,85,1.172,86,1.884,87,1.172,88,1.216,89,1.172,90,1.216,91,1.093,92,1.216,93,1.093,94,1.216,95,1.172,96,0.891,97,1.152,98,1.172,99,1.152,100,1.007,101,1.132,102,1.216,103,1.152,104,1.216,105,1.112,106,1.216,107,1.152,108,1.216,109,1.152,110,1.216,111,1.152,112,1.193,113,1.216,114,0.003,115,0.004,118,0.569,119,2.307,122,1.884,126,1.443,127,1.253,131,2.598,133,0.481,137,0.588,138,0.464,142,1.582,143,2.111,158,1.023,169,2.088,186,0.945,225,1.262,230,1.262,239,0.704,240,3.349,242,0.31,249,1.132,265,1.312,276,1.075,281,1.666,329,0.917,343,3.948,360,0.569,362,4.021,363,3.489,364,5.302,368,1.917,380,1.766,384,1.605,412,3.43,422,2.267,439,2.16,440,3.206,445,2.16,450,5.129,472,1.647,501,0.843,530,2.034,592,2.573,594,1.287,605,2.325,607,1.048,609,1.337,611,0.868,630,2.111,640,0.945,641,1.007,716,2.21,722,1.112,759,3.517,761,4.446,762,4.142,764,3.926,766,3.712,770,2.395,775,3.348,779,5.285,939,1.742,1053,6.452,1129,2.624,1159,2.395,1267,1.917,1387,3.85,1398,1.854,1456,4.251,1459,3.082,1470,5.119,1648,1.989,1649,1.989,1658,1.492,1916,5.462,1919,2.555,1922,2.267,1923,3.513,1927,2.555,1928,4.301,1929,4.845,1933,2.395,1936,2.395,1939,2.555,1940,2.555,1941,2.555,1942,2.555,1946,2.555,1948,2.267,1950,5.28,1955,4.099,1977,2.267,2012,7.633,2036,2.555,2043,2.395,2047,2.069,2054,2.77,2092,2.395,2093,2.395,2095,2.395,2096,2.395,2116,3.961,2123,5.922,2124,6.779,2125,5.922,2126,7.163,2127,7.577,2128,4.294,2129,2.77,2130,4.294,2131,4.294,2132,2.77,2133,4.294,2134,2.77,2135,2.77,2136,2.77,2137,4.8,2138,2.77,2139,2.77,2140,4.8,2141,2.77,2142,4.294,2143,4.294,2144,2.555,2145,4.294,2146,2.77,2147,2.267,2148,2.267,2149,2.555,2150,2.77,2151,3.097,2152,2.555,2153,4.294,2154,2.555,2155,2.77,2156,2.77,2157,2.77,2158,5.258,2159,2.77,2160,2.77,2161,2.555,2162,2.77,2163,2.77,2164,2.77,2165,2.77,2166,2.77,2167,3.097,2168,3.097,2169,2.555,2170,3.097,2171,3.097,2172,3.097,2173,4.8,2174,4.845,2175,4.294,2176,4.8,2177,4.294,2178,4.294,2179,4.294,2180,4.294,2181,4.294]],["title/components/PatientListComponent.html",[0,1.075,81,1.869]],["body/components/PatientListComponent.html",[0,1.874,1,1.217,2,0.032,3,0.032,4,1.33,5,1.33,6,0.028,8,0.266,9,1.283,13,2.364,16,1.197,17,3.436,18,3.609,20,1.33,21,0.079,22,0.211,24,0.66,25,0.244,26,0.006,27,0.524,28,0.671,30,0.627,32,0.125,33,0.697,34,0.024,35,0.152,36,1.157,37,2.019,38,3.203,39,1.312,40,2.724,41,1.33,42,0.72,43,1.33,44,1.197,45,1.12,46,2.019,47,1.26,48,1.33,49,1.283,50,1.33,51,1.239,52,1.33,53,1.239,54,1.33,55,1.283,56,1.33,57,1.283,58,1.786,59,1.197,60,1.068,61,1.33,62,1.283,63,1.33,64,2.019,65,1.26,66,1.33,67,1.197,68,1.33,69,1.283,70,1.33,71,1.283,72,1.33,73,1.26,74,0.973,75,0.852,76,2.928,77,1.283,78,1.516,79,0.692,80,1.913,81,2.973,82,2.019,83,1.26,84,1.33,85,1.283,86,2.019,87,1.283,88,1.33,89,1.283,90,1.33,91,1.197,92,1.33,93,1.197,94,1.33,95,1.283,96,0.934,97,1.26,98,1.283,99,1.26,100,1.102,101,1.239,102,1.33,103,1.26,104,1.33,105,1.217,106,1.33,107,1.26,108,1.33,109,1.26,110,1.33,111,1.26,112,1.306,113,1.33,114,0.003,115,0.003,118,0.61,119,2.44,122,2.724,126,1.546,127,0.849,131,2.724,133,0.696,137,0.761,138,0.601,142,1.802,143,3.092,153,5.13,158,1.12,160,1.803,167,1.306,169,0.988,186,1.57,191,2.812,225,1.381,230,1.381,239,1.995,240,3.648,242,0.34,249,1.239,265,2.179,276,2.158,343,3.875,360,0.601,361,4.456,362,2.883,363,3.617,368,2.099,370,2.264,412,3.866,419,2.599,429,1.608,438,4.023,447,2.099,450,4.885,528,3.721,530,2.179,534,4.154,569,4.154,607,0.604,640,1.035,641,1.102,643,2.478,722,1.847,732,2.137,764,1.756,787,2.982,809,4.152,939,1.907,953,3.765,1040,8.345,1045,3.978,1052,2.176,1053,2.364,1129,1.853,1145,3.513,1410,2.364,1413,2.364,1530,2.621,1574,2.176,1658,2.994,1766,3.765,2012,7.698,2014,5.367,2016,5.08,2046,3.978,2047,2.264,2048,3.032,2060,2.621,2062,3.032,2063,3.978,2064,3.032,2120,4.245,2121,4.245,2174,2.481,2182,3.032,2183,5.561,2184,4.602,2185,6.208,2186,6.94,2187,6.94,2188,4.602,2189,4.807,2190,3.389,2191,3.389,2192,3.389,2193,3.389,2194,3.032,2195,3.389,2196,6.208,2197,4.602,2198,4.602,2199,4.602,2200,4.602,2201,5.144,2202,3.389,2203,3.032,2204,5.144,2205,3.389,2206,3.389,2207,5.144,2208,3.389,2209,3.389,2210,3.389,2211,5.144,2212,3.389,2213,3.032,2214,3.032,2215,3.032,2216,3.389,2217,3.389,2218,3.032,2219,3.032,2220,5.144,2221,3.389,2222,3.389,2223,5.144,2224,3.032,2225,3.032,2226,3.389,2227,3.032,2228,3.389,2229,5.144,2230,5.144]],["title/components/PatientsComponent.html",[0,1.075,83,1.836]],["body/components/PatientsComponent.html",[0,1.854,1,1.695,2,0.044,3,0.044,4,1.853,5,1.853,6,0.039,8,0.514,9,1.786,16,1.666,17,3.518,18,3.723,20,1.853,21,0.111,22,0.269,23,2.442,25,0.185,26,0.006,27,0.356,28,0.457,30,0.509,32,0.126,33,0.971,34,0.034,35,0.212,36,1.612,37,2.568,38,2.568,39,1.668,40,3.183,41,1.853,42,0.743,43,1.853,44,1.666,45,1.56,46,2.568,47,1.755,48,1.853,49,1.786,50,1.853,51,1.725,52,1.853,53,1.725,54,1.853,55,1.786,56,1.853,57,1.786,58,1.639,59,1.666,60,1.487,61,1.853,62,1.786,63,1.853,64,2.568,65,1.755,66,1.853,67,1.666,68,1.853,69,1.786,70,1.853,71,1.786,72,1.853,73,1.755,74,1.355,75,1.186,76,3.343,77,1.786,78,1.417,79,0.88,80,2.433,81,1.786,82,2.568,83,3.016,84,1.853,85,1.786,86,2.568,87,1.786,88,1.853,89,1.786,90,1.853,91,1.666,92,1.853,93,1.666,94,1.853,95,1.786,96,1.091,97,1.755,98,1.786,99,1.755,100,2.77,101,1.725,102,1.853,103,1.755,104,1.853,105,1.695,106,1.853,107,1.755,108,1.853,109,1.755,110,1.853,111,1.755,112,1.819,113,1.853,114,0.004,115,0.004,122,3.183,126,1.967,133,0.813,137,0.578,138,0.457,142,1.042,143,1.695,158,1.56,186,1.441,225,1.923,230,1.923,239,1.487,240,3.963,242,0.473,249,1.725,265,2,276,1.639,343,3.369,361,5.208,362,3.539,363,3.734,429,1.943,438,4.702,447,2.922,450,3.916,456,2.522,530,2.772,761,2.655,762,2.58,764,3.391,794,2.736,796,3.031,815,1.853,939,2.655,1052,3.031,1053,3.292,1145,3.081,1458,5.399,1992,3.455,2189,5.808,2231,4.72,2232,5.399,2233,5.399,2234,6.543,2235,7.255,2236,7.255,2237,4.72,2238,4.72,2239,6.543,2240,4.72,2241,4.72,2242,4.72,2243,4.222,2244,4.72,2245,4.222,2246,4.222]],["title/injectables/PatientsEffects.html",[329,1.462,1029,4.075]],["body/injectables/PatientsEffects.html",[2,0.03,3,0.03,6,0.026,8,0.25,21,0.074,22,0.201,23,2.49,25,0.139,26,0.006,27,0.578,28,0.741,30,0.559,32,0.124,33,0.653,34,0.023,35,0.143,42,0.291,78,1.441,80,1.182,114,0.004,115,0.003,122,3.005,127,0.816,133,0.673,135,4.268,137,0.389,138,0.307,142,2.106,156,1.567,158,1.05,160,1.69,167,1.887,169,2.709,186,1.495,225,1.295,230,1.295,233,3.989,240,3.49,242,0.319,248,2.04,265,1.346,276,2.516,281,2.996,303,3.584,329,1.768,341,4.155,343,2.034,353,6.944,358,5.921,359,2.457,360,0.835,361,4.917,362,2.481,363,3.09,369,6.674,370,6.208,373,5.19,380,2.301,382,5.921,384,3.967,388,2.457,391,4.372,393,3.786,401,5.605,403,3.786,404,3.786,405,5.19,406,5.19,407,5.19,408,4.309,409,5.19,410,5.19,411,5.19,412,4.268,414,3.786,419,2.474,428,3.415,429,2.187,431,2.326,432,2.457,438,3.891,440,3.27,603,1.472,604,1.248,605,2.04,607,1.365,609,1.364,611,0.885,630,1.364,640,2.58,641,1.033,646,3.159,647,3.232,648,3.232,651,3.09,707,2.117,761,4.307,762,2.677,764,3.095,794,2.838,796,3.144,797,3.584,809,3.27,844,4.307,1029,4.04,1039,2.843,1052,2.04,1053,2.216,1468,3.031,1888,3.786,1964,5.538,1971,4.04,1972,5.538,1973,5.538,1977,4.912,1983,5.538,1984,4.04,1985,5.538,1992,3.584,1997,2.622,2047,2.122,2091,4.38,2147,2.326,2169,5.538,2215,6.004,2243,4.38,2247,3.178,2248,6.711,2249,6.797,2250,3.178,2251,4.896,2252,4.896,2253,4.896,2254,4.896,2255,4.896,2256,4.896,2257,4.38,2258,4.896,2259,3.178,2260,4.896,2261,4.896,2262,3.178,2263,4.38,2264,4.38,2265,4.38,2266,4.896,2267,4.896,2268,3.178,2269,4.38,2270,4.896,2271,4.04,2272,4.896,2273,4.896,2274,4.896,2275,4.896,2276,4.896,2277,4.896,2278,4.896,2279,4.896,2280,3.178,2281,4.896,2282,4.896,2283,4.38,2284,4.38,2285,4.896,2286,4.896,2287,4.896,2288,4.896,2289,3.178,2290,4.896,2291,3.178,2292,3.178,2293,3.178]],["title/injectables/PatientsService.html",[329,1.462,2249,4.075]],["body/injectables/PatientsService.html",[2,0.051,3,0.051,6,0.045,8,0.675,18,2.626,19,2.344,21,0.127,25,0.253,26,0.006,30,0.623,32,0.128,33,1.115,34,0.039,35,0.244,42,0.819,78,1.531,79,0.967,114,0.004,115,0.004,126,2.16,133,0.543,137,1.094,138,0.865,142,2.147,158,1.791,188,2.964,221,6.285,223,3.781,231,3.621,232,3.781,275,3.632,276,2.981,277,5.013,281,2.496,329,2.387,335,4.192,341,5.317,343,4.072,346,2.443,347,4.192,366,5.931,595,2.76,596,1.466,607,1.281,640,2.939,641,1.763,646,3.384,651,3.31,654,3.462,655,2.582,669,2.462,947,3.724,1145,4.043,1831,5.261,2005,5.931,2249,5.931,2294,5.421,2295,5.931,2296,8.587,2297,7.188,2298,5.421,2299,7.188,2300,5.421,2301,7.188,2302,5.421,2303,7.188,2304,5.421,2305,5.421,2306,7.188,2307,5.421,2308,7.188,2309,5.421,2310,5.421,2311,5.421,2312,5.421,2313,5.421,2314,5.421,2315,4.85]],["title/classes/PopUpNursingHomeForm.html",[35,0.222,602,2.495]],["body/classes/PopUpNursingHomeForm.html",[2,0.044,3,0.044,6,0.038,8,0.364,21,0.109,22,0.266,24,0.441,25,0.279,26,0.006,27,0.35,28,0.449,30,0.314,32,0.104,34,0.07,35,0.436,74,1.332,75,1.166,79,1.083,114,0.003,115,0.003,118,1.15,204,1.673,239,1.691,242,0.465,360,0.983,429,1.2,501,1.136,572,1.954,584,3.856,585,2.977,586,2.467,587,1.884,588,1.484,589,1.526,590,2.609,592,3.709,593,2.047,594,1.927,595,1.943,596,1.254,597,0.725,598,2.535,599,3.856,600,3.856,601,1.884,602,4.067,603,2.236,604,1.897,605,1.983,606,3.969,607,1.326,608,3.76,609,2.242,610,3.76,611,1.169,612,3.856,613,2.496,614,3.856,615,2.036,616,3.856,617,3.856,618,3.856,619,2.609,620,1.363,621,1.383,622,2.609,623,3.636,624,2.609,625,1.484,626,2.609,627,2.609,628,2.609,629,2.609,630,1.292,631,2.609,632,2.609,633,2.609,634,1.461,635,2.535,2316,4.638]],["title/classes/ResetNursingHomesState.html",[35,0.222,618,2.559]],["body/classes/ResetNursingHomesState.html",[2,0.044,3,0.044,6,0.038,8,0.365,21,0.109,22,0.266,24,0.442,25,0.279,26,0.006,27,0.351,28,0.45,30,0.315,32,0.104,34,0.07,35,0.436,74,1.334,75,1.168,79,1.084,114,0.004,115,0.004,118,1.15,204,1.927,239,1.693,242,0.466,360,0.981,429,1.203,501,1.309,572,1.956,584,3.86,585,2.981,586,2.472,587,1.887,588,1.487,589,1.527,590,2.615,592,3.71,593,2.051,594,1.931,595,1.946,596,1.257,597,0.727,598,2.541,599,3.86,600,3.86,601,1.887,602,3.764,603,1.946,604,1.651,605,1.725,606,3.973,607,1.328,608,3.764,609,2.244,610,3.764,611,1.171,612,3.86,613,2.498,614,3.86,615,2.039,616,3.86,617,3.86,618,4.175,619,2.615,620,1.364,621,1.384,622,2.615,623,2.615,624,2.615,625,1.487,626,2.615,627,2.615,628,2.615,629,2.615,630,1.295,631,2.615,632,2.615,633,3.642,634,1.464,635,2.541,2317,4.648]],["title/classes/ResetPatientsState.html",[35,0.222,653,2.435]],["body/classes/ResetPatientsState.html",[2,0.041,3,0.041,6,0.036,8,0.345,21,0.103,22,0.255,24,0.417,25,0.28,26,0.006,27,0.331,28,0.424,30,0.297,32,0.101,34,0.07,35,0.438,78,1.543,79,1.057,96,0.971,114,0.003,115,0.003,118,1.154,204,1.868,239,1.64,242,0.44,360,0.983,429,1.608,501,1.268,572,1.895,587,1.812,588,1.403,589,1.531,595,1.318,596,1.186,597,0.686,601,1.812,603,1.868,604,1.585,605,1.923,607,1.108,609,2.188,611,1.42,613,2.435,615,1.957,620,1.426,621,1.447,625,1.403,630,1.222,634,1.381,636,3.56,637,2.216,638,2.333,640,2.53,641,1.426,642,2.272,643,3.477,644,3.56,645,3.56,646,3.697,647,3.477,648,3.477,649,3.56,650,3.56,651,3.324,652,3.56,653,3.872,654,2.993,655,2.232,656,3.56,657,2.333,658,2.333,659,2.333,660,2.333,661,2.333,662,2.333,663,2.333,664,2.333,665,2.333,666,2.333,667,3.306,668,2.333,669,1.897,670,2.333,671,2.272,2318,4.385]],["title/classes/ResetUsersState.html",[35,0.222,688,2.435]],["body/classes/ResetUsersState.html",[2,0.041,3,0.041,6,0.036,8,0.344,21,0.103,22,0.255,24,0.416,25,0.28,26,0.006,27,0.331,28,0.424,30,0.297,32,0.101,34,0.07,35,0.438,78,0.929,79,1.056,96,1.393,114,0.003,115,0.003,118,1.154,204,1.867,239,1.639,242,0.439,360,0.983,429,1.607,501,1.268,572,1.894,587,1.81,588,1.402,589,1.531,595,1.317,596,1.185,597,0.685,601,1.81,603,1.867,604,1.584,605,1.922,607,1.107,609,2.187,611,1.419,613,2.434,615,1.956,620,1.425,621,1.446,625,1.402,630,1.22,634,1.38,655,2.23,669,1.896,672,3.558,673,2.213,674,2.33,676,1.448,677,2.27,678,3.475,679,3.558,680,3.558,681,3.695,682,3.475,683,3.475,684,3.558,685,3.558,686,3.322,687,3.558,688,3.871,689,2.991,690,3.475,691,2.33,692,2.33,693,2.33,694,2.33,695,2.33,696,2.33,697,2.33,698,2.33,699,2.33,700,2.33,701,3.303,702,2.33,703,2.33,704,2.27,2319,4.381]],["title/injectables/RoutePartsService.html",[329,1.462,536,3.819]],["body/injectables/RoutePartsService.html",[2,0.059,3,0.059,6,0.052,19,2.728,21,0.148,22,0.326,23,2.578,24,0.824,25,0.246,26,0.006,30,0.617,32,0.111,33,1.298,34,0.045,35,0.284,42,0.727,114,0.004,115,0.004,118,0.748,119,3.112,126,2.383,127,1.185,131,3.57,133,0.633,134,4.88,135,4.956,137,0.971,138,0.767,142,1.914,143,2.266,156,3.112,188,3.45,276,3.158,329,2.566,346,2.844,486,1.335,529,3.499,532,8.01,536,6.132,560,5.53,1674,7.892,1675,8.383,1676,5.646,1677,7.093,1678,8.136,1679,7.093,1680,7.093,1681,5.646,1682,5.646,1683,7.093,1684,5.646,1685,5.646,1686,7.093,1687,5.646,1688,5.646,1689,5.646,1690,5.646,2320,7.929,2321,7.929,2322,6.311,2323,6.311]],["title/directives/ScrollToDirective.html",[39,1.259,111,1.836]],["body/directives/ScrollToDirective.html",[2,0.049,3,0.049,6,0.043,8,0.409,16,1.839,17,1.779,21,0.122,22,0.288,24,0.838,25,0.198,26,0.006,30,0.616,32,0.073,33,1.071,34,0.037,35,0.234,39,2.155,42,0.641,111,2.603,112,2.697,114,0.004,115,0.004,118,0.83,119,3.103,120,3.633,122,2.045,126,2.104,127,1.08,131,3.317,133,0.522,137,0.857,138,0.677,142,2.131,143,1.871,161,3.118,162,3.633,163,3.226,164,2.848,169,2.57,176,4.675,185,5.413,384,2.699,788,6.113,905,6.523,910,4.299,1258,4.66,1371,7.072,1372,7.56,1377,4.66,1380,4.66,2324,9.276,2325,5.209,2326,6.262,2327,8.817,2328,8.451,2329,6.999,2330,5.209,2331,5.209,2332,5.209,2333,5.209,2334,6.999,2335,5.209,2336,5.209,2337,5.209,2338,5.209,2339,5.209,2340,5.209,2341,5.209,2342,5.209,2343,5.209,2344,5.209,2345,6.999,2346,6.999,2347,6.999,2348,5.776,2349,5.209,2350,5.209,2351,5.209,2352,6.999,2353,4.66,2354,4.66,2355,6.999,2356,6.999,2357,5.209,2358,7.905,2359,5.209,2360,6.262,2361,7.905,2362,5.209,2363,5.209,2364,5.209,2365,5.209,2366,9.653,2367,5.209,2368,9.552,2369,5.209,2370,6.999,2371,6.999,2372,6.999,2373,8.817,2374,5.209,2375,5.209,2376,8.817,2377,7.905,2378,5.209]],["title/classes/SearchNursingHome.html",[35,0.222,612,2.559]],["body/classes/SearchNursingHome.html",[2,0.042,3,0.042,6,0.037,8,0.356,21,0.106,22,0.261,24,0.797,25,0.281,26,0.006,27,0.341,28,0.438,30,0.498,32,0.103,34,0.07,35,0.434,42,0.415,74,1.299,75,1.137,79,1.071,114,0.003,115,0.003,118,1.145,127,0.868,133,0.454,137,0.554,138,0.438,204,1.644,239,1.668,242,0.454,360,0.981,429,1.171,501,1.116,572,1.928,584,3.805,585,3.667,586,2.407,587,1.852,588,1.448,589,1.52,590,2.545,592,3.704,593,1.997,594,1.88,595,1.91,596,1.224,597,0.708,598,2.474,599,3.805,600,3.805,601,1.852,602,3.71,603,1.91,604,1.62,605,1.693,606,3.926,607,1.309,608,3.71,609,2.218,610,3.71,611,1.149,612,4.126,613,2.601,614,3.805,615,2.001,616,3.805,617,3.805,618,3.805,619,2.545,620,1.351,621,1.514,622,2.545,623,2.545,624,2.545,625,1.448,626,2.545,627,2.545,628,3.574,629,2.545,630,1.261,631,2.545,632,2.545,633,2.545,634,1.425,635,2.474,710,1.028,2379,6.353,2380,4.525]],["title/classes/SearchNursingHomeComplete.html",[35,0.222,614,2.559]],["body/classes/SearchNursingHomeComplete.html",[2,0.042,3,0.042,6,0.037,8,0.355,21,0.106,22,0.261,24,0.43,25,0.281,26,0.006,27,0.341,28,0.437,30,0.498,32,0.102,34,0.07,35,0.434,42,0.414,74,1.298,75,1.136,79,1.071,114,0.003,115,0.003,118,1.145,127,0.867,133,0.453,137,0.554,138,0.437,204,1.643,239,1.667,242,0.453,360,0.98,429,1.17,501,1.116,572,1.927,584,3.803,585,3.665,586,2.404,587,1.851,588,1.446,589,1.52,590,2.543,592,3.715,593,1.995,594,1.878,595,1.908,596,1.222,597,0.707,598,2.471,599,3.803,600,3.803,601,1.851,602,3.708,603,1.908,604,1.619,605,1.692,606,3.925,607,1.308,608,3.708,609,2.217,610,3.708,611,1.148,612,3.803,613,2.6,614,4.124,615,2.311,616,3.803,617,3.803,618,3.803,619,2.543,620,1.35,621,1.514,622,2.543,623,2.543,624,2.543,625,1.446,626,2.543,627,2.543,628,2.543,629,3.571,630,1.259,631,2.543,632,2.543,633,2.543,634,1.424,635,2.471,710,1.027,2381,6.349,2382,4.52]],["title/classes/SearchPatient.html",[35,0.222,649,2.435]],["body/classes/SearchPatient.html",[2,0.04,3,0.04,6,0.035,8,0.337,21,0.1,22,0.251,24,0.781,25,0.281,26,0.006,27,0.323,28,0.415,30,0.483,32,0.1,34,0.07,35,0.436,42,0.393,78,1.541,79,1.045,96,0.959,114,0.003,115,0.003,118,1.15,127,0.835,133,0.429,137,0.525,138,0.415,204,1.582,239,1.619,242,0.429,360,0.983,429,1.582,501,1.074,572,1.871,587,1.782,588,1.371,589,1.526,595,1.288,596,1.159,597,0.67,601,1.782,603,1.837,604,1.559,605,1.899,607,1.09,609,2.165,611,1.405,613,2.547,615,1.925,620,1.416,621,1.535,625,1.371,630,1.194,634,1.349,636,3.514,637,2.165,638,2.279,640,2.508,641,1.393,642,2.22,643,3.432,644,3.514,645,3.514,646,3.658,647,3.432,648,3.432,649,3.832,650,3.514,651,3.281,652,3.514,653,3.514,654,2.944,655,2.195,656,3.514,657,2.279,658,2.279,659,2.279,660,2.279,661,2.279,662,2.279,663,3.251,664,2.279,665,2.279,666,2.279,667,2.279,668,2.279,669,1.866,670,2.279,671,2.22,710,0.973,2383,6.112,2384,4.284]],["title/classes/SearchPatientComplete.html",[35,0.222,650,2.435]],["body/classes/SearchPatientComplete.html",[2,0.04,3,0.04,6,0.035,8,0.336,21,0.1,22,0.251,24,0.407,25,0.281,26,0.006,27,0.323,28,0.414,30,0.483,32,0.099,34,0.07,35,0.436,42,0.392,78,1.54,79,1.045,96,0.958,114,0.003,115,0.003,118,1.15,127,0.835,133,0.429,137,0.524,138,0.414,204,1.58,239,1.618,242,0.429,360,0.983,429,1.58,501,1.073,572,1.87,587,1.78,588,1.37,589,1.525,595,1.286,596,1.157,597,0.669,601,1.78,603,1.836,604,1.557,605,1.898,607,1.089,609,2.164,611,1.405,613,2.546,615,2.243,620,1.416,621,1.535,625,1.37,630,1.192,634,1.348,636,3.512,637,2.162,638,2.277,640,2.792,641,1.392,642,2.218,643,3.43,644,3.512,645,3.512,646,3.657,647,3.43,648,3.43,649,3.512,650,3.83,651,3.28,652,3.512,653,3.512,654,2.942,655,2.194,656,3.512,657,2.277,658,2.277,659,2.277,660,2.277,661,2.277,662,2.277,663,2.277,664,3.249,665,2.277,666,2.277,667,2.277,668,2.277,669,1.865,670,2.277,671,2.218,710,0.972,2385,6.108,2386,4.28]],["title/classes/SearchUser.html",[35,0.222,684,2.435]],["body/classes/SearchUser.html",[2,0.04,3,0.04,6,0.035,8,0.336,21,0.1,22,0.251,24,0.781,25,0.281,26,0.006,27,0.323,28,0.414,30,0.483,32,0.099,34,0.07,35,0.436,42,0.392,78,0.914,79,1.045,96,1.391,114,0.003,115,0.003,118,1.15,127,0.835,133,0.429,137,0.524,138,0.414,204,1.58,239,1.618,242,0.429,360,0.983,429,1.58,501,1.073,572,1.87,587,1.78,588,1.37,589,1.525,595,1.286,596,1.157,597,0.669,601,1.78,603,1.836,604,1.557,605,1.898,607,1.089,609,2.164,611,1.405,613,2.546,615,1.924,620,1.416,621,1.535,625,1.37,630,1.192,634,1.348,655,2.194,669,1.865,672,3.512,673,2.162,674,2.277,676,1.414,677,2.218,678,3.43,679,3.512,680,3.512,681,3.657,682,3.43,683,3.43,684,3.83,685,3.512,686,3.28,687,3.512,688,3.512,689,2.942,690,3.43,691,2.277,692,2.277,693,2.277,694,2.277,695,2.277,696,2.277,697,3.249,698,2.277,699,2.277,700,2.277,701,2.277,702,2.277,703,2.277,704,2.218,710,0.972,2387,6.108,2388,4.28]],["title/classes/SearchUserComplete.html",[35,0.222,685,2.435]],["body/classes/SearchUserComplete.html",[2,0.04,3,0.04,6,0.035,8,0.336,21,0.1,22,0.251,24,0.406,25,0.281,26,0.006,27,0.323,28,0.414,30,0.483,32,0.099,34,0.07,35,0.436,42,0.392,78,0.913,79,1.045,96,1.395,114,0.003,115,0.003,118,1.15,127,0.834,133,0.429,137,0.524,138,0.414,204,1.579,239,1.617,242,0.429,360,0.983,429,1.579,501,1.073,572,1.869,587,1.779,588,1.368,589,1.525,595,1.285,596,1.156,597,0.669,601,1.779,603,1.835,604,1.556,605,1.897,607,1.088,609,2.163,611,1.404,613,2.546,615,2.242,620,1.415,621,1.534,625,1.368,630,1.191,634,1.347,655,2.192,669,1.863,672,3.51,673,2.16,674,2.274,676,1.413,677,2.215,678,3.429,679,3.51,680,3.51,681,3.655,682,3.429,683,3.429,684,3.51,685,3.828,686,3.278,687,3.51,688,3.51,689,2.94,690,3.429,691,2.274,692,2.274,693,2.274,694,2.274,695,2.274,696,2.274,697,2.274,698,3.247,699,2.274,700,2.274,701,2.274,702,2.274,703,2.274,704,2.215,710,0.971,2389,6.104,2390,4.276]],["title/classes/SelectNursingHome.html",[35,0.222,599,2.559]],["body/classes/SelectNursingHome.html",[2,0.042,3,0.042,6,0.037,8,0.356,21,0.106,22,0.261,24,0.43,25,0.281,26,0.006,27,0.341,28,0.438,30,0.498,32,0.103,34,0.07,35,0.434,42,0.415,74,1.299,75,1.137,79,1.071,114,0.003,115,0.003,118,1.145,127,0.868,133,0.454,137,0.554,138,0.438,204,1.644,239,1.809,242,0.454,360,0.981,429,1.171,501,1.116,572,1.928,584,3.805,585,3.667,586,2.407,587,1.852,588,1.448,589,1.52,590,2.545,592,3.715,593,1.997,594,1.88,595,1.91,596,1.224,597,0.708,598,2.474,599,4.126,600,3.805,601,1.852,602,3.71,603,1.91,604,1.62,605,1.693,606,3.926,607,1.309,608,3.71,609,2.218,610,3.71,611,1.149,612,3.805,613,2.469,614,3.805,615,2.001,616,3.805,617,3.805,618,3.805,619,3.574,620,1.351,621,1.514,622,2.545,623,2.545,624,2.545,625,1.448,626,2.545,627,2.545,628,2.545,629,2.545,630,1.261,631,2.545,632,2.545,633,2.545,634,1.425,635,2.474,710,1.028,2391,6.353,2392,4.525]],["title/classes/SelectPatient.html",[35,0.222,643,2.379]],["body/classes/SelectPatient.html",[2,0.04,3,0.04,6,0.035,8,0.337,21,0.1,22,0.251,24,0.407,25,0.281,26,0.006,27,0.323,28,0.415,30,0.483,32,0.1,34,0.07,35,0.436,42,0.393,78,1.541,79,1.045,96,0.959,114,0.003,115,0.003,118,1.15,127,0.835,133,0.429,137,0.525,138,0.415,204,1.582,239,1.766,242,0.429,360,0.983,429,1.582,501,1.074,572,1.871,587,1.782,588,1.371,589,1.526,595,1.288,596,1.159,597,0.67,601,1.782,603,1.837,604,1.559,605,1.899,607,1.09,609,2.165,611,1.405,613,2.409,615,1.925,620,1.416,621,1.535,625,1.371,630,1.194,634,1.349,636,3.514,637,2.165,638,2.279,640,2.793,641,1.393,642,2.22,643,3.743,644,3.514,645,3.514,646,3.658,647,3.432,648,3.432,649,3.514,650,3.514,651,3.281,652,3.514,653,3.514,654,2.944,655,2.195,656,3.514,657,3.251,658,2.279,659,2.279,660,2.279,661,2.279,662,2.279,663,2.279,664,2.279,665,2.279,666,2.279,667,2.279,668,2.279,669,1.866,670,2.279,671,2.22,710,0.973,2393,6.112,2394,4.284]],["title/classes/SelectUser.html",[35,0.222,678,2.379]],["body/classes/SelectUser.html",[2,0.04,3,0.04,6,0.035,8,0.336,21,0.1,22,0.251,24,0.407,25,0.281,26,0.006,27,0.323,28,0.414,30,0.483,32,0.099,34,0.07,35,0.436,42,0.392,78,0.914,79,1.045,96,1.395,114,0.003,115,0.003,118,1.15,127,0.835,133,0.429,137,0.524,138,0.414,204,1.58,239,1.765,242,0.429,360,0.983,429,1.58,501,1.073,572,1.87,587,1.78,588,1.37,589,1.525,595,1.286,596,1.157,597,0.669,601,1.78,603,1.836,604,1.557,605,1.898,607,1.089,609,2.164,611,1.405,613,2.408,615,1.924,620,1.416,621,1.535,625,1.37,630,1.192,634,1.348,655,2.194,669,1.865,672,3.512,673,2.162,674,2.277,676,1.414,677,2.218,678,3.741,679,3.512,680,3.512,681,3.657,682,3.43,683,3.43,684,3.512,685,3.512,686,3.28,687,3.512,688,3.512,689,2.942,690,3.43,691,3.249,692,2.277,693,2.277,694,2.277,695,2.277,696,2.277,697,2.277,698,2.277,699,2.277,700,2.277,701,2.277,702,2.277,703,2.277,704,2.218,710,0.972,2395,6.108,2396,4.28]],["title/classes/SetDirectionLtr.html",[35,0.222,725,2.559]],["body/classes/SetDirectionLtr.html",[2,0.042,3,0.042,6,0.037,8,0.355,21,0.106,22,0.261,23,2.064,24,0.917,25,0.282,26,0.006,27,0.341,28,0.437,30,0.498,32,0.063,34,0.069,35,0.434,39,2.138,42,0.414,114,0.003,115,0.003,127,0.867,133,0.453,137,0.554,138,0.437,242,0.453,360,0.946,456,3.768,529,3.7,552,2.636,589,1.52,597,0.707,620,1.543,621,1.606,705,3.803,706,2.404,707,2.745,708,3.86,709,4.403,710,1.027,713,2.471,714,2.404,715,3.803,716,2.923,717,3.708,718,3.803,719,2.989,720,4.583,721,3.803,722,3.327,723,3.803,724,3.172,725,4.124,726,2.177,727,3.803,728,2.471,729,3.803,730,3.471,731,3.379,732,2.638,733,3.803,734,4.233,735,3.058,736,3.803,737,3.803,738,3.471,739,2.471,740,2.471,741,2.471,742,2.471,743,2.471,744,4.128,745,4.128,746,3.471,747,2.471,748,2.471,749,2.471,750,2.471,751,2.543,752,2.471,753,2.543,754,2.471,755,2.284,2397,6.349,2398,4.52]],["title/classes/SetDirectionRtr.html",[35,0.222,727,2.559]],["body/classes/SetDirectionRtr.html",[2,0.042,3,0.042,6,0.037,8,0.355,21,0.106,22,0.261,23,2.064,24,0.917,25,0.282,26,0.006,27,0.341,28,0.437,30,0.498,32,0.063,34,0.069,35,0.434,39,2.138,42,0.414,114,0.003,115,0.003,127,0.867,133,0.453,137,0.554,138,0.437,242,0.453,360,0.946,456,3.768,529,3.7,552,2.636,589,1.52,597,0.707,620,1.543,621,1.606,705,3.803,706,2.404,707,2.745,708,3.86,709,4.403,710,1.027,713,2.471,714,2.404,715,3.803,716,2.923,717,3.708,718,3.803,719,2.989,720,4.583,721,3.803,722,3.327,723,3.803,724,3.172,725,3.803,726,2.177,727,4.124,728,2.471,729,3.803,730,3.471,731,3.379,732,2.638,733,3.803,734,4.233,735,3.058,736,3.803,737,3.803,738,3.471,739,2.471,740,2.471,741,2.471,742,2.471,743,2.471,744,4.128,745,4.128,746,2.471,747,3.471,748,2.471,749,2.471,750,2.471,751,2.543,752,2.471,753,2.543,754,2.471,755,2.284,2399,6.349,2400,4.52]],["title/classes/SetNavigationPositionSide.html",[35,0.222,721,2.559]],["body/classes/SetNavigationPositionSide.html",[2,0.042,3,0.042,6,0.037,8,0.355,21,0.106,22,0.261,23,2.064,24,0.917,25,0.282,26,0.006,27,0.341,28,0.437,30,0.498,32,0.063,34,0.069,35,0.434,39,2.029,42,0.414,114,0.003,115,0.003,127,0.867,133,0.453,137,0.554,138,0.437,242,0.453,360,0.946,456,3.768,529,3.7,552,2.636,589,1.52,597,0.707,620,1.543,621,1.606,705,3.803,706,2.404,707,2.745,708,3.94,709,4.495,710,1.027,713,2.471,714,2.404,715,3.803,716,2.923,717,3.708,718,3.803,719,2.989,720,4.753,721,4.124,722,3.327,723,3.803,724,3.172,725,3.803,726,2.177,727,3.803,728,2.471,729,3.803,730,3.471,731,3.379,732,2.638,733,3.803,734,4.233,735,3.058,736,3.803,737,3.803,738,3.471,739,2.471,740,2.471,741,2.471,742,3.471,743,2.471,744,3.571,745,3.571,746,2.471,747,2.471,748,2.471,749,2.471,750,2.471,751,2.543,752,2.471,753,2.543,754,2.471,755,2.284,2401,6.349,2402,4.52]],["title/classes/SetNavigationPositionTop.html",[35,0.222,723,2.559]],["body/classes/SetNavigationPositionTop.html",[2,0.042,3,0.042,6,0.037,8,0.355,21,0.106,22,0.261,23,2.064,24,0.917,25,0.282,26,0.006,27,0.341,28,0.437,30,0.498,32,0.063,34,0.069,35,0.434,39,2.029,42,0.414,114,0.003,115,0.003,127,0.867,133,0.453,137,0.554,138,0.437,242,0.453,360,0.946,456,3.768,529,3.7,552,2.636,589,1.52,597,0.707,620,1.543,621,1.606,705,3.803,706,2.404,707,2.745,708,3.86,709,4.495,710,1.027,713,2.471,714,2.404,715,3.803,716,2.923,717,3.708,718,3.803,719,2.989,720,4.753,721,3.803,722,3.327,723,4.124,724,3.441,725,3.803,726,2.177,727,3.803,728,2.471,729,3.803,730,3.471,731,3.379,732,2.638,733,3.803,734,4.233,735,3.058,736,3.803,737,3.803,738,3.471,739,2.471,740,2.471,741,2.471,742,2.471,743,3.471,744,3.571,745,3.571,746,2.471,747,2.471,748,2.471,749,2.471,750,2.471,751,2.543,752,2.471,753,2.543,754,2.471,755,2.284,2403,6.349,2404,4.52]],["title/modules/SharedModule.html",[189,1.975,1009,3.614]],["body/modules/SharedModule.html",[2,0.071,3,0.071,6,0.062,26,0.006,32,0.135,33,1.552,34,0.063,35,0.34,114,0.005,115,0.005,189,3.019,211,5.125,214,4.519,463,6.538,470,6.836,471,6.836,472,4.016,1009,6.47,2405,7.55]],["title/components/SidebarSideComponent.html",[0,1.075,85,1.869]],["body/components/SidebarSideComponent.html",[0,1.722,1,1.398,2,0.037,3,0.037,4,1.528,5,1.528,6,0.032,9,1.474,16,1.375,17,3.473,18,3.661,20,1.528,21,0.091,22,0.234,24,0.642,25,0.248,26,0.006,30,0.624,32,0.122,33,0.801,34,0.028,35,0.175,36,1.329,37,2.239,38,2.239,39,1.454,40,2.917,41,1.528,42,0.681,43,1.528,44,1.375,45,1.287,46,2.239,47,1.448,48,1.528,49,1.474,50,1.528,51,1.423,52,1.528,53,1.423,54,1.528,55,1.474,56,1.528,57,1.474,58,1.352,59,1.375,60,1.226,61,1.528,62,1.474,63,1.528,64,2.239,65,1.448,66,1.528,67,1.375,68,1.528,69,1.474,70,1.528,71,1.474,72,1.528,73,1.448,74,1.118,75,0.978,76,3.105,77,1.474,78,1.112,79,0.767,80,1.448,81,1.474,82,2.239,83,1.448,84,1.528,85,2.813,86,3.245,87,1.474,88,1.528,89,1.474,90,1.528,91,1.375,92,1.528,93,1.375,94,1.528,95,1.474,96,1.253,97,1.448,98,1.474,99,1.448,100,1.266,101,1.423,102,1.528,103,1.448,104,1.528,105,1.398,106,1.528,107,1.448,108,1.528,109,1.448,110,1.528,111,1.448,112,1.5,113,1.528,114,0.003,115,0.003,118,0.676,119,2.65,122,3.352,126,1.714,127,1.306,131,2.917,133,0.572,137,0.477,138,0.377,142,1.641,143,2.669,151,5.184,158,1.287,186,1.188,239,0.885,240,3.849,242,0.39,256,2.5,257,3.213,281,1.352,334,2.417,362,3.088,436,2.85,445,2.715,526,6.496,528,4.04,530,2.417,534,4.448,552,2.424,569,2.33,708,2.466,722,2.049,809,2.601,887,5.57,900,6.496,903,6.133,937,3.213,941,3.213,942,4.707,992,3.213,1012,3.011,1013,3.011,1020,7.685,1021,8.332,1326,2.601,1489,3.483,1495,6.649,1501,3.483,1505,5.103,1506,3.483,1521,3.483,1522,3.483,1523,3.483,1525,2.601,1529,3.483,1530,3.011,1538,3.483,1539,3.483,1546,5.103,1547,5.103,1552,6.649,1553,5.103,1619,2.601,1627,4.964,1634,5.184,1636,5.285,1800,5.103,2406,5.704,2407,6.649,2408,6.649,2409,6.039,2410,5.704,2411,3.893,2412,3.893,2413,3.893,2414,3.893,2415,3.893,2416,3.483,2417,3.893,2418,3.893,2419,5.103,2420,3.483,2421,3.483,2422,3.893,2423,3.893,2424,3.483,2425,3.893,2426,3.893,2427,3.213,2428,3.483,2429,3.893,2430,3.483,2431,3.483,2432,3.483,2433,3.483,2434,5.103,2435,5.103]],["title/components/SidebarTopComponent.html",[0,1.075,87,1.869]],["body/components/SidebarTopComponent.html",[0,1.842,1,1.664,2,0.044,3,0.044,4,1.818,5,1.818,6,0.038,9,1.754,16,1.636,17,3.514,18,3.717,20,1.818,21,0.109,22,0.265,25,0.228,26,0.006,30,0.61,32,0.112,33,0.953,34,0.033,35,0.208,36,1.582,37,2.535,38,2.535,39,1.647,40,3.158,41,1.818,42,0.737,43,1.818,44,1.636,45,1.531,46,2.535,47,1.723,48,1.818,49,1.754,50,1.818,51,1.693,52,1.818,53,1.693,54,1.818,55,1.754,56,1.818,57,1.754,58,1.608,59,1.636,60,1.459,61,1.818,62,1.754,63,1.818,64,2.535,65,1.723,66,1.818,67,1.636,68,1.818,69,1.754,70,1.818,71,1.754,72,1.818,73,1.723,74,1.33,75,1.164,76,3.321,77,1.754,78,1.204,79,0.869,80,1.723,81,1.754,82,2.535,83,1.723,84,1.818,85,1.754,86,3.439,87,3.045,88,1.818,89,1.754,90,1.818,91,1.636,92,1.818,93,1.636,94,1.818,95,1.754,96,1.082,97,1.723,98,1.754,99,1.723,100,1.506,101,1.693,102,1.818,103,1.723,104,1.818,105,1.664,106,1.818,107,1.723,108,1.818,109,1.723,110,1.818,111,1.723,112,1.785,113,1.818,114,0.003,115,0.003,118,0.766,119,2.919,122,3.529,126,1.941,127,1.016,131,3.158,133,0.647,137,0.567,138,0.448,142,1.642,143,2.671,151,5.611,158,1.531,186,1.414,281,1.608,526,6.396,528,4.451,530,2.737,534,4.815,724,3.215,887,6.136,903,6.639,941,6.639,942,6.639,992,3.823,1012,3.583,1013,3.583,1020,7.568,1022,8.204,1326,3.094,1618,3.391,1619,3.094,1627,5.374,1636,5.374,2326,4.145,2408,7.197,2409,5.778,2416,4.145,2419,5.778,2420,4.145,2421,4.145,2424,5.778,2428,4.145,2430,4.145,2431,4.145,2432,4.145,2433,4.145,2436,4.633,2437,6.459,2438,4.633,2439,6.459,2440,4.633,2441,4.633,2442,4.633,2443,4.633,2444,4.633,2445,4.633,2446,4.633]],["title/components/SidenavComponent.html",[0,1.075,89,1.869]],["body/components/SidenavComponent.html",[0,1.974,1,1.718,2,0.045,3,0.045,4,1.877,5,1.877,6,0.04,8,0.376,9,1.811,16,1.689,17,3.521,18,3.727,20,1.877,21,0.112,24,0.628,25,0.214,26,0.006,27,0.361,28,0.463,30,0.58,32,0.067,33,0.984,34,0.034,35,0.215,36,1.633,37,2.592,38,2.592,39,1.684,40,3.201,41,1.877,42,0.693,43,1.877,44,1.689,45,1.581,46,2.592,47,1.779,48,1.877,49,1.811,50,1.877,51,1.748,52,1.877,53,1.748,54,1.877,55,1.811,56,1.877,57,1.811,58,1.661,59,1.689,60,1.507,61,1.877,62,1.811,63,1.877,64,2.592,65,1.779,66,1.877,67,1.689,68,1.877,69,1.811,70,1.877,71,1.811,72,1.877,73,1.779,74,1.373,75,1.202,76,3.359,77,1.811,78,1.22,79,0.889,80,1.779,81,1.811,82,2.592,83,1.779,84,1.877,85,1.811,86,2.592,87,1.811,88,1.877,89,3.087,90,1.877,91,1.689,92,1.877,93,1.689,94,1.877,95,1.811,96,1.097,97,1.779,98,1.811,99,1.779,100,1.555,101,1.748,102,1.877,103,1.779,104,1.877,105,1.718,106,1.877,107,1.779,108,1.877,109,1.779,110,1.877,111,1.779,112,1.843,113,1.877,114,0.004,115,0.004,118,0.783,119,2.969,126,1.985,127,1.033,131,3.201,133,0.758,142,1.056,143,1.718,362,4.072,526,6.172,530,2.798,552,2.372,569,3.953,945,5.448,953,4.834,1266,5.849,1634,5.275,1636,3.195,2407,4.279,2447,4.783,2448,6.604,2449,6.604,2450,6.604,2451,6.604,2452,4.783,2453,4.783,2454,4.783,2455,6.604,2456,6.604,2457,4.783,2458,4.783,2459,4.783,2460,9.243,2461,9.243,2462,8.85,2463,8.156,2464,8.156,2465,6.604]],["title/classes/SignUpFailure.html",[35,0.222,1433,2.778]],["body/classes/SignUpFailure.html",[2,0.047,3,0.047,6,0.041,8,0.389,21,0.116,22,0.278,25,0.285,26,0.006,27,0.374,28,0.479,30,0.522,32,0.069,34,0.069,35,0.43,42,0.454,60,2.131,114,0.004,115,0.004,118,1.134,127,0.924,133,0.497,137,0.607,138,0.479,242,0.497,333,4.274,334,3.265,355,4.212,356,4.212,360,0.948,380,2.689,395,3.923,399,3.026,420,4.212,589,1.51,597,0.775,604,2.335,620,1.475,621,1.578,710,1.126,810,2.736,814,1.78,816,3.454,1298,5.583,1299,4.089,1385,4.404,1387,2.986,1423,4.334,1424,5.308,1427,3.068,1428,2.966,1429,5.658,1430,4.334,1431,4.334,1432,4.334,1433,4.657,1434,4.334,1435,3.068,1436,3.068,1437,3.068,1438,3.068,1439,3.068,1440,3.068,1441,3.068,1442,3.068,1443,4.189,1444,3.068,1445,2.966]],["title/classes/SignUpSuccess.html",[35,0.222,1432,2.778]],["body/classes/SignUpSuccess.html",[2,0.047,3,0.047,6,0.041,8,0.389,21,0.116,22,0.278,25,0.285,26,0.006,27,0.374,28,0.479,30,0.522,32,0.069,34,0.069,35,0.43,42,0.454,60,2.131,114,0.004,115,0.004,118,1.134,127,0.924,133,0.497,137,0.607,138,0.479,242,0.497,333,4.274,334,3.265,355,4.212,356,4.212,360,0.948,380,2.689,395,3.923,399,3.08,420,4.212,589,1.51,597,0.775,604,2.335,620,1.475,621,1.578,710,1.126,810,2.736,814,1.78,816,3.406,1300,5.583,1301,4.089,1385,4.404,1387,2.986,1423,4.334,1424,5.308,1427,3.068,1428,2.966,1429,5.658,1430,4.334,1431,4.334,1432,4.657,1433,4.334,1434,4.334,1435,3.068,1436,3.068,1437,3.068,1438,3.068,1439,3.068,1440,3.068,1441,3.068,1442,4.189,1443,3.068,1444,3.068,1445,2.966]],["title/components/SigninComponent.html",[0,1.075,91,1.744]],["body/components/SigninComponent.html",[0,1.795,1,1.554,2,0.041,3,0.041,4,1.699,5,1.699,6,0.036,9,1.638,16,1.528,17,3.499,18,3.696,20,1.699,21,0.101,22,0.253,25,0.234,26,0.006,27,0.327,28,0.419,30,0.598,32,0.126,33,0.89,34,0.031,35,0.195,36,1.478,37,2.416,38,2.416,39,1.57,40,3.064,41,1.699,42,0.715,43,1.699,44,1.528,45,1.43,46,2.416,47,1.609,48,1.699,49,1.638,50,1.699,51,1.581,52,1.699,53,1.581,54,1.699,55,1.638,56,1.699,57,1.638,58,2.137,59,1.528,60,2.257,61,1.699,62,1.638,63,1.699,64,2.416,65,1.609,66,1.699,67,1.528,68,1.699,69,1.638,70,1.699,71,1.638,72,1.699,73,1.609,74,1.242,75,1.088,76,3.237,77,1.638,78,1.168,79,0.828,80,1.609,81,1.638,82,2.416,83,1.609,84,1.699,85,1.638,86,2.416,87,1.638,88,1.699,89,1.638,90,1.699,91,2.756,92,1.699,93,1.528,94,1.699,95,1.638,96,1.05,97,1.609,98,1.638,99,1.609,100,1.407,101,1.581,102,1.699,103,1.609,104,1.699,105,1.554,106,1.699,107,1.609,108,1.699,109,1.609,110,1.699,111,1.609,112,1.668,113,1.699,114,0.003,115,0.003,118,0.73,119,2.813,122,1.699,126,1.85,131,3.064,133,0.434,137,0.53,138,0.419,142,1.359,143,2.211,158,1.43,169,1.261,188,2.366,225,1.764,230,1.764,239,0.983,240,3.632,242,0.434,249,1.581,256,2.779,265,1.834,281,2.864,343,3.243,360,0.419,362,4.036,363,3.594,384,3.19,412,2.242,437,3.571,447,2.679,450,4.289,472,2.302,530,2.609,605,1.64,607,1.097,630,1.715,1129,2.366,1387,3.162,1403,6.037,1404,6.037,1410,5.444,1411,4.761,1413,5.444,1414,4.761,1416,3.347,1418,4.761,1419,3.347,1422,5.508,1456,5.296,1459,2.779,1548,5.08,1646,3.018,1950,4.112,2016,6.274,2149,3.571,2174,4.506,2466,4.328,2467,8.572,2468,6.156,2469,7.806,2470,4.328,2471,4.328,2472,4.328,2473,6.156,2474,4.328,2475,4.328,2476,4.328,2477,4.328,2478,6.411,2479,4.328,2480,4.328,2481,4.328,2482,4.328,2483,4.328,2484,4.328,2485,6.156,2486,4.328,2487,4.328,2488,6.156,2489,6.156,2490,6.156]],["title/classes/Signup.html",[35,0.222,1393,3.298]],["body/classes/Signup.html",[2,0.057,3,0.057,6,0.051,8,0.48,21,0.143,22,0.319,24,0.581,25,0.286,26,0.006,27,0.461,28,0.591,30,0.579,32,0.109,34,0.066,35,0.404,42,0.56,60,2.447,100,2.923,114,0.004,115,0.004,118,1.066,127,1.062,133,0.613,137,0.748,138,0.591,242,0.613,333,4.577,338,5.485,342,5.19,345,4.263,360,0.953,589,1.452,597,0.956,620,1.376,621,1.575,710,1.389,810,2.971,1384,5.958,1385,4.782,1386,4.474,1387,3.77,1390,5.043,1391,4.727,1392,4.727,1393,6.437,1394,4.727,1395,4.727,1396,5.043,1397,6.412,1398,3.658,1399,4.727,2491,7.77,2492,6.112]],["title/components/SignupComponent.html",[0,1.075,93,1.744]],["body/components/SignupComponent.html",[0,1.931,1,1.586,2,0.041,3,0.041,4,1.734,5,1.734,6,0.037,8,0.347,9,1.672,16,1.56,17,3.503,18,3.702,20,1.734,21,0.103,22,0.257,25,0.205,26,0.006,30,0.585,32,0.101,33,0.908,34,0.032,35,0.199,36,1.508,37,2.452,38,2.452,39,1.593,40,3.092,41,1.734,42,0.664,43,1.734,44,1.56,45,1.46,46,2.452,47,1.642,48,1.734,49,1.672,50,1.734,51,1.614,52,1.734,53,1.614,54,1.734,55,1.672,56,1.734,57,1.672,58,1.534,59,1.56,60,1.391,61,1.734,62,1.672,63,1.734,64,2.452,65,1.642,66,1.734,67,1.56,68,1.734,69,1.672,70,1.734,71,1.672,72,1.734,73,1.642,74,1.268,75,1.11,76,3.263,77,1.672,78,1.179,79,0.84,80,1.642,81,1.672,82,2.452,83,1.642,84,1.734,85,1.672,86,2.452,87,1.672,88,1.734,89,1.672,90,1.734,91,1.56,92,1.734,93,2.782,94,1.734,95,1.672,96,1.06,97,1.642,98,1.672,99,1.642,100,1.436,101,1.614,102,1.734,103,1.642,104,1.734,105,1.586,106,1.734,107,1.642,108,1.734,109,1.642,110,1.734,111,1.642,112,1.702,113,1.734,114,0.003,115,0.003,118,0.741,119,2.844,126,1.877,131,3.092,133,0.833,142,1.74,143,2.243,169,2.112,186,1.907,265,1.872,268,6.316,275,3.98,281,2.886,384,3.237,472,2.35,530,2.647,604,2.009,605,1.664,630,1.74,732,2.595,759,3.739,953,4.572,1387,4.066,1393,6.24,1398,4.975,1403,6.092,1404,6.092,1410,5.495,1411,4.831,1413,5.495,1414,4.831,1416,3.416,1417,3.645,1418,3.416,1419,3.416,1424,5.003,1456,5.337,1459,2.836,1470,3.416,1548,5.155,1658,2.128,1950,4.841,2152,3.645,2161,5.155,2478,7.72,2493,4.417,2494,6.247,2495,7.878,2496,6.247,2497,4.417,2498,6.247,2499,6.247,2500,6.247,2501,4.417,2502,4.417,2503,4.417,2504,7.247,2505,4.417,2506,9.061,2507,4.417,2508,6.247,2509,6.247,2510,5.588,2511,7.878,2512,6.247,2513,5.588]],["title/interfaces/State.html",[486,1.045,501,0.868]],["body/interfaces/State.html",[2,0.063,3,0.063,6,0.055,21,0.156,22,0.337,25,0.188,26,0.006,32,0.129,34,0.068,45,2.199,114,0.004,115,0.004,135,4.931,142,1.961,169,2.389,186,2.031,231,4.445,232,4.642,240,3.472,242,0.667,244,5.492,249,3.245,250,7.944,271,4.181,323,5.954,360,0.859,368,4.121,486,1.734,496,5.998,501,1.725,732,2.765,1468,4.121,1955,4.642,1968,5.954,2232,5.492,2514,5.954,2515,8.88,2516,6.655,2517,9.517,2518,8.195,2519,7.332,2520,6.655,2521,6.655,2522,7.332,2523,5.954,2524,6.655,2525,5.492,2526,5.954,2527,6.655,2528,7.332]],["title/interfaces/State-1.html",[171,2.317,486,0.871,501,0.724]],["body/interfaces/State-1.html",[2,0.059,3,0.059,6,0.052,10,6.543,21,0.148,22,0.326,25,0.179,26,0.006,32,0.134,34,0.072,45,3.005,114,0.004,115,0.004,142,1.393,169,2.908,237,4.88,238,4.619,242,0.633,249,2.897,256,4.052,281,2.191,360,0.611,435,3.659,477,5.207,486,1.834,487,7.892,488,5.646,489,7.093,490,5.646,491,5.646,492,5.646,493,5.646,494,5.646,495,4.88,496,5.803,497,4.619,498,6.859,499,7.093,500,5.646,501,1.647,502,3.907,503,4.88,504,5.646,505,7.756,506,5.646,507,5.646,508,5.646,509,7.756,510,5.646,511,4.88,512,7.756,513,5.646,514,5.207,515,5.646,516,5.646,517,4.619,518,5.207,519,5.646,520,4.401,521,5.646,522,4.401,523,5.646]],["title/interfaces/State-10.html",[321,3.685,486,0.871,501,0.724]],["body/interfaces/State-10.html",[2,0.054,3,0.054,6,0.047,21,0.134,22,0.307,25,0.162,26,0.006,27,0.433,32,0.123,34,0.067,78,1.395,114,0.004,115,0.004,142,2.126,167,2.21,169,2.416,204,1.484,239,1.883,249,2.725,271,2.7,276,3.047,281,1.991,334,2.43,360,0.802,390,3.83,399,2.464,419,4.918,435,3.324,486,1.754,501,1.814,502,5.132,572,1.506,587,1.672,596,1.551,601,2.174,611,1.037,640,2.277,641,1.865,669,2.53,785,3.55,815,2.251,820,2.025,1145,2.7,1150,3.83,1161,4.981,1205,4.732,1525,3.83,1658,4.383,2047,3.83,2081,4.732,2147,4.197,2148,4.197,2235,8.496,2529,5.13,2530,6.066,2531,5.459,2532,5.459,2533,5.459,2534,4.197,2535,4.805,2536,4.197,2537,4.732,2538,4.732,2539,3.83,2540,3.324,2541,3.324,2542,5.13,2543,5.13,2544,5.13,2545,5.734,2546,5.13,2547,5.734,2548,5.13,2549,4.732,2550,4.732,2551,5.13,2552,5.734]],["title/interfaces/State-11.html",[486,0.871,501,0.724,2553,3.685]],["body/interfaces/State-11.html",[2,0.059,3,0.059,6,0.052,26,0.006,27,0.475,32,0.127,34,0.067,78,1.36,96,1.223,114,0.004,115,0.004,142,2.068,167,2.428,169,2.309,204,1.63,239,1.432,249,2.895,271,2.967,276,2.75,334,2.67,360,0.838,390,4.209,399,2.082,419,4.732,435,3.653,486,1.833,501,1.791,502,5.364,587,2.309,596,1.704,601,2.309,611,1.14,640,2.418,641,2.049,785,3.902,820,2.225,1150,4.209,1161,4.209,1525,4.209,2081,5.2,2530,6.341,2531,5.798,2532,5.798,2533,5.798,2534,4.612,2535,5.023,2536,4.612,2539,4.209,2540,3.653,2541,3.653,2543,5.637,2554,5.2,2555,5.637,2556,4.612,2557,4.209,2558,5.2,2559,5.2,2560,5.637,2561,5.2,2562,7.087,2563,5.637,2564,5.637]],["title/interfaces/State-12.html",[486,0.871,501,0.724,1898,3.685]],["body/interfaces/State-12.html",[2,0.041,3,0.041,6,0.036,21,0.103,22,0.256,24,0.875,25,0.256,26,0.006,27,0.332,32,0.061,34,0.067,58,3.337,78,0.932,79,0.839,96,1.239,100,2.352,114,0.003,115,0.003,142,2.137,167,3.674,169,2.684,186,2.401,249,2.278,271,2.073,276,3.241,360,0.7,419,4.857,486,1.319,501,1.825,520,3.071,522,3.071,552,3.424,572,1.9,607,1.111,611,1.127,1129,5.212,1140,3.634,1142,3.634,1658,4.849,2535,3.613,2540,2.553,2541,2.553,2554,3.634,2556,3.223,2557,2.941,2558,3.634,2559,3.634,2560,3.939,2561,3.634,2565,3.405,2566,8.863,2567,8.1,2568,9.054,2569,9.054,2570,8.1,2571,8.1,2572,4.403,2573,4.403,2574,4.403,2575,4.403,2576,4.403,2577,6.084,2578,3.939,2579,3.939,2580,4.403,2581,3.939,2582,4.403,2583,4.403,2584,3.405,2585,3.405,2586,4.403,2587,4.403,2588,4.403,2589,4.403,2590,4.403,2591,4.403,2592,4.403,2593,4.403,2594,4.403,2595,4.403]],["title/interfaces/State-13.html",[486,0.871,501,0.724,2596,4.119]],["body/interfaces/State-13.html",[2,0.054,3,0.054,6,0.047,21,0.134,22,0.307,25,0.162,26,0.006,27,0.433,32,0.123,34,0.067,96,1.295,114,0.004,115,0.004,142,2.126,167,2.21,169,2.416,204,1.484,239,1.883,249,2.725,271,2.7,276,3.047,281,1.991,334,2.43,360,0.802,390,3.83,399,2.464,419,4.918,435,3.324,486,1.754,501,1.814,502,5.132,572,1.506,587,1.672,596,1.551,601,2.174,611,1.037,669,2.53,676,1.895,785,3.55,815,2.251,820,2.025,1145,2.7,1146,4.732,1150,3.83,1161,4.981,1525,3.83,1658,4.383,2148,4.197,2530,6.066,2531,5.459,2532,5.459,2533,5.459,2534,4.197,2535,4.805,2536,4.197,2539,3.83,2540,3.324,2541,3.324,2549,4.732,2556,4.197,2557,3.83,2558,4.732,2559,4.732,2561,4.732,2563,5.13,2564,5.13,2578,5.13,2579,5.13,2581,5.13,2597,5.13,2598,8.496,2599,4.435,2600,5.13,2601,5.734,2602,5.734,2603,5.734]],["title/interfaces/State-2.html",[308,3.685,486,0.871,501,0.724]],["body/interfaces/State-2.html",[2,0.062,3,0.062,6,0.054,8,0.515,21,0.154,22,0.334,24,0.838,25,0.23,26,0.006,27,0.494,32,0.113,34,0.068,45,2.682,96,1.299,114,0.004,115,0.004,142,1.947,169,2.571,249,2.394,271,3.085,345,4.57,360,0.785,390,4.377,419,4.101,435,3.799,436,4.796,486,1.717,501,1.793,511,5.068,514,5.407,517,4.796,518,5.407,1647,7.128,1658,4.763,2535,5.113,2539,4.377,2540,3.799,2541,3.799,2604,5.862,2605,9.654,2606,5.862,2607,5.862,2608,6.553,2609,6.553]],["title/interfaces/State-3.html",[486,0.871,501,0.724,1545,3.685]],["body/interfaces/State-3.html",[2,0.062,3,0.062,6,0.054,21,0.154,22,0.334,24,0.838,25,0.23,26,0.006,27,0.494,32,0.092,34,0.068,58,3.433,114,0.004,115,0.004,142,2.035,167,3.399,169,2.571,186,2,249,2.394,271,3.085,360,0.785,419,4.456,435,3.799,436,4.796,437,5.407,486,1.717,501,1.793,520,4.57,522,4.57,552,3.167,1129,5.405,1658,4.65,2535,4.706,2539,4.377,2540,3.799,2541,3.799,2577,5.068,2584,5.068,2585,5.068,2606,5.862,2607,5.862,2610,5.862,2611,6.553,2612,6.553,2613,6.553]],["title/interfaces/State-4.html",[486,0.871,501,0.724,1894,3.685]],["body/interfaces/State-4.html",[2,0.03,3,0.03,6,0.027,8,0.253,17,1.689,21,0.075,22,0.203,25,0.091,26,0.006,32,0.123,34,0.073,58,2.946,74,2.302,75,1.935,78,1.422,79,0.909,96,1.279,100,1.959,114,0.003,115,0.003,169,2.965,239,1.749,240,4.07,242,0.323,249,2.201,271,3.433,360,0.312,456,2.605,486,1.274,495,2.491,496,3.621,497,2.357,498,7.308,501,1.766,502,1.994,503,2.491,517,2.357,592,1.777,596,1.972,607,1.3,611,1.222,785,3.063,888,4.463,890,2.491,1081,7.471,1082,2.881,1083,4.97,1084,6.046,1085,6.046,1086,4.082,1087,6.046,1088,4.082,1089,2.881,1090,2.881,1091,2.881,1092,2.881,1093,2.881,1094,2.881,1095,2.881,1096,2.881,1097,2.881,1098,2.881,1099,5.389,1100,2.881,1101,2.881,1102,2.881,1103,4.426,1104,2.881,1105,4.426,1106,2.881,1107,2.881,1108,2.881,1109,2.881,1110,2.881,1111,2.881,1112,3.826,1113,2.881,1114,2.881,1115,2.881,1116,2.881,1117,2.881,1118,2.881,1119,2.881,1120,2.881,1121,2.881,1122,2.881,1123,7.749,1124,2.881,1125,7.59,1126,2.881,1127,2.881,1128,2.881,1129,4.638,1130,2.881,1131,2.881,1132,2.881,1133,2.881,1134,2.881,1135,2.881,1136,2.881,1137,2.881,1138,2.881,1139,2.881,1140,2.658,1141,2.881,1142,2.658,1143,2.881,1144,4.426,1145,3.624,1146,4.082,1147,2.881,1148,6.524,1149,6.524,1150,4.023,1151,2.881,1152,6.524,1153,4.426,1154,6.524,1155,2.881,1156,6.524,1157,2.881,1158,2.881,1159,4.658,1160,2.881,1161,4.023,1162,5.389,1163,2.881,1164,2.881,1165,2.881,1166,2.881,1167,2.881,1168,2.881,1169,5.389,1170,2.881,1171,2.881,1172,2.881,1173,2.881,1174,2.881,1175,4.426,1176,2.881,1177,4.082,1178,2.881,1179,2.881,1180,4.426,1181,2.881,1182,2.881,1183,2.881,1184,2.881,1185,7.59,1186,2.881,1187,2.881,1188,2.881,1189,2.881,1190,2.881,1191,2.881,1192,2.881,1193,2.881,1194,2.881,1195,2.881,1196,2.881,1197,2.881,1198,2.881,1199,2.658,1200,2.881,1201,2.658,1202,2.881,1203,4.426,1204,2.881,1205,4.082,1206,2.881,1207,2.881,1208,4.426,1209,2.881,1210,2.881,1211,2.881,1212,2.881,1213,2.881,1214,2.881,1215,2.881,1216,2.881,1217,2.881,1218,2.881,1219,2.881,1220,2.881,1221,2.151,1222,2.658,1223,7.401,1224,2.881,1225,2.658,1226,2.881,1227,2.658,1228,2.881,1229,2.658,1230,2.881,1231,2.881,1232,2.658,1233,2.881,1234,2.658,1235,2.881,1236,2.658,1237,2.881]],["title/interfaces/State-5.html",[486,0.871,501,0.724,2614,4.119]],["body/interfaces/State-5.html",[2,0.048,3,0.048,6,0.042,21,0.12,22,0.284,23,2.245,24,0.929,25,0.266,26,0.006,27,0.385,32,0.096,34,0.069,39,2.353,114,0.004,115,0.004,142,2.172,167,3.015,169,2.773,186,1.558,242,0.512,271,2.403,360,0.494,419,4.939,486,1.46,497,3.735,498,3.735,501,1.814,529,4.072,552,3.511,707,2.206,708,2.984,713,2.79,714,2.715,719,2.403,724,2.206,726,3.325,731,4.156,735,2.458,740,2.79,741,2.79,742,2.79,743,2.79,746,2.79,747,2.79,748,2.79,749,2.79,750,2.79,752,2.79,754,2.79,755,3.488,890,3.947,894,6.294,901,6.294,940,4.211,958,7.744,967,5.848,1079,4.611,1222,4.211,1225,4.211,1227,4.211,1229,4.211,1232,4.211,1234,4.211,1236,4.211,1562,6.754,1564,3.735,2271,8.067,2525,4.211,2535,4.002,2540,2.959,2541,2.959,2615,4.566,2616,5.104,2617,5.104,2618,5.104,2619,5.104,2620,5.104,2621,5.104,2622,5.104,2623,5.104]],["title/interfaces/State-6.html",[486,0.871,501,0.724,2348,3.399]],["body/interfaces/State-6.html",[2,0.057,3,0.057,6,0.05,21,0.142,22,0.318,24,0.81,25,0.219,26,0.006,27,0.459,32,0.085,34,0.066,58,3.442,75,1.527,100,2.77,114,0.004,115,0.004,142,2.046,167,3.283,169,2.484,186,1.855,249,2.829,271,2.861,276,3.114,360,0.824,419,4.971,486,1.638,501,1.806,520,4.239,522,4.239,552,3.06,572,1.596,592,3.06,1129,5.378,1658,4.636,1943,4.7,1944,4.7,2535,4.488,2540,3.523,2541,3.523,2565,4.7,2577,4.7,2584,4.7,2585,4.7,2624,5.015,2625,5.437,2626,5.437,2627,6.077,2628,6.077,2629,5.437,2630,5.437,2631,5.437,2632,6.077,2633,6.077,2634,6.077,2635,6.077]],["title/interfaces/State-7.html",[486,0.871,501,0.724,2353,3.685]],["body/interfaces/State-7.html",[2,0.055,3,0.055,6,0.048,21,0.137,22,0.31,25,0.166,26,0.006,27,0.441,32,0.123,34,0.067,114,0.004,115,0.004,142,2.106,167,2.252,169,2.438,204,1.512,239,1.715,249,2.759,271,2.751,276,2.904,281,2.029,334,2.476,360,0.809,390,3.904,399,2.495,419,4.884,435,3.388,486,1.77,501,1.809,502,5.179,592,3.426,593,2.579,594,2.428,596,1.58,601,2.201,611,1.057,669,2.553,785,3.619,815,2.294,820,2.063,1145,2.751,1150,3.904,1161,5.043,1177,4.823,1525,3.904,1658,4.258,1943,4.519,1944,4.519,2148,4.278,2530,6.122,2531,5.526,2532,5.526,2533,5.526,2534,4.278,2535,4.849,2536,4.278,2539,3.904,2540,3.388,2541,3.388,2549,4.823,2624,4.823,2625,5.228,2626,5.228,2629,5.228,2630,5.228,2631,5.228,2636,5.228,2637,9.375,2638,5.844,2639,5.844,2640,5.844,2641,5.844,2642,5.844,2643,5.844,2644,5.844,2645,5.844]],["title/interfaces/State-8.html",[486,0.871,501,0.724,2354,3.685]],["body/interfaces/State-8.html",[2,0.059,3,0.059,6,0.052,26,0.006,27,0.475,32,0.127,34,0.067,78,1.36,96,1.286,114,0.004,115,0.004,142,2.068,167,2.428,169,2.309,204,1.63,239,1.432,249,2.895,271,2.967,276,2.75,334,2.67,360,0.838,390,4.209,399,2.082,419,4.732,435,3.653,486,1.833,501,1.791,502,5.364,587,2.309,596,1.704,601,2.309,611,1.14,676,2.082,785,3.902,820,2.225,1150,4.209,1161,4.209,1525,4.209,2047,4.209,2147,4.612,2530,6.341,2531,5.798,2532,5.798,2533,5.798,2534,4.612,2535,5.023,2536,4.612,2537,5.2,2538,5.2,2539,4.209,2540,3.653,2541,3.653,2548,5.637,2550,5.2,2551,5.637,2562,7.087,2599,4.873,2600,5.637,2646,5.2,2647,5.637,2648,6.301]],["title/interfaces/State-9.html",[486,0.871,501,0.724,2649,4.119]],["body/interfaces/State-9.html",[2,0.042,3,0.042,6,0.037,21,0.106,22,0.261,24,0.91,25,0.258,26,0.006,27,0.341,32,0.063,34,0.068,58,3.351,78,1.386,79,0.854,96,0.854,100,2.385,114,0.003,115,0.003,142,2.095,167,3.617,169,2.7,186,2.239,249,2.318,271,2.126,276,3.258,360,0.71,419,4.742,486,1.342,501,1.824,520,3.149,522,3.149,552,3.439,572,1.926,607,1.131,611,1.147,1129,5.235,1199,3.726,1201,3.726,1658,4.837,2047,3.016,2123,8.152,2147,3.305,2535,3.678,2537,3.726,2538,3.726,2540,2.618,2541,2.618,2542,4.039,2544,4.039,2546,4.039,2550,3.726,2565,3.492,2577,5.672,2584,3.492,2585,3.492,2646,3.726,2650,8.927,2651,9.112,2652,9.112,2653,8.381,2654,8.381,2655,4.515,2656,4.515,2657,4.515,2658,4.515,2659,4.515,2660,4.515,2661,4.515,2662,4.515,2663,4.515,2664,4.515,2665,4.515,2666,4.515,2667,4.515,2668,4.515,2669,4.515,2670,4.515]],["title/injectables/ThemeService.html",[329,1.462,900,3.444]],["body/injectables/ThemeService.html",[1,1.776,2,0.046,3,0.046,6,0.041,19,2.137,21,0.116,22,0.278,24,0.642,25,0.253,26,0.006,27,0.51,28,0.478,30,0.62,32,0.107,33,1.017,34,0.035,35,0.222,42,0.897,114,0.004,115,0.004,122,1.941,126,2.031,127,1.221,133,0.677,137,1.013,138,0.8,142,1.826,143,2.971,167,3.527,169,1.441,186,2.349,214,2.959,281,1.716,329,2.448,346,2.228,486,1.046,552,1.776,579,6.044,722,1.776,900,4.712,997,7.377,1112,3.823,1493,6.825,1494,6.044,1503,7.551,1509,7.551,1558,3.302,1559,3.448,1574,3.175,1589,3.302,1591,3.448,1592,3.448,1691,8.08,1692,4.423,1693,8.453,1694,8.453,1695,8.334,1696,7.399,1697,6.044,1698,6.044,1699,6.044,1700,6.044,1701,6.044,1702,6.044,1703,6.044,1704,6.044,1705,7.997,1706,4.423,1707,4.423,1708,4.423,1709,4.423,1710,6.044,1711,8.186,1712,4.423,1713,4.423,1714,4.423,1715,4.423,1716,6.044,1717,4.423,1718,4.423,1719,6.044,1720,4.423,1721,4.423,1722,4.423,1723,6.044,1724,4.423,1725,6.044,1726,4.423,1727,6.044,1728,4.423,1729,7.399,1730,4.423,1731,4.423,1732,4.423,1733,4.423,2671,6.756,2672,6.756,2673,4.944,2674,6.756,2675,4.944,2676,4.944,2677,4.944,2678,4.944,2679,4.944]],["title/classes/TransitioningLayout.html",[35,0.222,729,2.559]],["body/classes/TransitioningLayout.html",[2,0.043,3,0.043,6,0.037,8,0.356,21,0.106,22,0.261,23,2.067,24,0.881,25,0.282,26,0.006,27,0.342,28,0.438,30,0.498,32,0.063,34,0.069,35,0.434,39,2.031,42,0.415,114,0.003,115,0.003,127,0.869,133,0.454,137,0.555,138,0.438,242,0.454,360,0.946,456,3.789,529,3.703,552,3.209,589,1.521,597,0.708,620,1.543,621,1.607,705,3.807,706,2.409,707,2.749,708,3.862,709,4.406,710,1.029,713,2.476,714,2.409,715,3.807,716,2.928,717,3.712,718,3.807,719,2.993,720,4.587,721,3.807,722,3.275,723,3.807,724,3.176,725,3.807,726,2.182,727,3.807,728,2.476,729,4.128,730,4.016,731,3.383,732,2.641,733,3.807,734,4.237,735,3.062,736,3.807,737,3.807,738,3.476,739,2.476,740,2.476,741,2.476,742,2.476,743,2.476,744,3.577,745,3.577,746,2.476,747,2.476,748,3.476,749,2.476,750,2.476,751,2.548,752,2.476,753,2.548,754,2.476,755,2.289,2680,6.358,2681,4.53]],["title/classes/UseBreadcrumb.html",[35,0.222,731,2.274]],["body/classes/UseBreadcrumb.html",[2,0.043,3,0.043,6,0.037,8,0.356,21,0.106,22,0.261,23,2.067,24,0.881,25,0.282,26,0.006,27,0.342,28,0.438,30,0.498,32,0.063,34,0.069,35,0.434,39,2.031,42,0.415,114,0.003,115,0.003,127,0.869,133,0.454,137,0.555,138,0.438,242,0.454,360,0.946,456,3.769,529,3.839,552,3.209,589,1.521,597,0.708,620,1.543,621,1.607,705,3.807,706,2.409,707,2.749,708,3.862,709,4.406,710,1.029,713,2.476,714,2.409,715,3.807,716,2.928,717,3.712,718,3.807,719,2.993,720,4.587,721,3.807,722,3.275,723,3.807,724,3.176,725,3.807,726,2.182,727,3.807,728,2.476,729,3.807,730,3.476,731,3.668,732,3.052,733,3.807,734,4.237,735,3.062,736,3.807,737,3.807,738,3.476,739,2.476,740,2.476,741,2.476,742,2.476,743,2.476,744,3.577,745,3.577,746,2.476,747,2.476,748,2.476,749,3.476,750,2.476,751,2.548,752,2.476,753,2.548,754,2.476,755,2.289,2682,6.358,2683,4.53]],["title/interfaces/User.html",[96,0.664,486,1.045]],["body/interfaces/User.html",[2,0.056,3,0.056,6,0.05,21,0.141,22,0.316,24,0.99,25,0.286,26,0.006,32,0.084,34,0.043,42,0.818,96,1.033,114,0.004,115,0.004,138,1.004,486,1.625,640,1.832,669,2.996,1145,4.203,1387,3.94,1398,5.344,1646,6.227,1648,5.733,1649,5.733,1658,4.547,1664,6.905,2154,7.368,2684,6,2685,8.928,2686,7.368,2687,7.987,2688,7.368,2689,8.928,2690,6]],["title/components/UserEditFormComponent.html",[0,1.075,95,1.869]],["body/components/UserEditFormComponent.html",[0,1.47,1,0.983,2,0.026,3,0.026,4,1.074,5,1.074,6,0.036,9,1.035,13,1.908,16,0.966,17,3.37,18,3.519,20,1.074,21,0.064,22,0.223,23,1.764,24,0.717,25,0.258,26,0.006,27,0.543,28,0.8,30,0.642,32,0.122,33,0.563,34,0.02,35,0.196,36,0.934,37,1.709,38,1.709,39,1.11,40,2.427,41,1.074,42,0.619,43,1.074,44,0.966,45,0.904,46,1.709,47,1.017,48,1.074,49,1.035,50,1.074,51,1,52,1.074,53,1,54,1.074,55,1.035,56,1.074,57,1.035,58,2.147,59,0.966,60,0.862,61,1.074,62,1.035,63,1.074,64,1.709,65,1.017,66,1.074,67,0.966,68,1.074,69,1.035,70,1.074,71,1.035,72,1.074,73,1.017,74,0.785,75,0.687,76,2.65,77,1.035,78,1.128,79,1.364,80,1.017,81,1.035,82,1.709,83,1.017,84,1.074,85,1.035,86,1.709,87,1.035,88,1.074,89,1.035,90,1.074,91,0.966,92,1.074,93,0.966,94,1.074,95,2.34,96,1.328,97,1.017,98,1.035,99,1.017,100,1.416,101,1,102,1.074,103,1.017,104,1.074,105,0.983,106,1.074,107,1.017,108,1.074,109,1.017,110,1.074,111,1.017,112,1.054,113,1.074,114,0.002,115,0.002,118,0.516,119,2.129,122,3.072,126,1.309,127,0.741,131,2.427,133,0.274,137,0.533,138,0.421,142,1.665,143,3.085,158,0.904,160,1.455,164,1.495,167,1.054,169,1.802,186,1.329,188,1.495,225,1.115,230,1.115,239,1.232,240,3.047,242,0.274,249,1,268,3.97,281,0.95,343,3.622,362,3.713,363,2.847,364,5.141,380,2.267,412,3.726,422,2.002,439,1.908,447,1.694,450,4.514,472,1.455,501,0.765,528,3.246,530,1.845,534,3.701,559,2.002,572,1.143,605,2.009,611,0.787,640,0.835,655,1.564,676,0.904,686,2.847,689,2.978,722,0.983,732,1.809,779,3.037,787,1.586,808,3.367,810,2.043,939,1.539,947,2.81,1051,6.535,1088,5.102,1129,1.495,1145,2.554,1267,1.694,1398,2.606,1448,6.053,1454,5.102,1456,3.97,1459,5.179,1461,2.257,1468,3.358,1472,1.827,1646,5.015,1648,2.796,1649,2.796,1664,2.116,1766,3.187,1910,2.116,1922,2.002,1923,3.187,1928,3.97,1929,4.526,1932,2.257,1934,2.257,1936,2.116,1948,2.002,1950,1.827,1955,1.908,2013,4.852,2014,4.782,2015,5.532,2016,4.526,2019,6.433,2021,6.039,2022,5.532,2025,2.447,2026,2.447,2029,2.447,2033,2.447,2034,2.447,2038,2.447,2039,2.447,2040,2.447,2041,2.447,2043,2.116,2044,2.447,2045,2.447,2046,3.367,2050,2.447,2051,2.447,2052,2.447,2053,2.447,2055,2.447,2056,2.447,2057,2.447,2058,2.447,2059,2.447,2060,2.116,2061,4.852,2063,3.367,2068,3.895,2070,2.447,2071,2.447,2072,2.447,2073,2.447,2074,3.895,2076,2.447,2077,2.447,2086,2.447,2088,2.447,2089,2.257,2090,2.447,2092,2.116,2093,2.116,2095,2.116,2096,2.116,2098,2.447,2100,2.447,2103,3.593,2104,2.447,2105,2.447,2106,2.447,2107,2.447,2114,2.447,2115,2.257,2120,3.593,2121,3.593,2144,2.257,2427,3.593,2434,2.447,2435,2.447,2557,1.827,2570,5.532,2571,5.532,2599,2.116,2686,2.257,2688,2.257,2691,7.732,2692,6.183,2693,4.354,2694,2.736,2695,4.354,2696,2.736,2697,2.736,2698,2.736,2699,2.736,2700,4.354,2701,4.354,2702,4.354,2703,2.736,2704,2.447,2705,2.736,2706,2.447,2707,4.354,2708,2.736,2709,4.354,2710,4.354,2711,2.736,2712,2.736,2713,2.736,2714,2.736,2715,2.736,2716,2.736,2717,2.736,2718,2.736,2719,5.532,2720,4.354,2721,2.736,2722,2.736,2723,2.736,2724,2.736,2725,2.736,2726,2.736,2727,2.736,2728,2.736,2729,2.736,2730,2.736,2731,4.354,2732,3.895,2733,4.354,2734,4.354,2735,4.354]],["title/components/UserFormComponent.html",[0,1.075,97,1.836]],["body/components/UserFormComponent.html",[0,1.558,1,1.11,2,0.029,3,0.029,4,1.213,5,1.213,6,0.026,9,1.17,16,1.091,17,3.409,18,3.548,20,1.213,21,0.072,22,0.197,23,1.558,24,0.455,25,0.251,26,0.006,27,0.54,28,0.692,30,0.621,32,0.124,33,0.635,34,0.022,35,0.139,36,1.055,37,1.881,38,1.881,39,1.222,40,2.595,41,1.213,42,0.656,43,1.213,44,1.091,45,1.021,46,1.881,47,1.149,48,1.213,49,1.17,50,1.213,51,1.129,52,1.213,53,1.129,54,1.213,55,1.17,56,1.213,57,1.17,58,2.296,59,1.091,60,0.973,61,1.213,62,1.17,63,1.213,64,1.881,65,1.149,66,1.213,67,1.091,68,1.213,69,1.17,70,1.213,71,1.17,72,1.213,73,1.149,74,1.685,75,1.475,76,2.809,77,1.17,78,0.989,79,0.645,80,1.149,81,1.17,82,1.881,83,1.149,84,1.213,85,1.17,86,1.881,87,1.17,88,1.213,89,1.17,90,1.213,91,1.091,92,1.213,93,1.091,94,1.213,95,1.17,96,1.263,97,2.459,98,1.17,99,1.149,100,1.005,101,1.129,102,1.213,103,1.149,104,1.213,105,1.11,106,1.213,107,1.149,108,1.213,109,1.149,110,1.213,111,1.149,112,1.191,113,1.213,114,0.003,115,0.004,118,0.568,119,2.304,122,1.881,126,1.44,127,1.252,131,2.595,133,0.48,137,0.587,138,0.464,142,1.58,143,2.108,158,1.021,169,2.086,186,0.943,225,1.259,230,1.259,239,0.702,240,3.346,242,0.31,249,1.129,265,1.309,276,1.073,281,1.664,329,0.915,343,3.946,360,0.568,362,4.048,363,3.486,364,5.3,368,1.913,380,1.764,384,1.601,412,3.426,422,2.262,439,2.155,440,3.201,445,2.155,450,5.126,472,1.644,501,0.842,530,2.03,592,2.57,594,1.284,605,2.324,607,1.046,609,1.335,611,0.867,630,2.109,676,1.021,716,2.206,722,1.11,759,3.513,761,4.443,762,4.139,764,3.923,766,3.706,770,2.39,775,3.342,779,5.28,939,1.738,1051,6.449,1129,2.619,1159,2.39,1267,1.913,1387,3.698,1398,1.85,1456,4.246,1459,3.077,1470,5.113,1646,2.155,1648,1.984,1649,1.984,1658,1.488,1916,5.456,1919,2.55,1922,2.262,1923,3.507,1927,2.55,1928,4.296,1929,4.84,1933,2.39,1936,2.39,1939,2.55,1940,2.55,1941,2.55,1942,2.55,1946,2.55,1948,2.262,1950,3.92,1955,4.093,1977,2.262,2036,2.55,2043,2.39,2092,2.39,2093,2.39,2095,2.39,2096,2.39,2116,3.954,2124,6.773,2125,5.915,2128,4.287,2129,2.764,2130,4.287,2131,4.287,2132,2.764,2133,4.287,2134,2.764,2135,2.764,2136,2.764,2138,2.764,2139,2.764,2141,2.764,2142,4.287,2143,4.287,2144,2.55,2145,4.287,2146,2.764,2148,2.262,2149,2.55,2150,2.764,2152,2.55,2153,4.287,2154,2.55,2155,2.764,2156,2.764,2157,2.764,2158,5.25,2159,2.764,2160,2.764,2161,2.55,2162,2.764,2163,2.764,2164,5.25,2165,2.764,2166,2.764,2174,4.84,2175,4.287,2177,4.287,2178,4.287,2179,4.287,2180,4.287,2181,4.287,2556,2.262,2557,2.064,2567,5.915,2691,7.63,2732,4.287,2736,7.571,2737,7.156,2738,4.792,2739,4.792,2740,3.09,2741,3.09,2742,3.09,2743,2.55,2744,3.09,2745,3.09,2746,3.09,2747,4.792]],["title/components/UserListComponent.html",[0,1.075,98,1.869]],["body/components/UserListComponent.html",[0,1.848,1,1.158,2,0.03,3,0.03,4,1.266,5,1.266,6,0.027,8,0.253,9,1.221,13,2.25,16,1.139,17,3.422,18,3.59,20,1.266,21,0.076,22,0.204,24,0.643,25,0.245,26,0.006,27,0.551,28,0.706,30,0.627,32,0.123,33,0.663,34,0.023,35,0.145,36,1.101,37,1.944,38,3.148,39,1.263,40,2.655,41,1.266,42,0.854,43,1.266,44,1.139,45,1.066,46,1.944,47,1.199,48,1.266,49,1.221,50,1.266,51,1.179,52,1.266,53,1.179,54,1.266,55,1.221,56,1.266,57,1.221,58,1.72,59,1.139,60,1.016,61,1.266,62,1.221,63,1.266,64,1.944,65,1.199,66,1.266,67,1.139,68,1.266,69,1.221,70,1.266,71,1.221,72,1.266,73,1.199,74,0.926,75,0.811,76,2.864,77,1.221,78,1.012,79,0.666,80,1.199,81,1.221,82,1.944,83,1.199,84,1.266,85,1.221,86,1.944,87,1.221,88,1.266,89,1.221,90,1.266,91,1.139,92,1.266,93,1.139,94,1.266,95,1.221,96,1.362,97,1.842,98,2.916,99,1.199,100,1.049,101,1.179,102,1.266,103,1.199,104,1.266,105,1.158,106,1.266,107,1.199,108,1.266,109,1.199,110,1.266,111,1.199,112,1.243,113,1.266,114,0.003,115,0.003,118,0.587,119,2.366,122,2.655,126,1.489,127,0.824,131,2.655,133,0.678,137,0.738,138,0.583,142,1.771,143,3.049,153,4.975,158,1.066,160,1.716,167,1.243,169,0.94,186,1.512,191,2.708,225,1.314,230,1.314,239,1.969,240,3.597,242,0.323,249,1.179,265,2.099,276,2.093,343,3.84,360,0.583,361,4.343,362,2.81,363,3.547,368,1.997,370,2.154,412,3.781,419,2.503,429,1.56,438,3.921,447,1.997,450,4.801,528,3.609,530,2.099,534,4.048,569,4.048,607,0.575,676,1.066,678,2.386,722,1.779,732,2.058,764,1.671,787,2.871,809,4.027,939,1.815,953,3.625,1037,8.338,1045,3.83,1051,2.25,1052,2.071,1129,1.763,1145,3.436,1410,2.25,1413,2.25,1530,2.494,1574,2.071,1658,2.904,1664,3.83,1766,3.625,2014,5.231,2016,4.951,2046,3.83,2060,2.494,2063,3.83,2174,2.361,2182,2.886,2183,5.394,2184,4.431,2185,6.051,2188,4.431,2189,4.662,2194,2.886,2196,6.051,2197,4.431,2198,4.431,2199,4.431,2200,4.431,2203,2.886,2213,2.886,2214,2.886,2218,2.886,2219,2.886,2224,2.886,2225,2.886,2227,2.886,2427,2.662,2557,2.154,2686,4.087,2687,4.431,2688,4.087,2691,7.691,2704,2.886,2706,2.886,2748,7.703,2749,6.764,2750,6.764,2751,3.226,2752,3.226,2753,3.226,2754,3.226,2755,3.226,2756,4.953,2757,3.226,2758,7.752,2759,4.953,2760,4.953,2761,4.953,2762,4.953,2763,4.953,2764,4.953,2765,3.226,2766,4.953,2767,4.953,2768,3.226,2769,3.226,2770,4.953,2771,3.226,2772,3.226,2773,3.226,2774,4.953,2775,3.226,2776,2.886,2777,3.226,2778,3.226,2779,4.953,2780,3.226,2781,3.226,2782,4.953,2783,3.226,2784,3.226]],["title/components/UsersComponent.html",[0,1.075,99,1.836]],["body/components/UsersComponent.html",[0,1.856,1,1.699,2,0.044,3,0.044,4,1.857,5,1.857,6,0.039,8,0.515,9,1.79,16,1.67,17,3.518,18,3.723,20,1.857,21,0.111,22,0.269,23,2.445,25,0.186,26,0.006,27,0.357,28,0.458,30,0.51,32,0.126,33,0.973,34,0.034,35,0.213,36,1.615,37,2.572,38,2.572,39,1.671,40,3.186,41,1.857,42,0.744,43,1.857,44,1.67,45,1.563,46,2.572,47,1.759,48,1.857,49,1.79,50,1.857,51,1.728,52,1.857,53,1.728,54,1.857,55,1.79,56,1.857,57,1.79,58,1.642,59,1.67,60,1.49,61,1.857,62,1.79,63,1.857,64,2.572,65,1.759,66,1.857,67,1.67,68,1.857,69,1.79,70,1.857,71,1.79,72,1.857,73,1.759,74,1.358,75,1.189,76,3.346,77,1.79,78,1.214,79,0.882,80,1.759,81,1.79,82,2.572,83,1.759,84,1.857,85,1.79,86,2.572,87,1.79,88,1.857,89,1.79,90,1.857,91,1.67,92,1.857,93,1.67,94,1.857,95,1.79,96,1.275,97,2.437,98,1.79,99,3.019,100,2.772,101,1.728,102,1.857,103,1.759,104,1.857,105,1.699,106,1.857,107,1.759,108,1.857,109,1.759,110,1.857,111,1.759,112,1.823,113,1.857,114,0.004,115,0.004,122,3.186,126,1.97,133,0.814,137,0.579,138,0.458,142,1.045,143,1.699,158,1.563,186,1.444,225,1.928,230,1.928,239,1.489,240,3.965,242,0.474,249,1.728,265,2.004,276,1.642,343,3.372,361,5.213,362,3.542,363,3.738,429,1.946,438,4.706,447,2.929,450,3.922,456,2.526,530,2.777,761,2.661,762,2.586,764,3.396,794,2.742,796,3.037,815,1.857,939,2.661,1051,3.299,1052,3.037,1145,3.085,1458,5.408,1992,3.462,2189,5.815,2232,5.408,2233,5.408,2236,7.262,2245,4.232,2246,4.232,2598,7.262,2785,4.73,2786,6.553,2787,4.73,2788,4.73,2789,6.553,2790,4.73,2791,4.73,2792,4.73,2793,4.232,2794,4.73]],["title/injectables/UsersEffects.html",[329,1.462,1027,4.075]],["body/injectables/UsersEffects.html",[2,0.025,3,0.025,6,0.022,8,0.211,21,0.063,22,0.176,23,2.317,25,0.121,26,0.006,27,0.586,28,0.752,30,0.557,32,0.123,33,0.551,34,0.019,35,0.121,42,0.246,78,0.914,79,0.576,96,1.322,97,0.997,114,0.004,115,0.002,122,2.797,127,0.731,133,0.613,135,4.026,137,0.328,138,0.259,142,2.113,156,1.322,158,0.886,160,1.426,167,2.062,169,2.738,171,2.41,186,1.308,225,1.092,230,1.092,233,3.574,240,3.292,242,0.269,248,1.721,265,1.136,276,2.32,281,2.966,303,3.917,329,1.584,341,3.785,343,2.539,353,6.943,358,5.511,359,2.073,360,0.827,361,4.576,362,2.223,363,2.815,369,6.8,370,6.273,373,5.511,380,2.336,382,6.009,384,4.026,388,2.073,391,4.891,393,4.138,401,5.168,403,3.313,404,3.313,405,5.511,406,5.511,407,5.511,408,4.576,409,5.511,410,5.511,411,5.511,412,4.257,414,3.313,419,3.088,428,2.988,429,2.073,431,1.962,432,2.073,438,3.544,440,3.574,595,0.806,596,0.725,603,1.288,604,1.092,605,1.899,607,1.27,609,1.194,611,1.105,630,1.194,640,1.634,641,0.872,669,1.308,676,0.886,681,2.878,682,2.944,683,2.944,686,2.815,690,2.944,707,1.852,761,4.009,762,2.342,764,2.773,794,2.484,796,2.751,797,3.136,809,4.083,870,4.009,873,4.009,1027,3.535,1036,2.398,1051,1.87,1052,1.721,1145,2.017,1468,2.653,1888,3.313,1964,5.881,1971,3.535,1972,5.044,1973,5.044,1977,4.474,1983,5.881,1984,3.535,1985,5.881,1992,3.136,1997,2.212,2169,3.535,2257,3.833,2263,5.468,2264,3.833,2265,3.833,2269,3.833,2271,5.044,2283,3.833,2284,3.833,2510,3.833,2556,1.962,2557,1.791,2599,3.313,2719,3.833,2743,5.044,2776,5.468,2793,3.833,2795,2.681,2796,6.113,2797,6.412,2798,2.681,2799,4.284,2800,4.284,2801,4.284,2802,4.284,2803,4.284,2804,4.284,2805,4.284,2806,2.681,2807,4.284,2808,4.284,2809,2.681,2810,4.284,2811,4.284,2812,2.681,2813,4.284,2814,4.284,2815,4.284,2816,4.284,2817,4.284,2818,4.284,2819,4.284,2820,6.113,2821,6.113,2822,2.681,2823,4.284,2824,2.681,2825,3.833,2826,4.284,2827,4.284,2828,4.284,2829,4.284,2830,7.771,2831,4.284,2832,4.284,2833,4.284,2834,4.284,2835,4.284,2836,2.681,2837,4.284,2838,4.284,2839,4.284,2840,4.284,2841,4.284,2842,2.681,2843,4.284,2844,2.681,2845,2.681,2846,2.681]],["title/injectables/UsersService.html",[329,1.462,2797,4.075]],["body/injectables/UsersService.html",[2,0.048,3,0.048,6,0.042,8,0.688,18,3.059,19,2.201,21,0.119,25,0.255,26,0.006,30,0.625,32,0.129,33,1.047,34,0.036,35,0.229,42,0.826,78,1.031,79,0.927,96,1.391,114,0.004,115,0.004,126,2.071,133,0.51,137,1.104,138,0.873,142,2.158,158,1.682,188,2.783,221,6.128,223,3.551,231,3.401,232,3.551,275,3.482,276,3.037,277,4.807,281,2.393,329,2.313,335,3.937,341,5.584,343,4.086,346,2.294,347,3.937,366,5.687,511,6.475,595,2.711,596,1.377,607,1.229,640,1.554,641,1.656,655,2.475,669,2.753,676,1.682,681,3.245,686,3.174,689,3.32,947,3.571,1145,4.416,1831,5.044,2005,6.909,2295,5.687,2315,4.555,2743,4.201,2797,5.687,2847,5.091,2848,6.892,2849,6.892,2850,5.091,2851,6.892,2852,5.091,2853,6.892,2854,5.091,2855,6.892,2856,5.091,2857,6.892,2858,5.091,2859,6.892,2860,5.091,2861,6.892,2862,5.091,2863,6.892,2864,5.091,2865,5.091,2866,5.091,2867,5.091,2868,5.091,2869,5.091,2870,5.091]],["title/dependencies.html",[191,3.248,2871,3.685]],["body/dependencies.html",[26,0.006,33,1.377,114,0.004,115,0.004,156,3.302,158,2.213,191,3.661,208,7.36,209,6.362,214,4.008,225,3.785,226,5.991,227,4.902,230,2.729,237,5.179,238,4.902,240,3.486,242,0.825,244,5.526,246,5.991,248,4.3,265,2.837,368,4.146,456,2.581,472,3.562,596,1.811,938,5.179,1012,5.179,1013,5.179,1044,5.991,1045,6.362,1047,5.991,1048,5.991,1050,5.991,2519,5.991,2825,5.991,2872,6.697,2873,9.534,2874,6.697,2875,9.831,2876,6.697,2877,6.697,2878,6.697,2879,6.697,2880,6.697,2881,9.534,2882,6.697,2883,8.227,2884,6.697,2885,6.697,2886,6.697,2887,6.697,2888,6.697,2889,6.697,2890,6.697,2891,6.697,2892,6.697,2893,6.697,2894,6.697,2895,6.697,2896,6.697]],["title/miscellaneous/enumerations.html",[2897,2.873,2898,5.316]],["body/miscellaneous/enumerations.html",[21,0.083,23,1.152,25,0.201,26,0.006,28,1.009,39,1.357,45,2.111,60,2.012,74,1.018,75,1.605,78,1.515,79,1.229,96,1.366,100,2.077,114,0.003,115,0.003,204,1.653,239,1.451,333,3.751,334,3.385,355,1.938,356,1.938,357,2.367,360,0.687,395,2.055,399,3.107,420,1.938,429,1.377,456,3.594,501,1.122,529,2.818,572,2.289,584,1.836,585,2.45,586,2.83,587,1.862,592,3.582,598,2.908,599,1.836,600,1.836,601,1.862,602,1.791,603,1.92,604,1.94,605,2.027,606,1.748,607,1.583,608,1.791,609,2.308,610,1.791,611,1.701,612,1.836,613,2.477,614,1.836,615,2.012,616,1.836,617,1.836,618,1.836,636,1.748,637,1.791,642,2.757,643,1.707,644,1.748,645,1.748,646,1.669,647,1.707,648,1.707,649,1.748,650,1.748,651,1.632,652,1.748,653,1.748,654,1.707,655,1.911,656,1.748,672,1.748,673,1.791,677,2.757,678,1.707,679,1.748,680,1.748,681,1.669,682,1.707,683,1.707,684,1.748,685,1.748,686,1.632,687,1.748,688,1.748,689,1.707,690,1.707,705,1.836,706,1.885,707,1.532,708,2.761,709,2.623,714,2.83,715,1.836,716,1.632,717,3.227,718,1.836,719,1.669,720,3.491,721,1.836,722,2.549,723,1.836,724,1.532,725,1.836,726,1.707,727,1.836,728,1.938,729,1.836,730,1.938,731,1.632,732,1.472,733,1.836,734,2.83,735,1.707,736,1.836,737,1.836,738,1.938,739,1.938,759,3.184,813,2.194,814,3.061,816,3.436,820,2.255,821,3.554,822,2.194,823,5.336,824,2.194,825,2.194,826,2.194,827,2.194,838,2.055,839,2.121,843,3.294,844,1.994,845,4.946,846,2.055,847,2.055,848,2.055,849,2.055,850,2.055,851,4.379,852,2.055,866,2.055,867,2.121,869,3.294,870,1.994,871,2.055,872,2.055,873,1.994,874,2.055,875,2.055,876,2.055,1384,2.472,1385,2.83,1386,3.894,1387,3.132,1391,4.114,1392,2.741,1393,3.554,1394,2.741,1395,2.741,1423,1.994,1424,3.084,1428,3.184,1429,5.218,1430,1.994,1431,1.994,1432,1.994,1433,1.994,1434,1.994,1826,2.594,1829,4.114,1830,2.472,2897,2.472,2898,3.171,2899,3.171,2900,4.759,2901,3.171,2902,4.39,2903,3.171,2904,2.925,2905,3.171,2906,2.925]],["title/miscellaneous/functions.html",[271,2.798,2897,2.873]],["body/miscellaneous/functions.html",[8,0.636,21,0.128,22,0.224,26,0.005,42,0.922,75,1.814,78,1.288,96,1.158,100,2.63,114,0.004,115,0.004,137,1.232,138,0.977,206,4.881,209,4.219,238,3.993,240,3.427,249,3.783,270,6.458,271,3.398,272,4.881,273,4.881,274,4.881,275,2.757,276,1.894,277,5.034,278,4.502,279,4.881,280,4.881,285,4.881,286,4.881,287,4.881,297,4.881,298,4.881,299,4.502,300,7.237,312,6.458,316,6.458,360,0.989,501,1.768,560,3.805,592,2.592,1558,4.821,1585,3.993,2514,4.881,2522,6.458,2523,4.881,2525,8.096,2526,4.881,2528,6.458,2529,4.881,2554,5.956,2555,6.458,2565,7.114,2597,4.881,2604,4.881,2610,4.881,2615,4.881,2624,5.956,2636,6.458,2646,5.956,2647,6.458,2758,4.881,2897,3.805,2902,5.956,2904,5.956,2906,5.956,2907,8.089,2908,5.456,2909,7.218,2910,5.456,2911,5.456,2912,5.456,2913,5.456,2914,5.456,2915,5.456,2916,5.456,2917,5.456,2918,5.456]],["title/index.html",[21,0.096,417,3.399,2919,4.119]],["body/index.html",[6,0.077,8,0.385,9,3.267,18,1.79,19,2.118,26,0.005,42,0.755,114,0.004,115,0.004,163,3.033,164,4.187,191,3.67,231,6.097,234,4.042,258,6.852,267,7.722,278,7.873,281,2.861,341,4.157,342,3.272,417,7.356,445,4.682,560,5.746,595,1.472,604,1.249,607,1.365,716,3.091,732,3.182,734,2.606,815,1.923,947,2.538,990,5.54,1083,5.54,1145,2.306,1221,5.954,1320,6.006,1344,7.123,1518,6.006,1563,4.914,1589,3.272,1593,3.585,1595,3.585,1640,3.585,1890,6.006,2089,4.042,2103,5.54,2115,4.042,2233,5.54,2295,4.042,2360,4.382,2513,4.382,2871,7.371,2920,4.899,2921,6.713,2922,8.915,2923,4.899,2924,8.239,2925,8.239,2926,4.899,2927,6.713,2928,6.713,2929,8.239,2930,4.899,2931,4.899,2932,4.899,2933,6.713,2934,9.711,2935,7.659,2936,6.713,2937,8.915,2938,4.899,2939,7.659,2940,6.713,2941,8.239,2942,9.54,2943,6.713,2944,4.899,2945,4.899,2946,4.899,2947,4.899,2948,4.899,2949,4.899,2950,8.239,2951,7.659,2952,6.713,2953,7.659,2954,6.713,2955,4.899,2956,4.899,2957,4.899,2958,9.711,2959,4.899,2960,7.659,2961,6.713,2962,7.659,2963,7.659,2964,6.713,2965,4.899,2966,4.899,2967,6.713,2968,6.713,2969,6.713,2970,4.899,2971,6.713,2972,6.713,2973,4.899,2974,6.713,2975,4.899,2976,4.899,2977,4.899,2978,6.713,2979,4.899,2980,6.713,2981,4.899,2982,4.899,2983,7.659,2984,7.659,2985,7.659,2986,4.899,2987,4.899,2988,4.899,2989,4.899,2990,4.899,2991,4.899,2992,4.899,2993,6.713,2994,4.899,2995,4.899,2996,4.899,2997,4.899,2998,4.899,2999,4.899,3000,4.899,3001,4.899,3002,4.899,3003,4.899,3004,4.899,3005,7.659,3006,4.899,3007,6.713,3008,7.659,3009,6.713,3010,4.899,3011,4.899,3012,4.899,3013,4.899,3014,4.899,3015,4.899,3016,4.899,3017,4.899,3018,4.899,3019,4.899]],["title/modules.html",[189,2.699]],["body/modules.html",[26,0.005,114,0.005,115,0.005,189,2.951,190,5.707,199,5.402,200,5.402,201,5.402,202,5.402,209,7.753,460,5.402,461,4.417,801,5.402,1008,5.402,1009,5.402,1352,5.402,3020,10.026,3021,10.026,3022,10.248,3023,9.596,3024,9.596]],["title/overview.html",[3025,6.039]],["body/overview.html",[0,1.151,1,3.344,26,0.006,34,0.038,35,0.238,36,1.805,39,1.348,44,3.417,53,3.107,59,3.417,67,3.417,91,3.417,93,3.417,114,0.004,115,0.004,171,2.974,189,2.827,190,7.648,191,2.89,192,3.273,193,3.395,194,3.164,195,4.73,196,4.73,197,4.73,198,4.73,199,5.829,200,7.364,201,7.5,202,7.364,203,4.539,204,1.368,205,3.273,329,1.565,364,4.766,441,4.363,457,4.73,458,4.73,459,4.73,460,6.486,461,5.883,486,1.119,801,7.444,802,4.73,805,4.73,946,3.164,1003,4.73,1005,4.73,1006,4.73,1007,4.73,1008,7.012,1009,5.829,1349,4.73,1351,4.73,1352,5.829,2348,4.363,2553,4.73,3025,4.73,3026,5.287,3027,5.287,3028,5.287,3029,5.287,3030,5.287]],["title/routes.html",[946,4.04]],["body/routes.html",[26,0.005,114,0.005,115,0.005,946,4.844]],["title/miscellaneous/typealiases.html",[2897,2.873,3031,5.942]],["body/miscellaneous/typealiases.html",[21,0.13,25,0.157,26,0.006,34,0.058,75,1.833,78,0.829,96,0.745,114,0.004,115,0.004,333,2.732,334,2.348,355,3.029,356,3.029,357,3.701,360,0.789,420,3.029,584,2.871,585,3.358,586,3.879,592,1.99,599,2.871,600,2.871,602,2.8,606,2.732,608,2.8,610,2.8,612,2.871,614,2.871,616,2.871,617,2.871,618,2.871,634,2.567,635,4.456,636,2.732,637,2.8,643,2.669,644,2.732,645,2.732,646,2.609,647,2.669,648,2.669,649,2.732,650,2.732,651,2.551,652,2.732,653,2.732,656,2.732,671,4.224,672,2.732,673,2.8,678,2.669,679,2.732,680,2.732,681,2.609,682,2.669,683,2.669,684,2.732,685,2.732,686,2.551,687,2.732,688,2.732,690,2.669,704,4.224,705,2.871,706,2.947,715,2.871,718,2.871,721,2.871,723,2.871,725,2.871,727,2.871,729,2.871,731,2.551,733,2.871,736,2.871,737,2.871,755,4.118,813,3.431,814,3.433,822,3.431,824,3.431,825,3.431,826,3.431,827,3.431,833,5.444,838,3.212,839,3.316,844,3.117,846,3.212,847,3.212,848,3.212,849,3.212,850,3.212,852,3.212,860,5.047,866,3.212,867,3.316,870,3.117,871,3.212,872,3.212,873,3.117,874,3.212,875,3.212,876,3.212,884,5.047,1384,3.864,1385,3.879,1386,5.337,1393,3.701,1399,6.304,1423,3.117,1430,3.117,1431,3.117,1432,3.117,1433,3.117,1434,3.117,1445,4.879,1826,4.055,1830,3.864,1835,6.304,2897,3.864,2899,4.957,2900,6.524,2901,4.957,2902,6.017,2903,4.957,2904,4.572,2905,4.957,2906,4.572,3032,5.541]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interfaces/AuthState.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"modules/CoreModule.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"modules/ErrorsModule.html":{},"modules/ErrorsRoutingModule.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"components/ForgotPasswordComponent.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ICredentials.html":{},"interfaces/IDevice.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IPatient.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"interfaces/IUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"modules/MaterialModule.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"classes/NumberValidators.html":{},"interfaces/NursingHome.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"modules/SharedModule.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":185,"title":{},"body":{"directives/AppDropdownDirective.html":{},"components/BreadcrumbComponent.html":{},"components/DashboardLayoutComponent.html":{},"directives/ScrollToDirective.html":{}}}],["0.0.0.0",{"_index":2994,"title":{},"body":{"index.html":{}}}],["0.8.26",{"_index":2896,"title":{},"body":{"dependencies.html":{}}}],["0th",{"_index":2200,"title":{},"body":{"components/PatientListComponent.html":{},"components/UserListComponent.html":{}}}],["1",{"_index":171,"title":{"interfaces/State-1.html":{}},"body":{"directives/AppDropdownDirective.html":{},"modules/AppModule.html":{},"components/BreadcrumbComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"components/LockscreenComponent.html":{},"components/NotificationsComponent.html":{},"injectables/UsersEffects.html":{},"overview.html":{}}}],["1.0.3",{"_index":2890,"title":{},"body":{"dependencies.html":{}}}],["1.4.0",{"_index":2888,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":321,"title":{"interfaces/State-10.html":{}},"body":{"modules/AppModule.html":{}}}],["10000",{"_index":409,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["11",{"_index":2553,"title":{"interfaces/State-11.html":{}},"body":{"overview.html":{}}}],["11.0.1",{"_index":2882,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":1898,"title":{"interfaces/State-12.html":{}},"body":{"components/NotificationsComponent.html":{}}}],["122px",{"_index":1776,"title":{},"body":{"components/LoaderComponent.html":{}}}],["13",{"_index":2596,"title":{"interfaces/State-13.html":{}},"body":{}}],["14",{"_index":3027,"title":{},"body":{"overview.html":{}}}],["14.0.0",{"_index":2884,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":3030,"title":{},"body":{"overview.html":{}}}],["1].url}/${item.url",{"_index":574,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["1]['breadcrumb",{"_index":582,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["1][\\'breadcrumb",{"_index":583,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["2",{"_index":308,"title":{"interfaces/State-2.html":{}},"body":{"modules/AppModule.html":{}}}],["2.0.0",{"_index":2880,"title":{},"body":{"dependencies.html":{}}}],["2.4.0",{"_index":2892,"title":{},"body":{"dependencies.html":{}}}],["2.6.0",{"_index":2887,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":2371,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["247ba0",{"_index":1702,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["25",{"_index":2375,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["250",{"_index":1581,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["28",{"_index":3026,"title":{},"body":{"overview.html":{}}}],["3",{"_index":1545,"title":{"interfaces/State-3.html":{}},"body":{"components/HeaderSideComponent.html":{}}}],["31",{"_index":3029,"title":{},"body":{"overview.html":{}}}],["380px",{"_index":795,"title":{},"body":{"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{}}}],["3f51b5",{"_index":1704,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["4",{"_index":1894,"title":{"interfaces/State-4.html":{}},"body":{"components/NotificationsComponent.html":{}}}],["4.0.0",{"_index":2883,"title":{},"body":{"dependencies.html":{}}}],["404",{"_index":1878,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["4200",{"_index":2996,"title":{},"body":{"index.html":{}}}],["5",{"_index":2614,"title":{"interfaces/State-5.html":{}},"body":{}}],["5.1.0",{"_index":2889,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":1343,"title":{},"body":{"components/ErrorComponent.html":{}}}],["6",{"_index":2348,"title":{"interfaces/State-6.html":{}},"body":{"directives/ScrollToDirective.html":{},"overview.html":{}}}],["6.1.2",{"_index":2881,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":2894,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":2353,"title":{"interfaces/State-7.html":{}},"body":{"directives/ScrollToDirective.html":{}}}],["7.0.0",{"_index":2873,"title":{},"body":{"dependencies.html":{}}}],["7.1.0",{"_index":2891,"title":{},"body":{"dependencies.html":{}}}],["7.1.1",{"_index":2875,"title":{},"body":{"dependencies.html":{}}}],["720px",{"_index":1992,"title":{},"body":{"injectables/NursingHomesEffects.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{}}}],["8",{"_index":2354,"title":{"interfaces/State-8.html":{}},"body":{"directives/ScrollToDirective.html":{}}}],["9",{"_index":2649,"title":{"interfaces/State-9.html":{}},"body":{}}],["91",{"_index":3028,"title":{},"body":{"overview.html":{}}}],["959px",{"_index":1607,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["959px)`).match",{"_index":1610,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["9c27b0",{"_index":1698,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["_open",{"_index":1264,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["_router",{"_index":123,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["abstractcontrol",{"_index":1916,"title":{},"body":{"classes/NumberValidators.html":{},"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["accent",{"_index":1895,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["access",{"_index":774,"title":{},"body":{"components/ConfirmComponent.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["access_token",{"_index":2605,"title":{},"body":{"interfaces/State-2.html":{}}}],["accessor",{"_index":1268,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["account",{"_index":1548,"title":{},"body":{"components/HeaderSideComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["account_box",{"_index":1546,"title":{},"body":{"components/HeaderSideComponent.html":{},"components/SidebarSideComponent.html":{}}}],["accountmenu.profil",{"_index":1547,"title":{},"body":{"components/HeaderSideComponent.html":{},"components/SidebarSideComponent.html":{}}}],["action",{"_index":360,"title":{},"body":{"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"interfaces/AuthState.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/FixTopbar.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"classes/OpenSideNav.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"injectables/PatientsEffects.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"injectables/UsersEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["action.payload",{"_index":2271,"title":{},"body":{"injectables/PatientsEffects.html":{},"interfaces/State-5.html":{},"injectables/UsersEffects.html":{}}}],["action.payload.credenti",{"_index":374,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["action.payload.id",{"_index":2549,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-13.html":{},"interfaces/State-7.html":{}}}],["action.payload.messag",{"_index":2577,"title":{},"body":{"interfaces/State-12.html":{},"interfaces/State-3.html":{},"interfaces/State-6.html":{},"interfaces/State-9.html":{}}}],["action.payload.nursinghom",{"_index":1961,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["action.payload.pati",{"_index":2252,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["action.payload.response.access_token",{"_index":2609,"title":{},"body":{"interfaces/State-2.html":{}}}],["action.payload.response.us",{"_index":2608,"title":{},"body":{"interfaces/State-2.html":{}}}],["action.payload.us",{"_index":2800,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["action.typ",{"_index":2541,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{}}}],["actionreduc",{"_index":2517,"title":{},"body":{"interfaces/State.html":{}}}],["actionreducermap",{"_index":496,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/DashboardState.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-4.html":{}}}],["actions/layout.act",{"_index":940,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"components/HeaderSideComponent.html":{},"interfaces/State-5.html":{}}}],["actions/nurs",{"_index":1941,"title":{},"body":{"components/NursingHomeFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["actions/patients.act",{"_index":2048,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/PatientListComponent.html":{}}}],["actions/users.act",{"_index":2704,"title":{},"body":{"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{}}}],["activatedrout",{"_index":538,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["activatedroutesnapshot",{"_index":1678,"title":{},"body":{"interfaces/IRoutePart.html":{},"injectables/RoutePartsService.html":{}}}],["activatedthem",{"_index":1705,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["activerout",{"_index":537,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["actual_compon",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["ad",{"_index":1888,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["adapat",{"_index":2533,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{}}}],["adapater.addone(action.payload.nursinghom",{"_index":2641,"title":{},"body":{"interfaces/State-7.html":{}}}],["adapater.addone(action.payload.pati",{"_index":2545,"title":{},"body":{"interfaces/State-10.html":{}}}],["adapater.addone(action.payload.us",{"_index":2601,"title":{},"body":{"interfaces/State-13.html":{}}}],["adapater.getinitialst",{"_index":2536,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{}}}],["adapater.removeall(st",{"_index":2562,"title":{},"body":{"interfaces/State-11.html":{},"interfaces/State-8.html":{}}}],["adapater.upsertmany(action.payload.nursinghom",{"_index":2640,"title":{},"body":{"interfaces/State-7.html":{}}}],["adapater.upsertmany(action.payload.pati",{"_index":2543,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-11.html":{}}}],["adapater.upsertmany(action.payload.us",{"_index":2600,"title":{},"body":{"interfaces/State-13.html":{},"interfaces/State-8.html":{}}}],["adapater.upsertone(action.payload.nursinghom",{"_index":2642,"title":{},"body":{"interfaces/State-7.html":{}}}],["adapater.upsertone(action.payload.pati",{"_index":2547,"title":{},"body":{"interfaces/State-10.html":{}}}],["adapater.upsertone(action.payload.us",{"_index":2602,"title":{},"body":{"interfaces/State-13.html":{}}}],["add",{"_index":815,"title":{},"body":{"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/PatientsComponent.html":{},"interfaces/State-10.html":{},"interfaces/State-13.html":{},"interfaces/State-7.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["addlink",{"_index":128,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["addlink(link",{"_index":139,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["address",{"_index":2509,"title":{},"body":{"components/SignupComponent.html":{}}}],["add{{'creat",{"_index":2245,"title":{},"body":{"components/PatientsComponent.html":{},"components/UsersComponent.html":{}}}],["add{{\\'creat",{"_index":2246,"title":{},"body":{"components/PatientsComponent.html":{},"components/UsersComponent.html":{}}}],["adjust",{"_index":1593,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"index.html":{}}}],["adjustlayout",{"_index":1737,"title":{},"body":{"injectables/LayoutService.html":{}}}],["adjustlayout(opt",{"_index":1597,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["admin_cod",{"_index":1653,"title":{},"body":{"interfaces/IDevice.html":{}}}],["administr",{"_index":2832,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["afterviewinit",{"_index":887,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["against",{"_index":2973,"title":{},"body":{"index.html":{}}}],["ago",{"_index":1817,"title":{},"body":{"components/LockscreenComponent.html":{},"components/NotificationsComponent.html":{}}}],["agre",{"_index":2506,"title":{},"body":{"components/SignupComponent.html":{}}}],["alert",{"_index":1551,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["alex",{"_index":2946,"title":{},"body":{"index.html":{}}}],["alexander.rueckert@appsolut",{"_index":2948,"title":{},"body":{"index.html":{}}}],["alias",{"_index":3032,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{}}}],["anchor.direct",{"_index":1060,"title":{},"body":{"modules/DashboardModule.html":{}}}],["anchor.directive.t",{"_index":1249,"title":{},"body":{"directives/DropdownAnchorDirective.html":{}}}],["anchor.directive.ts:13",{"_index":1253,"title":{},"body":{"directives/DropdownAnchorDirective.html":{}}}],["anchor.directive.ts:20",{"_index":1255,"title":{},"body":{"directives/DropdownAnchorDirective.html":{}}}],["angular",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["angular.json",{"_index":2974,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":2872,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2874,"title":{},"body":{"dependencies.html":{}}}],["angular/cli",{"_index":2938,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/ErrorsModule.html":{},"interfaces/ITheme.html":{},"modules/SharedModule.html":{},"injectables/ThemeService.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthApiService.html":{},"modules/AuthModule.html":{},"injectables/NursingHomesService.html":{},"injectables/PatientsService.html":{},"injectables/UsersService.html":{}}}],["angular/common/locales/d",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compil",{"_index":2876,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"modules/CoreModule.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"modules/ErrorsModule.html":{},"modules/ErrorsRoutingModule.html":{},"directives/FontSizeDirective.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"injectables/LayoutService.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"modules/MaterialModule.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"modules/SharedModule.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"injectables/ThemeService.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":938,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"directives/EgretSideNavToggleDirective.html":{},"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":472,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardModule.html":{},"classes/GenericValidator.html":{},"classes/NumberValidators.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":2878,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ForgotPasswordComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"modules/MaterialModule.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":156,"title":{},"body":{"directives/AppDropdownDirective.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"components/BreadcrumbComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardRoutingModule.html":{},"modules/ErrorsRoutingModule.html":{},"interfaces/IRoutePart.html":{},"components/NotificationsComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/RoutePartsService.html":{},"injectables/UsersEffects.html":{},"dependencies.html":{}}}],["api",{"_index":341,"title":{},"body":{"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["api.actions.t",{"_index":814,"title":{},"body":{"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["api.actions.ts:19",{"_index":1824,"title":{},"body":{"classes/LoginSuccess.html":{}}}],["api.actions.ts:20",{"_index":834,"title":{},"body":{"classes/CreateNursingHomeSuccess.html":{}}}],["api.actions.ts:21",{"_index":1825,"title":{},"body":{"classes/LoginSuccess.html":{}}}],["api.actions.ts:22",{"_index":835,"title":{},"body":{"classes/CreateNursingHomeSuccess.html":{}}}],["api.actions.ts:23",{"_index":862,"title":{},"body":{"classes/CreatePatientSuccess.html":{},"classes/CreateUserSuccess.html":{}}}],["api.actions.ts:25",{"_index":863,"title":{},"body":{"classes/CreatePatientSuccess.html":{},"classes/CreateUserSuccess.html":{}}}],["api.actions.ts:29",{"_index":1821,"title":{},"body":{"classes/LoginFailure.html":{}}}],["api.actions.ts:30",{"_index":817,"title":{},"body":{"classes/CreateNursingHomeFailure.html":{}}}],["api.actions.ts:31",{"_index":1822,"title":{},"body":{"classes/LoginFailure.html":{}}}],["api.actions.ts:32",{"_index":818,"title":{},"body":{"classes/CreateNursingHomeFailure.html":{}}}],["api.actions.ts:33",{"_index":840,"title":{},"body":{"classes/CreatePatientFailure.html":{},"classes/CreateUserFailure.html":{}}}],["api.actions.ts:35",{"_index":841,"title":{},"body":{"classes/CreatePatientFailure.html":{},"classes/CreateUserFailure.html":{}}}],["api.actions.ts:39",{"_index":1840,"title":{},"body":{"classes/LogoutSuccess.html":{}}}],["api.actions.ts:40",{"_index":1753,"title":{},"body":{"classes/LoadNursingHomesSuccess.html":{}}}],["api.actions.ts:42",{"_index":1754,"title":{},"body":{"classes/LoadNursingHomesSuccess.html":{}}}],["api.actions.ts:43",{"_index":1760,"title":{},"body":{"classes/LoadPatientsSuccess.html":{},"classes/LoadUsersSuccess.html":{}}}],["api.actions.ts:45",{"_index":1761,"title":{},"body":{"classes/LoadPatientsSuccess.html":{},"classes/LoadUsersSuccess.html":{}}}],["api.actions.ts:46",{"_index":1838,"title":{},"body":{"classes/LogoutFailure.html":{}}}],["api.actions.ts:48",{"_index":1839,"title":{},"body":{"classes/LogoutFailure.html":{}}}],["api.actions.ts:50",{"_index":1751,"title":{},"body":{"classes/LoadNursingHomesFailure.html":{}}}],["api.actions.ts:52",{"_index":1752,"title":{},"body":{"classes/LoadNursingHomesFailure.html":{}}}],["api.actions.ts:53",{"_index":1758,"title":{},"body":{"classes/LoadPatientsFailure.html":{},"classes/LoadUsersFailure.html":{}}}],["api.actions.ts:55",{"_index":1759,"title":{},"body":{"classes/LoadPatientsFailure.html":{},"classes/LoadUsersFailure.html":{}}}],["api.actions.ts:56",{"_index":1823,"title":{},"body":{"classes/LoginRedirect.html":{}}}],["api.actions.ts:60",{"_index":1294,"title":{},"body":{"classes/EditNursingHomeSuccess.html":{}}}],["api.actions.ts:62",{"_index":1295,"title":{},"body":{"classes/EditNursingHomeSuccess.html":{}}}],["api.actions.ts:63",{"_index":1300,"title":{},"body":{"classes/EditPatientSuccess.html":{},"classes/EditUserSuccess.html":{},"classes/SignUpSuccess.html":{}}}],["api.actions.ts:65",{"_index":1301,"title":{},"body":{"classes/EditPatientSuccess.html":{},"classes/EditUserSuccess.html":{},"classes/SignUpSuccess.html":{}}}],["api.actions.ts:70",{"_index":1292,"title":{},"body":{"classes/EditNursingHomeFailure.html":{}}}],["api.actions.ts:72",{"_index":1293,"title":{},"body":{"classes/EditNursingHomeFailure.html":{}}}],["api.actions.ts:73",{"_index":1298,"title":{},"body":{"classes/EditPatientFailure.html":{},"classes/EditUserFailure.html":{},"classes/SignUpFailure.html":{}}}],["api.actions.ts:75",{"_index":1299,"title":{},"body":{"classes/EditPatientFailure.html":{},"classes/EditUserFailure.html":{},"classes/SignUpFailure.html":{}}}],["api.actions.ts:83",{"_index":1446,"title":{},"body":{"classes/ForgotPasswordSuccess.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadUserPatientsSuccess.html":{}}}],["api.actions.ts:85",{"_index":1447,"title":{},"body":{"classes/ForgotPasswordSuccess.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadUserPatientsSuccess.html":{}}}],["api.actions.ts:93",{"_index":1425,"title":{},"body":{"classes/ForgotPasswordFailure.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadUserPatientsFailure.html":{}}}],["api.actions.ts:95",{"_index":1426,"title":{},"body":{"classes/ForgotPasswordFailure.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadUserPatientsFailure.html":{}}}],["api.servic",{"_index":434,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["api.service.t",{"_index":332,"title":{},"body":{"injectables/AuthApiService.html":{}}}],["api.service.ts:16",{"_index":339,"title":{},"body":{"injectables/AuthApiService.html":{}}}],["api.service.ts:24",{"_index":344,"title":{},"body":{"injectables/AuthApiService.html":{}}}],["api.service.ts:26",{"_index":336,"title":{},"body":{"injectables/AuthApiService.html":{}}}],["app",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["app.rout",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"interfaces/ITheme.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"injectables/ThemeService.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["appdropdown",{"_index":121,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["appdropdown]'},{'nam",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["appdropdowndirect",{"_index":101,"title":{"directives/AppDropdownDirective.html":{}},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"directives/DropdownLinkDirective.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["appdropdownlink",{"_index":1263,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["appdropdownlink]'},{'nam",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["appdropdowntoggl",{"_index":1251,"title":{},"body":{"directives/DropdownAnchorDirective.html":{}}}],["appdropdowntoggle]'},{'nam",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["appear",{"_index":1621,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["appli",{"_index":1708,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["applic",{"_index":2998,"title":{},"body":{"index.html":{}}}],["applymatthem",{"_index":2671,"title":{},"body":{"injectables/ThemeService.html":{}}}],["applymattheme(r",{"_index":1710,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["appmodul",{"_index":190,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppati",{"_index":2241,"title":{},"body":{"components/PatientsComponent.html":{}}}],["appropri",{"_index":2076,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["approutingmodul",{"_index":199,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appus",{"_index":2791,"title":{},"body":{"components/UsersComponent.html":{}}}],["area",{"_index":2430,"title":{},"body":{"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["argument",{"_index":910,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"directives/DropdownAnchorDirective.html":{},"directives/ScrollToDirective.html":{}}}],["array",{"_index":153,"title":{},"body":{"directives/AppDropdownDirective.html":{},"components/PatientListComponent.html":{},"components/UserListComponent.html":{}}}],["assets/i18n",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["assign",{"_index":1112,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/ITheme.html":{},"interfaces/State-4.html":{},"injectables/ThemeService.html":{}}}],["assignment_ind",{"_index":1889,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["async",{"_index":2174,"title":{},"body":{"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/SigninComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{}}}],["attribut",{"_index":1377,"title":{},"body":{"directives/FontSizeDirective.html":{},"directives/ScrollToDirective.html":{}}}],["attribute('fonts",{"_index":1375,"title":{},"body":{"directives/FontSizeDirective.html":{}}}],["attribute('scrollto",{"_index":2338,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["auth",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"interfaces/AuthState.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["auth.emailrequir",{"_index":1421,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["auth.passwordrequri",{"_index":2490,"title":{},"body":{"components/SigninComponent.html":{}}}],["auth.reduc",{"_index":492,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-1.html":{}}}],["auth.rout",{"_index":484,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["auth.signin",{"_index":1422,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/SigninComponent.html":{}}}],["auth.signintoyouraccount",{"_index":2488,"title":{},"body":{"components/SigninComponent.html":{}}}],["auth.signout",{"_index":1553,"title":{},"body":{"components/HeaderSideComponent.html":{},"components/SidebarSideComponent.html":{}}}],["auth.usernamerequir",{"_index":2489,"title":{},"body":{"components/SigninComponent.html":{}}}],["auth/act",{"_index":1525,"title":{},"body":{"components/HeaderSideComponent.html":{},"components/SidebarSideComponent.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{}}}],["auth/api",{"_index":1429,"title":{},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["auth/auth.modul",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/forgot",{"_index":1395,"title":{},"body":{"classes/ForgotPassword.html":{},"classes/Login.html":{},"classes/Signup.html":{},"miscellaneous/enumerations.html":{}}}],["auth/guards/auth.guard",{"_index":1073,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["auth/login",{"_index":1392,"title":{},"body":{"classes/ForgotPassword.html":{},"classes/Login.html":{},"classes/Signup.html":{},"miscellaneous/enumerations.html":{}}}],["auth/reduc",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderSideComponent.html":{},"components/SidebarSideComponent.html":{}}}],["auth/signup",{"_index":1394,"title":{},"body":{"classes/ForgotPassword.html":{},"classes/Login.html":{},"classes/Signup.html":{},"miscellaneous/enumerations.html":{}}}],["auth0/angular",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthState.html":{},"interfaces/State-1.html":{},"dependencies.html":{}}}],["authact",{"_index":436,"title":{},"body":{"injectables/AuthEffects.html":{},"components/HeaderSideComponent.html":{},"components/SidebarSideComponent.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{}}}],["authactions.authactionsunion",{"_index":2606,"title":{},"body":{"interfaces/State-2.html":{},"interfaces/State-3.html":{}}}],["authactions.logout",{"_index":413,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["authactions.logoutconfirm",{"_index":1539,"title":{},"body":{"components/HeaderSideComponent.html":{},"components/SidebarSideComponent.html":{}}}],["authactions.logoutconfirmationdismiss",{"_index":426,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["authactionsunion",{"_index":1835,"title":{},"body":{"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"miscellaneous/typealiases.html":{}}}],["authactiontyp",{"_index":1829,"title":{},"body":{"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"miscellaneous/enumerations.html":{}}}],["authactiontypes.logout",{"_index":1827,"title":{},"body":{"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{}}}],["authactiontypes.logoutconfirm",{"_index":1832,"title":{},"body":{"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{}}}],["authactiontypes.logoutconfirmationdismiss",{"_index":1834,"title":{},"body":{"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{}}}],["authapiact",{"_index":435,"title":{},"body":{"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"interfaces/AuthState.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{}}}],["authapiactions.authapiactionsunion",{"_index":2539,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{}}}],["authapiactions.authapiactiontypes.loginfailur",{"_index":2613,"title":{},"body":{"interfaces/State-3.html":{}}}],["authapiactions.authapiactiontypes.loginredirect",{"_index":389,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["authapiactions.authapiactiontypes.loginsuccess",{"_index":2607,"title":{},"body":{"interfaces/State-2.html":{},"interfaces/State-3.html":{}}}],["authapiactions.authapiactiontypes.logoutsuccess",{"_index":390,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{}}}],["authapiactions.loginfailure({messag",{"_index":383,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["authapiactions.loginredirect",{"_index":453,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authapiactions.loginsuccess({respons",{"_index":378,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["authapiactions.logoutfailure({messag",{"_index":415,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["authapiactions.logoutsuccess",{"_index":402,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["authapiactionsunion",{"_index":1445,"title":{},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["authapiactiontyp",{"_index":1428,"title":{},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["authapiactiontypes.forgotpasswordfailur",{"_index":1427,"title":{},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{}}}],["authapiactiontypes.forgotpasswordsuccess",{"_index":1444,"title":{},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{}}}],["authapiactiontypes.loginfailur",{"_index":1437,"title":{},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{}}}],["authapiactiontypes.loginredirect",{"_index":1441,"title":{},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{}}}],["authapiactiontypes.loginsuccess",{"_index":1435,"title":{},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{}}}],["authapiactiontypes.logoutfailur",{"_index":1440,"title":{},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{}}}],["authapiactiontypes.logoutsuccess",{"_index":1438,"title":{},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{}}}],["authapiactiontypes.signupfailur",{"_index":1443,"title":{},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{}}}],["authapiactiontypes.signupsuccess",{"_index":1442,"title":{},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{}}}],["authapiservic",{"_index":330,"title":{"injectables/AuthApiService.html":{}},"body":{"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{}}}],["autheffect",{"_index":350,"title":{"injectables/AuthEffects.html":{}},"body":{"injectables/AuthEffects.html":{},"modules/AuthModule.html":{}}}],["authent",{"_index":352,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["authguard",{"_index":442,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"modules/DashboardRoutingModule.html":{}}}],["authlayoutcompon",{"_index":44,"title":{"components/AuthLayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"modules/CoreModule.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"modules/ErrorsModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["authmodul",{"_index":200,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authpageact",{"_index":437,"title":{},"body":{"injectables/AuthEffects.html":{},"components/SigninComponent.html":{},"interfaces/State-3.html":{}}}],["authpageactions.authpageactionsunion",{"_index":2611,"title":{},"body":{"interfaces/State-3.html":{}}}],["authpageactions.authpageactiontypes.login",{"_index":2612,"title":{},"body":{"interfaces/State-3.html":{}}}],["authpageactions.login({credenti",{"_index":2487,"title":{},"body":{"components/SigninComponent.html":{}}}],["authpageactionsunion",{"_index":1399,"title":{},"body":{"classes/ForgotPassword.html":{},"classes/Login.html":{},"classes/Signup.html":{},"miscellaneous/typealiases.html":{}}}],["authpageactiontyp",{"_index":1391,"title":{},"body":{"classes/ForgotPassword.html":{},"classes/Login.html":{},"classes/Signup.html":{},"miscellaneous/enumerations.html":{}}}],["authpageactiontypes.forgotpassword",{"_index":1390,"title":{},"body":{"classes/ForgotPassword.html":{},"classes/Login.html":{},"classes/Signup.html":{}}}],["authpageactiontypes.login",{"_index":1396,"title":{},"body":{"classes/ForgotPassword.html":{},"classes/Login.html":{},"classes/Signup.html":{}}}],["authpageactiontypes.signup",{"_index":1397,"title":{},"body":{"classes/ForgotPassword.html":{},"classes/Login.html":{},"classes/Signup.html":{}}}],["authrout",{"_index":483,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["authroutingmodul",{"_index":460,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authstat",{"_index":487,"title":{"interfaces/AuthState.html":{}},"body":{"interfaces/AuthState.html":{},"interfaces/State-1.html":{}}}],["authstor",{"_index":1505,"title":{},"body":{"components/HeaderSideComponent.html":{},"components/SidebarSideComponent.html":{}}}],["auto",{"_index":1670,"title":{},"body":{"interfaces/IPatient.html":{}}}],["avail",{"_index":3024,"title":{},"body":{"modules.html":{}}}],["availablelang",{"_index":1491,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["b",{"_index":578,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["back",{"_index":1345,"title":{},"body":{"components/ErrorComponent.html":{},"components/NotFoundComponent.html":{}}}],["backdrop",{"_index":1793,"title":{},"body":{"injectables/LoaderService.html":{}}}],["backdropclass",{"_index":1791,"title":{},"body":{"injectables/LoaderService.html":{}}}],["badg",{"_index":1624,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["badge.valu",{"_index":2462,"title":{},"body":{"components/SidenavComponent.html":{}}}],["bar",{"_index":753,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["base64",{"_index":1672,"title":{},"body":{"interfaces/IPatient.html":{}}}],["basecolor",{"_index":1693,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["basic",{"_index":2232,"title":{},"body":{"components/PatientsComponent.html":{},"interfaces/State.html":{},"components/UsersComponent.html":{}}}],["befor",{"_index":2930,"title":{},"body":{"index.html":{}}}],["behaviorsubject",{"_index":1557,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"injectables/LayoutService.html":{},"injectables/NavigationService.html":{}}}],["behaviorsubject(this.iconmenu",{"_index":1637,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["behaviorsubject(this.layoutconf",{"_index":1567,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["belong",{"_index":2859,"title":{},"body":{"injectables/UsersService.html":{}}}],["beta.19",{"_index":2877,"title":{},"body":{"dependencies.html":{}}}],["blank",{"_index":525,"title":{},"body":{"components/BlankComponent.html":{},"modules/DashboardRoutingModule.html":{}}}],["blank'},{'nam",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["blankcompon",{"_index":47,"title":{"components/BlankComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["blue",{"_index":1701,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["blur",{"_index":2021,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["bodyp",{"_index":943,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["boolean",{"_index":552,"title":{},"body":{"components/BreadcrumbComponent.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/DashboardLayoutComponent.html":{},"directives/DropdownLinkDirective.html":{},"classes/FixTopbar.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/ITheme.html":{},"injectables/LayoutService.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"injectables/NavigationService.html":{},"classes/NumberValidators.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"components/SidebarSideComponent.html":{},"components/SidenavComponent.html":{},"interfaces/State-12.html":{},"interfaces/State-3.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-9.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["bootstrap",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/ErrorsModule.html":{},"overview.html":{}}}],["box",{"_index":2264,"title":{},"body":{"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["branch",{"_index":2925,"title":{},"body":{"index.html":{}}}],["breadcrum",{"_index":751,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["breadcrumb",{"_index":529,"title":{},"body":{"components/BreadcrumbComponent.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"modules/DashboardRoutingModule.html":{},"classes/FixTopbar.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IRoutePart.html":{},"injectables/LayoutService.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"injectables/RoutePartsService.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-5.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{}}}],["breadcrumb'},{'nam",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["breadcrumb.component.html",{"_index":531,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["breadcrumbcompon",{"_index":49,"title":{"components/BreadcrumbComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["brows",{"_index":3022,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"modules.html":{}}}],["browser/anim",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["browserev",{"_index":1556,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["browserlang",{"_index":954,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["browsermodul",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":2958,"title":{},"body":{"index.html":{}}}],["build:prod",{"_index":2965,"title":{},"body":{"index.html":{}}}],["build:stag",{"_index":2969,"title":{},"body":{"index.html":{}}}],["builditemform",{"_index":1925,"title":{},"body":{"components/NursingHomeFormComponent.html":{}}}],["builditemform(item",{"_index":1931,"title":{},"body":{"components/NursingHomeFormComponent.html":{}}}],["bundl",{"_index":354,"title":{},"body":{"injectables/AuthEffects.html":{},"modules/CoreModule.html":{}}}],["busi",{"_index":1779,"title":{},"body":{"injectables/LoaderService.html":{}}}],["button",{"_index":789,"title":{},"body":{"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{}}}],["c",{"_index":1477,"title":{},"body":{"classes/GenericValidator.html":{},"classes/NumberValidators.html":{}}}],["c.dirti",{"_index":1484,"title":{},"body":{"classes/GenericValidator.html":{}}}],["c.error",{"_index":1486,"title":{},"body":{"classes/GenericValidator.html":{}}}],["c.touch",{"_index":1485,"title":{},"body":{"classes/GenericValidator.html":{}}}],["c.valu",{"_index":1917,"title":{},"body":{"classes/NumberValidators.html":{}}}],["call",{"_index":367,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{}}}],["callback",{"_index":2500,"title":{},"body":{"components/SignupComponent.html":{}}}],["calvin",{"_index":2988,"title":{},"body":{"index.html":{}}}],["canactiv",{"_index":446,"title":{},"body":{"guards/AuthGuard.html":{},"modules/DashboardRoutingModule.html":{}}}],["cancel",{"_index":779,"title":{},"body":{"components/ConfirmComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["canceledit",{"_index":2022,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["case",{"_index":419,"title":{},"body":{"injectables/AuthEffects.html":{},"components/PatientListComponent.html":{},"injectables/PatientsEffects.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"components/UserListComponent.html":{},"injectables/UsersEffects.html":{}}}],["catch",{"_index":1591,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/ITheme.html":{},"injectables/LayoutService.html":{},"injectables/ThemeService.html":{}}}],["catcherror",{"_index":431,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["catcherror(httperror",{"_index":1983,"title":{},"body":{"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["catcherror(httprespons",{"_index":403,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["catcherror(respons",{"_index":379,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["cd",{"_index":2952,"title":{},"body":{"index.html":{}}}],["chang",{"_index":947,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"injectables/LayoutService.html":{},"injectables/NavigationService.html":{},"components/PatientEditFormComponent.html":{},"injectables/PatientsService.html":{},"components/UserEditFormComponent.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["change.mqalia",{"_index":1335,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["changed.chang",{"_index":2315,"title":{},"body":{"injectables/PatientsService.html":{},"injectables/UsersService.html":{}}}],["changethem",{"_index":1494,"title":{},"body":{"components/HeaderSideComponent.html":{},"injectables/ThemeService.html":{}}}],["changetheme(r",{"_index":1719,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["changetheme(them",{"_index":1507,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["chart",{"_index":1899,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["chat",{"_index":1893,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["check",{"_index":445,"title":{},"body":{"guards/AuthGuard.html":{},"components/HeaderSideComponent.html":{},"components/PatientFormComponent.html":{},"components/SidebarSideComponent.html":{},"components/UserFormComponent.html":{},"index.html":{}}}],["checkout",{"_index":2953,"title":{},"body":{"index.html":{}}}],["chevron_left",{"_index":1541,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["child",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"classes/GenericValidator.html":{}}}],["childmessag",{"_index":1479,"title":{},"body":{"classes/GenericValidator.html":{}}}],["children",{"_index":1076,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["chrome",{"_index":2342,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["class",{"_index":35,"title":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/FixTopbar.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/GenericValidator.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/NumberValidators.html":{},"classes/OpenSideNav.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"classes/Signup.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"modules/CoreModule.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"modules/ErrorsModule.html":{},"modules/ErrorsRoutingModule.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"components/ForgotPasswordComponent.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"modules/MaterialModule.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"classes/NumberValidators.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"modules/SharedModule.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["clean",{"_index":3013,"title":{},"body":{"index.html":{}}}],["clear",{"_index":587,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreateNursingHome.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"components/NotificationsComponent.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-8.html":{},"miscellaneous/enumerations.html":{}}}],["clearal",{"_index":1881,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["clearall(ev",{"_index":1884,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["clearselectednursinghom",{"_index":584,"title":{"classes/ClearSelectedNursingHome.html":{}},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["clearselectedpati",{"_index":636,"title":{"classes/ClearSelectedPatient.html":{}},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["clearselectedus",{"_index":672,"title":{"classes/ClearSelectedUser.html":{}},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["cli",{"_index":2935,"title":{},"body":{"index.html":{}}}],["click",{"_index":788,"title":{},"body":{"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"directives/DropdownAnchorDirective.html":{},"directives/ScrollToDirective.html":{}}}],["click(",{"_index":1254,"title":{},"body":{"directives/DropdownAnchorDirective.html":{}}}],["client",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["clone",{"_index":2939,"title":{},"body":{"index.html":{}}}],["close",{"_index":707,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/DashboardLayoutComponent.html":{},"classes/FixTopbar.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"injectables/LoaderService.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"injectables/PatientsEffects.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-5.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"injectables/UsersEffects.html":{},"miscellaneous/enumerations.html":{}}}],["closeotherlink",{"_index":129,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["closeotherlinks(openlink",{"_index":144,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["closesidebar",{"_index":902,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["closesidenav",{"_index":705,"title":{"classes/CloseSideNav.html":{}},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["cloud",{"_index":2005,"title":{},"body":{"injectables/NursingHomesService.html":{},"injectables/PatientsService.html":{},"injectables/UsersService.html":{}}}],["cluster_appmodul",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodul",{"_index":457,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declar",{"_index":458,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_import",{"_index":459,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authroutingmodul",{"_index":480,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["cluster_authroutingmodule_import",{"_index":481,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["cluster_coremodul",{"_index":802,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_declar",{"_index":803,"title":{},"body":{"modules/CoreModule.html":{}}}],["cluster_coremodule_export",{"_index":805,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_import",{"_index":804,"title":{},"body":{"modules/CoreModule.html":{}}}],["cluster_dashboardmodul",{"_index":1003,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_declar",{"_index":1004,"title":{},"body":{"modules/DashboardModule.html":{}}}],["cluster_dashboardmodule_export",{"_index":1006,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_import",{"_index":1005,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_provid",{"_index":1007,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardroutingmodul",{"_index":1070,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["cluster_dashboardroutingmodule_import",{"_index":1071,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["cluster_errorsmodul",{"_index":1349,"title":{},"body":{"modules/ErrorsModule.html":{},"overview.html":{}}}],["cluster_errorsmodule_declar",{"_index":1350,"title":{},"body":{"modules/ErrorsModule.html":{}}}],["cluster_errorsmodule_import",{"_index":1351,"title":{},"body":{"modules/ErrorsModule.html":{},"overview.html":{}}}],["code",{"_index":1518,"title":{},"body":{"components/HeaderSideComponent.html":{},"index.html":{}}}],["codes(#fff000",{"_index":1626,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["collect",{"_index":1159,"title":{},"body":{"interfaces/DashboardState.html":{},"components/PatientFormComponent.html":{},"interfaces/State-4.html":{},"components/UserFormComponent.html":{}}}],["color",{"_index":1613,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{},"components/NotificationsComponent.html":{}}}],["column",{"_index":2748,"title":{},"body":{"components/UserListComponent.html":{}}}],["command",{"_index":2960,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":463,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/ErrorsModule.html":{},"modules/SharedModule.html":{}}}],["compact",{"_index":719,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-5.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{}}}],["compactsidenav",{"_index":718,"title":{"classes/CompactSideNav.html":{}},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["compar",{"_index":2160,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["complet",{"_index":615,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreateNursingHome.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"miscellaneous/enumerations.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"modules/CoreModule.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"modules/ErrorsModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["component_templ",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["componentact",{"_index":2014,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/PatientListComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{}}}],["components.layoutconf$.subscribe(chang",{"_index":980,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["components/blank/blank.compon",{"_index":1026,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["components/breadcrumb/breadcrumb.compon",{"_index":1016,"title":{},"body":{"modules/DashboardModule.html":{}}}],["components/breadcrumb/breadcrumb.component.t",{"_index":527,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["components/breadcrumb/breadcrumb.component.ts:13",{"_index":547,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["components/breadcrumb/breadcrumb.component.ts:14",{"_index":540,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["components/breadcrumb/breadcrumb.component.ts:21",{"_index":546,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["components/breadcrumb/breadcrumb.component.ts:49",{"_index":542,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["components/breadcrumb/breadcrumb.component.ts:52",{"_index":541,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["components/breadcrumb/breadcrumb.component.ts:58",{"_index":544,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["components/confirm/confirm.compon",{"_index":782,"title":{},"body":{"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"modules/CoreModule.html":{}}}],["components/error/error.compon",{"_index":1357,"title":{},"body":{"modules/ErrorsModule.html":{}}}],["components/forgot",{"_index":467,"title":{},"body":{"modules/AuthModule.html":{}}}],["components/head",{"_index":1017,"title":{},"body":{"modules/DashboardModule.html":{},"components/HeaderSideComponent.html":{}}}],["components/loader/loader.compon",{"_index":1787,"title":{},"body":{"injectables/LoaderService.html":{}}}],["components/lockscreen/lockscreen.compon",{"_index":466,"title":{},"body":{"modules/AuthModule.html":{}}}],["components/not",{"_index":1354,"title":{},"body":{"modules/ErrorsModule.html":{}}}],["components/notifications/notifications.compon",{"_index":1015,"title":{},"body":{"modules/DashboardModule.html":{}}}],["components/notifications/notifications.component.t",{"_index":1879,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["components/notifications/notifications.component.ts:12",{"_index":1900,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["components/notifications/notifications.component.ts:30",{"_index":1882,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["components/notifications/notifications.component.ts:34",{"_index":1886,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["components/notifications/notifications.component.ts:45",{"_index":1885,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["components/notifications/notifications.component.ts:9",{"_index":1883,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["components/nurs",{"_index":1054,"title":{},"body":{"modules/DashboardModule.html":{},"injectables/NursingHomesEffects.html":{}}}],["components/patients/pati",{"_index":1039,"title":{},"body":{"modules/DashboardModule.html":{},"injectables/PatientsEffects.html":{}}}],["components/patients/patients.compon",{"_index":1042,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["components/sidebar",{"_index":1020,"title":{},"body":{"modules/DashboardModule.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["components/sidenav/sidenav.compon",{"_index":1025,"title":{},"body":{"modules/DashboardModule.html":{}}}],["components/sidenav/sidenav.component.t",{"_index":2447,"title":{},"body":{"components/SidenavComponent.html":{}}}],["components/sidenav/sidenav.component.ts:12",{"_index":2453,"title":{},"body":{"components/SidenavComponent.html":{}}}],["components/sidenav/sidenav.component.ts:13",{"_index":2452,"title":{},"body":{"components/SidenavComponent.html":{}}}],["components/sidenav/sidenav.component.ts:14",{"_index":2451,"title":{},"body":{"components/SidenavComponent.html":{}}}],["components/sidenav/sidenav.component.ts:22",{"_index":2454,"title":{},"body":{"components/SidenavComponent.html":{}}}],["components/signin/signin.compon",{"_index":464,"title":{},"body":{"modules/AuthModule.html":{}}}],["components/signup/signup.compon",{"_index":465,"title":{},"body":{"modules/AuthModule.html":{}}}],["components/users/us",{"_index":1036,"title":{},"body":{"modules/DashboardModule.html":{},"injectables/UsersEffects.html":{}}}],["components/users/users.compon",{"_index":1041,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["compos",{"_index":785,"title":{},"body":{"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"interfaces/DashboardState.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-4.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{}}}],["condit",{"_index":2512,"title":{},"body":{"components/SignupComponent.html":{}}}],["conf",{"_index":1577,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["config",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["configur",{"_index":1221,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"interfaces/State-4.html":{},"index.html":{}}}],["configuration=calvin\",if",{"_index":2997,"title":{},"body":{"index.html":{}}}],["configuration=stag",{"_index":2970,"title":{},"body":{"index.html":{}}}],["confirm",{"_index":759,"title":{},"body":{"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"components/PatientFormComponent.html":{},"components/SignupComponent.html":{},"components/UserFormComponent.html":{},"miscellaneous/enumerations.html":{}}}],["confirm'},{'nam",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["confirm(`r",{"_index":2098,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["confirm(data",{"_index":790,"title":{},"body":{"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{}}}],["confirm.component.html",{"_index":760,"title":{},"body":{"components/ConfirmComponent.html":{}}}],["confirm_password",{"_index":2685,"title":{},"body":{"interfaces/User.html":{}}}],["confirmcompon",{"_index":51,"title":{"components/ConfirmComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"modules/CoreModule.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["confirmdata",{"_index":780,"title":{"interfaces/ConfirmData.html":{}},"body":{"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{}}}],["confirmpassword",{"_index":2504,"title":{},"body":{"components/SignupComponent.html":{}}}],["confirmpasswordrequir",{"_index":2179,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["confirmservic",{"_index":364,"title":{"injectables/ConfirmService.html":{}},"body":{"injectables/AuthEffects.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"modules/DashboardModule.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"overview.html":{}}}],["connect",{"_index":3004,"title":{},"body":{"index.html":{}}}],["connectedpatientprofil",{"_index":2733,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["connecteduserprofil",{"_index":2119,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["console.log('act",{"_index":1968,"title":{},"body":{"injectables/NursingHomesEffects.html":{},"interfaces/State.html":{}}}],["console.log('load",{"_index":2309,"title":{},"body":{"injectables/PatientsService.html":{}}}],["console.log('st",{"_index":2524,"title":{},"body":{"interfaces/State.html":{}}}],["console.log(action.payload.nursinghom",{"_index":2639,"title":{},"body":{"interfaces/State-7.html":{}}}],["console.log(chang",{"_index":2869,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log(ev",{"_index":1532,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["console.log(httperror",{"_index":1984,"title":{},"body":{"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["console.log(httprespons",{"_index":2257,"title":{},"body":{"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["console.log(nursinghom",{"_index":1981,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["console.log(p",{"_index":2112,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["console.log(pati",{"_index":2169,"title":{},"body":{"components/PatientFormComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["console.log(snapshot.data['titl",{"_index":1685,"title":{},"body":{"interfaces/IRoutePart.html":{},"injectables/RoutePartsService.html":{}}}],["console.log(this.lockscreendata",{"_index":1811,"title":{},"body":{"components/LockscreenComponent.html":{}}}],["console.log(this.patienteditform.valu",{"_index":2101,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["console.log(this.routepart",{"_index":561,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["console.log(this.usereditform.valu",{"_index":2723,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["console.log(us",{"_index":2743,"title":{},"body":{"components/UserFormComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{}}}],["const",{"_index":169,"title":{},"body":{"directives/AppDropdownDirective.html":{},"injectables/AuthEffects.html":{},"modules/AuthModule.html":{},"interfaces/AuthState.html":{},"components/BreadcrumbComponent.html":{},"modules/CoreModule.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"interfaces/DashboardState.html":{},"directives/EgretSideNavToggleDirective.html":{},"modules/ErrorsModule.html":{},"classes/GenericValidator.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/ITheme.html":{},"injectables/LayoutService.html":{},"modules/MaterialModule.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"injectables/PatientsEffects.html":{},"directives/ScrollToDirective.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/ThemeService.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"injectables/UsersEffects.html":{}}}],["constructor",{"_index":133,"title":{},"body":{"directives/AppDropdownDirective.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"components/ForgotPasswordComponent.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/ITheme.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{}}}],["constructor(@attribute('fonts",{"_index":1381,"title":{},"body":{"directives/FontSizeDirective.html":{}}}],["constructor(@attribute('scrollto",{"_index":2340,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["constructor(@inject(appdropdowndirect",{"_index":1285,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["constructor(@inject(dropdownlinkdirect",{"_index":1256,"title":{},"body":{"directives/DropdownAnchorDirective.html":{}}}],["constructor(act",{"_index":359,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["constructor(authstor",{"_index":1501,"title":{},"body":{"components/HeaderSideComponent.html":{},"components/SidebarSideComponent.html":{}}}],["constructor(data",{"_index":1927,"title":{},"body":{"components/NursingHomeFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["constructor(dialog",{"_index":798,"title":{},"body":{"injectables/ConfirmService.html":{},"injectables/LoaderService.html":{}}}],["constructor(dialogref",{"_index":763,"title":{},"body":{"components/ConfirmComponent.html":{},"components/LoaderComponent.html":{}}}],["constructor(docu",{"_index":2673,"title":{},"body":{"injectables/ThemeService.html":{}}}],["constructor(elmid",{"_index":2330,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["constructor(fonts",{"_index":1370,"title":{},"body":{"directives/FontSizeDirective.html":{}}}],["constructor(http",{"_index":335,"title":{},"body":{"injectables/AuthApiService.html":{},"injectables/NursingHomesService.html":{},"injectables/PatientsService.html":{},"injectables/UsersService.html":{}}}],["constructor(media",{"_index":1310,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["constructor(nav",{"_index":1269,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["constructor(navlink",{"_index":1252,"title":{},"body":{"directives/DropdownAnchorDirective.html":{}}}],["constructor(navservic",{"_index":2438,"title":{},"body":{"components/SidebarTopComponent.html":{}}}],["constructor(payload",{"_index":710,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/FixTopbar.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"classes/Signup.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["constructor(priv",{"_index":188,"title":{},"body":{"directives/AppDropdownDirective.html":{},"injectables/AuthApiService.html":{},"guards/AuthGuard.html":{},"classes/GenericValidator.html":{},"interfaces/IRoutePart.html":{},"components/NotificationsComponent.html":{},"injectables/NursingHomesService.html":{},"components/PatientEditFormComponent.html":{},"injectables/PatientsService.html":{},"injectables/RoutePartsService.html":{},"components/SigninComponent.html":{},"components/UserEditFormComponent.html":{},"injectables/UsersService.html":{}}}],["constructor(publ",{"_index":620,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/FixTopbar.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"classes/Signup.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["constructor(rout",{"_index":134,"title":{},"body":{"directives/AppDropdownDirective.html":{},"components/BreadcrumbComponent.html":{},"components/NotificationsComponent.html":{},"injectables/RoutePartsService.html":{}}}],["constructor(stor",{"_index":447,"title":{},"body":{"guards/AuthGuard.html":{},"components/DashboardLayoutComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SigninComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["constructor(validationmessag",{"_index":1452,"title":{},"body":{"classes/GenericValidator.html":{}}}],["contact",{"_index":1887,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["contain",{"_index":1458,"title":{},"body":{"classes/GenericValidator.html":{},"components/PatientsComponent.html":{},"components/UsersComponent.html":{}}}],["container.control",{"_index":1475,"title":{},"body":{"classes/GenericValidator.html":{}}}],["container.controls.hasownproperty(controlkey",{"_index":1476,"title":{},"body":{"classes/GenericValidator.html":{}}}],["container.controls[controlkey",{"_index":1478,"title":{},"body":{"classes/GenericValidator.html":{}}}],["containers/auth",{"_index":473,"title":{},"body":{"modules/AuthModule.html":{}}}],["containers/dashboard",{"_index":1024,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["containers/error",{"_index":1358,"title":{},"body":{"modules/ErrorsModule.html":{}}}],["containers/layout",{"_index":1014,"title":{},"body":{"modules/DashboardModule.html":{}}}],["content",{"_index":990,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"components/LoaderComponent.html":{},"index.html":{}}}],["control",{"_index":1470,"title":{},"body":{"classes/GenericValidator.html":{},"components/PatientFormComponent.html":{},"components/SignupComponent.html":{},"components/UserFormComponent.html":{}}}],["control.get('password').valu",{"_index":2157,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["control.get('password_confirmation').seterror",{"_index":2163,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["control.get('password_confirmation').valu",{"_index":2159,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["control.geterror('nopasswordmatch",{"_index":2165,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["control.seterrors(nul",{"_index":2166,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["control.valu",{"_index":2507,"title":{},"body":{"components/SignupComponent.html":{}}}],["controlkey",{"_index":1474,"title":{},"body":{"classes/GenericValidator.html":{}}}],["controlname1",{"_index":1464,"title":{},"body":{"classes/GenericValidator.html":{}}}],["controlname2",{"_index":1467,"title":{},"body":{"classes/GenericValidator.html":{}}}],["copi",{"_index":2103,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{},"index.html":{}}}],["core",{"_index":2885,"title":{},"body":{"dependencies.html":{}}}],["core/components/loader/loader.compon",{"_index":1057,"title":{},"body":{"modules/DashboardModule.html":{}}}],["core/containers/app/app.compon",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["core/core.modul",{"_index":1035,"title":{},"body":{"modules/DashboardModule.html":{}}}],["core/directives/dropdown",{"_index":1059,"title":{},"body":{"modules/DashboardModule.html":{}}}],["core/directives/dropdown.direct",{"_index":1058,"title":{},"body":{"modules/DashboardModule.html":{}}}],["core/directives/egret",{"_index":1061,"title":{},"body":{"modules/DashboardModule.html":{}}}],["core/directives/font",{"_index":1063,"title":{},"body":{"modules/DashboardModule.html":{}}}],["core/directives/scrol",{"_index":1065,"title":{},"body":{"modules/DashboardModule.html":{}}}],["core/services/confirm.servic",{"_index":439,"title":{},"body":{"injectables/AuthEffects.html":{},"modules/DashboardModule.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["core/services/layout.servic",{"_index":550,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/HeaderSideComponent.html":{}}}],["core/services/navigation.servic",{"_index":2416,"title":{},"body":{"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["core/services/rout",{"_index":548,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["core/services/theme.servic",{"_index":937,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"components/HeaderSideComponent.html":{},"components/SidebarSideComponent.html":{}}}],["coremodul",{"_index":801,"title":{"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["correct",{"_index":2115,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{},"index.html":{}}}],["creat",{"_index":607,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"components/SigninComponent.html":{},"interfaces/State-12.html":{},"interfaces/State-4.html":{},"interfaces/State-9.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["createentityadapt",{"_index":2531,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{}}}],["createfeatureselector",{"_index":497,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/DashboardState.html":{},"interfaces/State-1.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{}}}],["createfeatureselector('auth",{"_index":506,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-1.html":{}}}],["createfeatureselector('dashboard",{"_index":1124,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["createnursinghom",{"_index":606,"title":{"classes/CreateNursingHome.html":{}},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["createnursinghome(nursinghom",{"_index":2002,"title":{},"body":{"injectables/NursingHomesService.html":{}}}],["createnursinghomefailur",{"_index":813,"title":{"classes/CreateNursingHomeFailure.html":{}},"body":{"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["createnursinghomesuccess",{"_index":822,"title":{"classes/CreateNursingHomeSuccess.html":{}},"body":{"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["createpati",{"_index":646,"title":{"classes/CreatePatient.html":{}},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["createpatient(pati",{"_index":2299,"title":{},"body":{"injectables/PatientsService.html":{}}}],["createpatienterror",{"_index":2650,"title":{},"body":{"interfaces/State-9.html":{}}}],["createpatientfailur",{"_index":838,"title":{"classes/CreatePatientFailure.html":{}},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["createpatientformdialog",{"_index":645,"title":{"classes/CreatePatientFormDialog.html":{}},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["createpatientpend",{"_index":2123,"title":{},"body":{"components/PatientFormComponent.html":{},"interfaces/State-9.html":{}}}],["createpatientsuccess",{"_index":844,"title":{"classes/CreatePatientSuccess.html":{}},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"injectables/PatientsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["createselector",{"_index":498,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/DashboardState.html":{},"interfaces/State-1.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{}}}],["createselector(getlayoutst",{"_index":1223,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["createselector(selectauthuserst",{"_index":512,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-1.html":{}}}],["createtanslateload",{"_index":312,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["createtanslateloader(http",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["createus",{"_index":681,"title":{"classes/CreateUser.html":{}},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["createuser(us",{"_index":2851,"title":{},"body":{"injectables/UsersService.html":{}}}],["createusererror",{"_index":2566,"title":{},"body":{"interfaces/State-12.html":{}}}],["createuserfailur",{"_index":866,"title":{"classes/CreateUserFailure.html":{}},"body":{"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["createuserformdialog",{"_index":680,"title":{"classes/CreateUserFormDialog.html":{}},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["createuserpend",{"_index":2567,"title":{},"body":{"interfaces/State-12.html":{},"components/UserFormComponent.html":{}}}],["createusersuccess",{"_index":870,"title":{"classes/CreateUserSuccess.html":{}},"body":{"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"injectables/UsersEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["creation",{"_index":2148,"title":{},"body":{"components/PatientFormComponent.html":{},"interfaces/State-10.html":{},"interfaces/State-13.html":{},"interfaces/State-7.html":{},"components/UserFormComponent.html":{}}}],["credenti",{"_index":342,"title":{},"body":{"injectables/AuthApiService.html":{},"classes/ForgotPassword.html":{},"interfaces/ICredentials.html":{},"interfaces/IUser.html":{},"classes/Login.html":{},"classes/Signup.html":{},"index.html":{}}}],["cto",{"_index":2945,"title":{},"body":{"index.html":{}}}],["current",{"_index":572,"title":{},"body":{"components/BreadcrumbComponent.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreateNursingHome.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"components/PatientEditFormComponent.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"interfaces/State-10.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-6.html":{},"interfaces/State-9.html":{},"components/UserEditFormComponent.html":{},"miscellaneous/enumerations.html":{}}}],["currentlang",{"_index":1492,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["currentpati",{"_index":2220,"title":{},"body":{"components/PatientListComponent.html":{}}}],["currentrout",{"_index":1569,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["currenturl",{"_index":182,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["currenturl.indexof(link.group",{"_index":184,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["currentus",{"_index":2779,"title":{},"body":{"components/UserListComponent.html":{}}}],["currentyposit",{"_index":2328,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["custom",{"_index":1639,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["cvb",{"_index":162,"title":{},"body":{"directives/AppDropdownDirective.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"directives/EgretSideNavToggleDirective.html":{},"directives/FontSizeDirective.html":{},"directives/ScrollToDirective.html":{}}}],["cycl",{"_index":2499,"title":{},"body":{"components/SignupComponent.html":{}}}],["dark",{"_index":1696,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["dashboard",{"_index":888,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"interfaces/DashboardState.html":{},"components/ErrorComponent.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"interfaces/State-4.html":{}}}],["dashboard'},{'nam",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["dashboard/blank",{"_index":1629,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["dashboard/dashboard.modul",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["dashboard/pati",{"_index":1631,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["dashboard/us",{"_index":1630,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["dashboardlayoutcompon",{"_index":53,"title":{"components/DashboardLayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["dashboardmodul",{"_index":201,"title":{"modules/DashboardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["dashboardrout",{"_index":1074,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["dashboardroutingmodul",{"_index":1008,"title":{"modules/DashboardRoutingModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["dashboardst",{"_index":1081,"title":{"interfaces/DashboardState.html":{}},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["data",{"_index":761,"title":{},"body":{"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"modules/DashboardRoutingModule.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientFormComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"components/UserFormComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{}}}],["data.messag",{"_index":776,"title":{},"body":{"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{}}}],["data.titl",{"_index":775,"title":{},"body":{"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["databas",{"_index":2052,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["datat",{"_index":1045,"title":{},"body":{"modules/DashboardModule.html":{},"components/PatientListComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["db",{"_index":1671,"title":{},"body":{"interfaces/IPatient.html":{}}}],["de",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"components/DashboardLayoutComponent.html":{},"components/HeaderSideComponent.html":{}}}],["declar",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/ErrorsModule.html":{},"modules/MaterialModule.html":{},"overview.html":{}}}],["deconstruct",{"_index":1148,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["decor",{"_index":384,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ConfirmComponent.html":{},"directives/EgretSideNavToggleDirective.html":{},"directives/FontSizeDirective.html":{},"components/ForgotPasswordComponent.html":{},"components/LockscreenComponent.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientFormComponent.html":{},"injectables/PatientsEffects.html":{},"directives/ScrollToDirective.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserFormComponent.html":{},"injectables/UsersEffects.html":{}}}],["default",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"injectables/AuthEffects.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"injectables/ConfirmService.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/FixTopbar.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/ITheme.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"injectables/NavigationService.html":{},"components/NotificationsComponent.html":{},"injectables/NursingHomesEffects.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"components/SidenavComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{}}}],["defin",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"injectables/ConfirmService.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"components/ForgotPasswordComponent.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"classes/NumberValidators.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{}}}],["definit",{"_index":820,"title":{},"body":{"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ICredentials.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IUser.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"miscellaneous/enumerations.html":{}}}],["defint",{"_index":1560,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"interfaces/NursingHome.html":{}}}],["delay",{"_index":432,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["delay(2000",{"_index":1964,"title":{},"body":{"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["delay(3000",{"_index":372,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["delet",{"_index":655,"title":{},"body":{"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"components/PatientEditFormComponent.html":{},"injectables/PatientsService.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"components/UserEditFormComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["deletepati",{"_index":654,"title":{"classes/DeletePatient.html":{}},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"components/PatientEditFormComponent.html":{},"injectables/PatientsService.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{},"miscellaneous/enumerations.html":{}}}],["deletepatient(id",{"_index":2301,"title":{},"body":{"injectables/PatientsService.html":{}}}],["deleteus",{"_index":689,"title":{"classes/DeleteUser.html":{}},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{},"components/UserEditFormComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["deleteuser(id",{"_index":2853,"title":{},"body":{"injectables/UsersService.html":{}}}],["demo",{"_index":1716,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["dep",{"_index":313,"title":{},"body":{"modules/AppModule.html":{}}}],["depend",{"_index":191,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/ErrorsModule.html":{},"components/PatientListComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deploy",{"_index":3000,"title":{},"body":{"index.html":{}}}],["deprec",{"_index":161,"title":{},"body":{"directives/AppDropdownDirective.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"directives/EgretSideNavToggleDirective.html":{},"directives/FontSizeDirective.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"directives/ScrollToDirective.html":{}}}],["descript",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"modules/CoreModule.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"directives/EgretSideNavToggleDirective.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"interfaces/ICredentials.html":{},"interfaces/IDevice.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IPatient.html":{},"interfaces/IUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"interfaces/NursingHome.html":{},"injectables/NursingHomesEffects.html":{},"classes/OpenSideNav.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"components/SidenavComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["destin",{"_index":3009,"title":{},"body":{"index.html":{}}}],["detail",{"_index":1977,"title":{},"body":{"injectables/NursingHomesEffects.html":{},"components/PatientFormComponent.html":{},"injectables/PatientsEffects.html":{},"components/UserFormComponent.html":{},"injectables/UsersEffects.html":{}}}],["determin",{"_index":2483,"title":{},"body":{"components/SigninComponent.html":{}}}],["deutsch",{"_index":1520,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["dev",{"_index":3002,"title":{},"body":{"index.html":{}}}],["develop",{"_index":2922,"title":{},"body":{"index.html":{}}}],["devic",{"_index":1652,"title":{},"body":{"interfaces/IDevice.html":{},"interfaces/IPatient.html":{}}}],["device.model",{"_index":1668,"title":{},"body":{"interfaces/IPatient.html":{}}}],["device_id",{"_index":1661,"title":{},"body":{"interfaces/IPatient.html":{}}}],["devtool",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["dialog",{"_index":429,"title":{},"body":{"injectables/AuthEffects.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"classes/CreateNursingHome.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"miscellaneous/enumerations.html":{}}}],["dialog.afterclos",{"_index":786,"title":{},"body":{"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{}}}],["dialogref",{"_index":762,"title":{},"body":{"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientFormComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"components/UserFormComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{}}}],["dialogref.afterclos",{"_index":797,"title":{},"body":{"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["dialogu",{"_index":2130,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["differ",{"_index":1642,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["dir",{"_index":1563,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"index.html":{}}}],["direct",{"_index":39,"title":{"directives/AppDropdownDirective.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"directives/EgretSideNavToggleDirective.html":{},"directives/FontSizeDirective.html":{},"directives/ScrollToDirective.html":{}},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"directives/ScrollToDirective.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/State-5.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["directive({selector",{"_index":1380,"title":{},"body":{"directives/FontSizeDirective.html":{},"directives/ScrollToDirective.html":{}}}],["directori",{"_index":3014,"title":{},"body":{"index.html":{}}}],["disabl",{"_index":1550,"title":{},"body":{"components/HeaderSideComponent.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["disableclos",{"_index":796,"title":{},"body":{"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"injectables/LoaderService.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{}}}],["dismiss",{"_index":609,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreateNursingHome.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientFormComponent.html":{},"injectables/PatientsEffects.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"components/UserFormComponent.html":{},"injectables/UsersEffects.html":{},"miscellaneous/enumerations.html":{}}}],["dismisseditnursinghom",{"_index":617,"title":{"classes/DismissEditNursingHome.html":{}},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["dismisseditpati",{"_index":652,"title":{"classes/DismissEditPatient.html":{}},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["dismisseditus",{"_index":687,"title":{"classes/DismissEditUser.html":{}},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["dismisspatientformdialog",{"_index":647,"title":{"classes/DismissPatientFormDialog.html":{}},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"injectables/PatientsEffects.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["dismisspoppedupnursinghomeform",{"_index":608,"title":{"classes/DismissPoppedUpNursingHomeForm.html":{}},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"injectables/NursingHomesEffects.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["dismissuserformdialog",{"_index":682,"title":{"classes/DismissUserFormDialog.html":{}},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{},"injectables/UsersEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["dispatch",{"_index":440,"title":{},"body":{"injectables/AuthEffects.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientFormComponent.html":{},"injectables/PatientsEffects.html":{},"components/UserFormComponent.html":{},"injectables/UsersEffects.html":{}}}],["display",{"_index":1472,"title":{},"body":{"classes/GenericValidator.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{},"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["displaymessag",{"_index":2015,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["displaypati",{"_index":2023,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["displaypatient(pati",{"_index":2027,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["displayus",{"_index":2693,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["displayuser(us",{"_index":2695,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["dist",{"_index":3017,"title":{},"body":{"index.html":{}}}],["distanc",{"_index":2370,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["document",{"_index":997,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["document.bodi",{"_index":2362,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["document.body.scrolltop",{"_index":2355,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["document.documentel",{"_index":2351,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["document.documentelement.scrolltop",{"_index":2352,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["document.getelementbyid(eid",{"_index":2357,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["document.queryselector(selector",{"_index":998,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["doe",{"_index":1813,"title":{},"body":{"components/LockscreenComponent.html":{}}}],["dom",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["don",{"_index":1379,"title":{},"body":{"directives/FontSizeDirective.html":{}}}],["don't",{"_index":2162,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["dropdown",{"_index":117,"title":{},"body":{"directives/AppDropdownDirective.html":{},"directives/DropdownAnchorDirective.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["dropdown.direct",{"_index":1280,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["dropdownanchordirect",{"_index":103,"title":{"directives/DropdownAnchorDirective.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"directives/DropdownAnchorDirective.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["dropdownlink",{"_index":1262,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["dropdownlinkdirect",{"_index":105,"title":{"directives/DropdownLinkDirective.html":{}},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["dropdowntoggl",{"_index":1250,"title":{},"body":{"directives/DropdownAnchorDirective.html":{}}}],["dummi",{"_index":1901,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["durat",{"_index":408,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["dynam",{"_index":2879,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1592,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/ITheme.html":{},"injectables/LayoutService.html":{},"injectables/ThemeService.html":{}}}],["e.g",{"_index":1595,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"index.html":{}}}],["e2",{"_index":2968,"title":{},"body":{"index.html":{}}}],["e91e63",{"_index":1700,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["each",{"_index":1469,"title":{},"body":{"classes/GenericValidator.html":{}}}],["easi",{"_index":783,"title":{},"body":{"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{}}}],["edit",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"components/ConfirmComponent.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsService.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/State-12.html":{},"interfaces/State-4.html":{},"interfaces/State-9.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["editnursinghom",{"_index":616,"title":{"classes/EditNursingHome.html":{}},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["editnursinghomefailur",{"_index":827,"title":{"classes/EditNursingHomeFailure.html":{}},"body":{"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["editnursinghomesuccess",{"_index":826,"title":{"classes/EditNursingHomeSuccess.html":{}},"body":{"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["editpati",{"_index":651,"title":{"classes/EditPatient.html":{}},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"components/PatientEditFormComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["editpatient(chang",{"_index":2303,"title":{},"body":{"injectables/PatientsService.html":{}}}],["editpatienterror",{"_index":2651,"title":{},"body":{"interfaces/State-9.html":{}}}],["editpatientfailur",{"_index":849,"title":{"classes/EditPatientFailure.html":{}},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["editpatientpend",{"_index":2652,"title":{},"body":{"interfaces/State-9.html":{}}}],["editpatientsuccess",{"_index":848,"title":{"classes/EditPatientSuccess.html":{}},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["editus",{"_index":686,"title":{"classes/EditUser.html":{}},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{},"components/UserEditFormComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["edituser(chang",{"_index":2855,"title":{},"body":{"injectables/UsersService.html":{}}}],["editusererror",{"_index":2568,"title":{},"body":{"interfaces/State-12.html":{}}}],["edituserfailur",{"_index":874,"title":{"classes/EditUserFailure.html":{}},"body":{"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["edituserpend",{"_index":2569,"title":{},"body":{"interfaces/State-12.html":{}}}],["editusersuccess",{"_index":873,"title":{"classes/EditUserSuccess.html":{}},"body":{"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"injectables/UsersEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["effect",{"_index":353,"title":{},"body":{"injectables/AuthEffects.html":{},"modules/DashboardModule.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["effect({dispatch",{"_index":393,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["effects/auth.effect",{"_index":475,"title":{},"body":{"modules/AuthModule.html":{}}}],["effects/nurs",{"_index":1032,"title":{},"body":{"modules/DashboardModule.html":{}}}],["effects/patients.effect",{"_index":1030,"title":{},"body":{"modules/DashboardModule.html":{}}}],["effects/users.effect",{"_index":1028,"title":{},"body":{"modules/DashboardModule.html":{}}}],["effectsmodul",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{}}}],["effectsmodule.forfeature([autheffect",{"_index":478,"title":{},"body":{"modules/AuthModule.html":{}}}],["effectsmodule.forfeature(effect",{"_index":1069,"title":{},"body":{"modules/DashboardModule.html":{}}}],["effectsmodule.forroot",{"_index":324,"title":{},"body":{"modules/AppModule.html":{}}}],["egret",{"_index":1695,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["egretsidenavtoggl",{"_index":1306,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["egretsidenavtoggle]'},{'nam",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["egretsidenavtoggledirect",{"_index":107,"title":{"directives/EgretSideNavToggleDirective.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["egretthem",{"_index":1493,"title":{},"body":{"components/HeaderSideComponent.html":{},"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["eid",{"_index":2336,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["el",{"_index":1371,"title":{},"body":{"directives/FontSizeDirective.html":{},"directives/ScrollToDirective.html":{}}}],["element",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["element.scrolltop",{"_index":999,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["elementref",{"_index":1372,"title":{},"body":{"directives/FontSizeDirective.html":{},"directives/ScrollToDirective.html":{}}}],["elm",{"_index":2356,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["elm.offsettop",{"_index":2359,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["elmid",{"_index":2327,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["elmyposit",{"_index":2329,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["elmyposition(eid",{"_index":2334,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["email",{"_index":1398,"title":{},"body":{"classes/ForgotPassword.html":{},"interfaces/ICredentials.html":{},"interfaces/IUser.html":{},"classes/Login.html":{},"components/PatientFormComponent.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["emailinvalid",{"_index":2731,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["emailrequir",{"_index":2177,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["emit",{"_index":2196,"title":{},"body":{"components/PatientListComponent.html":{},"components/UserListComponent.html":{}}}],["en",{"_index":1519,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["enabl",{"_index":2999,"title":{},"body":{"index.html":{}}}],["encapsul",{"_index":366,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/PatientsService.html":{},"injectables/UsersService.html":{}}}],["encod",{"_index":1673,"title":{},"body":{"interfaces/IPatient.html":{}}}],["english",{"_index":1517,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["ensur",{"_index":2105,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["entiti",{"_index":1161,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-4.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{}}}],["entities[id",{"_index":1162,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["entityadapt",{"_index":2532,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{}}}],["entityst",{"_index":2530,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{}}}],["entrycompon",{"_index":479,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{}}}],["enum",{"_index":597,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/FixTopbar.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"classes/Signup.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["enumer",{"_index":2898,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":2977,"title":{},"body":{"index.html":{}}}],["environ",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthApiService.html":{},"injectables/NursingHomesService.html":{},"injectables/PatientsService.html":{},"interfaces/State.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["environment.*.t",{"_index":2975,"title":{},"body":{"index.html":{}}}],["environment.calvin.t",{"_index":2981,"title":{},"body":{"index.html":{}}}],["environment.product",{"_index":323,"title":{},"body":{"modules/AppModule.html":{},"interfaces/State.html":{}}}],["environment.t",{"_index":2978,"title":{},"body":{"index.html":{}}}],["environment.whitelisteddomain",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environ",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthApiService.html":{},"injectables/NursingHomesService.html":{},"injectables/PatientsService.html":{},"interfaces/State.html":{},"injectables/UsersService.html":{}}}],["error",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"interfaces/DashboardState.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"modules/ErrorsModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/State-12.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-6.html":{},"interfaces/State-9.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["error'},{'nam",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["error.component.html",{"_index":1339,"title":{},"body":{"components/ErrorComponent.html":{}}}],["errorcompon",{"_index":55,"title":{"components/ErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"modules/ErrorsModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["errorlayoutcompon",{"_index":57,"title":{"components/ErrorLayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"modules/ErrorsModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["errormessag",{"_index":2016,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/PatientListComponent.html":{},"components/SigninComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{}}}],["errors.rout",{"_index":1361,"title":{},"body":{"modules/ErrorsRoutingModule.html":{}}}],["errors/errors.modul",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["errorsmodul",{"_index":202,"title":{"modules/ErrorsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ErrorsModule.html":{},"modules.html":{},"overview.html":{}}}],["errorsrout",{"_index":1360,"title":{},"body":{"modules/ErrorsRoutingModule.html":{}}}],["errorsroutingmodul",{"_index":1352,"title":{"modules/ErrorsRoutingModule.html":{}},"body":{"modules/ErrorsModule.html":{},"modules/ErrorsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["event",{"_index":176,"title":{},"body":{"directives/AppDropdownDirective.html":{},"components/BreadcrumbComponent.html":{},"components/DashboardLayoutComponent.html":{},"directives/DropdownAnchorDirective.html":{},"components/HeaderSideComponent.html":{},"components/NotificationsComponent.html":{},"directives/ScrollToDirective.html":{}}}],["event.preventdefault",{"_index":1905,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["exampl",{"_index":120,"title":{},"body":{"directives/AppDropdownDirective.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"directives/EgretSideNavToggleDirective.html":{},"directives/FontSizeDirective.html":{},"directives/ScrollToDirective.html":{}}}],["exhaustmap",{"_index":401,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["exhaustmap((credenti",{"_index":375,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["exhaustmap((id",{"_index":2827,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["exhaustmap((nursinghomedata",{"_index":1962,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["exhaustmap((pati",{"_index":2272,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["exhaustmap((patientdata",{"_index":2253,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["exhaustmap((us",{"_index":2814,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["exhaustmap((userdata",{"_index":2801,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["exist",{"_index":2513,"title":{},"body":{"components/SignupComponent.html":{},"index.html":{}}}],["exit_to_app",{"_index":1552,"title":{},"body":{"components/HeaderSideComponent.html":{},"components/SidebarSideComponent.html":{}}}],["explor",{"_index":2347,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["export",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interfaces/AuthState.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"modules/CoreModule.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"modules/ErrorsModule.html":{},"modules/ErrorsRoutingModule.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"components/ForgotPasswordComponent.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ICredentials.html":{},"interfaces/IDevice.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IPatient.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"interfaces/IUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"modules/MaterialModule.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"classes/NumberValidators.html":{},"interfaces/NursingHome.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"modules/SharedModule.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["extend",{"_index":502,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/DashboardState.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-4.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{}}}],["extract",{"_index":2918,"title":{},"body":{"miscellaneous/functions.html":{}}}],["factori",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["failur",{"_index":816,"title":{},"body":{"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["fals",{"_index":167,"title":{},"body":{"directives/AppDropdownDirective.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"components/DashboardLayoutComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/ITheme.html":{},"injectables/LayoutService.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientEditFormComponent.html":{},"components/PatientListComponent.html":{},"injectables/PatientsEffects.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-3.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/ThemeService.html":{},"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{},"injectables/UsersEffects.html":{}}}],["fb",{"_index":1928,"title":{},"body":{"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["featur",{"_index":1122,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["femal",{"_index":2118,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["field",{"_index":2073,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["file",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interfaces/AuthState.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"modules/CoreModule.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"modules/ErrorsModule.html":{},"modules/ErrorsRoutingModule.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"components/ForgotPasswordComponent.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ICredentials.html":{},"interfaces/IDevice.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IPatient.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"interfaces/IUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"modules/MaterialModule.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"classes/NumberValidators.html":{},"interfaces/NursingHome.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"modules/SharedModule.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["filereplac",{"_index":2989,"title":{},"body":{"index.html":{}}}],["filter",{"_index":159,"title":{},"body":{"directives/AppDropdownDirective.html":{},"components/BreadcrumbComponent.html":{},"components/DashboardLayoutComponent.html":{}}}],["filter(ev",{"_index":950,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["final",{"_index":2992,"title":{},"body":{"index.html":{}}}],["finish",{"_index":1969,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["fire",{"_index":1971,"title":{},"body":{"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["firefox",{"_index":2341,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["first",{"_index":2224,"title":{},"body":{"components/PatientListComponent.html":{},"components/UserListComponent.html":{}}}],["firstnam",{"_index":1648,"title":{},"body":{"interfaces/ICredentials.html":{},"interfaces/IPatient.html":{},"interfaces/IUser.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["firstnamerequir",{"_index":2175,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["fix",{"_index":738,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{}}}],["fixtopbar",{"_index":737,"title":{"classes/FixTopbar.html":{}},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["flag",{"_index":971,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["flexlayoutmodul",{"_index":1863,"title":{},"body":{"modules/MaterialModule.html":{}}}],["flipactiveflag",{"_index":2672,"title":{},"body":{"injectables/ThemeService.html":{}}}],["flipactiveflag(them",{"_index":1725,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["folder",{"_index":2950,"title":{},"body":{"index.html":{}}}],["follow",{"_index":2987,"title":{},"body":{"index.html":{}}}],["font",{"_index":1367,"title":{},"body":{"directives/FontSizeDirective.html":{}}}],["fontsiz",{"_index":1369,"title":{},"body":{"directives/FontSizeDirective.html":{}}}],["fontsize]'},{'nam",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["fontsizedirect",{"_index":109,"title":{"directives/FontSizeDirective.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"directives/FontSizeDirective.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["forgot",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"classes/ForgotPassword.html":{},"components/ForgotPasswordComponent.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["forgotpassword",{"_index":1384,"title":{"classes/ForgotPassword.html":{}},"body":{"classes/ForgotPassword.html":{},"classes/Login.html":{},"classes/Signup.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["forgotpasswordcompon",{"_index":59,"title":{"components/ForgotPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"modules/CoreModule.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"modules/ErrorsModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["forgotpasswordfailur",{"_index":1423,"title":{"classes/ForgotPasswordFailure.html":{}},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["forgotpasswordsuccess",{"_index":1434,"title":{"classes/ForgotPasswordSuccess.html":{}},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["form",{"_index":605,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreateNursingHome.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"classes/GenericValidator.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"injectables/PatientsEffects.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"injectables/UsersEffects.html":{},"miscellaneous/enumerations.html":{}}}],["form'",{"_index":2057,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["form'},{'nam",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["form.compon",{"_index":1052,"title":{},"body":{"modules/DashboardModule.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{}}}],["form.component.html",{"_index":1923,"title":{},"body":{"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.scss",{"_index":2013,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["form.component.t",{"_index":1922,"title":{},"body":{"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.ts:100",{"_index":2024,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["form.component.ts:101",{"_index":2696,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["form.component.ts:104",{"_index":2028,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["form.component.ts:112",{"_index":2129,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.ts:122",{"_index":2025,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["form.component.ts:143",{"_index":2026,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["form.component.ts:154",{"_index":2029,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["form.component.ts:18",{"_index":1930,"title":{},"body":{"components/NursingHomeFormComponent.html":{}}}],["form.component.ts:20",{"_index":1938,"title":{},"body":{"components/NursingHomeFormComponent.html":{}}}],["form.component.ts:21",{"_index":1939,"title":{},"body":{"components/NursingHomeFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.ts:24",{"_index":2138,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.ts:25",{"_index":2039,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["form.component.ts:26",{"_index":2033,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["form.component.ts:27",{"_index":1934,"title":{},"body":{"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["form.component.ts:28",{"_index":2041,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["form.component.ts:29",{"_index":2146,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.ts:30",{"_index":2040,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["form.component.ts:33",{"_index":1932,"title":{},"body":{"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["form.component.ts:34",{"_index":2043,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.ts:35",{"_index":2034,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["form.component.ts:38",{"_index":2703,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["form.component.ts:39",{"_index":2141,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.ts:40",{"_index":1937,"title":{},"body":{"components/NursingHomeFormComponent.html":{}}}],["form.component.ts:42",{"_index":2042,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["form.component.ts:43",{"_index":2144,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.ts:45",{"_index":2036,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.ts:48",{"_index":1936,"title":{},"body":{"components/NursingHomeFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.ts:49",{"_index":2139,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.ts:50",{"_index":2038,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["form.component.ts:52",{"_index":1933,"title":{},"body":{"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.ts:53",{"_index":2136,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.ts:55",{"_index":2699,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["form.component.ts:57",{"_index":2032,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["form.component.ts:58",{"_index":2132,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.ts:72",{"_index":2698,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["form.component.ts:74",{"_index":2031,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["form.component.ts:80",{"_index":2134,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.ts:91",{"_index":2697,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["form.component.ts:94",{"_index":2030,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["form.component.ts:97",{"_index":2694,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["form.component.ts:99",{"_index":2135,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form/nurs",{"_index":1056,"title":{},"body":{"modules/DashboardModule.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{}}}],["form/pati",{"_index":1053,"title":{},"body":{"modules/DashboardModule.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{}}}],["form/us",{"_index":1051,"title":{},"body":{"modules/DashboardModule.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{}}}],["format_color_fil",{"_index":1543,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["formbuild",{"_index":1929,"title":{},"body":{"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["formcontrol",{"_index":2478,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["formgroup",{"_index":1456,"title":{},"body":{"classes/GenericValidator.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["formsmodul",{"_index":470,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/SharedModule.html":{}}}],["formvaluechang",{"_index":2086,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["found",{"_index":1874,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found'},{'nam",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["found.compon",{"_index":1356,"title":{},"body":{"modules/ErrorsModule.html":{}}}],["found.component.html",{"_index":1875,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.t",{"_index":1873,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts:12",{"_index":1877,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts:7",{"_index":1876,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found/not",{"_index":1355,"title":{},"body":{"modules/ErrorsModule.html":{},"components/NotFoundComponent.html":{}}}],["frequent",{"_index":1635,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["fromauth",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthState.html":{},"components/HeaderSideComponent.html":{},"components/SidebarSideComponent.html":{},"components/SigninComponent.html":{},"interfaces/State-1.html":{}}}],["fromauth.getaccesstoken",{"_index":515,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-1.html":{}}}],["fromauth.getus",{"_index":513,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-1.html":{}}}],["fromauth.reduc",{"_index":477,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/AuthState.html":{},"interfaces/State-1.html":{}}}],["fromauth.st",{"_index":490,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-1.html":{}}}],["fromdashboard",{"_index":939,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"components/HeaderSideComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["fromdashboard.reduc",{"_index":1068,"title":{},"body":{"modules/DashboardModule.html":{}}}],["fromlayout",{"_index":1110,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromlayout.getbreadcrumb",{"_index":1235,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromlayout.getdirect",{"_index":1228,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromlayout.getismobil",{"_index":1231,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromlayout.getlayoutintransit",{"_index":1230,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromlayout.getnavposit",{"_index":1226,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromlayout.getsidenav",{"_index":1224,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromlayout.gettopbarfix",{"_index":1237,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromlayout.getusebreadcrumb",{"_index":1233,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromlayout.reduc",{"_index":1121,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromlayout.st",{"_index":1089,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromnursinghom",{"_index":1108,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromnursinghome.adapater.getselectors(getnursinghomesst",{"_index":1183,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromnursinghome.getselectednursinghomeid",{"_index":1178,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromnursinghome.reduc",{"_index":1116,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromnursinghome.st",{"_index":1091,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromnursinghomepag",{"_index":1101,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromnursinghomepage.geterror",{"_index":1172,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromnursinghomepage.getpend",{"_index":1174,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromnursinghomepage.reduc",{"_index":1115,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromnursinghomepage.st",{"_index":1090,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["frompati",{"_index":1104,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["frompatientpag",{"_index":1100,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["frompatientpage.getcreatepatienterror",{"_index":1192,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["frompatientpage.getcreatepatientpend",{"_index":1194,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["frompatientpage.geteditpatienterror",{"_index":1196,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["frompatientpage.geteditpatientpend",{"_index":1198,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["frompatientpage.geterror",{"_index":1188,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["frompatientpage.getloadpatientuserserror",{"_index":1202,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["frompatientpage.getloadpatientuserspend",{"_index":1200,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["frompatientpage.getpend",{"_index":1190,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["frompatientpage.reduc",{"_index":1117,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["frompatientpage.st",{"_index":1092,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["frompatients.adapater.getselectors(getpatientsst",{"_index":1211,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["frompatients.getselectedpatientid",{"_index":1206,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["frompatients.reduc",{"_index":1118,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["frompatients.st",{"_index":1093,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["frompatientus",{"_index":1107,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["frompatientusers.adapater.getselectors(getpatientusersst",{"_index":1218,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["frompatientusers.reduc",{"_index":1120,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["frompatientusers.st",{"_index":1094,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromroot",{"_index":495,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/DashboardState.html":{},"interfaces/State-1.html":{},"interfaces/State-4.html":{}}}],["fromroot.st",{"_index":503,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/DashboardState.html":{},"interfaces/State-1.html":{},"interfaces/State-4.html":{}}}],["fromrout",{"_index":2516,"title":{},"body":{"interfaces/State.html":{}}}],["fromrouter.routerreduc",{"_index":2521,"title":{},"body":{"interfaces/State.html":{}}}],["fromrouter.routerreducerst",{"_index":2515,"title":{},"body":{"interfaces/State.html":{}}}],["fromus",{"_index":1102,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromuserpag",{"_index":1098,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromuserpage.getcreateusererror",{"_index":1133,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromuserpage.getcreateuserpend",{"_index":1135,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromuserpage.geteditusererror",{"_index":1137,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromuserpage.getedituserpend",{"_index":1139,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromuserpage.geterror",{"_index":1128,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromuserpage.getloaduserpatientserror",{"_index":1143,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromuserpage.getloaduserpatientspend",{"_index":1141,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromuserpage.getpend",{"_index":1131,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromuserpage.reduc",{"_index":1113,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromuserpage.st",{"_index":1095,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromuserpati",{"_index":1106,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromuserpatients.adapater.getselectors(getuserpatientsst",{"_index":1168,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromuserpatients.reduc",{"_index":1119,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromuserpatients.st",{"_index":1096,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromusers.adapater.getselectors(getusersst",{"_index":1158,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromusers.getselecteduserid",{"_index":1147,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromusers.reduc",{"_index":1114,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromusers.st",{"_index":1097,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["fromview",{"_index":493,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-1.html":{}}}],["fromviews.geterror",{"_index":523,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-1.html":{}}}],["fromviews.getpend",{"_index":521,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-1.html":{}}}],["fromviews.reduc",{"_index":504,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-1.html":{}}}],["fromviews.st",{"_index":491,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-1.html":{}}}],["ftp",{"_index":3015,"title":{},"body":{"index.html":{}}}],["full",{"_index":1079,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"interfaces/State-5.html":{}}}],["fullnam",{"_index":2759,"title":{},"body":{"components/UserListComponent.html":{}}}],["fullwidthrout",{"_index":1570,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["function",{"_index":271,"title":{"miscellaneous/functions.html":{}},"body":{"modules/AppModule.html":{},"components/BreadcrumbComponent.html":{},"interfaces/DashboardState.html":{},"components/LockscreenComponent.html":{},"interfaces/State.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"miscellaneous/functions.html":{}}}],["g",{"_index":2936,"title":{},"body":{"index.html":{}}}],["gaurd",{"_index":444,"title":{},"body":{"guards/AuthGuard.html":{}}}],["gender",{"_index":1662,"title":{},"body":{"interfaces/IPatient.html":{},"components/PatientEditFormComponent.html":{}}}],["gener",{"_index":559,"title":{},"body":{"components/BreadcrumbComponent.html":{},"classes/GenericValidator.html":{},"interfaces/IPatient.html":{},"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["generateroutepart",{"_index":2320,"title":{},"body":{"injectables/RoutePartsService.html":{}}}],["generaterouteparts(snapshot",{"_index":1679,"title":{},"body":{"interfaces/IRoutePart.html":{},"injectables/RoutePartsService.html":{}}}],["genericvalid",{"_index":1448,"title":{"classes/GenericValidator.html":{}},"body":{"classes/GenericValidator.html":{},"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["genericvalidator(this.validationmessag",{"_index":2059,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["get",{"_index":2919,"title":{"index.html":{}},"body":{}}],["getaccesstoken",{"_index":514,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{}}}],["getallnursinghom",{"_index":1181,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["getallpati",{"_index":1209,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["getallpatientus",{"_index":1216,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["getallus",{"_index":1155,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["getalluserpati",{"_index":1166,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["getbreadcrumb",{"_index":1234,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{}}}],["getbrowserlanguag",{"_index":300,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["getcreatepatienterror",{"_index":2661,"title":{},"body":{"interfaces/State-9.html":{}}}],["getcreatepatientpend",{"_index":2663,"title":{},"body":{"interfaces/State-9.html":{}}}],["getcreateusererror",{"_index":2586,"title":{},"body":{"interfaces/State-12.html":{}}}],["getcreateuserpend",{"_index":2588,"title":{},"body":{"interfaces/State-12.html":{}}}],["getdashboardst",{"_index":1123,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["getdirect",{"_index":1227,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{}}}],["geteditpatienterror",{"_index":2665,"title":{},"body":{"interfaces/State-9.html":{}}}],["geteditpatientpend",{"_index":2667,"title":{},"body":{"interfaces/State-9.html":{}}}],["geteditusererror",{"_index":2590,"title":{},"body":{"interfaces/State-12.html":{}}}],["getedituserpend",{"_index":2592,"title":{},"body":{"interfaces/State-12.html":{}}}],["geterror",{"_index":522,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-1.html":{},"interfaces/State-12.html":{},"interfaces/State-3.html":{},"interfaces/State-6.html":{},"interfaces/State-9.html":{}}}],["getismobil",{"_index":890,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"interfaces/DashboardState.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{}}}],["getlayoutintransit",{"_index":1229,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{}}}],["getlayoutst",{"_index":1219,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["getloadpatientuserserror",{"_index":1201,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{},"interfaces/State-9.html":{}}}],["getloadpatientuserspend",{"_index":1199,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{},"interfaces/State-9.html":{}}}],["getloaduserpatientserror",{"_index":1142,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-12.html":{},"interfaces/State-4.html":{}}}],["getloaduserpatientspend",{"_index":1140,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-12.html":{},"interfaces/State-4.html":{}}}],["getnavposit",{"_index":1225,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{}}}],["getnursinghom",{"_index":2000,"title":{},"body":{"injectables/NursingHomesService.html":{}}}],["getnursinghomeent",{"_index":1180,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["getnursinghomepageerror",{"_index":1171,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["getnursinghomepagepend",{"_index":1173,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["getnursinghomesid",{"_index":1179,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["getnursinghomespagest",{"_index":1169,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["getnursinghomesst",{"_index":1175,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["getpati",{"_index":2296,"title":{},"body":{"injectables/PatientsService.html":{}}}],["getpatientcreationerror",{"_index":1191,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["getpatientcreationpend",{"_index":1193,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["getpatienteditionerror",{"_index":1195,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["getpatienteditionpend",{"_index":1197,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["getpatientent",{"_index":1208,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["getpatientpageerror",{"_index":1187,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["getpatientpagepend",{"_index":1189,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["getpatientsid",{"_index":1207,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["getpatientspagest",{"_index":1185,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["getpatientsst",{"_index":1203,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["getpatientusersent",{"_index":1215,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["getpatientusersst",{"_index":1213,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["getpend",{"_index":520,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-1.html":{},"interfaces/State-12.html":{},"interfaces/State-3.html":{},"interfaces/State-6.html":{},"interfaces/State-9.html":{}}}],["getqueryparam",{"_index":1558,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/ITheme.html":{},"injectables/LayoutService.html":{},"injectables/ThemeService.html":{},"miscellaneous/functions.html":{}}}],["getqueryparam('layout",{"_index":1588,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["getqueryparam('them",{"_index":1731,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["getqueryparam(prop",{"_index":2916,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getselectednursinghom",{"_index":1184,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["getselectednursinghomeid",{"_index":1177,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{},"interfaces/State-7.html":{}}}],["getselectedpati",{"_index":1212,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["getselectedpatientid",{"_index":1205,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-10.html":{},"interfaces/State-4.html":{}}}],["getselectedus",{"_index":1160,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["getselecteduserid",{"_index":1146,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-13.html":{},"interfaces/State-4.html":{}}}],["getsidenav",{"_index":1222,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{}}}],["gettopbarfix",{"_index":1236,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{}}}],["gettotalnursiom",{"_index":1182,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["gettotalpati",{"_index":1210,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["gettotalpatientus",{"_index":1217,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["gettotalus",{"_index":1157,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["gettotaluserpati",{"_index":1167,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["geturl",{"_index":130,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["getus",{"_index":511,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"injectables/UsersService.html":{}}}],["getusebreadcrumb",{"_index":1232,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{}}}],["getusercreationerror",{"_index":1132,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["getusercreationpend",{"_index":1134,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["getusereditionerror",{"_index":1136,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["getusereditionpend",{"_index":1138,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["getuserent",{"_index":1153,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["getuserpageerror",{"_index":1127,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["getuserpagepend",{"_index":1130,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["getuserpati",{"_index":2848,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserpatients(id",{"_index":2857,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserpatientsent",{"_index":1165,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["getuserpatientsst",{"_index":1163,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["getusersid",{"_index":1151,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["getuserspagest",{"_index":1125,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["getusersst",{"_index":1144,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["git",{"_index":2924,"title":{},"body":{"index.html":{}}}],["gitlab",{"_index":2943,"title":{},"body":{"index.html":{}}}],["give",{"_index":2979,"title":{},"body":{"index.html":{}}}],["gloabl",{"_index":2520,"title":{},"body":{"interfaces/State.html":{}}}],["global",{"_index":1083,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{},"index.html":{}}}],["good",{"_index":3011,"title":{},"body":{"index.html":{}}}],["graph",{"_index":3023,"title":{},"body":{"modules.html":{}}}],["group",{"_index":1267,"title":{},"body":{"directives/DropdownLinkDirective.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["guard",{"_index":441,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"overview.html":{}}}],["handl",{"_index":1973,"title":{},"body":{"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["hasiconmenu",{"_index":2449,"title":{},"body":{"components/SidenavComponent.html":{}}}],["hasicontypemenuitem",{"_index":2407,"title":{},"body":{"components/SidebarSideComponent.html":{},"components/SidenavComponent.html":{}}}],["header",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["headerfixedbodyp",{"_index":944,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["headersidecompon",{"_index":62,"title":{"components/HeaderSideComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["height",{"_index":1775,"title":{},"body":{"components/LoaderComponent.html":{}}}],["help",{"_index":2070,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["helper",{"_index":2917,"title":{},"body":{"miscellaneous/functions.html":{}}}],["helpers/url.help",{"_index":1559,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/ITheme.html":{},"injectables/LayoutService.html":{},"injectables/ThemeService.html":{}}}],["here",{"_index":1574,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/ITheme.html":{},"injectables/LayoutService.html":{},"components/PatientListComponent.html":{},"injectables/ThemeService.html":{},"components/UserListComponent.html":{}}}],["hideload",{"_index":1988,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["hold",{"_index":991,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["home",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/ClearSelectedNursingHome.html":{},"components/ConfirmComponent.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/NursingHome.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/State-4.html":{},"interfaces/State-6.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["home.model",{"_index":594,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"interfaces/IPatient.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"components/PatientFormComponent.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"interfaces/State-7.html":{},"components/UserFormComponent.html":{}}}],["home.model.t",{"_index":1920,"title":{},"body":{"interfaces/NursingHome.html":{}}}],["homes.act",{"_index":1942,"title":{},"body":{"components/NursingHomeFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["homes.actions.t",{"_index":586,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["homes.actions.ts:106",{"_index":1242,"title":{},"body":{"classes/DismissEditNursingHome.html":{}}}],["homes.actions.ts:113",{"_index":2317,"title":{},"body":{"classes/ResetNursingHomesState.html":{}}}],["homes.actions.ts:25",{"_index":2391,"title":{},"body":{"classes/SelectNursingHome.html":{}}}],["homes.actions.ts:27",{"_index":2392,"title":{},"body":{"classes/SelectNursingHome.html":{}}}],["homes.actions.ts:34",{"_index":591,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{}}}],["homes.actions.ts:41",{"_index":1734,"title":{},"body":{"classes/InitializeNursingHome.html":{}}}],["homes.actions.ts:48",{"_index":2316,"title":{},"body":{"classes/PopUpNursingHomeForm.html":{}}}],["homes.actions.ts:55",{"_index":811,"title":{},"body":{"classes/CreateNursingHome.html":{}}}],["homes.actions.ts:57",{"_index":812,"title":{},"body":{"classes/CreateNursingHome.html":{}}}],["homes.actions.ts:64",{"_index":1246,"title":{},"body":{"classes/DismissPoppedUpNursingHomeForm.html":{}}}],["homes.actions.ts:71",{"_index":1750,"title":{},"body":{"classes/LoadNursingHomes.html":{}}}],["homes.actions.ts:78",{"_index":2379,"title":{},"body":{"classes/SearchNursingHome.html":{}}}],["homes.actions.ts:80",{"_index":2380,"title":{},"body":{"classes/SearchNursingHome.html":{}}}],["homes.actions.ts:87",{"_index":2381,"title":{},"body":{"classes/SearchNursingHomeComplete.html":{}}}],["homes.actions.ts:89",{"_index":2382,"title":{},"body":{"classes/SearchNursingHomeComplete.html":{}}}],["homes.actions.ts:96",{"_index":1290,"title":{},"body":{"classes/EditNursingHome.html":{}}}],["homes.actions.ts:98",{"_index":1291,"title":{},"body":{"classes/EditNursingHome.html":{}}}],["homes.effect",{"_index":1033,"title":{},"body":{"modules/DashboardModule.html":{}}}],["homes.effects.t",{"_index":1957,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["homes.effects.ts:118",{"_index":1976,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["homes.effects.ts:124",{"_index":1959,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["homes.effects.ts:142",{"_index":1994,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["homes.effects.ts:25",{"_index":1970,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["homes.effects.ts:53",{"_index":1989,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["homes.effects.ts:96",{"_index":1993,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["homes.reduc",{"_index":1109,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["homes.reducer.t",{"_index":2636,"title":{},"body":{"interfaces/State-7.html":{},"miscellaneous/functions.html":{}}}],["homes.servic",{"_index":1996,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["homes.service.t",{"_index":1999,"title":{},"body":{"injectables/NursingHomesService.html":{}}}],["homes.service.ts:13",{"_index":2001,"title":{},"body":{"injectables/NursingHomesService.html":{}}}],["homes.service.ts:20",{"_index":2004,"title":{},"body":{"injectables/NursingHomesService.html":{}}}],["homes.service.ts:28",{"_index":2003,"title":{},"body":{"injectables/NursingHomesService.html":{}}}],["homes/nurs",{"_index":1055,"title":{},"body":{"modules/DashboardModule.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{}}}],["hook",{"_index":2456,"title":{},"body":{"components/SidenavComponent.html":{}}}],["host",{"_index":1320,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{},"index.html":{}}}],["host()@self()@opt",{"_index":1318,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["hostbind",{"_index":1279,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["hostbinding('class.open",{"_index":1281,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["hostlisten",{"_index":905,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"directives/DropdownAnchorDirective.html":{},"directives/ScrollToDirective.html":{}}}],["hostlistener('click",{"_index":1258,"title":{},"body":{"directives/DropdownAnchorDirective.html":{},"directives/ScrollToDirective.html":{}}}],["hostlistener('window:res",{"_index":975,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["hour",{"_index":1816,"title":{},"body":{"components/LockscreenComponent.html":{}}}],["html",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["http",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthApiService.html":{},"injectables/NursingHomesService.html":{},"injectables/PatientsService.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["httpclient",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthApiService.html":{},"injectables/NursingHomesService.html":{},"injectables/PatientsService.html":{},"injectables/UsersService.html":{}}}],["httpclientmodul",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["httperror.statustext.tolowercas",{"_index":1985,"title":{},"body":{"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["httpheader",{"_index":2006,"title":{},"body":{"injectables/NursingHomesService.html":{}}}],["httpresponse.statustext.tolowercas",{"_index":404,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["iadjustscreenopt",{"_index":1554,"title":{"interfaces/IAdjustScreenOptions.html":{}},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["ibadg",{"_index":1611,"title":{"interfaces/IBadge.html":{}},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["ichilditem",{"_index":1623,"title":{"interfaces/IChildItem.html":{}},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["icon",{"_index":1619,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{},"components/NotificationsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["icon').length",{"_index":2425,"title":{},"body":{"components/SidebarSideComponent.html":{}}}],["iconmenu",{"_index":1628,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["iconmenutitl",{"_index":2450,"title":{},"body":{"components/SidenavComponent.html":{}}}],["icontypemenutitl",{"_index":1634,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{},"components/SidebarSideComponent.html":{},"components/SidenavComponent.html":{}}}],["icredenti",{"_index":338,"title":{"interfaces/ICredentials.html":{}},"body":{"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"classes/ForgotPassword.html":{},"interfaces/ICredentials.html":{},"interfaces/IUser.html":{},"classes/Login.html":{},"classes/Signup.html":{}}}],["id",{"_index":1145,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/IDevice.html":{},"interfaces/IPatient.html":{},"interfaces/NursingHome.html":{},"components/PatientEditFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsService.html":{},"interfaces/State-10.html":{},"interfaces/State-13.html":{},"interfaces/State-4.html":{},"interfaces/State-7.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["idea",{"_index":3012,"title":{},"body":{"index.html":{}}}],["identifi",{"_index":1605,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["idevic",{"_index":1650,"title":{"interfaces/IDevice.html":{}},"body":{"interfaces/IDevice.html":{},"interfaces/IPatient.html":{}}}],["if(layoutconf.navigationpo",{"_index":983,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["if(this.sidebarp",{"_index":2431,"title":{},"body":{"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["if(user[0].user_patient_permiss",{"_index":2831,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["ilayoutchangeopt",{"_index":1565,"title":{"interfaces/ILayoutChangeOptions.html":{}},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["ilayoutconf",{"_index":1561,"title":{"interfaces/ILayoutConf.html":{}},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["imag",{"_index":1663,"title":{},"body":{"interfaces/IPatient.html":{}}}],["imenuitem",{"_index":1614,"title":{"interfaces/IMenuItem.html":{}},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["implement",{"_index":118,"title":{},"body":{"directives/AppDropdownDirective.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"components/ForgotPasswordComponent.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"interfaces/IRoutePart.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{}}}],["import",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interfaces/AuthState.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"modules/CoreModule.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"modules/ErrorsModule.html":{},"modules/ErrorsRoutingModule.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"components/ForgotPasswordComponent.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IPatient.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"modules/MaterialModule.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"classes/NumberValidators.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"modules/SharedModule.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{}}}],["inbox",{"_index":1891,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["indetermin",{"_index":1419,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LockscreenComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"interfaces/AuthState.html":{},"components/BreadcrumbComponent.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"components/ForgotPasswordComponent.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ICredentials.html":{},"interfaces/IDevice.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IPatient.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"interfaces/IUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"classes/NumberValidators.html":{},"interfaces/NursingHome.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-9.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["indigo",{"_index":1703,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["individu",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interfaces/AuthState.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"modules/CoreModule.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"modules/ErrorsModule.html":{},"modules/ErrorsRoutingModule.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"components/ForgotPasswordComponent.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ICredentials.html":{},"interfaces/IDevice.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IPatient.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"interfaces/IUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"modules/MaterialModule.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"classes/NumberValidators.html":{},"interfaces/NursingHome.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"modules/SharedModule.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{}}}],["init",{"_index":953,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"components/PatientListComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/UserListComponent.html":{}}}],["initbodyps(layoutconf:ani",{"_index":982,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["initi",{"_index":601,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreateNursingHome.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"miscellaneous/enumerations.html":{}}}],["initializenursinghom",{"_index":600,"title":{"classes/InitializeNursingHome.html":{}},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["initializepati",{"_index":644,"title":{"classes/InitializePatient.html":{}},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["initializeus",{"_index":679,"title":{"classes/InitializeUser.html":{}},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["initialst",{"_index":2535,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{}}}],["initsidenav",{"_index":1308,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["inject",{"_index":329,"title":{"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"injectables/ConfirmService.html":{},"injectables/LayoutService.html":{},"injectables/LoaderService.html":{},"injectables/NavigationService.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"injectables/RoutePartsService.html":{},"injectables/ThemeService.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"injectables/LayoutService.html":{},"injectables/LoaderService.html":{},"injectables/NavigationService.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"components/PatientFormComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"injectables/RoutePartsService.html":{},"injectables/ThemeService.html":{},"components/UserFormComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["inject(docu",{"_index":1706,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["inject(mat_dialog_data",{"_index":766,"title":{},"body":{"components/ConfirmComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["injectiontoken",{"_index":773,"title":{},"body":{"components/ConfirmComponent.html":{}}}],["input",{"_index":1266,"title":{},"body":{"directives/DropdownLinkDirective.html":{},"components/HeaderSideComponent.html":{},"components/NotificationsComponent.html":{},"components/SidenavComponent.html":{}}}],["input('hasiconmenu",{"_index":2458,"title":{},"body":{"components/SidenavComponent.html":{}}}],["input('iconmenutitl",{"_index":2459,"title":{},"body":{"components/SidenavComponent.html":{}}}],["input('item",{"_index":2457,"title":{},"body":{"components/SidenavComponent.html":{}}}],["instal",{"_index":2937,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":2055,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["instanceof",{"_index":177,"title":{},"body":{"directives/AppDropdownDirective.html":{},"components/BreadcrumbComponent.html":{},"components/DashboardLayoutComponent.html":{},"classes/GenericValidator.html":{},"components/NotificationsComponent.html":{}}}],["instanti",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["instead",{"_index":2050,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["interact",{"_index":1831,"title":{},"body":{"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"injectables/PatientsService.html":{},"injectables/UsersService.html":{}}}],["interfac",{"_index":486,"title":{"interfaces/AuthState.html":{},"interfaces/ConfirmData.html":{},"interfaces/DashboardState.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ICredentials.html":{},"interfaces/IDevice.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IPatient.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"interfaces/IUser.html":{},"interfaces/NursingHome.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"interfaces/User.html":{}},"body":{"interfaces/AuthState.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"interfaces/DashboardState.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ICredentials.html":{},"interfaces/IDevice.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IPatient.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"interfaces/IUser.html":{},"injectables/LayoutService.html":{},"injectables/NavigationService.html":{},"interfaces/NursingHome.html":{},"injectables/RoutePartsService.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/ThemeService.html":{},"interfaces/User.html":{},"overview.html":{}}}],["internet",{"_index":2346,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["invaild",{"_index":2508,"title":{},"body":{"components/SignupComponent.html":{}}}],["invok",{"_index":1707,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["ipati",{"_index":640,"title":{"interfaces/IPatient.html":{}},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"interfaces/IPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{}}}],["iroutepart",{"_index":1674,"title":{"interfaces/IRoutePart.html":{}},"body":{"interfaces/IRoutePart.html":{},"injectables/RoutePartsService.html":{}}}],["isact",{"_index":1694,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["isen",{"_index":551,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["isloggedin",{"_index":516,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-1.html":{}}}],["ismobil",{"_index":967,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"directives/EgretSideNavToggleDirective.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"interfaces/State-5.html":{}}}],["ismoduleload",{"_index":891,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["isnan(c.valu",{"_index":1918,"title":{},"body":{"classes/NumberValidators.html":{}}}],["ispend",{"_index":2185,"title":{},"body":{"components/PatientListComponent.html":{},"components/UserListComponent.html":{}}}],["issm",{"_index":1608,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["it'",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/LockscreenComponent.html":{}}}],["it\\'",{"_index":1818,"title":{},"body":{"components/LockscreenComponent.html":{}}}],["item",{"_index":569,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientListComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidenavComponent.html":{},"components/UserListComponent.html":{}}}],["item.breadcrumb",{"_index":563,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["item.firstnam",{"_index":1949,"title":{},"body":{"components/NursingHomeFormComponent.html":{}}}],["item.icon",{"_index":2460,"title":{},"body":{"components/SidenavComponent.html":{}}}],["item.lastnam",{"_index":1951,"title":{},"body":{"components/NursingHomeFormComponent.html":{}}}],["item.nam",{"_index":2461,"title":{},"body":{"components/SidenavComponent.html":{}}}],["item.typ",{"_index":2424,"title":{},"body":{"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["item.url",{"_index":567,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["item.urlsegments.foreach((urlseg",{"_index":565,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["itemform",{"_index":1924,"title":{},"body":{"components/NursingHomeFormComponent.html":{}}}],["itemlvl2.nam",{"_index":2464,"title":{},"body":{"components/SidenavComponent.html":{}}}],["itemlvl3.nam",{"_index":2465,"title":{},"body":{"components/SidenavComponent.html":{}}}],["ithem",{"_index":1691,"title":{"interfaces/ITheme.html":{}},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["iuser",{"_index":1647,"title":{"interfaces/IUser.html":{}},"body":{"interfaces/ICredentials.html":{},"interfaces/IUser.html":{},"interfaces/State-2.html":{}}}],["j",{"_index":566,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["john",{"_index":1812,"title":{},"body":{"components/LockscreenComponent.html":{}}}],["js",{"_index":2886,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["json.parse(layoutconfstr",{"_index":1590,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["json.parse(themestr",{"_index":1732,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["jwt",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthState.html":{},"interfaces/State-1.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["jwt_option",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["jwthelper",{"_index":500,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-1.html":{}}}],["jwthelper.istokenexpired(state.access_token",{"_index":519,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-1.html":{}}}],["jwthelperservic",{"_index":499,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-1.html":{}}}],["jwtmodul",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtmodule.forroot",{"_index":314,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtoptionsfactori",{"_index":316,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["jwtoptionsfactory(stor",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["jwtoptionsprovid",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["key",{"_index":1468,"title":{},"body":{"classes/GenericValidator.html":{},"classes/NumberValidators.html":{},"interfaces/NursingHome.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"injectables/PatientsEffects.html":{},"interfaces/State.html":{},"components/UserEditFormComponent.html":{},"injectables/UsersEffects.html":{}}}],["keyboard_arrow_right",{"_index":2463,"title":{},"body":{"components/SidenavComponent.html":{}}}],["lang.nam",{"_index":1542,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["languag",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderSideComponent.html":{},"miscellaneous/functions.html":{}}}],["last",{"_index":1814,"title":{},"body":{"components/LockscreenComponent.html":{}}}],["last_login",{"_index":2686,"title":{},"body":{"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{}}}],["lastnam",{"_index":1649,"title":{},"body":{"interfaces/ICredentials.html":{},"interfaces/IPatient.html":{},"interfaces/IUser.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["lastnamerequir",{"_index":2116,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["later",{"_index":2986,"title":{},"body":{"index.html":{}}}],["layout",{"_index":456,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/DashboardLayoutComponent.html":{},"interfaces/DashboardState.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorLayoutComponent.html":{},"classes/FixTopbar.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"modules/MaterialModule.html":{},"classes/OpenSideNav.html":{},"components/PatientsComponent.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-4.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"components/UsersComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["layout'},{'nam",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["layout.compon",{"_index":474,"title":{},"body":{"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/ErrorsModule.html":{}}}],["layout.component.html",{"_index":889,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.component.t",{"_index":455,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorLayoutComponent.html":{}}}],["layout.component.ts:120",{"_index":918,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.component.ts:127",{"_index":915,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.component.ts:139",{"_index":913,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.component.ts:19",{"_index":919,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.component.ts:20",{"_index":924,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.component.ts:21",{"_index":921,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.component.ts:22",{"_index":926,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.component.ts:23",{"_index":923,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.component.ts:28",{"_index":928,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.component.ts:29",{"_index":920,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.component.ts:30",{"_index":929,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.component.ts:31",{"_index":925,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.component.ts:32",{"_index":922,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.component.ts:33",{"_index":931,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.component.ts:34",{"_index":909,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.component.ts:39",{"_index":932,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.component.ts:40",{"_index":930,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.component.ts:58",{"_index":916,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.component.ts:93",{"_index":912,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.component.ts:97",{"_index":914,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layout.reduc",{"_index":1111,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["layoutact",{"_index":755,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/DashboardLayoutComponent.html":{},"classes/FixTopbar.html":{},"components/HeaderSideComponent.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-5.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/typealiases.html":{}}}],["layoutactions.closesidenav('clos",{"_index":1002,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"components/HeaderSideComponent.html":{}}}],["layoutactions.opensidenav('ful",{"_index":1535,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["layoutactiontyp",{"_index":714,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-5.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{}}}],["layoutactiontypes.closesidenav",{"_index":713,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-5.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["layoutactiontypes.compactsidenav",{"_index":741,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-5.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["layoutactiontypes.fixtopbar",{"_index":754,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-5.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["layoutactiontypes.makebreadcrumbsimpl",{"_index":750,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-5.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["layoutactiontypes.makebreadcrumbtitl",{"_index":752,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-5.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["layoutactiontypes.opensidenav",{"_index":740,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-5.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["layoutactiontypes.setdirectionltr",{"_index":746,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-5.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["layoutactiontypes.setdirectionrtr",{"_index":747,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-5.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["layoutactiontypes.setnavigationpositionsid",{"_index":742,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-5.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["layoutactiontypes.setnavigationpositiontop",{"_index":743,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-5.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["layoutactiontypes.transitioninglayout",{"_index":748,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-5.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["layoutactiontypes.usebreadcrumb",{"_index":749,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-5.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["layoutconf",{"_index":892,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["layoutconf.topbarfix",{"_index":984,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layoutconfstr",{"_index":1587,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["layoutconfsub",{"_index":893,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["layoutconfsubject",{"_index":1566,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["layoutintransit",{"_index":894,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"interfaces/State-5.html":{}}}],["layoutservic",{"_index":539,"title":{"injectables/LayoutService.html":{}},"body":{"components/BreadcrumbComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["lc",{"_index":1576,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["leapi",{"_index":2376,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["left",{"_index":744,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["legend",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"modules/CoreModule.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"modules/ErrorsModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["life",{"_index":2498,"title":{},"body":{"components/SignupComponent.html":{}}}],["lifecycl",{"_index":2455,"title":{},"body":{"components/SidenavComponent.html":{}}}],["light",{"_index":1792,"title":{},"body":{"injectables/LoaderService.html":{}}}],["link",{"_index":141,"title":{},"body":{"directives/AppDropdownDirective.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["link.direct",{"_index":157,"title":{},"body":{"directives/AppDropdownDirective.html":{},"modules/DashboardModule.html":{},"directives/DropdownAnchorDirective.html":{}}}],["link.directive.t",{"_index":1261,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["link.directive.ts:16",{"_index":1271,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["link.directive.ts:20",{"_index":1272,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["link.directive.ts:24",{"_index":1278,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["link.directive.ts:31",{"_index":1276,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["link.directive.ts:32",{"_index":1270,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["link.directive.ts:38",{"_index":1274,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["link.directive.ts:42",{"_index":1273,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["link.directive.ts:46",{"_index":1275,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["link.group",{"_index":179,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["link.open",{"_index":166,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["link/dropdown/icon/separator/extlink",{"_index":1616,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["lint",{"_index":2967,"title":{},"body":{"index.html":{}}}],["list",{"_index":809,"title":{},"body":{"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"components/PatientListComponent.html":{},"injectables/PatientsEffects.html":{},"components/SidebarSideComponent.html":{},"components/UserListComponent.html":{},"injectables/UsersEffects.html":{}}}],["list'},{'nam",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["list.compon",{"_index":1038,"title":{},"body":{"modules/DashboardModule.html":{}}}],["list.component.html",{"_index":2184,"title":{},"body":{"components/PatientListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.scss",{"_index":2183,"title":{},"body":{"components/PatientListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.t",{"_index":2182,"title":{},"body":{"components/PatientListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.ts:107",{"_index":2195,"title":{},"body":{"components/PatientListComponent.html":{}}}],["list.component.ts:111",{"_index":2753,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:116",{"_index":2752,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:121",{"_index":2757,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:134",{"_index":2755,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:24",{"_index":2213,"title":{},"body":{"components/PatientListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.ts:25",{"_index":2203,"title":{},"body":{"components/PatientListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.ts:27",{"_index":2206,"title":{},"body":{"components/PatientListComponent.html":{}}}],["list.component.ts:30",{"_index":2212,"title":{},"body":{"components/PatientListComponent.html":{}}}],["list.component.ts:31",{"_index":2765,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:35",{"_index":2208,"title":{},"body":{"components/PatientListComponent.html":{}}}],["list.component.ts:40",{"_index":2205,"title":{},"body":{"components/PatientListComponent.html":{}}}],["list.component.ts:42",{"_index":2190,"title":{},"body":{"components/PatientListComponent.html":{}}}],["list.component.ts:54",{"_index":2769,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:57",{"_index":2775,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:59",{"_index":2209,"title":{},"body":{"components/PatientListComponent.html":{}}}],["list.component.ts:60",{"_index":2210,"title":{},"body":{"components/PatientListComponent.html":{}}}],["list.component.ts:62",{"_index":2771,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:65",{"_index":2193,"title":{},"body":{"components/PatientListComponent.html":{}}}],["list.component.ts:67",{"_index":2768,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:69",{"_index":2751,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:84",{"_index":2192,"title":{},"body":{"components/PatientListComponent.html":{}}}],["list.component.ts:86",{"_index":2772,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:87",{"_index":2773,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:89",{"_index":2191,"title":{},"body":{"components/PatientListComponent.html":{}}}],["list.component.ts:92",{"_index":2754,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:94",{"_index":2202,"title":{},"body":{"components/PatientListComponent.html":{}}}],["list/pati",{"_index":1040,"title":{},"body":{"modules/DashboardModule.html":{},"components/PatientListComponent.html":{}}}],["list/us",{"_index":1037,"title":{},"body":{"modules/DashboardModule.html":{},"components/UserListComponent.html":{}}}],["listen",{"_index":386,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["liter",{"_index":810,"title":{},"body":{"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/GenericValidator.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"components/PatientEditFormComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"classes/Signup.html":{},"components/UserEditFormComponent.html":{}}}],["load",{"_index":611,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"injectables/PatientsEffects.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-4.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"injectables/UsersEffects.html":{},"miscellaneous/enumerations.html":{}}}],["loadallnursinghom",{"_index":2150,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["loader",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"components/DashboardLayoutComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"dependencies.html":{}}}],["loader'},{'nam",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["loader.component.html",{"_index":1768,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.component.scss",{"_index":1767,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loadercompon",{"_index":65,"title":{"components/LoaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["loaderservic",{"_index":1777,"title":{"injectables/LoaderService.html":{}},"body":{"injectables/LoaderService.html":{}}}],["loadnursinghom",{"_index":610,"title":{"classes/LoadNursingHomes.html":{}},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"injectables/NursingHomesEffects.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadnursinghomeerrormessag",{"_index":2124,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["loadnursinghomepend",{"_index":2125,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["loadnursinghomesfailur",{"_index":825,"title":{"classes/LoadNursingHomesFailure.html":{}},"body":{"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadnursinghomessuccess",{"_index":824,"title":{"classes/LoadNursingHomesSuccess.html":{}},"body":{"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadpati",{"_index":648,"title":{"classes/LoadPatients.html":{}},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"injectables/PatientsEffects.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadpatientpatientserror",{"_index":2017,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["loadpatientpatientspend",{"_index":2018,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["loadpatientsfailur",{"_index":847,"title":{"classes/LoadPatientsFailure.html":{}},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadpatientssuccess",{"_index":846,"title":{"classes/LoadPatientsSuccess.html":{}},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadpatientus",{"_index":656,"title":{"classes/LoadPatientUsers.html":{}},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadpatientuserserror",{"_index":2653,"title":{},"body":{"interfaces/State-9.html":{}}}],["loadpatientusersfailur",{"_index":852,"title":{"classes/LoadPatientUsersFailure.html":{}},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadpatientuserspend",{"_index":2654,"title":{},"body":{"interfaces/State-9.html":{}}}],["loadpatientuserssuccess",{"_index":850,"title":{"classes/LoadPatientUsersSuccess.html":{}},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadus",{"_index":683,"title":{"classes/LoadUsers.html":{}},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{},"injectables/UsersEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loaduserpati",{"_index":690,"title":{"classes/LoadUserPatients.html":{}},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{},"injectables/UsersEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loaduserpatientserror",{"_index":2570,"title":{},"body":{"interfaces/State-12.html":{},"components/UserEditFormComponent.html":{}}}],["loaduserpatientsfailur",{"_index":876,"title":{"classes/LoadUserPatientsFailure.html":{}},"body":{"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loaduserpatientspend",{"_index":2571,"title":{},"body":{"interfaces/State-12.html":{},"components/UserEditFormComponent.html":{}}}],["loaduserpatientssuccess",{"_index":875,"title":{"classes/LoadUserPatientsSuccess.html":{}},"body":{"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadusersfailur",{"_index":872,"title":{"classes/LoadUsersFailure.html":{}},"body":{"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loaduserssuccess",{"_index":871,"title":{"classes/LoadUsersSuccess.html":{}},"body":{"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["local",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["locale.indexof",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["locale.substr(0",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["locale_id",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["localhost:4200",{"_index":2959,"title":{},"body":{"index.html":{}}}],["localstorag",{"_index":2519,"title":{},"body":{"interfaces/State.html":{},"dependencies.html":{}}}],["localstoragesync",{"_index":2518,"title":{},"body":{"interfaces/State.html":{}}}],["localstoragesyncreduc",{"_index":2528,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/functions.html":{}}}],["localstoragesyncreducer(reduc",{"_index":2526,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/functions.html":{}}}],["lock",{"_index":1800,"title":{},"body":{"components/LockscreenComponent.html":{},"components/SidebarSideComponent.html":{}}}],["lockscreen",{"_index":1801,"title":{},"body":{"components/LockscreenComponent.html":{}}}],["lockscreen'},{'nam",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["lockscreen.component.html",{"_index":1802,"title":{},"body":{"components/LockscreenComponent.html":{}}}],["lockscreencompon",{"_index":67,"title":{"components/LockscreenComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"modules/CoreModule.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"modules/ErrorsModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["lockscreendata",{"_index":1803,"title":{},"body":{"components/LockscreenComponent.html":{}}}],["log",{"_index":340,"title":{},"body":{"injectables/AuthApiService.html":{},"guards/AuthGuard.html":{}}}],["logger",{"_index":2522,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/functions.html":{}}}],["logger(reduc",{"_index":2523,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/functions.html":{}}}],["login",{"_index":333,"title":{"classes/Login.html":{}},"body":{"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"classes/Signup.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["login(credenti",{"_index":337,"title":{},"body":{"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{}}}],["loginfailur",{"_index":1430,"title":{"classes/LoginFailure.html":{}},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loginredirect",{"_index":355,"title":{"classes/LoginRedirect.html":{}},"body":{"injectables/AuthEffects.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loginsuccess",{"_index":356,"title":{"classes/LoginSuccess.html":{}},"body":{"injectables/AuthEffects.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["logonli",{"_index":322,"title":{},"body":{"modules/AppModule.html":{}}}],["logout",{"_index":334,"title":{"classes/Logout.html":{}},"body":{"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"components/HeaderSideComponent.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"components/SidebarSideComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["logoutconfirm",{"_index":357,"title":{"classes/LogoutConfirmation.html":{}},"body":{"injectables/AuthEffects.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["logoutconfirmationdismiss",{"_index":1830,"title":{"classes/LogoutConfirmationDismiss.html":{}},"body":{"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["logoutfailur",{"_index":1431,"title":{"classes/LogoutFailure.html":{}},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["logoutsuccess",{"_index":420,"title":{"classes/LogoutSuccess.html":{}},"body":{"injectables/AuthEffects.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["look",{"_index":2984,"title":{},"body":{"index.html":{}}}],["lougout",{"_index":1439,"title":{},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{}}}],["ltr",{"_index":726,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-5.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{}}}],["machin",{"_index":2976,"title":{},"body":{"index.html":{}}}],["made",{"_index":2090,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["make",{"_index":734,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["makebreadcrumbsimpl",{"_index":733,"title":{"classes/MakeBreadcrumbSimple.html":{}},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["makebreadcrumbtitl",{"_index":736,"title":{"classes/MakeBreadcrumbTitle.html":{}},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["male",{"_index":2117,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["manag",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{}}}],["managemet",{"_index":2923,"title":{},"body":{"index.html":{}}}],["map",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["map((nursinghom",{"_index":1980,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["map((pati",{"_index":2283,"title":{},"body":{"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["map((savedpati",{"_index":2274,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["map((savedus",{"_index":2816,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["map((us",{"_index":2839,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["map(act",{"_index":373,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["map(auth",{"_index":452,"title":{},"body":{"guards/AuthGuard.html":{}}}],["map(nursinghom",{"_index":1965,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["map(pati",{"_index":2255,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["map(respons",{"_index":377,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["map(result",{"_index":425,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["map(token",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["map(us",{"_index":2803,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["master",{"_index":2926,"title":{},"body":{"index.html":{}}}],["mat",{"_index":1773,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["mat_dialog_data",{"_index":770,"title":{},"body":{"components/ConfirmComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["matbutton",{"_index":1413,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LockscreenComponent.html":{},"components/PatientListComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserListComponent.html":{}}}],["matbuttonmodul",{"_index":1846,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodul",{"_index":1847,"title":{},"body":{"modules/MaterialModule.html":{}}}],["match",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interfaces/AuthState.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"modules/CoreModule.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"modules/ErrorsModule.html":{},"modules/ErrorsRoutingModule.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"components/ForgotPasswordComponent.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ICredentials.html":{},"interfaces/IDevice.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IPatient.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"interfaces/IUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"modules/MaterialModule.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"classes/NumberValidators.html":{},"interfaces/NursingHome.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"modules/SharedModule.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["matcheckboxmodul",{"_index":1848,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialog",{"_index":438,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"injectables/LoaderService.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{}}}],["matdialogmodul",{"_index":1849,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialogref",{"_index":764,"title":{},"body":{"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{}}}],["materi",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/ErrorsModule.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["materialmodul",{"_index":461,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/ErrorsModule.html":{},"modules/MaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["matgridlistmodul",{"_index":1850,"title":{},"body":{"modules/MaterialModule.html":{}}}],["math",{"_index":2161,"title":{},"body":{"components/PatientFormComponent.html":{},"components/SignupComponent.html":{},"components/UserFormComponent.html":{}}}],["math.round(dist",{"_index":2374,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["maticonmodul",{"_index":1851,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodul",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["matlistmodul",{"_index":1852,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matmenumodul",{"_index":1853,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matoptionmodul",{"_index":1854,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matpaginatormodul",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressbar",{"_index":1410,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LockscreenComponent.html":{},"components/PatientListComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserListComponent.html":{}}}],["matprogressbarmodul",{"_index":1855,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodul",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["matradiomodul",{"_index":1856,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matripplemodul",{"_index":1857,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matselectmodul",{"_index":1858,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenav",{"_index":1311,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["matsidenavmodul",{"_index":1859,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbar",{"_index":361,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{}}}],["matsnackbarmodul",{"_index":1860,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsortmodul",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["mattablemodul",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodul",{"_index":1861,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodul",{"_index":1862,"title":{},"body":{"modules/MaterialModule.html":{}}}],["max",{"_index":1606,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"classes/NumberValidators.html":{}}}],["maxag",{"_index":320,"title":{},"body":{"modules/AppModule.html":{}}}],["media",{"_index":907,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"directives/EgretSideNavToggleDirective.html":{}}}],["mediachang",{"_index":1322,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["mediasub",{"_index":895,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["menu",{"_index":1540,"title":{},"body":{"components/HeaderSideComponent.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["menuitem",{"_index":1636,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{}}}],["menuitem.filter(item",{"_index":2445,"title":{},"body":{"components/SidebarTopComponent.html":{}}}],["menuitemssub",{"_index":2408,"title":{},"body":{"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["menutyp",{"_index":1867,"title":{},"body":{"injectables/NavigationService.html":{}}}],["messag",{"_index":380,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/GenericValidator.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"components/NotificationsComponent.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"injectables/PatientsEffects.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"injectables/UsersEffects.html":{}}}],["messages[controlkey",{"_index":1483,"title":{},"body":{"classes/GenericValidator.html":{}}}],["metadata",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"directives/FontSizeDirective.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"directives/ScrollToDirective.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["metareduc",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"interfaces/State.html":{}}}],["method",{"_index":126,"title":{},"body":{"directives/AppDropdownDirective.html":{},"injectables/AuthApiService.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"injectables/ConfirmService.html":{},"components/DashboardLayoutComponent.html":{},"directives/DropdownLinkDirective.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"directives/FontSizeDirective.html":{},"components/ForgotPasswordComponent.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/LayoutService.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"classes/NumberValidators.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesService.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsService.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"injectables/ThemeService.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["min",{"_index":1774,"title":{},"body":{"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"classes/NumberValidators.html":{}}}],["miscellan",{"_index":2897,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mobil",{"_index":948,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["mobility.com",{"_index":2949,"title":{},"body":{"index.html":{}}}],["modal",{"_index":1833,"title":{},"body":{"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{}}}],["modalcontrol",{"_index":1997,"title":{},"body":{"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["mode",{"_index":2350,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["model",{"_index":1660,"title":{},"body":{"interfaces/IPatient.html":{}}}],["model_no",{"_index":1654,"title":{},"body":{"interfaces/IDevice.html":{}}}],["models/nurs",{"_index":593,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"interfaces/State-7.html":{}}}],["models/patient.model",{"_index":641,"title":{},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{}}}],["models/user.interfac",{"_index":345,"title":{},"body":{"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"classes/ForgotPassword.html":{},"classes/Login.html":{},"classes/Signup.html":{},"interfaces/State-2.html":{}}}],["models/user.model",{"_index":676,"title":{},"body":{"classes/ClearSelectedUser.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/InitializeUser.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/PatientEditFormComponent.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{},"interfaces/State-13.html":{},"interfaces/State-8.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{}}}],["modul",{"_index":189,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/ErrorsModule.html":{},"modules/ErrorsRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/ErrorsModule.html":{},"modules/ErrorsRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["moduleloadersub",{"_index":896,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["moio",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesService.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsService.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["moio_manag",{"_index":2951,"title":{},"body":{"index.html":{}}}],["moiomanag",{"_index":2920,"title":{},"body":{"index.html":{}}}],["multipl",{"_index":1462,"title":{},"body":{"classes/GenericValidator.html":{}}}],["n.icon",{"_index":1907,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["n.messag",{"_index":1908,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["n.time",{"_index":1909,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["name",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"injectables/ConfirmService.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"components/ForgotPasswordComponent.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"interfaces/ITheme.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"classes/NumberValidators.html":{},"interfaces/NursingHome.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nav",{"_index":717,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"modules/DashboardModule.html":{},"directives/DropdownLinkDirective.html":{},"directives/EgretSideNavToggleDirective.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{}}}],["navig",{"_index":709,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"injectables/NavigationService.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{}}}],["navigationend",{"_index":155,"title":{},"body":{"directives/AppDropdownDirective.html":{},"components/BreadcrumbComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/NotificationsComponent.html":{}}}],["navigationend)).subscribe((ev",{"_index":178,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["navigationpo",{"_index":1562,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"interfaces/State-5.html":{}}}],["navigationservic",{"_index":1627,"title":{"injectables/NavigationService.html":{}},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["navlink",{"_index":125,"title":{},"body":{"directives/AppDropdownDirective.html":{},"directives/DropdownAnchorDirective.html":{}}}],["navposit",{"_index":897,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["navservic",{"_index":2409,"title":{},"body":{"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["nbsp",{"_index":778,"title":{},"body":{"components/ConfirmComponent.html":{}}}],["need",{"_index":164,"title":{},"body":{"directives/AppDropdownDirective.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"directives/EgretSideNavToggleDirective.html":{},"directives/FontSizeDirective.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"components/PatientEditFormComponent.html":{},"directives/ScrollToDirective.html":{},"components/UserEditFormComponent.html":{},"index.html":{}}}],["never",{"_index":2100,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["new",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/DashboardLayoutComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/ITheme.html":{},"injectables/LayoutService.html":{},"injectables/NavigationService.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-13.html":{},"interfaces/State-7.html":{},"injectables/ThemeService.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["newpasswordsendtext",{"_index":1420,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["newpati",{"_index":2187,"title":{},"body":{"components/PatientListComponent.html":{}}}],["newus",{"_index":2750,"title":{},"body":{"components/UserListComponent.html":{}}}],["next",{"_index":2954,"title":{},"body":{"index.html":{}}}],["ng",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["ng2",{"_index":1047,"title":{},"body":{"modules/DashboardModule.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":903,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["ngmodul",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/ErrorsModule.html":{},"modules/ErrorsRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{}}}],["ngondestroy",{"_index":534,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DashboardLayoutComponent.html":{},"directives/DropdownLinkDirective.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/PatientEditFormComponent.html":{},"components/PatientListComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{}}}],["ngoninit",{"_index":131,"title":{},"body":{"directives/AppDropdownDirective.html":{},"components/BreadcrumbComponent.html":{},"components/DashboardLayoutComponent.html":{},"directives/DropdownLinkDirective.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"directives/FontSizeDirective.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"interfaces/IRoutePart.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{}}}],["ngrx",{"_index":368,"title":{},"body":{"injectables/AuthEffects.html":{},"modules/DashboardModule.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"interfaces/State.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["ngrx/effect",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{},"dependencies.html":{}}}],["ngrx/entiti",{"_index":596,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreateNursingHome.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"injectables/PatientsService.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-4.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["ngrx/router",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"interfaces/State.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthState.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/FixTopbar.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"components/HeaderSideComponent.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"components/SidebarSideComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"dependencies.html":{}}}],["ngx",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"modules/AuthModule.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"modules/CoreModule.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/ErrorsModule.html":{},"components/HeaderSideComponent.html":{},"injectables/LoaderService.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"components/SigninComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"dependencies.html":{}}}],["ngxdatatablemodul",{"_index":1043,"title":{},"body":{"modules/DashboardModule.html":{}}}],["node",{"_index":2360,"title":{},"body":{"directives/ScrollToDirective.html":{},"index.html":{}}}],["node.offsetpar",{"_index":2361,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["node.offsettop",{"_index":2363,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["nodej",{"_index":2933,"title":{},"body":{"index.html":{}}}],["nopasswordmatch",{"_index":2164,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["note",{"_index":2985,"title":{},"body":{"index.html":{}}}],["notfoundcompon",{"_index":69,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"modules/ErrorsModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["notif",{"_index":1544,"title":{},"body":{"components/HeaderSideComponent.html":{},"components/NotificationsComponent.html":{}}}],["notifications'},{'nam",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["notifications.component.html",{"_index":1880,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications_off",{"_index":1549,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["notificationscompon",{"_index":71,"title":{"components/NotificationsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["notificpanel",{"_index":1500,"title":{},"body":{"components/HeaderSideComponent.html":{},"components/NotificationsComponent.html":{}}}],["now",{"_index":2956,"title":{},"body":{"index.html":{}}}],["npm",{"_index":2934,"title":{},"body":{"index.html":{}}}],["null",{"_index":1658,"title":{},"body":{"interfaces/IDevice.html":{},"interfaces/IPatient.html":{},"classes/NumberValidators.html":{},"interfaces/NursingHome.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/SignupComponent.html":{},"interfaces/State-10.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-9.html":{},"interfaces/User.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{}}}],["number",{"_index":669,"title":{},"body":{"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IDevice.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IPatient.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"injectables/LayoutService.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/NumberValidators.html":{},"interfaces/NursingHome.html":{},"injectables/PatientsService.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"interfaces/State-10.html":{},"interfaces/State-13.html":{},"interfaces/State-7.html":{},"interfaces/User.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{}}}],["numbervalid",{"_index":1910,"title":{"classes/NumberValidators.html":{}},"body":{"classes/NumberValidators.html":{},"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["nurs",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/ClearSelectedNursingHome.html":{},"components/ConfirmComponent.html":{},"classes/CreateNursingHome.html":{},"components/DashboardLayoutComponent.html":{},"interfaces/DashboardState.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"interfaces/IPatient.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/NursingHome.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/State-4.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["nursing_hom",{"_index":1664,"title":{},"body":{"interfaces/IPatient.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{}}}],["nursing_home_id",{"_index":1655,"title":{},"body":{"interfaces/IDevice.html":{},"interfaces/IPatient.html":{}}}],["nursing_home_key",{"_index":2154,"title":{},"body":{"components/PatientFormComponent.html":{},"interfaces/User.html":{},"components/UserFormComponent.html":{}}}],["nursing_home_nam",{"_index":1665,"title":{},"body":{"interfaces/IPatient.html":{},"components/PatientEditFormComponent.html":{}}}],["nursinghom",{"_index":592,"title":{"interfaces/NursingHome.html":{}},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"interfaces/DashboardState.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"interfaces/IPatient.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"interfaces/NursingHome.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"components/PatientFormComponent.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"interfaces/State-4.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"components/UserFormComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["nursinghome.id",{"_index":2638,"title":{},"body":{"interfaces/State-7.html":{}}}],["nursinghome.nam",{"_index":2180,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["nursinghome/api",{"_index":823,"title":{},"body":{"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["nursinghomeact",{"_index":1940,"title":{},"body":{"components/NursingHomeFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["nursinghomeactions.loadnursinghom",{"_index":1946,"title":{},"body":{"components/NursingHomeFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["nursinghomeformcompon",{"_index":73,"title":{"components/NursingHomeFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["nursinghomekeyrequir",{"_index":2181,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["nursinghomepag",{"_index":1084,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["nursinghomesact",{"_index":1944,"title":{},"body":{"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{}}}],["nursinghomesactions.createnursinghome({nursinghom",{"_index":1953,"title":{},"body":{"components/NursingHomeFormComponent.html":{}}}],["nursinghomesactions.dismisspoppedupnursinghomeform",{"_index":1954,"title":{},"body":{"components/NursingHomeFormComponent.html":{}}}],["nursinghomesactions.loadnursinghom",{"_index":1986,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["nursinghomesactions.nursinghomesactionsunion",{"_index":2626,"title":{},"body":{"interfaces/State-6.html":{},"interfaces/State-7.html":{}}}],["nursinghomesactions.nursinghomesactiontypes.dismisseditnursinghom",{"_index":2632,"title":{},"body":{"interfaces/State-6.html":{}}}],["nursinghomesactions.nursinghomesactiontypes.editnursinghom",{"_index":2628,"title":{},"body":{"interfaces/State-6.html":{}}}],["nursinghomesactions.nursinghomesactiontypes.loadnursinghom",{"_index":2627,"title":{},"body":{"interfaces/State-6.html":{}}}],["nursinghomesactions.nursinghomesactiontypes.resetnursinghomesst",{"_index":2644,"title":{},"body":{"interfaces/State-7.html":{}}}],["nursinghomesactions.nursinghomesactiontypes.selectnursinghom",{"_index":2643,"title":{},"body":{"interfaces/State-7.html":{}}}],["nursinghomesactionsunion",{"_index":635,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"miscellaneous/typealiases.html":{}}}],["nursinghomesactiontyp",{"_index":598,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"miscellaneous/enumerations.html":{}}}],["nursinghomesactiontypes.clearselectednursinghom",{"_index":590,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{}}}],["nursinghomesactiontypes.createnursinghom",{"_index":624,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{}}}],["nursinghomesactiontypes.dismisseditnursinghom",{"_index":632,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{}}}],["nursinghomesactiontypes.dismisspoppedupnursinghomeform",{"_index":626,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{}}}],["nursinghomesactiontypes.editnursinghom",{"_index":631,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{}}}],["nursinghomesactiontypes.initializenursinghom",{"_index":622,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{}}}],["nursinghomesactiontypes.loadnursinghom",{"_index":627,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{}}}],["nursinghomesactiontypes.popupnursinghomeform",{"_index":623,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{}}}],["nursinghomesactiontypes.resetnursinghomesst",{"_index":633,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{}}}],["nursinghomesactiontypes.searchnursinghom",{"_index":628,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{}}}],["nursinghomesactiontypes.searchnursinghomecomplet",{"_index":629,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{}}}],["nursinghomesactiontypes.selectnursinghom",{"_index":619,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{}}}],["nursinghomesapiact",{"_index":1943,"title":{},"body":{"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{}}}],["nursinghomesapiactions.createnursinghomefailur",{"_index":1967,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["nursinghomesapiactions.createnursinghomesuccess",{"_index":1966,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["nursinghomesapiactions.loadnursinghomesfailur",{"_index":1987,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["nursinghomesapiactions.loadnursinghomessuccess({nursinghom",{"_index":1982,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["nursinghomesapiactions.nursinghomesapiactionsunion",{"_index":2625,"title":{},"body":{"interfaces/State-6.html":{},"interfaces/State-7.html":{}}}],["nursinghomesapiactions.nursinghomesapiactiontypes.createnursinghomefailur",{"_index":2634,"title":{},"body":{"interfaces/State-6.html":{}}}],["nursinghomesapiactions.nursinghomesapiactiontypes.createnursinghomesuccess",{"_index":2630,"title":{},"body":{"interfaces/State-6.html":{},"interfaces/State-7.html":{}}}],["nursinghomesapiactions.nursinghomesapiactiontypes.editnursinghomefailur",{"_index":2635,"title":{},"body":{"interfaces/State-6.html":{}}}],["nursinghomesapiactions.nursinghomesapiactiontypes.editnursinghomesuccess",{"_index":2631,"title":{},"body":{"interfaces/State-6.html":{},"interfaces/State-7.html":{}}}],["nursinghomesapiactions.nursinghomesapiactiontypes.loadnursinghomesfailur",{"_index":2633,"title":{},"body":{"interfaces/State-6.html":{}}}],["nursinghomesapiactions.nursinghomesapiactiontypes.loadnursinghomessuccess",{"_index":2629,"title":{},"body":{"interfaces/State-6.html":{},"interfaces/State-7.html":{}}}],["nursinghomesapiactionsunion",{"_index":833,"title":{},"body":{"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["nursinghomesapiactiontyp",{"_index":821,"title":{},"body":{"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["nursinghomesapiactiontypes.createnursinghomefailur",{"_index":819,"title":{},"body":{"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{}}}],["nursinghomesapiactiontypes.createnursinghomesuccess",{"_index":828,"title":{},"body":{"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{}}}],["nursinghomesapiactiontypes.editnursinghomefailur",{"_index":832,"title":{},"body":{"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{}}}],["nursinghomesapiactiontypes.editnursinghomesuccess",{"_index":831,"title":{},"body":{"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{}}}],["nursinghomesapiactiontypes.loadnursinghomesfailur",{"_index":830,"title":{},"body":{"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{}}}],["nursinghomesapiactiontypes.loadnursinghomessuccess",{"_index":829,"title":{},"body":{"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{}}}],["nursinghomeseffect",{"_index":1031,"title":{"injectables/NursingHomesEffects.html":{}},"body":{"modules/DashboardModule.html":{},"injectables/NursingHomesEffects.html":{}}}],["nursinghomesservic",{"_index":1958,"title":{"injectables/NursingHomesService.html":{}},"body":{"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{}}}],["object",{"_index":927,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"components/LockscreenComponent.html":{}}}],["object.assign(messag",{"_index":1481,"title":{},"body":{"classes/GenericValidator.html":{}}}],["object.assign(this.layoutconf",{"_index":1583,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["object.keys(c.errors).map(messagekey",{"_index":1487,"title":{},"body":{"classes/GenericValidator.html":{}}}],["object:ipati",{"_index":2308,"title":{},"body":{"injectables/PatientsService.html":{}}}],["object:us",{"_index":2863,"title":{},"body":{"injectables/UsersService.html":{}}}],["observ",{"_index":343,"title":{},"body":{"injectables/AuthApiService.html":{},"guards/AuthGuard.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"components/HeaderSideComponent.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/LoaderService.html":{},"injectables/NavigationService.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesService.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"components/SigninComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{}}}],["observablemedia",{"_index":908,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"directives/EgretSideNavToggleDirective.html":{}}}],["obtain",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["of('pleas",{"_index":2114,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["of(new",{"_index":382,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["oftyp",{"_index":388,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["oftype(authactions.authactiontypes.logout",{"_index":400,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(authactions.authactiontypes.logoutconfirm",{"_index":421,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(authapiactions.authapiactiontypes.loginsuccess",{"_index":396,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(authpageactions.authpageactiontypes.login",{"_index":371,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(nursinghomesactions.nursinghomesactiontypes.createnursinghom",{"_index":1960,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["oftype(nursinghomesactions.nursinghomesactiontypes.dismisspoppedupnursinghomeform",{"_index":1974,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["oftype(nursinghomesactions.nursinghomesactiontypes.loadnursinghom",{"_index":1978,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["oftype(nursinghomesactions.nursinghomesactiontypes.popupnursinghomeform",{"_index":1990,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["oftype(patientsactions.patientsactiontypes.createpati",{"_index":2251,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["oftype(patientsactions.patientsactiontypes.createpatientformdialog",{"_index":2290,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["oftype(patientsactions.patientsactiontypes.dismisspatientformdialog",{"_index":2266,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["oftype(patientsactions.patientsactiontypes.editpati",{"_index":2270,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["oftype(patientsactions.patientsactiontypes.loadpati",{"_index":2281,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["oftype(patientsapiactions.patientsapiactiontypes.createpatientsuccess",{"_index":2260,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["oftype(usersactions.usersactiontypes.createus",{"_index":2799,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["oftype(usersactions.usersactiontypes.createuserformdialog",{"_index":2843,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["oftype(usersactions.usersactiontypes.dismissuserformdialog",{"_index":2810,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["oftype(usersactions.usersactiontypes.editus",{"_index":2813,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["oftype(usersactions.usersactiontypes.loadus",{"_index":2837,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["oftype(usersactions.usersactiontypes.loaduserpati",{"_index":2826,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["oftype(usersapiactions.usersapiactiontypes.createusersuccess",{"_index":2807,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["oftype(usersapiactions.usersapiactiontypes.editusersuccess",{"_index":2823,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["ok",{"_index":777,"title":{},"body":{"components/ConfirmComponent.html":{}}}],["onclick(",{"_index":1259,"title":{},"body":{"directives/DropdownAnchorDirective.html":{}}}],["onconfirmlogout",{"_index":1495,"title":{},"body":{"components/HeaderSideComponent.html":{},"components/SidebarSideComponent.html":{}}}],["ondestroy",{"_index":528,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DashboardLayoutComponent.html":{},"directives/DropdownLinkDirective.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/PatientEditFormComponent.html":{},"components/PatientListComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{}}}],["onformsubmit",{"_index":1926,"title":{},"body":{"components/NursingHomeFormComponent.html":{}}}],["onformsubmitted(nursinghom",{"_index":1935,"title":{},"body":{"components/NursingHomeFormComponent.html":{}}}],["oninit",{"_index":119,"title":{},"body":{"directives/AppDropdownDirective.html":{},"components/BreadcrumbComponent.html":{},"components/DashboardLayoutComponent.html":{},"directives/DropdownLinkDirective.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"directives/FontSizeDirective.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"interfaces/IRoutePart.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{}}}],["onresize(ev",{"_index":976,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["onselectrow",{"_index":2188,"title":{},"body":{"components/PatientListComponent.html":{},"components/UserListComponent.html":{}}}],["onselectrow(undefin",{"_index":2194,"title":{},"body":{"components/PatientListComponent.html":{},"components/UserListComponent.html":{}}}],["onselectrow({select",{"_index":2225,"title":{},"body":{"components/PatientListComponent.html":{},"components/UserListComponent.html":{}}}],["open",{"_index":716,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"directives/DropdownLinkDirective.html":{},"classes/FixTopbar.html":{},"injectables/LoaderService.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"components/PatientFormComponent.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"components/UserFormComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["open(loadercompon",{"_index":1790,"title":{},"body":{"injectables/LoaderService.html":{}}}],["open(titl",{"_index":1783,"title":{},"body":{"injectables/LoaderService.html":{}}}],["open(valu",{"_index":1283,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["openlink",{"_index":146,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["openpopup",{"_index":2236,"title":{},"body":{"components/PatientsComponent.html":{},"components/UsersComponent.html":{}}}],["opensidenav",{"_index":715,"title":{"classes/OpenSideNav.html":{}},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["opera",{"_index":2343,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["opt",{"_index":1578,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["opt.dur",{"_index":1580,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["opt.transitionclass",{"_index":1582,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["option",{"_index":138,"title":{},"body":{"directives/AppDropdownDirective.html":{},"modules/AppModule.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"directives/EgretSideNavToggleDirective.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IChildItem.html":{},"interfaces/IDevice.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IPatient.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"interfaces/IUser.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"injectables/NavigationService.html":{},"components/NotificationsComponent.html":{},"classes/NumberValidators.html":{},"interfaces/NursingHome.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["options.rout",{"_index":1600,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["origin",{"_index":2104,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["out",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthApiService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/ErrorsModule.html":{},"overview.html":{}}}],["over",{"_index":808,"title":{},"body":{"modules/CoreModule.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["overview",{"_index":3025,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrit",{"_index":3010,"title":{},"body":{"index.html":{}}}],["p",{"_index":2107,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["packag",{"_index":2871,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["package.json",{"_index":2963,"title":{},"body":{"index.html":{}}}],["page",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"interfaces/DashboardState.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"classes/ForgotPassword.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"interfaces/State-12.html":{},"interfaces/State-4.html":{},"interfaces/State-6.html":{},"interfaces/State-9.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["page'},{'nam",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["page.actions.t",{"_index":1386,"title":{},"body":{"classes/ForgotPassword.html":{},"classes/Login.html":{},"classes/Signup.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["page.actions.ts:17",{"_index":1819,"title":{},"body":{"classes/Login.html":{}}}],["page.actions.ts:19",{"_index":1820,"title":{},"body":{"classes/Login.html":{}}}],["page.actions.ts:27",{"_index":2491,"title":{},"body":{"classes/Signup.html":{}}}],["page.actions.ts:29",{"_index":2492,"title":{},"body":{"classes/Signup.html":{}}}],["page.actions.ts:37",{"_index":1388,"title":{},"body":{"classes/ForgotPassword.html":{}}}],["page.actions.ts:39",{"_index":1389,"title":{},"body":{"classes/ForgotPassword.html":{}}}],["page.reduc",{"_index":1099,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["page.reducer.t",{"_index":2565,"title":{},"body":{"interfaces/State-12.html":{},"interfaces/State-6.html":{},"interfaces/State-9.html":{},"miscellaneous/functions.html":{}}}],["pagetitl",{"_index":2019,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["pane",{"_index":1050,"title":{},"body":{"modules/DashboardModule.html":{},"dependencies.html":{}}}],["pane/lib/ng2",{"_index":1049,"title":{},"body":{"modules/DashboardModule.html":{}}}],["param",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IRoutePart.html":{},"injectables/LayoutService.html":{},"injectables/LoaderService.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"injectables/RoutePartsService.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["paramet",{"_index":137,"title":{},"body":{"directives/AppDropdownDirective.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"injectables/ConfirmService.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"directives/EgretSideNavToggleDirective.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"injectables/NavigationService.html":{},"components/NotificationsComponent.html":{},"classes/NumberValidators.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["parsetext",{"_index":535,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["parsetext(part",{"_index":543,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["part",{"_index":545,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["part.breadcrumb",{"_index":576,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["part.breadcrumb.replace(/{{([^{}]*)}}/g",{"_index":577,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["part.params[b",{"_index":580,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["parts.servic",{"_index":549,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["parts.service.t",{"_index":1676,"title":{},"body":{"interfaces/IRoutePart.html":{},"injectables/RoutePartsService.html":{}}}],["parts.service.ts:16",{"_index":2321,"title":{},"body":{"injectables/RoutePartsService.html":{}}}],["parts.service.ts:21",{"_index":2323,"title":{},"body":{"injectables/RoutePartsService.html":{}}}],["parts.service.ts:24",{"_index":2322,"title":{},"body":{"injectables/RoutePartsService.html":{}}}],["pass",{"_index":2056,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["password",{"_index":1387,"title":{},"body":{"classes/ForgotPassword.html":{},"components/ForgotPasswordComponent.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"interfaces/ICredentials.html":{},"interfaces/IUser.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"components/PatientFormComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"interfaces/User.html":{},"components/UserFormComponent.html":{},"miscellaneous/enumerations.html":{}}}],["password'},{'nam",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["password.compon",{"_index":469,"title":{},"body":{"modules/AuthModule.html":{}}}],["password.component.html",{"_index":1402,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.t",{"_index":1401,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:10",{"_index":1412,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:11",{"_index":1407,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:16",{"_index":1408,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:19",{"_index":1409,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:9",{"_index":1415,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password/forgot",{"_index":468,"title":{},"body":{"modules/AuthModule.html":{},"components/ForgotPasswordComponent.html":{}}}],["password_confirm",{"_index":2153,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["passwordconfirm",{"_index":2158,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["passwordmatchvalid",{"_index":2128,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["passwordmatchvalidator(control",{"_index":2133,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["passwordrequri",{"_index":2178,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["path",{"_index":1075,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["pathmatch",{"_index":1078,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["patient",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"components/ConfirmComponent.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardRoutingModule.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"interfaces/IPatient.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-4.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["patient.firstnam",{"_index":2082,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["patient.gend",{"_index":2084,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["patient.id",{"_index":2081,"title":{},"body":{"components/PatientEditFormComponent.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{}}}],["patient.lastnam",{"_index":2083,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["patient.model",{"_index":2690,"title":{},"body":{"interfaces/User.html":{}}}],["patient.nursing_home.nam",{"_index":2085,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["patient.us",{"_index":2066,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["patient.users.filter(us",{"_index":2829,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["patient.users.length",{"_index":2286,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["patient/api",{"_index":845,"title":{},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["patient[\"permiss",{"_index":2833,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["patient[\"users_count",{"_index":2285,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["patient_profil",{"_index":2687,"title":{},"body":{"interfaces/User.html":{},"components/UserListComponent.html":{}}}],["patientcreationform",{"_index":2244,"title":{},"body":{"components/PatientsComponent.html":{}}}],["patienteditform",{"_index":2020,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["patienteditformcompon",{"_index":77,"title":{"components/PatientEditFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["patientform",{"_index":2126,"title":{},"body":{"components/PatientFormComponent.html":{}}}],["patientformcompon",{"_index":80,"title":{"components/PatientFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["patientlistcompon",{"_index":81,"title":{"components/PatientListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["patientnam",{"_index":2054,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{}}}],["patientnamerequir",{"_index":2176,"title":{},"body":{"components/PatientFormComponent.html":{}}}],["patientpag",{"_index":1085,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["patients.component.html",{"_index":2234,"title":{},"body":{"components/PatientsComponent.html":{}}}],["patients.reduc",{"_index":1105,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["patients.reducer.t",{"_index":2555,"title":{},"body":{"interfaces/State-11.html":{},"miscellaneous/functions.html":{}}}],["patients[key",{"_index":2284,"title":{},"body":{"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["patientsact",{"_index":2047,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"injectables/PatientsEffects.html":{},"interfaces/State-10.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{}}}],["patientsactions.createpatient({pati",{"_index":2170,"title":{},"body":{"components/PatientFormComponent.html":{}}}],["patientsactions.deletepatient(this.patient.id",{"_index":2099,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["patientsactions.dismisseditpati",{"_index":2091,"title":{},"body":{"components/PatientEditFormComponent.html":{},"injectables/PatientsEffects.html":{}}}],["patientsactions.dismisspatientformdialog",{"_index":2173,"title":{},"body":{"components/PatientFormComponent.html":{}}}],["patientsactions.editpatient(p",{"_index":2113,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["patientsactions.editpatient(pati",{"_index":2277,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["patientsactions.initializepati",{"_index":2222,"title":{},"body":{"components/PatientListComponent.html":{}}}],["patientsactions.loadpati",{"_index":2215,"title":{},"body":{"components/PatientListComponent.html":{},"injectables/PatientsEffects.html":{}}}],["patientsactions.loadpatientusers(patient.id",{"_index":2228,"title":{},"body":{"components/PatientListComponent.html":{}}}],["patientsactions.patientsactionsunion",{"_index":2538,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{}}}],["patientsactions.patientsactiontypes.createpati",{"_index":2657,"title":{},"body":{"interfaces/State-9.html":{}}}],["patientsactions.patientsactiontypes.dismisseditpati",{"_index":2550,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{}}}],["patientsactions.patientsactiontypes.editpati",{"_index":2656,"title":{},"body":{"interfaces/State-9.html":{}}}],["patientsactions.patientsactiontypes.loadpati",{"_index":2655,"title":{},"body":{"interfaces/State-9.html":{}}}],["patientsactions.patientsactiontypes.resetpatientsst",{"_index":2551,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-8.html":{}}}],["patientsactions.patientsactiontypes.selectpati",{"_index":2548,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-8.html":{}}}],["patientsactions.selectpatient(pati",{"_index":2223,"title":{},"body":{"components/PatientListComponent.html":{}}}],["patientsactionsunion",{"_index":671,"title":{},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{},"miscellaneous/typealiases.html":{}}}],["patientsactiontyp",{"_index":642,"title":{},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{},"miscellaneous/enumerations.html":{}}}],["patientsactiontypes.clearselectedpati",{"_index":638,"title":{},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{}}}],["patientsactiontypes.createpati",{"_index":660,"title":{},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{}}}],["patientsactiontypes.createpatientformdialog",{"_index":659,"title":{},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{}}}],["patientsactiontypes.deletepati",{"_index":668,"title":{},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{}}}],["patientsactiontypes.dismisseditpati",{"_index":666,"title":{},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{}}}],["patientsactiontypes.dismisspatientformdialog",{"_index":661,"title":{},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{}}}],["patientsactiontypes.editpati",{"_index":665,"title":{},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{}}}],["patientsactiontypes.initializepati",{"_index":658,"title":{},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{}}}],["patientsactiontypes.loadpati",{"_index":662,"title":{},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{}}}],["patientsactiontypes.loadpatientus",{"_index":670,"title":{},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{}}}],["patientsactiontypes.resetpatientsst",{"_index":667,"title":{},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{}}}],["patientsactiontypes.searchpati",{"_index":663,"title":{},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{}}}],["patientsactiontypes.searchpatientcomplet",{"_index":664,"title":{},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{}}}],["patientsactiontypes.selectpati",{"_index":657,"title":{},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{}}}],["patientsapiact",{"_index":2147,"title":{},"body":{"components/PatientFormComponent.html":{},"injectables/PatientsEffects.html":{},"interfaces/State-10.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{}}}],["patientsapiactions.createpatientfailure({messag",{"_index":2258,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["patientsapiactions.createpatientsuccess({pati",{"_index":2256,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["patientsapiactions.editpatientsuccess({pati",{"_index":2275,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["patientsapiactions.loadpatientsfailure({messag",{"_index":2288,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["patientsapiactions.loadpatientssuccess({pati",{"_index":2287,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["patientsapiactions.loadpatientusersfailure({messag",{"_index":2279,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["patientsapiactions.patientsapiactionsunion",{"_index":2537,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{}}}],["patientsapiactions.patientsapiactiontypes.createpatientfailur",{"_index":2658,"title":{},"body":{"interfaces/State-9.html":{}}}],["patientsapiactions.patientsapiactiontypes.createpatientsuccess",{"_index":2544,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-9.html":{}}}],["patientsapiactions.patientsapiactiontypes.editpatientfailur",{"_index":2660,"title":{},"body":{"interfaces/State-9.html":{}}}],["patientsapiactions.patientsapiactiontypes.editpatientsuccess",{"_index":2546,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-9.html":{}}}],["patientsapiactions.patientsapiactiontypes.loadpatientsfailur",{"_index":2659,"title":{},"body":{"interfaces/State-9.html":{}}}],["patientsapiactions.patientsapiactiontypes.loadpatientssuccess",{"_index":2542,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-9.html":{}}}],["patientsapiactions.patientsapiactiontypes.loadpatientuserssuccess",{"_index":2648,"title":{},"body":{"interfaces/State-8.html":{}}}],["patientsapiactionsunion",{"_index":860,"title":{},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["patientsapiactiontyp",{"_index":843,"title":{},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["patientsapiactiontypes.createpatientfailur",{"_index":842,"title":{},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{}}}],["patientsapiactiontypes.createpatientsuccess",{"_index":853,"title":{},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{}}}],["patientsapiactiontypes.editpatientfailur",{"_index":857,"title":{},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{}}}],["patientsapiactiontypes.editpatientsuccess",{"_index":856,"title":{},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{}}}],["patientsapiactiontypes.loadpatientsfailur",{"_index":855,"title":{},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{}}}],["patientsapiactiontypes.loadpatientssuccess",{"_index":854,"title":{},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{}}}],["patientsapiactiontypes.loadpatientusersfailur",{"_index":859,"title":{},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{}}}],["patientsapiactiontypes.loadpatientuserssuccess",{"_index":858,"title":{},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{}}}],["patientscompon",{"_index":83,"title":{"components/PatientsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["patientseffect",{"_index":1029,"title":{"injectables/PatientsEffects.html":{}},"body":{"modules/DashboardModule.html":{},"injectables/PatientsEffects.html":{}}}],["patientsservic",{"_index":2249,"title":{"injectables/PatientsService.html":{}},"body":{"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{}}}],["patientus",{"_index":1086,"title":{},"body":{"interfaces/DashboardState.html":{},"components/PatientEditFormComponent.html":{},"interfaces/State-4.html":{}}}],["payload",{"_index":621,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/FixTopbar.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"classes/Signup.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["pend",{"_index":1129,"title":{},"body":{"interfaces/DashboardState.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/SigninComponent.html":{},"interfaces/State-12.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-6.html":{},"interfaces/State-9.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{}}}],["perfect",{"_index":1012,"title":{},"body":{"modules/DashboardModule.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"dependencies.html":{}}}],["perfectscrollbar",{"_index":942,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["perfectscrollbar('#scrol",{"_index":2429,"title":{},"body":{"components/SidebarSideComponent.html":{}}}],["perfectscrollbar('#sidebar",{"_index":2446,"title":{},"body":{"components/SidebarTopComponent.html":{}}}],["perfectscrollbar('.main",{"_index":994,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["perfectscrollbar('.rightsid",{"_index":989,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["perfectscrollbarmodul",{"_index":1011,"title":{},"body":{"modules/DashboardModule.html":{}}}],["permiss",{"_index":2830,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["phone",{"_index":1666,"title":{},"body":{"interfaces/IPatient.html":{}}}],["pink",{"_index":1699,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["pipe",{"_index":370,"title":{},"body":{"injectables/AuthEffects.html":{},"components/DashboardLayoutComponent.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientListComponent.html":{},"injectables/PatientsEffects.html":{},"components/UserListComponent.html":{},"injectables/UsersEffects.html":{}}}],["pipe(filter(ev",{"_index":555,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["pleas",{"_index":1785,"title":{},"body":{"injectables/LoaderService.html":{}}}],["po",{"_index":2944,"title":{},"body":{"index.html":{}}}],["pop",{"_index":603,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreateNursingHome.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"injectables/UsersEffects.html":{},"miscellaneous/enumerations.html":{}}}],["popupnursinghomeform",{"_index":602,"title":{"classes/PopUpNursingHomeForm.html":{}},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"injectables/NursingHomesEffects.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["popuppatientform",{"_index":2248,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["popupuserform",{"_index":2796,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["port",{"_index":2995,"title":{},"body":{"index.html":{}}}],["posit",{"_index":720,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{}}}],["possibl",{"_index":1615,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["post(`${environment.apihost}/api/auth/loginmanag",{"_index":348,"title":{},"body":{"injectables/AuthApiService.html":{}}}],["post(`${environment.apihost}/api/nursinghom",{"_index":2009,"title":{},"body":{"injectables/NursingHomesService.html":{}}}],["pre",{"_index":2931,"title":{},"body":{"index.html":{}}}],["prefer",{"_index":298,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["prepend",{"_index":570,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["present",{"_index":1633,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["pretti",{"_index":1378,"title":{},"body":{"directives/FontSizeDirective.html":{}}}],["previou",{"_index":571,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["primari",{"_index":1892,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["primary/accent/warn/hex",{"_index":1625,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["privat",{"_index":122,"title":{},"body":{"directives/AppDropdownDirective.html":{},"injectables/AuthEffects.html":{},"components/BreadcrumbComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"components/DashboardLayoutComponent.html":{},"directives/EgretSideNavToggleDirective.html":{},"directives/FontSizeDirective.html":{},"components/HeaderSideComponent.html":{},"interfaces/ITheme.html":{},"injectables/LoaderService.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"directives/ScrollToDirective.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SigninComponent.html":{},"injectables/ThemeService.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{}}}],["problem",{"_index":1347,"title":{},"body":{"components/ErrorComponent.html":{}}}],["process",{"_index":418,"title":{},"body":{"injectables/AuthEffects.html":{},"classes/GenericValidator.html":{}}}],["processmessag",{"_index":1451,"title":{},"body":{"classes/GenericValidator.html":{}}}],["processmessages(contain",{"_index":1455,"title":{},"body":{"classes/GenericValidator.html":{}}}],["prod",{"_index":2966,"title":{},"body":{"index.html":{}}}],["product",{"_index":2928,"title":{},"body":{"index.html":{}}}],["program",{"_index":3016,"title":{},"body":{"index.html":{}}}],["programmat",{"_index":1782,"title":{},"body":{"injectables/LoaderService.html":{}}}],["progressbar",{"_index":1403,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LockscreenComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["project",{"_index":2983,"title":{},"body":{"index.html":{}}}],["prop",{"_index":2758,"title":{},"body":{"components/UserListComponent.html":{},"miscellaneous/functions.html":{}}}],["properti",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/BreadcrumbComponent.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"directives/EgretSideNavToggleDirective.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"components/ForgotPasswordComponent.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ICredentials.html":{},"interfaces/IDevice.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IPatient.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"interfaces/IUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"injectables/NavigationService.html":{},"components/NotificationsComponent.html":{},"interfaces/NursingHome.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-9.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"miscellaneous/functions.html":{}}}],["protect",{"_index":124,"title":{},"body":{"directives/AppDropdownDirective.html":{},"modules/DashboardRoutingModule.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{}}}],["provid",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/ErrorsModule.html":{},"classes/GenericValidator.html":{},"overview.html":{}}}],["providedin",{"_index":346,"title":{},"body":{"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"injectables/LayoutService.html":{},"injectables/LoaderService.html":{},"injectables/NavigationService.html":{},"injectables/NursingHomesService.html":{},"injectables/PatientsService.html":{},"injectables/RoutePartsService.html":{},"injectables/ThemeService.html":{},"injectables/UsersService.html":{}}}],["public",{"_index":127,"title":{},"body":{"directives/AppDropdownDirective.html":{},"injectables/AuthEffects.html":{},"components/BreadcrumbComponent.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"directives/EgretSideNavToggleDirective.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"classes/Signup.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"injectables/UsersEffects.html":{}}}],["publish",{"_index":1575,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["publishlayoutchang",{"_index":1738,"title":{},"body":{"injectables/LayoutService.html":{}}}],["publishlayoutchange(lc",{"_index":1579,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["publishnavigationchang",{"_index":1864,"title":{},"body":{"injectables/NavigationService.html":{}}}],["publishnavigationchange(menutyp",{"_index":1643,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["purpl",{"_index":1697,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["put(`${environment.apihost}/api/patients/${changed.id",{"_index":2314,"title":{},"body":{"injectables/PatientsService.html":{}}}],["put(`${environment.apihost}/api/users/${changed.id",{"_index":2870,"title":{},"body":{"injectables/UsersService.html":{}}}],["queri",{"_index":1585,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"miscellaneous/functions.html":{}}}],["r",{"_index":579,"title":{},"body":{"components/BreadcrumbComponent.html":{},"injectables/ThemeService.html":{}}}],["r.addclass(this.document.bodi",{"_index":1722,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["r.removeclass(this.document.bodi",{"_index":1720,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["rang",{"_index":1913,"title":{},"body":{"classes/NumberValidators.html":{}}}],["range(min",{"_index":1914,"title":{},"body":{"classes/NumberValidators.html":{}}}],["re",{"_index":2096,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["reactiv",{"_index":1460,"title":{},"body":{"classes/GenericValidator.html":{}}}],["reactiveformsmodul",{"_index":471,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/SharedModule.html":{}}}],["read",{"_index":2510,"title":{},"body":{"components/SignupComponent.html":{},"injectables/UsersEffects.html":{}}}],["readi",{"_index":2957,"title":{},"body":{"index.html":{}}}],["readonli",{"_index":589,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/FixTopbar.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"classes/Signup.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["readonly_cod",{"_index":1656,"title":{},"body":{"interfaces/IDevice.html":{}}}],["reboot",{"_index":1896,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["redirect",{"_index":395,"title":{},"body":{"injectables/AuthEffects.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["redirectto",{"_index":1077,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["redisplay",{"_index":2088,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["reduc",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthState.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"components/HeaderSideComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SigninComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/functions.html":{}}}],["reducer(st",{"_index":2525,"title":{},"body":{"interfaces/State.html":{},"interfaces/State-5.html":{},"miscellaneous/functions.html":{}}}],["refer",{"_index":771,"title":{},"body":{"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{}}}],["regist",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["registered_on",{"_index":2688,"title":{},"body":{"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{}}}],["registerlocaledata",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["registerlocaledata(d",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["rehydr",{"_index":2527,"title":{},"body":{"interfaces/State.html":{}}}],["reload",{"_index":2825,"title":{},"body":{"injectables/UsersEffects.html":{},"dependencies.html":{}}}],["remot",{"_index":3005,"title":{},"body":{"index.html":{}}}],["remov",{"_index":1640,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{},"index.html":{}}}],["removegroup",{"_index":132,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["removegroup(link",{"_index":149,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["render",{"_index":1502,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["renderer2",{"_index":1503,"title":{},"body":{"components/HeaderSideComponent.html":{},"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["replac",{"_index":2089,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{},"index.html":{}}}],["repo",{"_index":2940,"title":{},"body":{"index.html":{}}}],["report",{"_index":1346,"title":{},"body":{"components/ErrorComponent.html":{}}}],["repr",{"_index":772,"title":{},"body":{"components/ConfirmComponent.html":{}}}],["repres",{"_index":2927,"title":{},"body":{"index.html":{}}}],["requir",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"components/LockscreenComponent.html":{},"components/PatientEditFormComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{}}}],["requisit",{"_index":2932,"title":{},"body":{"index.html":{}}}],["reselect",{"_index":2893,"title":{},"body":{"dependencies.html":{}}}],["reset",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"modules/CoreModule.html":{},"classes/CreateNursingHome.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"modules/ErrorsModule.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["resetnursinghomesst",{"_index":618,"title":{"classes/ResetNursingHomesState.html":{}},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["resetpatientsst",{"_index":653,"title":{"classes/ResetPatientsState.html":{}},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["resetusersst",{"_index":688,"title":{"classes/ResetUsersState.html":{}},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["resolveend",{"_index":933,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["resolvestart",{"_index":934,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["respons",{"_index":1436,"title":{},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{}}}],["response.statustext.tolowercas",{"_index":381,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["result",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interfaces/AuthState.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"modules/CoreModule.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"modules/ErrorsModule.html":{},"modules/ErrorsRoutingModule.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"components/ForgotPasswordComponent.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ICredentials.html":{},"interfaces/IDevice.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IPatient.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"interfaces/IUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"modules/MaterialModule.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"classes/NumberValidators.html":{},"interfaces/NursingHome.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"modules/SharedModule.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["retain",{"_index":1461,"title":{},"body":{"classes/GenericValidator.html":{},"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["retriev",{"_index":2051,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["return",{"_index":142,"title":{},"body":{"directives/AppDropdownDirective.html":{},"modules/AppModule.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"interfaces/AuthState.html":{},"components/BreadcrumbComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"components/DashboardLayoutComponent.html":{},"directives/DropdownLinkDirective.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"directives/FontSizeDirective.html":{},"components/ForgotPasswordComponent.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IRoutePart.html":{},"injectables/LayoutService.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"classes/NumberValidators.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/ThemeService.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{}}}],["right",{"_index":745,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{}}}],["root",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"injectables/LayoutService.html":{},"injectables/LoaderService.html":{},"injectables/NavigationService.html":{},"injectables/NursingHomesService.html":{},"injectables/PatientsService.html":{},"injectables/RoutePartsService.html":{},"injectables/ThemeService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["root'},{'nam",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["rootrout",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["rout",{"_index":946,"title":{"routes.html":{}},"body":{"components/DashboardLayoutComponent.html":{},"modules/DashboardRoutingModule.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"components/NotificationsComponent.html":{},"overview.html":{},"routes.html":{}}}],["routechang",{"_index":1903,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["routechange.url",{"_index":952,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["routeconfigloadend",{"_index":935,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["routeconfigloadstart",{"_index":936,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["routepart",{"_index":532,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IRoutePart.html":{},"injectables/RoutePartsService.html":{}}}],["routeparts.concat(this.generaterouteparts(snapshot.firstchild",{"_index":1682,"title":{},"body":{"interfaces/IRoutePart.html":{},"injectables/RoutePartsService.html":{}}}],["routeparts.push",{"_index":1687,"title":{},"body":{"interfaces/IRoutePart.html":{},"injectables/RoutePartsService.html":{}}}],["routeparts[routeparts.length",{"_index":581,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["routepartsservic",{"_index":536,"title":{"injectables/RoutePartsService.html":{}},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IRoutePart.html":{},"injectables/RoutePartsService.html":{}}}],["router",{"_index":135,"title":{},"body":{"directives/AppDropdownDirective.html":{},"injectables/AuthEffects.html":{},"components/BreadcrumbComponent.html":{},"components/DashboardLayoutComponent.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"interfaces/IRoutePart.html":{},"injectables/NavigationService.html":{},"components/NotificationsComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/RoutePartsService.html":{},"interfaces/State.html":{},"injectables/UsersEffects.html":{}}}],["router.ev",{"_index":949,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["routereventsub",{"_index":533,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DashboardLayoutComponent.html":{}}}],["routermodul",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/ErrorsRoutingModule.html":{}}}],["routermodule.forchild(authrout",{"_index":485,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["routermodule.forchild(dashboardrout",{"_index":1080,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["routermodule.forchild(errorsrout",{"_index":1362,"title":{},"body":{"modules/ErrorsRoutingModule.html":{}}}],["routermodule.forroot(rootrout",{"_index":309,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["routeurl",{"_index":180,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["routeurl.split",{"_index":183,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["routing.modul",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/ErrorsModule.html":{}}}],["routing.module.t",{"_index":327,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/ErrorsRoutingModule.html":{}}}],["row?.device.serial_no",{"_index":2229,"title":{},"body":{"components/PatientListComponent.html":{}}}],["row?.firstnam",{"_index":2120,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/PatientListComponent.html":{},"components/UserEditFormComponent.html":{}}}],["row?.last_login_at",{"_index":2122,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["row?.lastnam",{"_index":2121,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/PatientListComponent.html":{},"components/UserEditFormComponent.html":{}}}],["row?.nursing_home.nam",{"_index":2735,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["row?.permiss",{"_index":2734,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["row?.users_count",{"_index":2230,"title":{},"body":{"components/PatientListComponent.html":{}}}],["rtl",{"_index":1564,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"interfaces/State-5.html":{}}}],["rtr",{"_index":728,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{}}}],["run",{"_index":2942,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":158,"title":{},"body":{"directives/AppDropdownDirective.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"components/DashboardLayoutComponent.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"injectables/LayoutService.html":{},"injectables/LoaderService.html":{},"injectables/NavigationService.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SigninComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":160,"title":{},"body":{"directives/AppDropdownDirective.html":{},"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/DashboardLayoutComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"components/PatientEditFormComponent.html":{},"components/PatientListComponent.html":{},"injectables/PatientsEffects.html":{},"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{},"injectables/UsersEffects.html":{}}}],["rückert",{"_index":2947,"title":{},"body":{"index.html":{}}}],["safari",{"_index":2344,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["same",{"_index":2982,"title":{},"body":{"index.html":{}}}],["save",{"_index":1955,"title":{},"body":{"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"interfaces/State.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["savedpati",{"_index":2276,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["savedus",{"_index":2818,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["savepatienterrormessag",{"_index":2127,"title":{},"body":{"components/PatientFormComponent.html":{}}}],["saveusererrormessag",{"_index":2736,"title":{},"body":{"components/UserFormComponent.html":{}}}],["scp",{"_index":3007,"title":{},"body":{"index.html":{}}}],["scp2",{"_index":3003,"title":{},"body":{"index.html":{}}}],["screen",{"_index":1596,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"components/LockscreenComponent.html":{}}}],["screensizewatch",{"_index":1307,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["script",{"_index":2962,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":2326,"title":{},"body":{"directives/ScrollToDirective.html":{},"components/SidebarTopComponent.html":{}}}],["scrollbar",{"_index":1013,"title":{},"body":{"modules/DashboardModule.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"dependencies.html":{}}}],["scrollconfig",{"_index":898,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["scrollto",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"directives/ScrollToDirective.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["scrolltodirect",{"_index":111,"title":{"directives/ScrollToDirective.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"directives/ScrollToDirective.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["scrolltotop",{"_index":904,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["scrolltotop(selector",{"_index":917,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["search",{"_index":613,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreateNursingHome.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"components/HeaderSideComponent.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"miscellaneous/enumerations.html":{}}}],["searchnursinghom",{"_index":612,"title":{"classes/SearchNursingHome.html":{}},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["searchnursinghomecomplet",{"_index":614,"title":{"classes/SearchNursingHomeComplete.html":{}},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["searchpati",{"_index":649,"title":{"classes/SearchPatient.html":{}},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["searchpatientcomplet",{"_index":650,"title":{"classes/SearchPatientComplete.html":{}},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["searchus",{"_index":684,"title":{"classes/SearchUser.html":{}},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["searchusercomplet",{"_index":685,"title":{"classes/SearchUserComplete.html":{}},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["section",{"_index":2233,"title":{},"body":{"components/PatientsComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["seen",{"_index":1815,"title":{},"body":{"components/LockscreenComponent.html":{}}}],["select",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreateNursingHome.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"components/DashboardLayoutComponent.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"components/HeaderSideComponent.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"components/SidebarSideComponent.html":{},"components/SigninComponent.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-4.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["select(fromauth.getaccesstoken",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["select(fromauth.geterror",{"_index":2473,"title":{},"body":{"components/SigninComponent.html":{}}}],["select(fromauth.getpend",{"_index":2480,"title":{},"body":{"components/SigninComponent.html":{}}}],["select(fromauth.isloggedin",{"_index":451,"title":{},"body":{"guards/AuthGuard.html":{}}}],["select(fromdashboard.getallnursinghom",{"_index":2143,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["select(fromdashboard.getallpati",{"_index":2211,"title":{},"body":{"components/PatientListComponent.html":{}}}],["select(fromdashboard.getallpatientus",{"_index":2049,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["select(fromdashboard.getallus",{"_index":2774,"title":{},"body":{"components/UserListComponent.html":{}}}],["select(fromdashboard.getalluserpati",{"_index":2702,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["select(fromdashboard.getloadpatientuserserror",{"_index":2035,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["select(fromdashboard.getloadpatientuserspend",{"_index":2037,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["select(fromdashboard.getloaduserpatientserror",{"_index":2700,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["select(fromdashboard.getloaduserpatientspend",{"_index":2701,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["select(fromdashboard.getnursinghomepageerror",{"_index":2145,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["select(fromdashboard.getnursinghomepagepend",{"_index":2142,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["select(fromdashboard.getpatientcreationerror",{"_index":2140,"title":{},"body":{"components/PatientFormComponent.html":{}}}],["select(fromdashboard.getpatientcreationpend",{"_index":2137,"title":{},"body":{"components/PatientFormComponent.html":{}}}],["select(fromdashboard.getpatientpageerror",{"_index":2204,"title":{},"body":{"components/PatientListComponent.html":{}}}],["select(fromdashboard.getpatientpagepend",{"_index":2207,"title":{},"body":{"components/PatientListComponent.html":{}}}],["select(fromdashboard.getselectedpati",{"_index":2062,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/PatientListComponent.html":{}}}],["select(fromdashboard.getselectedpatientid",{"_index":2239,"title":{},"body":{"components/PatientsComponent.html":{}}}],["select(fromdashboard.getselectedus",{"_index":2706,"title":{},"body":{"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{}}}],["select(fromdashboard.getselecteduserid",{"_index":2789,"title":{},"body":{"components/UsersComponent.html":{}}}],["select(fromdashboard.getusercreationerror",{"_index":2739,"title":{},"body":{"components/UserFormComponent.html":{}}}],["select(fromdashboard.getusercreationpend",{"_index":2738,"title":{},"body":{"components/UserFormComponent.html":{}}}],["select(fromdashboard.getuserpageerror",{"_index":2767,"title":{},"body":{"components/UserListComponent.html":{}}}],["select(fromdashboard.getuserpagepend",{"_index":2770,"title":{},"body":{"components/UserListComponent.html":{}}}],["selectal",{"_index":1154,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["selectauthst",{"_index":505,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-1.html":{}}}],["selectauthuserst",{"_index":507,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-1.html":{}}}],["selectauthviewsst",{"_index":509,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-1.html":{}}}],["selected[0",{"_index":2227,"title":{},"body":{"components/PatientListComponent.html":{},"components/UserListComponent.html":{}}}],["selectednursinghomeid",{"_index":2637,"title":{},"body":{"interfaces/State-7.html":{}}}],["selectedpati",{"_index":2186,"title":{},"body":{"components/PatientListComponent.html":{}}}],["selectedpatientid",{"_index":2235,"title":{},"body":{"components/PatientsComponent.html":{},"interfaces/State-10.html":{}}}],["selectedus",{"_index":2749,"title":{},"body":{"components/UserListComponent.html":{}}}],["selecteduserid",{"_index":2598,"title":{},"body":{"interfaces/State-13.html":{},"components/UsersComponent.html":{}}}],["selectent",{"_index":1152,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["selectid",{"_index":1150,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-4.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{}}}],["selectiontyp",{"_index":2197,"title":{},"body":{"components/PatientListComponent.html":{},"components/UserListComponent.html":{}}}],["selectnursinghom",{"_index":599,"title":{"classes/SelectNursingHome.html":{}},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"interfaces/DashboardState.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"directives/FontSizeDirective.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"directives/ScrollToDirective.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/State-4.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["selectpati",{"_index":643,"title":{"classes/SelectPatient.html":{}},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"components/PatientListComponent.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectpatient(pati",{"_index":2201,"title":{},"body":{"components/PatientListComponent.html":{}}}],["selecttot",{"_index":1156,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["selectus",{"_index":678,"title":{"classes/SelectUser.html":{}},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{},"components/UserListComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectuser(us",{"_index":2756,"title":{},"body":{"components/UserListComponent.html":{}}}],["self",{"_index":1321,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["self.ismobil",{"_index":1328,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["self.pageyoffset",{"_index":2345,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["self.sidenav.mod",{"_index":1329,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["self.sidenav.open",{"_index":1327,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["send",{"_index":1972,"title":{},"body":{"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["separ",{"_index":1618,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{},"components/SidebarTopComponent.html":{}}}],["ser",{"_index":588,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreateNursingHome.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{}}}],["serial_no",{"_index":1657,"title":{},"body":{"interfaces/IDevice.html":{}}}],["serv",{"_index":2964,"title":{},"body":{"index.html":{}}}],["server",{"_index":1344,"title":{},"body":{"components/ErrorComponent.html":{},"components/NotificationsComponent.html":{},"index.html":{}}}],["servic",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"modules/CoreModule.html":{},"classes/GenericValidator.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"injectables/LoaderService.html":{},"injectables/PatientsService.html":{},"components/SignupComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["services/auth",{"_index":433,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["services/nurs",{"_index":1995,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["services/patients.servic",{"_index":2293,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["services/users.servic",{"_index":2846,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["set",{"_index":722,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"directives/DropdownLinkDirective.html":{},"classes/FixTopbar.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/ITheme.html":{},"injectables/LayoutService.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"injectables/NavigationService.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"components/SidebarSideComponent.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"miscellaneous/enumerations.html":{}}}],["setapplayout",{"_index":1573,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["setdirectionltr",{"_index":725,"title":{"classes/SetDirectionLtr.html":{}},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["setdirectionrtr",{"_index":727,"title":{"classes/SetDirectionRtr.html":{}},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["setlang",{"_index":1496,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["setlang(ev",{"_index":1512,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["setlayoutfromqueri",{"_index":1586,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["setnavigationpositionsid",{"_index":721,"title":{"classes/SetNavigationPositionSide.html":{}},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["setnavigationpositiontop",{"_index":723,"title":{"classes/SetNavigationPositionTop.html":{}},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["setopen(valu",{"_index":1277,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["setthemefromqueri",{"_index":1729,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["settimeout",{"_index":1326,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["settimeout('window.scrollto(0",{"_index":2378,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["settings_backup_restor",{"_index":1897,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["setup",{"_index":2921,"title":{},"body":{"index.html":{}}}],["sever",{"_index":1149,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["share",{"_index":807,"title":{},"body":{"modules/CoreModule.html":{}}}],["shared/gener",{"_index":2044,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["shared/numb",{"_index":2045,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["shared/shared.modul",{"_index":1034,"title":{},"body":{"modules/DashboardModule.html":{}}}],["sharedmodul",{"_index":1009,"title":{"modules/SharedModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["shop",{"_index":1571,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["show",{"_index":428,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["shown",{"_index":2265,"title":{},"body":{"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["side",{"_index":708,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"directives/EgretSideNavToggleDirective.html":{},"classes/FixTopbar.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"components/SidebarSideComponent.html":{},"interfaces/State-5.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{}}}],["side'},{'nam",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["side.compon",{"_index":1019,"title":{},"body":{"modules/DashboardModule.html":{}}}],["side.component.html",{"_index":2406,"title":{},"body":{"components/SidebarSideComponent.html":{}}}],["side.component.t",{"_index":1489,"title":{},"body":{"components/HeaderSideComponent.html":{},"components/SidebarSideComponent.html":{}}}],["side.component.ts:18",{"_index":1506,"title":{},"body":{"components/HeaderSideComponent.html":{},"components/SidebarSideComponent.html":{}}}],["side.component.ts:19",{"_index":1522,"title":{},"body":{"components/HeaderSideComponent.html":{},"components/SidebarSideComponent.html":{}}}],["side.component.ts:20",{"_index":2415,"title":{},"body":{"components/SidebarSideComponent.html":{}}}],["side.component.ts:21",{"_index":1521,"title":{},"body":{"components/HeaderSideComponent.html":{},"components/SidebarSideComponent.html":{}}}],["side.component.ts:22",{"_index":2410,"title":{},"body":{"components/SidebarSideComponent.html":{}}}],["side.component.ts:28",{"_index":1523,"title":{},"body":{"components/HeaderSideComponent.html":{},"components/SidebarSideComponent.html":{}}}],["side.component.ts:29",{"_index":1504,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["side.component.ts:32",{"_index":2413,"title":{},"body":{"components/SidebarSideComponent.html":{}}}],["side.component.ts:36",{"_index":1524,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["side.component.ts:41",{"_index":1510,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["side.component.ts:45",{"_index":2411,"title":{},"body":{"components/SidebarSideComponent.html":{}}}],["side.component.ts:52",{"_index":1513,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["side.component.ts:56",{"_index":2414,"title":{},"body":{"components/SidebarSideComponent.html":{}}}],["side.component.ts:58",{"_index":1508,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["side.component.ts:60",{"_index":2412,"title":{},"body":{"components/SidebarSideComponent.html":{}}}],["side.component.ts:62",{"_index":1515,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["side.component.ts:66",{"_index":1516,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["side.component.ts:75",{"_index":1514,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["side.component.ts:93",{"_index":1511,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["side.template.html",{"_index":1490,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["side/head",{"_index":1018,"title":{},"body":{"modules/DashboardModule.html":{},"components/HeaderSideComponent.html":{}}}],["side/sidebar",{"_index":1021,"title":{},"body":{"modules/DashboardModule.html":{},"components/SidebarSideComponent.html":{}}}],["sidebar",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["sidebarp",{"_index":941,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["sidebarsidecompon",{"_index":85,"title":{"components/SidebarSideComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["sidebarstyl",{"_index":899,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["sidebarstyle:str",{"_index":1531,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["sidebartopcompon",{"_index":87,"title":{"components/SidebarTopComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["sidenav",{"_index":945,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"directives/EgretSideNavToggleDirective.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{},"components/SidenavComponent.html":{}}}],["sidenav'},{'nam",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["sidenav.template.html",{"_index":2448,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenavcompon",{"_index":89,"title":{"components/SidenavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["sidenavstyl",{"_index":958,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"components/HeaderSideComponent.html":{},"interfaces/State-5.html":{}}}],["sign",{"_index":1424,"title":{},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SignupComponent.html":{},"miscellaneous/enumerations.html":{}}}],["signin",{"_index":2467,"title":{},"body":{"components/SigninComponent.html":{}}}],["signin'},{'nam",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["signin.component.html",{"_index":2468,"title":{},"body":{"components/SigninComponent.html":{}}}],["signincompon",{"_index":91,"title":{"components/SigninComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"modules/CoreModule.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"modules/ErrorsModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["signindata",{"_index":2485,"title":{},"body":{"components/SigninComponent.html":{}}}],["signinform",{"_index":2469,"title":{},"body":{"components/SigninComponent.html":{}}}],["signup",{"_index":1393,"title":{"classes/Signup.html":{}},"body":{"classes/ForgotPassword.html":{},"classes/Login.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["signup'},{'nam",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["signup.component.html",{"_index":2494,"title":{},"body":{"components/SignupComponent.html":{}}}],["signupcompon",{"_index":93,"title":{"components/SignupComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"modules/CoreModule.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"modules/ErrorsModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["signupfailur",{"_index":1433,"title":{"classes/SignUpFailure.html":{}},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["signupform",{"_index":2495,"title":{},"body":{"components/SignupComponent.html":{}}}],["signupsuccess",{"_index":1432,"title":{"classes/SignUpSuccess.html":{}},"body":{"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["simpl",{"_index":735,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-5.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{}}}],["singl",{"_index":2198,"title":{},"body":{"components/PatientListComponent.html":{},"components/UserListComponent.html":{}}}],["situat",{"_index":1594,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["size",{"_index":1368,"title":{},"body":{"directives/FontSizeDirective.html":{}}}],["size.direct",{"_index":1064,"title":{},"body":{"modules/DashboardModule.html":{}}}],["size.directive.t",{"_index":1366,"title":{},"body":{"directives/FontSizeDirective.html":{}}}],["size.directive.ts:12",{"_index":1374,"title":{},"body":{"directives/FontSizeDirective.html":{}}}],["size.directive.ts:8",{"_index":1373,"title":{},"body":{"directives/FontSizeDirective.html":{}}}],["size.directive.ts:9",{"_index":1376,"title":{},"body":{"directives/FontSizeDirective.html":{}}}],["skipwhenexpir",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["sm",{"_index":1337,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["smoothscrol",{"_index":2364,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["snack",{"_index":2189,"title":{},"body":{"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["snackbar",{"_index":358,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["snackbardismiss.dismissedbyact",{"_index":411,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["snackbarref",{"_index":405,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["snackbarref.afterdismissed().subscribe(snackbardismiss",{"_index":410,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["snapshot",{"_index":1680,"title":{},"body":{"interfaces/IRoutePart.html":{},"injectables/RoutePartsService.html":{}}}],["snapshot.data['breadcrumb",{"_index":1688,"title":{},"body":{"interfaces/IRoutePart.html":{},"injectables/RoutePartsService.html":{}}}],["snapshot.data['titl",{"_index":1683,"title":{},"body":{"interfaces/IRoutePart.html":{},"injectables/RoutePartsService.html":{}}}],["snapshot.firstchild",{"_index":1681,"title":{},"body":{"interfaces/IRoutePart.html":{},"injectables/RoutePartsService.html":{}}}],["snapshot.param",{"_index":1690,"title":{},"body":{"interfaces/IRoutePart.html":{},"injectables/RoutePartsService.html":{}}}],["snapshot.url",{"_index":1686,"title":{},"body":{"interfaces/IRoutePart.html":{},"injectables/RoutePartsService.html":{}}}],["snapshot.url.length",{"_index":1684,"title":{},"body":{"interfaces/IRoutePart.html":{},"injectables/RoutePartsService.html":{}}}],["snapshot.url[0].path",{"_index":1689,"title":{},"body":{"interfaces/IRoutePart.html":{},"injectables/RoutePartsService.html":{}}}],["someth",{"_index":3018,"title":{},"body":{"index.html":{}}}],["sortcompar",{"_index":2534,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interfaces/AuthState.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"modules/CoreModule.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"modules/ErrorsModule.html":{},"modules/ErrorsRoutingModule.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"components/ForgotPasswordComponent.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ICredentials.html":{},"interfaces/IDevice.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IPatient.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"interfaces/IUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"modules/MaterialModule.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"classes/NumberValidators.html":{},"interfaces/NursingHome.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"modules/SharedModule.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{}}}],["speed",{"_index":2372,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["split",{"_index":1048,"title":{},"body":{"modules/DashboardModule.html":{},"dependencies.html":{}}}],["splitpanemodul",{"_index":1046,"title":{},"body":{"modules/DashboardModule.html":{}}}],["src/.../app.module.t",{"_index":2907,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../auth",{"_index":2900,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../auth.actions.t",{"_index":2899,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../auth.reducer.t",{"_index":2912,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../index.t",{"_index":2909,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../layout.actions.t",{"_index":2901,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../layout.reducer.t",{"_index":2914,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../nurs",{"_index":2902,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../patient",{"_index":2904,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../patients.actions.t",{"_index":2903,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../patients.reducer.t",{"_index":2913,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../url.helper.t",{"_index":2908,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user",{"_index":2906,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../users.actions.t",{"_index":2905,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../users.reducer.t",{"_index":2911,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../views.reducer.t",{"_index":2910,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":326,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.module.t",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["src/app/auth/actions/auth",{"_index":1385,"title":{},"body":{"classes/ForgotPassword.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"classes/Signup.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/auth/actions/auth.actions.t",{"_index":1826,"title":{},"body":{"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/auth/actions/auth.actions.ts:13",{"_index":1828,"title":{},"body":{"classes/Logout.html":{}}}],["src/app/auth/actions/auth.actions.ts:20",{"_index":1836,"title":{},"body":{"classes/LogoutConfirmation.html":{}}}],["src/app/auth/actions/auth.actions.ts:27",{"_index":1837,"title":{},"body":{"classes/LogoutConfirmationDismiss.html":{}}}],["src/app/auth/auth",{"_index":482,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/auth/auth.module.t",{"_index":462,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/components/forgot",{"_index":1400,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["src/app/auth/components/lockscreen/lockscreen.component.t",{"_index":1799,"title":{},"body":{"components/LockscreenComponent.html":{}}}],["src/app/auth/components/lockscreen/lockscreen.component.ts:12",{"_index":1809,"title":{},"body":{"components/LockscreenComponent.html":{}}}],["src/app/auth/components/lockscreen/lockscreen.component.ts:13",{"_index":1810,"title":{},"body":{"components/LockscreenComponent.html":{}}}],["src/app/auth/components/lockscreen/lockscreen.component.ts:15",{"_index":1808,"title":{},"body":{"components/LockscreenComponent.html":{}}}],["src/app/auth/components/lockscreen/lockscreen.component.ts:17",{"_index":1805,"title":{},"body":{"components/LockscreenComponent.html":{}}}],["src/app/auth/components/lockscreen/lockscreen.component.ts:21",{"_index":1806,"title":{},"body":{"components/LockscreenComponent.html":{}}}],["src/app/auth/components/lockscreen/lockscreen.component.ts:27",{"_index":1807,"title":{},"body":{"components/LockscreenComponent.html":{}}}],["src/app/auth/components/signin/signin.component.t",{"_index":2466,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/auth/components/signin/signin.component.ts:16",{"_index":2475,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/auth/components/signin/signin.component.ts:17",{"_index":2477,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/auth/components/signin/signin.component.ts:19",{"_index":2476,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/auth/components/signin/signin.component.ts:22",{"_index":2474,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/auth/components/signin/signin.component.ts:24",{"_index":2470,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/auth/components/signin/signin.component.ts:30",{"_index":2471,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/auth/components/signin/signin.component.ts:53",{"_index":2472,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/auth/components/signup/signup.component.t",{"_index":2493,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/components/signup/signup.component.ts:13",{"_index":2502,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/components/signup/signup.component.ts:14",{"_index":2503,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/components/signup/signup.component.ts:16",{"_index":2496,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/components/signup/signup.component.ts:27",{"_index":2497,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/components/signup/signup.component.ts:48",{"_index":2501,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/containers/auth",{"_index":454,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["src/app/auth/effects/auth.effects.t",{"_index":351,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/auth/effects/auth.effects.ts:120",{"_index":427,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/auth/effects/auth.effects.ts:132",{"_index":365,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/auth/effects/auth.effects.ts:150",{"_index":430,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/auth/effects/auth.effects.ts:29",{"_index":385,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/auth/effects/auth.effects.ts:53",{"_index":398,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/auth/effects/auth.effects.ts:68",{"_index":394,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/auth/effects/auth.effects.ts:85",{"_index":416,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/auth/guards/auth.guard.t",{"_index":443,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/guards/auth.guard.ts:16",{"_index":448,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/guards/auth.guard.ts:19",{"_index":449,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/models/user.interface.t",{"_index":1645,"title":{},"body":{"interfaces/ICredentials.html":{},"interfaces/IUser.html":{}}}],["src/app/auth/reducers/auth.reducer.t",{"_index":2604,"title":{},"body":{"interfaces/State-2.html":{},"miscellaneous/functions.html":{}}}],["src/app/auth/reducers/index.t",{"_index":488,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-1.html":{}}}],["src/app/auth/reducers/views.reducer.t",{"_index":2610,"title":{},"body":{"interfaces/State-3.html":{},"miscellaneous/functions.html":{}}}],["src/app/auth/services/auth",{"_index":331,"title":{},"body":{"injectables/AuthApiService.html":{}}}],["src/app/core/components/confirm/confirm.component.t",{"_index":758,"title":{},"body":{"components/ConfirmComponent.html":{}}}],["src/app/core/components/confirm/confirm.component.ts:19",{"_index":765,"title":{},"body":{"components/ConfirmComponent.html":{}}}],["src/app/core/components/confirm/confirm.component.ts:21",{"_index":768,"title":{},"body":{"components/ConfirmComponent.html":{}}}],["src/app/core/components/confirm/confirm.component.ts:22",{"_index":767,"title":{},"body":{"components/ConfirmComponent.html":{}}}],["src/app/core/components/confirm/confirm.component.ts:23",{"_index":769,"title":{},"body":{"components/ConfirmComponent.html":{}}}],["src/app/core/components/loader/loader.component.t",{"_index":1765,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/core/components/loader/loader.component.ts:10",{"_index":1772,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/core/components/loader/loader.component.ts:11",{"_index":1769,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/core/components/loader/loader.component.ts:13",{"_index":1771,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/core/components/loader/loader.component.ts:16",{"_index":1770,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/core/containers/app/app.component.t",{"_index":7,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/core/containers/app/app.component.ts:14",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/core/core.module.t",{"_index":806,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/directives/dropdown",{"_index":1248,"title":{},"body":{"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{}}}],["src/app/core/directives/dropdown.directive.t",{"_index":116,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["src/app/core/directives/dropdown.directive.ts:15",{"_index":154,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["src/app/core/directives/dropdown.directive.ts:17",{"_index":152,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["src/app/core/directives/dropdown.directive.ts:19",{"_index":145,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["src/app/core/directives/dropdown.directive.ts:27",{"_index":140,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["src/app/core/directives/dropdown.directive.ts:31",{"_index":150,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["src/app/core/directives/dropdown.directive.ts:38",{"_index":147,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["src/app/core/directives/dropdown.directive.ts:42",{"_index":148,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["src/app/core/directives/dropdown.directive.ts:55",{"_index":136,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["src/app/core/directives/egret",{"_index":1304,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["src/app/core/directives/font",{"_index":1365,"title":{},"body":{"directives/FontSizeDirective.html":{}}}],["src/app/core/directives/scrol",{"_index":2324,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["src/app/core/helpers/url.helper.t",{"_index":2915,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/core/services/confirm.service.t",{"_index":781,"title":{},"body":{"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{}}}],["src/app/core/services/confirm.service.ts:25",{"_index":799,"title":{},"body":{"injectables/ConfirmService.html":{}}}],["src/app/core/services/confirm.service.ts:47",{"_index":800,"title":{},"body":{"injectables/ConfirmService.html":{}}}],["src/app/core/services/layout.service.t",{"_index":1555,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:107",{"_index":1740,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:131",{"_index":1741,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:40",{"_index":1747,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:41",{"_index":1749,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:42",{"_index":1748,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:43",{"_index":1746,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:44",{"_index":1745,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:45",{"_index":1739,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:57",{"_index":1743,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:74",{"_index":1742,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:94",{"_index":1744,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/loader.service.t",{"_index":1778,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/core/services/loader.service.ts:16",{"_index":1780,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/core/services/loader.service.ts:34",{"_index":1784,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/core/services/loader.service.ts:46",{"_index":1781,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/core/services/navigation.service.t",{"_index":1612,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["src/app/core/services/navigation.service.ts:31",{"_index":1865,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/services/navigation.service.ts:35",{"_index":1868,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/services/navigation.service.ts:61",{"_index":1869,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/services/navigation.service.ts:63",{"_index":1870,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/services/navigation.service.ts:65",{"_index":1871,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/services/navigation.service.ts:71",{"_index":1866,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/services/rout",{"_index":1675,"title":{},"body":{"interfaces/IRoutePart.html":{},"injectables/RoutePartsService.html":{}}}],["src/app/core/services/theme.service.t",{"_index":1692,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["src/app/core/services/theme.service.ts:15",{"_index":2679,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/services/theme.service.ts:32",{"_index":2674,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/services/theme.service.ts:40",{"_index":2675,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/services/theme.service.ts:57",{"_index":2676,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/services/theme.service.ts:63",{"_index":2677,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/services/theme.service.ts:74",{"_index":2678,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/dashboard/actions/layout.actions.t",{"_index":706,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:106",{"_index":1841,"title":{},"body":{"classes/MakeBreadcrumbSimple.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:107",{"_index":1842,"title":{},"body":{"classes/MakeBreadcrumbSimple.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:115",{"_index":1843,"title":{},"body":{"classes/MakeBreadcrumbTitle.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:116",{"_index":1844,"title":{},"body":{"classes/MakeBreadcrumbTitle.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:124",{"_index":1363,"title":{},"body":{"classes/FixTopbar.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:125",{"_index":1364,"title":{},"body":{"classes/FixTopbar.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:25",{"_index":2010,"title":{},"body":{"classes/OpenSideNav.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:26",{"_index":2011,"title":{},"body":{"classes/OpenSideNav.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:34",{"_index":711,"title":{},"body":{"classes/CloseSideNav.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:35",{"_index":712,"title":{},"body":{"classes/CloseSideNav.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:43",{"_index":756,"title":{},"body":{"classes/CompactSideNav.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:44",{"_index":757,"title":{},"body":{"classes/CompactSideNav.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:52",{"_index":2401,"title":{},"body":{"classes/SetNavigationPositionSide.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:53",{"_index":2402,"title":{},"body":{"classes/SetNavigationPositionSide.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:61",{"_index":2403,"title":{},"body":{"classes/SetNavigationPositionTop.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:62",{"_index":2404,"title":{},"body":{"classes/SetNavigationPositionTop.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:70",{"_index":2397,"title":{},"body":{"classes/SetDirectionLtr.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:71",{"_index":2398,"title":{},"body":{"classes/SetDirectionLtr.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:79",{"_index":2399,"title":{},"body":{"classes/SetDirectionRtr.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:80",{"_index":2400,"title":{},"body":{"classes/SetDirectionRtr.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:88",{"_index":2680,"title":{},"body":{"classes/TransitioningLayout.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:89",{"_index":2681,"title":{},"body":{"classes/TransitioningLayout.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:97",{"_index":2682,"title":{},"body":{"classes/UseBreadcrumb.html":{}}}],["src/app/dashboard/actions/layout.actions.ts:98",{"_index":2683,"title":{},"body":{"classes/UseBreadcrumb.html":{}}}],["src/app/dashboard/actions/nurs",{"_index":585,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/InitializeNursingHome.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SelectNursingHome.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/dashboard/actions/pati",{"_index":839,"title":{},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/dashboard/actions/patients.actions.t",{"_index":637,"title":{},"body":{"classes/ClearSelectedPatient.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DismissEditPatient.html":{},"classes/DismissPatientFormDialog.html":{},"classes/EditPatient.html":{},"classes/InitializePatient.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/ResetPatientsState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SelectPatient.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:100",{"_index":1297,"title":{},"body":{"classes/EditPatient.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:108",{"_index":1243,"title":{},"body":{"classes/DismissEditPatient.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:115",{"_index":2318,"title":{},"body":{"classes/ResetPatientsState.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:122",{"_index":1238,"title":{},"body":{"classes/DeletePatient.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:124",{"_index":1239,"title":{},"body":{"classes/DeletePatient.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:132",{"_index":1755,"title":{},"body":{"classes/LoadPatientUsers.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:133",{"_index":1756,"title":{},"body":{"classes/LoadPatientUsers.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:27",{"_index":2393,"title":{},"body":{"classes/SelectPatient.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:29",{"_index":2394,"title":{},"body":{"classes/SelectPatient.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:36",{"_index":639,"title":{},"body":{"classes/ClearSelectedPatient.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:43",{"_index":1735,"title":{},"body":{"classes/InitializePatient.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:50",{"_index":861,"title":{},"body":{"classes/CreatePatientFormDialog.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:57",{"_index":836,"title":{},"body":{"classes/CreatePatient.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:59",{"_index":837,"title":{},"body":{"classes/CreatePatient.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:66",{"_index":1245,"title":{},"body":{"classes/DismissPatientFormDialog.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:73",{"_index":1757,"title":{},"body":{"classes/LoadPatients.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:80",{"_index":2383,"title":{},"body":{"classes/SearchPatient.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:82",{"_index":2384,"title":{},"body":{"classes/SearchPatient.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:89",{"_index":2385,"title":{},"body":{"classes/SearchPatientComplete.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:91",{"_index":2386,"title":{},"body":{"classes/SearchPatientComplete.html":{}}}],["src/app/dashboard/actions/patients.actions.ts:98",{"_index":1296,"title":{},"body":{"classes/EditPatient.html":{}}}],["src/app/dashboard/actions/us",{"_index":867,"title":{},"body":{"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/dashboard/actions/users.actions.t",{"_index":673,"title":{},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/dashboard/actions/users.actions.ts:100",{"_index":1303,"title":{},"body":{"classes/EditUser.html":{}}}],["src/app/dashboard/actions/users.actions.ts:108",{"_index":1244,"title":{},"body":{"classes/DismissEditUser.html":{}}}],["src/app/dashboard/actions/users.actions.ts:115",{"_index":2319,"title":{},"body":{"classes/ResetUsersState.html":{}}}],["src/app/dashboard/actions/users.actions.ts:122",{"_index":1240,"title":{},"body":{"classes/DeleteUser.html":{}}}],["src/app/dashboard/actions/users.actions.ts:124",{"_index":1241,"title":{},"body":{"classes/DeleteUser.html":{}}}],["src/app/dashboard/actions/users.actions.ts:132",{"_index":1762,"title":{},"body":{"classes/LoadUserPatients.html":{}}}],["src/app/dashboard/actions/users.actions.ts:133",{"_index":1763,"title":{},"body":{"classes/LoadUserPatients.html":{}}}],["src/app/dashboard/actions/users.actions.ts:27",{"_index":2395,"title":{},"body":{"classes/SelectUser.html":{}}}],["src/app/dashboard/actions/users.actions.ts:29",{"_index":2396,"title":{},"body":{"classes/SelectUser.html":{}}}],["src/app/dashboard/actions/users.actions.ts:36",{"_index":675,"title":{},"body":{"classes/ClearSelectedUser.html":{}}}],["src/app/dashboard/actions/users.actions.ts:43",{"_index":1736,"title":{},"body":{"classes/InitializeUser.html":{}}}],["src/app/dashboard/actions/users.actions.ts:50",{"_index":885,"title":{},"body":{"classes/CreateUserFormDialog.html":{}}}],["src/app/dashboard/actions/users.actions.ts:57",{"_index":864,"title":{},"body":{"classes/CreateUser.html":{}}}],["src/app/dashboard/actions/users.actions.ts:59",{"_index":865,"title":{},"body":{"classes/CreateUser.html":{}}}],["src/app/dashboard/actions/users.actions.ts:66",{"_index":1247,"title":{},"body":{"classes/DismissUserFormDialog.html":{}}}],["src/app/dashboard/actions/users.actions.ts:73",{"_index":1764,"title":{},"body":{"classes/LoadUsers.html":{}}}],["src/app/dashboard/actions/users.actions.ts:80",{"_index":2387,"title":{},"body":{"classes/SearchUser.html":{}}}],["src/app/dashboard/actions/users.actions.ts:82",{"_index":2388,"title":{},"body":{"classes/SearchUser.html":{}}}],["src/app/dashboard/actions/users.actions.ts:89",{"_index":2389,"title":{},"body":{"classes/SearchUserComplete.html":{}}}],["src/app/dashboard/actions/users.actions.ts:91",{"_index":2390,"title":{},"body":{"classes/SearchUserComplete.html":{}}}],["src/app/dashboard/actions/users.actions.ts:98",{"_index":1302,"title":{},"body":{"classes/EditUser.html":{}}}],["src/app/dashboard/components/blank/blank.component.t",{"_index":524,"title":{},"body":{"components/BlankComponent.html":{}}}],["src/app/dashboard/components/nurs",{"_index":1921,"title":{},"body":{"components/NursingHomeFormComponent.html":{}}}],["src/app/dashboard/components/patients/pati",{"_index":2012,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{}}}],["src/app/dashboard/components/patients/patients.component.t",{"_index":2231,"title":{},"body":{"components/PatientsComponent.html":{}}}],["src/app/dashboard/components/patients/patients.component.ts:21",{"_index":2240,"title":{},"body":{"components/PatientsComponent.html":{}}}],["src/app/dashboard/components/patients/patients.component.ts:23",{"_index":2237,"title":{},"body":{"components/PatientsComponent.html":{}}}],["src/app/dashboard/components/patients/patients.component.ts:38",{"_index":2238,"title":{},"body":{"components/PatientsComponent.html":{}}}],["src/app/dashboard/components/users/us",{"_index":2691,"title":{},"body":{"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{}}}],["src/app/dashboard/components/users/users.component.t",{"_index":2785,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/dashboard/components/users/users.component.ts:21",{"_index":2790,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/dashboard/components/users/users.component.ts:23",{"_index":2787,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/dashboard/components/users/users.component.ts:38",{"_index":2788,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/dashboard/containers/dashboard",{"_index":886,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["src/app/dashboard/containers/layout",{"_index":526,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/HeaderSideComponent.html":{},"components/NotificationsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{}}}],["src/app/dashboard/dashboard",{"_index":1072,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["src/app/dashboard/dashboard.module.t",{"_index":1010,"title":{},"body":{"modules/DashboardModule.html":{}}}],["src/app/dashboard/effects/nurs",{"_index":1956,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["src/app/dashboard/effects/patients.effects.t",{"_index":2247,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["src/app/dashboard/effects/patients.effects.ts:107",{"_index":2289,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["src/app/dashboard/effects/patients.effects.ts:151",{"_index":2291,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["src/app/dashboard/effects/patients.effects.ts:173",{"_index":2268,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["src/app/dashboard/effects/patients.effects.ts:179",{"_index":2250,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["src/app/dashboard/effects/patients.effects.ts:195",{"_index":2292,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["src/app/dashboard/effects/patients.effects.ts:25",{"_index":2259,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["src/app/dashboard/effects/patients.effects.ts:52",{"_index":2280,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["src/app/dashboard/effects/patients.effects.ts:94",{"_index":2262,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["src/app/dashboard/effects/users.effects.t",{"_index":2795,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["src/app/dashboard/effects/users.effects.ts:111",{"_index":2824,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["src/app/dashboard/effects/users.effects.ts:123",{"_index":2842,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["src/app/dashboard/effects/users.effects.ts:162",{"_index":2836,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["src/app/dashboard/effects/users.effects.ts:215",{"_index":2844,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["src/app/dashboard/effects/users.effects.ts:237",{"_index":2812,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["src/app/dashboard/effects/users.effects.ts:243",{"_index":2798,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["src/app/dashboard/effects/users.effects.ts:259",{"_index":2845,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["src/app/dashboard/effects/users.effects.ts:27",{"_index":2806,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["src/app/dashboard/effects/users.effects.ts:54",{"_index":2822,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["src/app/dashboard/effects/users.effects.ts:96",{"_index":2809,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["src/app/dashboard/models/device.model.t",{"_index":1651,"title":{},"body":{"interfaces/IDevice.html":{}}}],["src/app/dashboard/models/nurs",{"_index":1919,"title":{},"body":{"interfaces/NursingHome.html":{},"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["src/app/dashboard/models/patient.model",{"_index":2705,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["src/app/dashboard/models/patient.model.t",{"_index":1659,"title":{},"body":{"interfaces/IPatient.html":{}}}],["src/app/dashboard/models/user.model.t",{"_index":2684,"title":{},"body":{"interfaces/User.html":{}}}],["src/app/dashboard/reducers/index.t",{"_index":1082,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["src/app/dashboard/reducers/layout.reducer.t",{"_index":2615,"title":{},"body":{"interfaces/State-5.html":{},"miscellaneous/functions.html":{}}}],["src/app/dashboard/reducers/nurs",{"_index":2624,"title":{},"body":{"interfaces/State-6.html":{},"interfaces/State-7.html":{},"miscellaneous/functions.html":{}}}],["src/app/dashboard/reducers/pati",{"_index":2646,"title":{},"body":{"interfaces/State-8.html":{},"interfaces/State-9.html":{},"miscellaneous/functions.html":{}}}],["src/app/dashboard/reducers/patients.reducer.t",{"_index":2529,"title":{},"body":{"interfaces/State-10.html":{},"miscellaneous/functions.html":{}}}],["src/app/dashboard/reducers/us",{"_index":2554,"title":{},"body":{"interfaces/State-11.html":{},"interfaces/State-12.html":{},"miscellaneous/functions.html":{}}}],["src/app/dashboard/reducers/users.reducer.t",{"_index":2597,"title":{},"body":{"interfaces/State-13.html":{},"miscellaneous/functions.html":{}}}],["src/app/dashboard/services/nurs",{"_index":1998,"title":{},"body":{"injectables/NursingHomesService.html":{}}}],["src/app/dashboard/services/patients.service.t",{"_index":2294,"title":{},"body":{"injectables/PatientsService.html":{}}}],["src/app/dashboard/services/patients.service.ts:18",{"_index":2298,"title":{},"body":{"injectables/PatientsService.html":{}}}],["src/app/dashboard/services/patients.service.ts:26",{"_index":2305,"title":{},"body":{"injectables/PatientsService.html":{}}}],["src/app/dashboard/services/patients.service.ts:35",{"_index":2300,"title":{},"body":{"injectables/PatientsService.html":{}}}],["src/app/dashboard/services/patients.service.ts:43",{"_index":2302,"title":{},"body":{"injectables/PatientsService.html":{}}}],["src/app/dashboard/services/patients.service.ts:51",{"_index":2307,"title":{},"body":{"injectables/PatientsService.html":{}}}],["src/app/dashboard/services/patients.service.ts:59",{"_index":2304,"title":{},"body":{"injectables/PatientsService.html":{}}}],["src/app/dashboard/services/users.service.t",{"_index":2847,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/dashboard/services/users.service.ts:19",{"_index":2850,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/dashboard/services/users.service.ts:27",{"_index":2860,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/dashboard/services/users.service.ts:35",{"_index":2858,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/dashboard/services/users.service.ts:43",{"_index":2852,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/dashboard/services/users.service.ts:51",{"_index":2854,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/dashboard/services/users.service.ts:59",{"_index":2862,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/dashboard/services/users.service.ts:68",{"_index":2856,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/dashboard/shared/gener",{"_index":1449,"title":{},"body":{"classes/GenericValidator.html":{}}}],["src/app/dashboard/shared/numb",{"_index":1911,"title":{},"body":{"classes/NumberValidators.html":{}}}],["src/app/dashboard/shared/shared.module.t",{"_index":2405,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/errors/components/error/error.component.t",{"_index":1338,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/errors/components/error/error.component.ts:12",{"_index":1341,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/errors/components/error/error.component.ts:7",{"_index":1340,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/errors/components/not",{"_index":1872,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["src/app/errors/containers/error",{"_index":1348,"title":{},"body":{"components/ErrorLayoutComponent.html":{}}}],["src/app/errors/error",{"_index":1359,"title":{},"body":{"modules/ErrorsRoutingModule.html":{}}}],["src/app/errors/errors.module.t",{"_index":1353,"title":{},"body":{"modules/ErrorsModule.html":{}}}],["src/app/material/material.module.t",{"_index":1845,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/reducers/index.t",{"_index":2514,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/functions.html":{}}}],["src/environments/environment.calvin.t",{"_index":2991,"title":{},"body":{"index.html":{}}}],["src/environments/environment.stage.t",{"_index":3019,"title":{},"body":{"index.html":{}}}],["src/environments/environment.t",{"_index":2990,"title":{},"body":{"index.html":{}}}],["stage",{"_index":3001,"title":{},"body":{"index.html":{}}}],["stage.j",{"_index":2972,"title":{},"body":{"index.html":{}}}],["standard",{"_index":2349,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["start",{"_index":417,"title":{"index.html":{}},"body":{"injectables/AuthEffects.html":{},"index.html":{}}}],["start:calvin",{"_index":2993,"title":{},"body":{"index.html":{}}}],["starti",{"_index":2366,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["startup",{"_index":1709,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["state",{"_index":501,"title":{"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{}},"body":{"interfaces/AuthState.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreateNursingHome.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"classes/GenericValidator.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"injectables/NavigationService.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["state.access_token",{"_index":518,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{}}}],["state.breadcrumb",{"_index":2622,"title":{},"body":{"interfaces/State-5.html":{}}}],["state.createpatienterror",{"_index":2662,"title":{},"body":{"interfaces/State-9.html":{}}}],["state.createpatientpend",{"_index":2664,"title":{},"body":{"interfaces/State-9.html":{}}}],["state.createusererror",{"_index":2587,"title":{},"body":{"interfaces/State-12.html":{}}}],["state.createuserpend",{"_index":2589,"title":{},"body":{"interfaces/State-12.html":{}}}],["state.direct",{"_index":2618,"title":{},"body":{"interfaces/State-5.html":{}}}],["state.editpatienterror",{"_index":2666,"title":{},"body":{"interfaces/State-9.html":{}}}],["state.editpatientpend",{"_index":2668,"title":{},"body":{"interfaces/State-9.html":{}}}],["state.editusererror",{"_index":2591,"title":{},"body":{"interfaces/State-12.html":{}}}],["state.edituserpend",{"_index":2593,"title":{},"body":{"interfaces/State-12.html":{}}}],["state.error",{"_index":2584,"title":{},"body":{"interfaces/State-12.html":{},"interfaces/State-3.html":{},"interfaces/State-6.html":{},"interfaces/State-9.html":{}}}],["state.ismobil",{"_index":2620,"title":{},"body":{"interfaces/State-5.html":{}}}],["state.layout",{"_index":1220,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["state.layoutintransit",{"_index":2619,"title":{},"body":{"interfaces/State-5.html":{}}}],["state.loadpatientuserserror",{"_index":2670,"title":{},"body":{"interfaces/State-9.html":{}}}],["state.loadpatientuserspend",{"_index":2669,"title":{},"body":{"interfaces/State-9.html":{}}}],["state.loaduserpatientserror",{"_index":2595,"title":{},"body":{"interfaces/State-12.html":{}}}],["state.loaduserpatientspend",{"_index":2594,"title":{},"body":{"interfaces/State-12.html":{}}}],["state.navigationpo",{"_index":2617,"title":{},"body":{"interfaces/State-5.html":{}}}],["state.nursinghom",{"_index":1176,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["state.nursinghomepag",{"_index":1170,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["state.pati",{"_index":1204,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["state.patientpag",{"_index":1186,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["state.patientus",{"_index":1214,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["state.pend",{"_index":2585,"title":{},"body":{"interfaces/State-12.html":{},"interfaces/State-3.html":{},"interfaces/State-6.html":{},"interfaces/State-9.html":{}}}],["state.selectednursinghomeid",{"_index":2645,"title":{},"body":{"interfaces/State-7.html":{}}}],["state.selectedpatientid",{"_index":2552,"title":{},"body":{"interfaces/State-10.html":{}}}],["state.selecteduserid",{"_index":2603,"title":{},"body":{"interfaces/State-13.html":{}}}],["state.sidenavstyl",{"_index":2616,"title":{},"body":{"interfaces/State-5.html":{}}}],["state.topbarfix",{"_index":2623,"title":{},"body":{"interfaces/State-5.html":{}}}],["state.us",{"_index":517,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/DashboardState.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{}}}],["state.usebreadcrumb",{"_index":2621,"title":{},"body":{"interfaces/State-5.html":{}}}],["state.userpag",{"_index":1126,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["state.userpati",{"_index":1164,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["state.userst",{"_index":508,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-1.html":{}}}],["state.view",{"_index":510,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-1.html":{}}}],["static",{"_index":1912,"title":{},"body":{"classes/NumberValidators.html":{}}}],["statu",{"_index":2214,"title":{},"body":{"components/PatientListComponent.html":{},"components/UserListComponent.html":{}}}],["step",{"_index":2373,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["stopi",{"_index":2368,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["store",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/DashboardLayoutComponent.html":{},"interfaces/DashboardState.html":{},"components/HeaderSideComponent.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"components/SidebarSideComponent.html":{},"components/SigninComponent.html":{},"interfaces/State.html":{},"interfaces/State-4.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["store.pip",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["storedevtoolsmodul",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["storedevtoolsmodule.instru",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodul",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{}}}],["storemodule.forfeature('auth",{"_index":476,"title":{},"body":{"modules/AuthModule.html":{}}}],["storemodule.forfeature('dashboard",{"_index":1067,"title":{},"body":{"modules/DashboardModule.html":{}}}],["storemodule.forroot(reduc",{"_index":317,"title":{},"body":{"modules/AppModule.html":{}}}],["storerouterconnectingmodul",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["storerouterconnectingmodule.forroot",{"_index":318,"title":{},"body":{"modules/AppModule.html":{}}}],["string",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ICredentials.html":{},"interfaces/IDevice.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IPatient.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"interfaces/IUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"injectables/LoaderService.html":{},"classes/Login.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"injectables/NavigationService.html":{},"classes/NumberValidators.html":{},"interfaces/NursingHome.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"components/SidebarSideComponent.html":{},"components/SidenavComponent.html":{},"classes/Signup.html":{},"interfaces/State-12.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-9.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{}}}],["strip",{"_index":297,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["structur",{"_index":1473,"title":{},"body":{"classes/GenericValidator.html":{}}}],["stuctur",{"_index":1463,"title":{},"body":{"classes/GenericValidator.html":{}}}],["style",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/LoaderComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientListComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{}}}],["styleurl",{"_index":1766,"title":{},"body":{"components/LoaderComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientListComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{}}}],["sub",{"_index":1622,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["submit",{"_index":630,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreateNursingHome.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"components/ForgotPasswordComponent.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientFormComponent.html":{},"injectables/PatientsEffects.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserFormComponent.html":{},"injectables/UsersEffects.html":{}}}],["submitbutton",{"_index":1404,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LockscreenComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["submitemail",{"_index":1406,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["subscrib",{"_index":787,"title":{},"body":{"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"components/HeaderSideComponent.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{},"components/PatientEditFormComponent.html":{},"components/PatientListComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{}}}],["subscribe((id",{"_index":2218,"title":{},"body":{"components/PatientListComponent.html":{},"components/UserListComponent.html":{}}}],["subscribe((routechang",{"_index":556,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DashboardLayoutComponent.html":{}}}],["subscribe(pend",{"_index":2481,"title":{},"body":{"components/SigninComponent.html":{}}}],["subscribe(r",{"_index":2095,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["subscript",{"_index":151,"title":{},"body":{"directives/AppDropdownDirective.html":{},"components/BreadcrumbComponent.html":{},"components/DashboardLayoutComponent.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["succe",{"_index":2263,"title":{},"body":{"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["success",{"_index":399,"title":{},"body":{"injectables/AuthEffects.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"miscellaneous/enumerations.html":{}}}],["such",{"_index":2106,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["suppli",{"_index":1641,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["support",{"_index":3020,"title":{},"body":{"modules.html":{}}}],["suppressscrollx",{"_index":992,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["sure",{"_index":163,"title":{},"body":{"directives/AppDropdownDirective.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"directives/EgretSideNavToggleDirective.html":{},"directives/FontSizeDirective.html":{},"directives/ScrollToDirective.html":{},"index.html":{}}}],["svg",{"_index":3021,"title":{},"body":{"modules.html":{}}}],["swimlane/ngx",{"_index":1044,"title":{},"body":{"modules/DashboardModule.html":{},"dependencies.html":{}}}],["switch",{"_index":2540,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{}}}],["t.isact",{"_index":1727,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["t.name",{"_index":1728,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["tab",{"_index":2071,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["tabl",{"_index":2766,"title":{},"body":{"components/UserListComponent.html":{}}}],["take",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"index.html":{}}}],["take(1",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{}}}],["takewhil",{"_index":2046,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/PatientListComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{}}}],["tap",{"_index":391,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["tasks/deploy",{"_index":2971,"title":{},"body":{"index.html":{}}}],["templat",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["templateurl",{"_index":530,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["term",{"_index":2511,"title":{},"body":{"components/SignupComponent.html":{}}}],["test",{"_index":2929,"title":{},"body":{"index.html":{}}}],["text",{"_index":1617,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["that'",{"_index":2955,"title":{},"body":{"index.html":{}}}],["theme",{"_index":1509,"title":{},"body":{"components/HeaderSideComponent.html":{},"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["theme.nam",{"_index":1723,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["themeservic",{"_index":900,"title":{"injectables/ThemeService.html":{}},"body":{"components/DashboardLayoutComponent.html":{},"components/HeaderSideComponent.html":{},"interfaces/ITheme.html":{},"components/SidebarSideComponent.html":{},"injectables/ThemeService.html":{}}}],["themestr",{"_index":1730,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["therefor",{"_index":2199,"title":{},"body":{"components/PatientListComponent.html":{},"components/UserListComponent.html":{}}}],["this._open",{"_index":1282,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["this._rout",{"_index":174,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["this.act",{"_index":369,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["this.actions$.pip",{"_index":2269,"title":{},"body":{"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["this.activatedthem",{"_index":1711,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["this.activatedtheme.nam",{"_index":1721,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["this.authapiservic",{"_index":376,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.authstore.dispatch(new",{"_index":1538,"title":{},"body":{"components/HeaderSideComponent.html":{},"components/SidebarSideComponent.html":{}}}],["this.bodyp",{"_index":985,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.bodyps.destroy",{"_index":986,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.builditemform(this.data.payload",{"_index":1945,"title":{},"body":{"components/NursingHomeFormComponent.html":{}}}],["this.changetheme(r",{"_index":1718,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["this.closeotherlinks(link",{"_index":187,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["this.componentact",{"_index":2063,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/PatientListComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{}}}],["this.confirmservice.confirm({titl",{"_index":422,"title":{},"body":{"injectables/AuthEffects.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["this.currentrout",{"_index":1599,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["this.currentroute.indexof(rout",{"_index":1603,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["this.currentyposit",{"_index":2367,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["this.dialog",{"_index":1789,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.dialog.closeal",{"_index":1975,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["this.dialog.getdialogbyid(\"patientcreationform\").clos",{"_index":2261,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["this.dialog.getdialogbyid(\"usercreationform\").clos",{"_index":2808,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["this.dialog.getdialogbyid('patientcreationform').clos",{"_index":2267,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["this.dialog.getdialogbyid('usercreationform').clos",{"_index":2811,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["this.dialog.open(confirmcompon",{"_index":793,"title":{},"body":{"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{}}}],["this.dialog.open(nursinghomeformcompon",{"_index":1991,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["this.dialog.open(patientformcompon",{"_index":2243,"title":{},"body":{"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{}}}],["this.dialog.open(userformcompon",{"_index":2793,"title":{},"body":{"components/UsersComponent.html":{},"injectables/UsersEffects.html":{}}}],["this.dialogref",{"_index":1788,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.dialogref.afterclos",{"_index":1797,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.dialogref.clos",{"_index":1798,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.dialogref.close(this.itemform.valu",{"_index":1952,"title":{},"body":{"components/NursingHomeFormComponent.html":{}}}],["this.dialogref.close(this.patientform.valu",{"_index":2171,"title":{},"body":{"components/PatientFormComponent.html":{}}}],["this.dialogref.close(this.userform.valu",{"_index":2745,"title":{},"body":{"components/UserFormComponent.html":{}}}],["this.dialogref.componentinstance.titl",{"_index":1795,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.dialogref.updatesize('200px",{"_index":1794,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.displaymessag",{"_index":2074,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["this.displaypatient(this.pati",{"_index":2067,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["this.displayuser(this.us",{"_index":2707,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["this.egretthem",{"_index":1526,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["this.egretthemes.foreach((t",{"_index":1726,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["this.egretthemes[0",{"_index":1712,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["this.egretthemes[1",{"_index":1713,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["this.egretthemes[2",{"_index":1714,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["this.egretthemes[3",{"_index":1715,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["this.el.nativeelement.fonts",{"_index":1382,"title":{},"body":{"directives/FontSizeDirective.html":{}}}],["this.elmid",{"_index":2365,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["this.elmyposition(this.elmid",{"_index":2369,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["this.errormessag",{"_index":2068,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["this.fb.group",{"_index":1948,"title":{},"body":{"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["this.flipactiveflag(them",{"_index":1724,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["this.flipactiveflag(this.activatedthem",{"_index":1733,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["this.fonts",{"_index":1383,"title":{},"body":{"directives/FontSizeDirective.html":{}}}],["this.fullwidthroutes.foreach(rout",{"_index":1602,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["this.genericvalid",{"_index":2058,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["this.genericvalidator.processmessages(this.patienteditform",{"_index":2075,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["this.genericvalidator.processmessages(this.usereditform",{"_index":2709,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["this.getismobil",{"_index":968,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.geturl",{"_index":181,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["this.hasicontypemenuitem",{"_index":2422,"title":{},"body":{"components/SidebarSideComponent.html":{}}}],["this.headerfixedbodyp",{"_index":987,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.headerfixedbodyps.destroy",{"_index":988,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.http",{"_index":347,"title":{},"body":{"injectables/AuthApiService.html":{},"injectables/NursingHomesService.html":{},"injectables/PatientsService.html":{},"injectables/UsersService.html":{}}}],["this.http.delete(`${environment.apihost}/api/patients/${id",{"_index":2312,"title":{},"body":{"injectables/PatientsService.html":{}}}],["this.http.delete(`${environment.apihost}/api/users/${id",{"_index":2867,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.http.get(`${environment.apihost}/api/auth/logout",{"_index":349,"title":{},"body":{"injectables/AuthApiService.html":{}}}],["this.http.get(`${environment.apihost}/api/nursinghom",{"_index":2008,"title":{},"body":{"injectables/NursingHomesService.html":{}}}],["this.http.get(`${environment.apihost}/api/pati",{"_index":2310,"title":{},"body":{"injectables/PatientsService.html":{}}}],["this.http.get(`${environment.apihost}/api/usermanag",{"_index":2864,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.http.get(`${environment.apihost}/api/users/${id}/pati",{"_index":2865,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.http.post(`${environment.apihost}/api/appus",{"_index":2866,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.http.post(`${environment.apihost}/api/pati",{"_index":2311,"title":{},"body":{"injectables/PatientsService.html":{}}}],["this.http.put(`${environment.apihost}/api/patients/${patient.id",{"_index":2313,"title":{},"body":{"injectables/PatientsService.html":{}}}],["this.http.put(`${environment.apihost}/api/users/${user.id",{"_index":2868,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.icontypemenutitl",{"_index":2417,"title":{},"body":{"components/SidebarSideComponent.html":{}}}],["this.id",{"_index":2219,"title":{},"body":{"components/PatientListComponent.html":{},"components/UserListComponent.html":{}}}],["this.initbodyps(chang",{"_index":981,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.initsidenav",{"_index":1323,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["this.ismobil",{"_index":1330,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["this.ismoduleload",{"_index":974,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.issm",{"_index":1598,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["this.itemform",{"_index":1947,"title":{},"body":{"components/NursingHomeFormComponent.html":{}}}],["this.layout",{"_index":979,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.layout.adjustlayout(ev",{"_index":977,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.layout.adjustlayout({rout",{"_index":951,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.layout.layoutconf",{"_index":970,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.layout.publishlayoutchang",{"_index":1536,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["this.layoutconf",{"_index":969,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["this.layoutconf.sidebarstyl",{"_index":1601,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["this.layoutconfsub",{"_index":978,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.layoutconfsub.unsubscrib",{"_index":1001,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.layoutconfsubject.asobserv",{"_index":1568,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["this.layoutconfsubject.next(this.layoutconf",{"_index":1584,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["this.layoutintransit",{"_index":963,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.media.isactive('sm",{"_index":1332,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["this.media.isactive('x",{"_index":1331,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["this.media.subscribe((chang",{"_index":1334,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["this.menuitem",{"_index":2421,"title":{},"body":{"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["this.menuitems.asobserv",{"_index":1638,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["this.menuitems.filter(item",{"_index":2423,"title":{},"body":{"components/SidebarSideComponent.html":{}}}],["this.menuitems.next(this.iconmenu",{"_index":1644,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["this.menuitemssub",{"_index":2419,"title":{},"body":{"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["this.menuitemssub.unsubscrib",{"_index":2433,"title":{},"body":{"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["this.moduleloadersub",{"_index":972,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.moduleloadersub.unsubscrib",{"_index":1000,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.nav",{"_index":1286,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["this.nav.addlink(thi",{"_index":1287,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["this.nav.closeotherlinks(thi",{"_index":1284,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["this.nav.removegroup(thi",{"_index":1288,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["this.navlink",{"_index":1257,"title":{},"body":{"directives/DropdownAnchorDirective.html":{}}}],["this.navlink.toggl",{"_index":1260,"title":{},"body":{"directives/DropdownAnchorDirective.html":{}}}],["this.navlinks.foreach((link",{"_index":165,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["this.navlinks.indexof(link",{"_index":170,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["this.navlinks.push(link",{"_index":168,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["this.navlinks.splice(index",{"_index":172,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["this.navposit",{"_index":961,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.navservice.icontypemenutitl",{"_index":2418,"title":{},"body":{"components/SidebarSideComponent.html":{}}}],["this.navservice.menuitems$.subscribe(menuitem",{"_index":2420,"title":{},"body":{"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["this.notif",{"_index":1906,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notificpanel.clos",{"_index":1904,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notificpanel.toggl",{"_index":1534,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["this.nursinghomesservice.createnursinghome(nursinghomedata",{"_index":1963,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["this.nursinghomesservice.getnursinghom",{"_index":1979,"title":{},"body":{"injectables/NursingHomesEffects.html":{}}}],["this.open",{"_index":1289,"title":{},"body":{"directives/DropdownLinkDirective.html":{}}}],["this.pagetitl",{"_index":2077,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["this.parsetext(item",{"_index":564,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["this.passwordmatchvalid",{"_index":2156,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["this.pati",{"_index":2064,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/PatientListComponent.html":{}}}],["this.patient.firstnam",{"_index":2078,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["this.patient.id",{"_index":2097,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["this.patient.lastnam",{"_index":2079,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["this.patienteditform",{"_index":2080,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["this.patienteditform.dirti",{"_index":2094,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["this.patienteditform.get('firstname').valu",{"_index":2109,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["this.patienteditform.get('gender').valu",{"_index":2111,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["this.patienteditform.get('id').valu",{"_index":2108,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["this.patienteditform.get('lastname').valu",{"_index":2110,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["this.patienteditform.valid",{"_index":2102,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["this.patienteditform.valuechanges.subscrib",{"_index":2087,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["this.patientform",{"_index":2151,"title":{},"body":{"components/PatientFormComponent.html":{}}}],["this.patientform.dirti",{"_index":2172,"title":{},"body":{"components/PatientFormComponent.html":{}}}],["this.patientform.valid",{"_index":2167,"title":{},"body":{"components/PatientFormComponent.html":{}}}],["this.patientform.valu",{"_index":2168,"title":{},"body":{"components/PatientFormComponent.html":{}}}],["this.patientselected.emit(selected[0",{"_index":2226,"title":{},"body":{"components/PatientListComponent.html":{}}}],["this.patientsservice.createpatient(patientdata",{"_index":2254,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["this.patientsservice.getpati",{"_index":2282,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["this.patientsservice.updatepatient(pati",{"_index":2273,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["this.patientus",{"_index":2065,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["this.processmessages(c",{"_index":1480,"title":{},"body":{"classes/GenericValidator.html":{}}}],["this.progressbar.mod",{"_index":1418,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LockscreenComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this.publishlayoutchang",{"_index":1604,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["this.routepart",{"_index":557,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["this.routeparts.reverse().map((item",{"_index":562,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["this.routeparts[i",{"_index":573,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["this.routepartsservice.generaterouteparts(this.activeroute.snapshot",{"_index":558,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["this.router.ev",{"_index":554,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["this.router.events.pipe(filter(ev",{"_index":175,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["this.router.events.subscribe((routechang",{"_index":1902,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.router.events.subscribe(ev",{"_index":973,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.router.navig",{"_index":397,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.router.navigate(['/auth/signin",{"_index":392,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.router.navigate(['/dashboard",{"_index":414,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["this.router.navigate(['/dashboard/pati",{"_index":2278,"title":{},"body":{"injectables/PatientsEffects.html":{}}}],["this.router.navigate(['/dashboard/us",{"_index":2820,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["this.router.url",{"_index":173,"title":{},"body":{"directives/AppDropdownDirective.html":{}}}],["this.routereventsub",{"_index":553,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DashboardLayoutComponent.html":{}}}],["this.routereventsub.unsubscrib",{"_index":575,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DashboardLayoutComponent.html":{}}}],["this.screensizewatch",{"_index":1324,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["this.screensizewatcher.unsubscrib",{"_index":1325,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["this.scrolltotop('.main",{"_index":996,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.scrolltotop('.rightsid",{"_index":993,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.selectedpati",{"_index":2221,"title":{},"body":{"components/PatientListComponent.html":{}}}],["this.selectedus",{"_index":2780,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.setapplayout",{"_index":1572,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["this.setthemefromqueri",{"_index":1717,"title":{},"body":{"interfaces/ITheme.html":{},"injectables/ThemeService.html":{}}}],["this.sidebarp",{"_index":2428,"title":{},"body":{"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["this.sidebarps.destroy",{"_index":2432,"title":{},"body":{"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{}}}],["this.sidebarstyl",{"_index":959,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"components/HeaderSideComponent.html":{}}}],["this.signinform",{"_index":2479,"title":{},"body":{"components/SigninComponent.html":{}}}],["this.signinform.dis",{"_index":2482,"title":{},"body":{"components/SigninComponent.html":{}}}],["this.signinform.en",{"_index":2484,"title":{},"body":{"components/SigninComponent.html":{}}}],["this.signinform.valu",{"_index":2486,"title":{},"body":{"components/SigninComponent.html":{}}}],["this.signupform",{"_index":2505,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.snackbar.open(this.translate.instant(messag",{"_index":406,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["this.store.dispatch(new",{"_index":412,"title":{},"body":{"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/DashboardLayoutComponent.html":{},"components/HeaderSideComponent.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"injectables/PatientsEffects.html":{},"components/SigninComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"injectables/UsersEffects.html":{}}}],["this.store.pip",{"_index":450,"title":{},"body":{"guards/AuthGuard.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SigninComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["this.store.pipe(select(fromauth.getuser)).subscrib",{"_index":2426,"title":{},"body":{"components/SidebarSideComponent.html":{}}}],["this.store.pipe(select(fromdashboard.getallpati",{"_index":2216,"title":{},"body":{"components/PatientListComponent.html":{}}}],["this.store.pipe(select(fromdashboard.getallus",{"_index":2777,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.store.pipe(select(fromdashboard.getismobile)).subscrib",{"_index":966,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.store.pipe(select(fromdashboard.getlayoutintransition)).subscrib",{"_index":962,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.store.pipe(select(fromdashboard.getnavposition)).subscrib",{"_index":960,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.store.pipe(select(fromdashboard.getpatienteditionerror",{"_index":2069,"title":{},"body":{"components/PatientEditFormComponent.html":{}}}],["this.store.pipe(select(fromdashboard.getpatientsid",{"_index":2217,"title":{},"body":{"components/PatientListComponent.html":{}}}],["this.store.pipe(select(fromdashboard.getsidenav)).subscrib",{"_index":957,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"components/HeaderSideComponent.html":{}}}],["this.store.pipe(select(fromdashboard.gettopbarfixed)).subscrib",{"_index":964,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.store.pipe(select(fromdashboard.getusereditionerror",{"_index":2708,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["this.store.pipe(select(fromdashboard.getusersid",{"_index":2778,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.submitbutton.dis",{"_index":1417,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LockscreenComponent.html":{},"components/SignupComponent.html":{}}}],["this.themeservice.changetheme(this.render",{"_index":1533,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["this.themeservice.egretthem",{"_index":1527,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["this.topbarfix",{"_index":965,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["this.translate.instant(\"auth.confirmlogoutmessag",{"_index":424,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.translate.instant(\"closeunsavedform.messag",{"_index":2093,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["this.translate.instant(\"closeunsavedform.titl",{"_index":2092,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["this.translate.instant(\"logout",{"_index":423,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.translate.instant('ar",{"_index":792,"title":{},"body":{"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{}}}],["this.translate.instant('confirm",{"_index":791,"title":{},"body":{"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{}}}],["this.translate.instant('lastloginon",{"_index":2763,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.translate.instant('nam",{"_index":2760,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.translate.instant('nursinghom",{"_index":2761,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.translate.instant('patientformtitl",{"_index":2242,"title":{},"body":{"components/PatientsComponent.html":{}}}],["this.translate.instant('patientprofil",{"_index":2764,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.translate.instant('registeredon",{"_index":2762,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.translate.instant('retri",{"_index":407,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["this.translate.instant('userformtitl",{"_index":2792,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.translate.instant(titl",{"_index":1796,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.translate.setdefaultlang('d",{"_index":2060,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/PatientListComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{}}}],["this.translate.use(this.currentlang",{"_index":1528,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["this.updatesidenav",{"_index":1333,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["this.us",{"_index":2427,"title":{},"body":{"components/SidebarSideComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{}}}],["this.user.firstnam",{"_index":2710,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["this.user.id",{"_index":2721,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["this.user.lastnam",{"_index":2711,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["this.usereditform",{"_index":2712,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["this.usereditform.dirti",{"_index":2720,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["this.usereditform.get('email').valu",{"_index":2728,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["this.usereditform.get('firstname').valu",{"_index":2726,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["this.usereditform.get('id').valu",{"_index":2725,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["this.usereditform.get('lastname').valu",{"_index":2727,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["this.usereditform.get('username').valu",{"_index":2729,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["this.usereditform.valid",{"_index":2724,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["this.usereditform.valuechanges.subscrib",{"_index":2718,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["this.userform",{"_index":2740,"title":{},"body":{"components/UserFormComponent.html":{}}}],["this.userform.dirti",{"_index":2746,"title":{},"body":{"components/UserFormComponent.html":{}}}],["this.userform.valid",{"_index":2741,"title":{},"body":{"components/UserFormComponent.html":{}}}],["this.userform.valu",{"_index":2742,"title":{},"body":{"components/UserFormComponent.html":{}}}],["this.userselected.emit(selected[0",{"_index":2783,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.usersservice.createuser(userdata",{"_index":2802,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["this.usersservice.getus",{"_index":2838,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["this.usersservice.getuserpatients(id",{"_index":2828,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["this.usersservice.updateuser(us",{"_index":2815,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["this.validationmessag",{"_index":2053,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["this.validationmessages[controlkey",{"_index":1482,"title":{},"body":{"classes/GenericValidator.html":{}}}],["this.validationmessages[controlkey][messagekey",{"_index":1488,"title":{},"body":{"classes/GenericValidator.html":{}}}],["through",{"_index":2072,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["throwerror",{"_index":2007,"title":{},"body":{"injectables/NursingHomesService.html":{}}}],["time",{"_index":1890,"title":{},"body":{"components/NotificationsComponent.html":{},"index.html":{}}}],["timer",{"_index":2377,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["titl",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"modules/DashboardRoutingModule.html":{},"classes/FixTopbar.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IRoutePart.html":{},"injectables/LayoutService.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"injectables/NavigationService.html":{},"injectables/NursingHomesEffects.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/RoutePartsService.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-5.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"miscellaneous/enumerations.html":{}}}],["to.direct",{"_index":1066,"title":{},"body":{"modules/DashboardModule.html":{}}}],["to.directive.t",{"_index":2325,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["to.directive.ts:12",{"_index":2337,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["to.directive.ts:15",{"_index":2333,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["to.directive.ts:31",{"_index":2335,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["to.directive.ts:43",{"_index":2332,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["to.directive.ts:8",{"_index":2331,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["to.directive.ts:9",{"_index":2339,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["todo",{"_index":1529,"title":{},"body":{"components/HeaderSideComponent.html":{},"components/SidebarSideComponent.html":{}}}],["toggl",{"_index":1265,"title":{},"body":{"directives/DropdownLinkDirective.html":{},"directives/EgretSideNavToggleDirective.html":{}}}],["toggle.direct",{"_index":1062,"title":{},"body":{"modules/DashboardModule.html":{}}}],["toggle.directive.t",{"_index":1305,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["toggle.directive.ts:14",{"_index":1317,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["toggle.directive.ts:15",{"_index":1312,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["toggle.directive.ts:19",{"_index":1319,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["toggle.directive.ts:23",{"_index":1315,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["toggle.directive.ts:27",{"_index":1314,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["toggle.directive.ts:33",{"_index":1316,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["toggle.directive.ts:41",{"_index":1313,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["togglecollaps",{"_index":1497,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["togglenotif",{"_index":1498,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["togglesidenav",{"_index":1499,"title":{},"body":{"components/HeaderSideComponent.html":{}}}],["token",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["tokengett",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["tooltip",{"_index":1620,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["top",{"_index":724,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"injectables/LayoutService.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"injectables/NavigationService.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"components/SidebarTopComponent.html":{},"interfaces/State-5.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{}}}],["top'},{'nam",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["top.compon",{"_index":1023,"title":{},"body":{"modules/DashboardModule.html":{}}}],["top.component.html",{"_index":2437,"title":{},"body":{"components/SidebarTopComponent.html":{}}}],["top.component.t",{"_index":2436,"title":{},"body":{"components/SidebarTopComponent.html":{}}}],["top.component.ts:11",{"_index":2444,"title":{},"body":{"components/SidebarTopComponent.html":{}}}],["top.component.ts:12",{"_index":2443,"title":{},"body":{"components/SidebarTopComponent.html":{}}}],["top.component.ts:13",{"_index":2439,"title":{},"body":{"components/SidebarTopComponent.html":{}}}],["top.component.ts:20",{"_index":2442,"title":{},"body":{"components/SidebarTopComponent.html":{}}}],["top.component.ts:26",{"_index":2440,"title":{},"body":{"components/SidebarTopComponent.html":{}}}],["top.component.ts:34",{"_index":2441,"title":{},"body":{"components/SidebarTopComponent.html":{}}}],["top/sidebar",{"_index":1022,"title":{},"body":{"modules/DashboardModule.html":{},"components/SidebarTopComponent.html":{}}}],["topbar",{"_index":739,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{}}}],["topbarfix",{"_index":901,"title":{},"body":{"components/DashboardLayoutComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"interfaces/State-5.html":{}}}],["topromis",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["tranlat",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["transit",{"_index":730,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{}}}],["transitionclass",{"_index":1537,"title":{},"body":{"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["transitioninglayout",{"_index":729,"title":{"classes/TransitioningLayout.html":{}},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["translat",{"_index":362,"title":{},"body":{"injectables/AuthEffects.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"components/DashboardLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"injectables/LoaderService.html":{},"components/NotFoundComponent.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"components/SidebarSideComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{}}}],["translate.getbrowserlang",{"_index":955,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["translate.setdefaultlang('d",{"_index":2149,"title":{},"body":{"components/PatientFormComponent.html":{},"components/SigninComponent.html":{},"components/UserFormComponent.html":{}}}],["translate.use(browserlang.match(/en|d",{"_index":956,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["translate/cor",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"modules/AuthModule.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"modules/CoreModule.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/ErrorsModule.html":{},"components/HeaderSideComponent.html":{},"injectables/LoaderService.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"components/SigninComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"dependencies.html":{}}}],["translate/http",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translatehttpload",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["translatehttploader(http",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["translateload",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodul",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/ErrorsModule.html":{}}}],["translatemodule.forroot",{"_index":310,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservic",{"_index":363,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"components/DashboardLayoutComponent.html":{},"components/HeaderSideComponent.html":{},"injectables/LoaderService.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"components/SigninComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{}}}],["tree",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["tri",{"_index":1589,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/ITheme.html":{},"injectables/LayoutService.html":{},"injectables/ThemeService.html":{},"index.html":{}}}],["trigger",{"_index":387,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["true",{"_index":186,"title":{},"body":{"directives/AppDropdownDirective.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"components/DashboardLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/ITheme.html":{},"injectables/LayoutService.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"injectables/NavigationService.html":{},"classes/NumberValidators.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SignupComponent.html":{},"interfaces/State.html":{},"interfaces/State-12.html":{},"interfaces/State-3.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-9.html":{},"injectables/ThemeService.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{}}}],["type",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"injectables/AuthApiService.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"interfaces/AuthState.html":{},"components/BreadcrumbComponent.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"directives/DropdownAnchorDirective.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"directives/EgretSideNavToggleDirective.html":{},"classes/FixTopbar.html":{},"directives/FontSizeDirective.html":{},"classes/ForgotPassword.html":{},"components/ForgotPasswordComponent.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/GenericValidator.html":{},"components/HeaderSideComponent.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/ICredentials.html":{},"interfaces/IDevice.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"interfaces/IMenuItem.html":{},"interfaces/IPatient.html":{},"interfaces/IRoutePart.html":{},"interfaces/ITheme.html":{},"interfaces/IUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"injectables/NavigationService.html":{},"components/NotificationsComponent.html":{},"classes/NumberValidators.html":{},"interfaces/NursingHome.html":{},"components/NursingHomeFormComponent.html":{},"injectables/NursingHomesEffects.html":{},"injectables/NursingHomesService.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"injectables/PatientsService.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"components/SignupComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-9.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["typealias",{"_index":3031,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":301,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbComponent.html":{}}}],["ui",{"_index":784,"title":{},"body":{"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{}}}],["undefin",{"_index":303,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"injectables/UsersEffects.html":{}}}],["under",{"_index":2961,"title":{},"body":{"index.html":{}}}],["union",{"_index":634,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreateNursingHome.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"miscellaneous/typealiases.html":{}}}],["uniqu",{"_index":2980,"title":{},"body":{"index.html":{}}}],["unlock",{"_index":1804,"title":{},"body":{"components/LockscreenComponent.html":{}}}],["unsav",{"_index":2131,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["unsubscrib",{"_index":1530,"title":{},"body":{"components/HeaderSideComponent.html":{},"components/PatientListComponent.html":{},"components/SidebarSideComponent.html":{},"components/UserListComponent.html":{}}}],["up",{"_index":604,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreateNursingHome.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"injectables/NursingHomesEffects.html":{},"injectables/PatientsEffects.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SignupComponent.html":{},"injectables/UsersEffects.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["updat",{"_index":595,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreateNursingHome.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"injectables/PatientsService.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["updatepati",{"_index":2297,"title":{},"body":{"injectables/PatientsService.html":{}}}],["updatepatient(pati",{"_index":2306,"title":{},"body":{"injectables/PatientsService.html":{}}}],["updatesidenav",{"_index":1309,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["updateus",{"_index":2849,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuser(us",{"_index":2861,"title":{},"body":{"injectables/UsersService.html":{}}}],["upload",{"_index":3008,"title":{},"body":{"index.html":{}}}],["url",{"_index":560,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IPatient.html":{},"interfaces/IRoutePart.html":{},"injectables/RoutePartsService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["urlseg",{"_index":1677,"title":{},"body":{"interfaces/IRoutePart.html":{},"injectables/RoutePartsService.html":{}}}],["urlsegment.path",{"_index":568,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["us",{"_index":732,"title":{},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"components/ConfirmComponent.html":{},"classes/FixTopbar.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"injectables/NavigationService.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientListComponent.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"components/SignupComponent.html":{},"interfaces/State.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"components/UserEditFormComponent.html":{},"components/UserListComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["usebreadcrumb",{"_index":731,"title":{"classes/UseBreadcrumb.html":{}},"body":{"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"classes/FixTopbar.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"classes/OpenSideNav.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"interfaces/State-5.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["usefactori",{"_index":311,"title":{},"body":{"modules/AppModule.html":{}}}],["usehash",{"_index":328,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["user",{"_index":96,"title":{"interfaces/User.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthApiService.html":{},"guards/AuthGuard.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"components/ConfirmComponent.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardRoutingModule.html":{},"interfaces/DashboardState.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"interfaces/IPatient.html":{},"interfaces/IUser.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["user.email,[validators.email",{"_index":2713,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["user.firstnam",{"_index":2434,"title":{},"body":{"components/SidebarSideComponent.html":{},"components/UserEditFormComponent.html":{}}}],["user.id",{"_index":2599,"title":{},"body":{"interfaces/State-13.html":{},"interfaces/State-8.html":{},"components/UserEditFormComponent.html":{},"injectables/UsersEffects.html":{}}}],["user.last_login",{"_index":2717,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["user.lastnam",{"_index":2435,"title":{},"body":{"components/SidebarSideComponent.html":{},"components/UserEditFormComponent.html":{}}}],["user.model",{"_index":1669,"title":{},"body":{"interfaces/IPatient.html":{}}}],["user.nursing_hom",{"_index":2715,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["user.registered_on",{"_index":2716,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["user.usernam",{"_index":2714,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["user/api",{"_index":851,"title":{},"body":{"classes/CreatePatientFailure.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["user_patient_permiss",{"_index":2689,"title":{},"body":{"interfaces/User.html":{}}}],["usercreationform",{"_index":2794,"title":{},"body":{"components/UsersComponent.html":{}}}],["usereditform",{"_index":2692,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["usereditformcompon",{"_index":95,"title":{"components/UserEditFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["useremail",{"_index":1405,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["userform",{"_index":2737,"title":{},"body":{"components/UserFormComponent.html":{}}}],["userformcompon",{"_index":97,"title":{"components/UserFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{}}}],["userlistcompon",{"_index":98,"title":{"components/UserListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["usernam",{"_index":1646,"title":{},"body":{"interfaces/ICredentials.html":{},"interfaces/IUser.html":{},"components/SigninComponent.html":{},"interfaces/User.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["usernamerequir",{"_index":2732,"title":{},"body":{"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["userpag",{"_index":1087,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["userpati",{"_index":1088,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{},"components/UserEditFormComponent.html":{}}}],["users.component.html",{"_index":2786,"title":{},"body":{"components/UsersComponent.html":{}}}],["users.reduc",{"_index":1103,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-4.html":{}}}],["users.reducer.t",{"_index":2647,"title":{},"body":{"interfaces/State-8.html":{},"miscellaneous/functions.html":{}}}],["users_count",{"_index":1667,"title":{},"body":{"interfaces/IPatient.html":{}}}],["usersact",{"_index":2557,"title":{},"body":{"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"injectables/UsersEffects.html":{}}}],["usersactions.createuser({us",{"_index":2744,"title":{},"body":{"components/UserFormComponent.html":{}}}],["usersactions.deleteuser(this.user.id",{"_index":2722,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["usersactions.dismisseditus",{"_index":2719,"title":{},"body":{"components/UserEditFormComponent.html":{},"injectables/UsersEffects.html":{}}}],["usersactions.dismissuserformdialog",{"_index":2747,"title":{},"body":{"components/UserFormComponent.html":{}}}],["usersactions.edituser(p",{"_index":2730,"title":{},"body":{"components/UserEditFormComponent.html":{}}}],["usersactions.edituser(us",{"_index":2819,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["usersactions.initializeus",{"_index":2781,"title":{},"body":{"components/UserListComponent.html":{}}}],["usersactions.loadus",{"_index":2776,"title":{},"body":{"components/UserListComponent.html":{},"injectables/UsersEffects.html":{}}}],["usersactions.loaduserpatients(id",{"_index":2835,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["usersactions.loaduserpatients(user.id",{"_index":2784,"title":{},"body":{"components/UserListComponent.html":{}}}],["usersactions.selectuser(us",{"_index":2782,"title":{},"body":{"components/UserListComponent.html":{}}}],["usersactions.usersactionsunion",{"_index":2559,"title":{},"body":{"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{}}}],["usersactions.usersactiontypes.createus",{"_index":2575,"title":{},"body":{"interfaces/State-12.html":{}}}],["usersactions.usersactiontypes.dismisseditus",{"_index":2561,"title":{},"body":{"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{}}}],["usersactions.usersactiontypes.editus",{"_index":2573,"title":{},"body":{"interfaces/State-12.html":{}}}],["usersactions.usersactiontypes.loadus",{"_index":2572,"title":{},"body":{"interfaces/State-12.html":{}}}],["usersactions.usersactiontypes.loaduserpati",{"_index":2574,"title":{},"body":{"interfaces/State-12.html":{}}}],["usersactions.usersactiontypes.resetusersst",{"_index":2564,"title":{},"body":{"interfaces/State-11.html":{},"interfaces/State-13.html":{}}}],["usersactions.usersactiontypes.selectus",{"_index":2563,"title":{},"body":{"interfaces/State-11.html":{},"interfaces/State-13.html":{}}}],["usersactionsunion",{"_index":704,"title":{},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{},"miscellaneous/typealiases.html":{}}}],["usersactiontyp",{"_index":677,"title":{},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{},"miscellaneous/enumerations.html":{}}}],["usersactiontypes.clearselectedus",{"_index":674,"title":{},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{}}}],["usersactiontypes.createus",{"_index":694,"title":{},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{}}}],["usersactiontypes.createuserformdialog",{"_index":693,"title":{},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{}}}],["usersactiontypes.deleteus",{"_index":702,"title":{},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{}}}],["usersactiontypes.dismisseditus",{"_index":700,"title":{},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{}}}],["usersactiontypes.dismissuserformdialog",{"_index":695,"title":{},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{}}}],["usersactiontypes.editus",{"_index":699,"title":{},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{}}}],["usersactiontypes.initializeus",{"_index":692,"title":{},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{}}}],["usersactiontypes.loadus",{"_index":696,"title":{},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{}}}],["usersactiontypes.loaduserpati",{"_index":703,"title":{},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{}}}],["usersactiontypes.resetusersst",{"_index":701,"title":{},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{}}}],["usersactiontypes.searchus",{"_index":697,"title":{},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{}}}],["usersactiontypes.searchusercomplet",{"_index":698,"title":{},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{}}}],["usersactiontypes.selectus",{"_index":691,"title":{},"body":{"classes/ClearSelectedUser.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeleteUser.html":{},"classes/DismissEditUser.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditUser.html":{},"classes/InitializeUser.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/ResetUsersState.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectUser.html":{}}}],["usersapiact",{"_index":2556,"title":{},"body":{"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"components/UserFormComponent.html":{},"injectables/UsersEffects.html":{}}}],["usersapiactions.createuserfailure({messag",{"_index":2805,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["usersapiactions.createusersuccess({us",{"_index":2804,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["usersapiactions.editusersuccess({us",{"_index":2817,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["usersapiactions.loaduserpatientsfailure({messag",{"_index":2821,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["usersapiactions.loaduserpatientssuccess({pati",{"_index":2834,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["usersapiactions.loadusersfailure({messag",{"_index":2841,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["usersapiactions.loaduserssuccess({us",{"_index":2840,"title":{},"body":{"injectables/UsersEffects.html":{}}}],["usersapiactions.usersapiactionsunion",{"_index":2558,"title":{},"body":{"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{}}}],["usersapiactions.usersapiactiontypes.createuserfailur",{"_index":2576,"title":{},"body":{"interfaces/State-12.html":{}}}],["usersapiactions.usersapiactiontypes.createusersuccess",{"_index":2578,"title":{},"body":{"interfaces/State-12.html":{},"interfaces/State-13.html":{}}}],["usersapiactions.usersapiactiontypes.edituserfailur",{"_index":2583,"title":{},"body":{"interfaces/State-12.html":{}}}],["usersapiactions.usersapiactiontypes.editusersuccess",{"_index":2581,"title":{},"body":{"interfaces/State-12.html":{},"interfaces/State-13.html":{}}}],["usersapiactions.usersapiactiontypes.loaduserpatientsfailur",{"_index":2580,"title":{},"body":{"interfaces/State-12.html":{}}}],["usersapiactions.usersapiactiontypes.loaduserpatientssuccess",{"_index":2560,"title":{},"body":{"interfaces/State-11.html":{},"interfaces/State-12.html":{}}}],["usersapiactions.usersapiactiontypes.loadusersfailur",{"_index":2582,"title":{},"body":{"interfaces/State-12.html":{}}}],["usersapiactions.usersapiactiontypes.loaduserssuccess",{"_index":2579,"title":{},"body":{"interfaces/State-12.html":{},"interfaces/State-13.html":{}}}],["usersapiactionsunion",{"_index":884,"title":{},"body":{"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["usersapiactiontyp",{"_index":869,"title":{},"body":{"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["usersapiactiontypes.createuserfailur",{"_index":868,"title":{},"body":{"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{}}}],["usersapiactiontypes.createusersuccess",{"_index":877,"title":{},"body":{"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{}}}],["usersapiactiontypes.edituserfailur",{"_index":881,"title":{},"body":{"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{}}}],["usersapiactiontypes.editusersuccess",{"_index":880,"title":{},"body":{"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{}}}],["usersapiactiontypes.loaduserpatientsfailur",{"_index":883,"title":{},"body":{"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{}}}],["usersapiactiontypes.loaduserpatientssuccess",{"_index":882,"title":{},"body":{"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{}}}],["usersapiactiontypes.loadusersfailur",{"_index":879,"title":{},"body":{"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{}}}],["usersapiactiontypes.loaduserssuccess",{"_index":878,"title":{},"body":{"classes/CreateUserFailure.html":{},"classes/CreateUserSuccess.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{}}}],["userscompon",{"_index":99,"title":{"components/UsersComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["userseffect",{"_index":1027,"title":{"injectables/UsersEffects.html":{}},"body":{"modules/DashboardModule.html":{},"injectables/UsersEffects.html":{}}}],["usersservic",{"_index":2797,"title":{"injectables/UsersService.html":{}},"body":{"injectables/UsersEffects.html":{},"injectables/UsersService.html":{}}}],["userst",{"_index":489,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-1.html":{}}}],["usevalu",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["valid",{"_index":1459,"title":{},"body":{"classes/GenericValidator.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["validationmessag",{"_index":1454,"title":{},"body":{"classes/GenericValidator.html":{},"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["validationrulename1",{"_index":1465,"title":{},"body":{"classes/GenericValidator.html":{}}}],["validationrulename2",{"_index":1466,"title":{},"body":{"classes/GenericValidator.html":{}}}],["validator.t",{"_index":1450,"title":{},"body":{"classes/GenericValidator.html":{},"classes/NumberValidators.html":{}}}],["validator.ts:26",{"_index":1457,"title":{},"body":{"classes/GenericValidator.html":{}}}],["validator.ts:5",{"_index":1453,"title":{},"body":{"classes/GenericValidator.html":{},"classes/NumberValidators.html":{}}}],["validatorfn",{"_index":1915,"title":{},"body":{"classes/NumberValidators.html":{}}}],["validators.email",{"_index":2152,"title":{},"body":{"components/PatientFormComponent.html":{},"components/SignupComponent.html":{},"components/UserFormComponent.html":{}}}],["validators.requir",{"_index":1950,"title":{},"body":{"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{}}}],["valu",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"directives/AppDropdownDirective.html":{},"injectables/AuthEffects.html":{},"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CloseSideNav.html":{},"classes/CompactSideNav.html":{},"injectables/ConfirmService.html":{},"classes/CreateNursingHome.html":{},"classes/CreateNursingHomeFailure.html":{},"classes/CreateNursingHomeSuccess.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFailure.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreatePatientSuccess.html":{},"classes/CreateUser.html":{},"classes/CreateUserFailure.html":{},"classes/CreateUserFormDialog.html":{},"classes/CreateUserSuccess.html":{},"components/DashboardLayoutComponent.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"directives/DropdownLinkDirective.html":{},"classes/EditNursingHome.html":{},"classes/EditNursingHomeFailure.html":{},"classes/EditNursingHomeSuccess.html":{},"classes/EditPatient.html":{},"classes/EditPatientFailure.html":{},"classes/EditPatientSuccess.html":{},"classes/EditUser.html":{},"classes/EditUserFailure.html":{},"classes/EditUserSuccess.html":{},"classes/FixTopbar.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordFailure.html":{},"classes/ForgotPasswordSuccess.html":{},"components/HeaderSideComponent.html":{},"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"injectables/LayoutService.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadNursingHomesFailure.html":{},"classes/LoadNursingHomesSuccess.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatientUsersFailure.html":{},"classes/LoadPatientUsersSuccess.html":{},"classes/LoadPatients.html":{},"classes/LoadPatientsFailure.html":{},"classes/LoadPatientsSuccess.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUserPatientsFailure.html":{},"classes/LoadUserPatientsSuccess.html":{},"classes/LoadUsers.html":{},"classes/LoadUsersFailure.html":{},"classes/LoadUsersSuccess.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"classes/Login.html":{},"classes/LoginFailure.html":{},"classes/LoginRedirect.html":{},"classes/LoginSuccess.html":{},"classes/Logout.html":{},"classes/LogoutConfirmation.html":{},"classes/LogoutConfirmationDismiss.html":{},"classes/LogoutFailure.html":{},"classes/LogoutSuccess.html":{},"classes/MakeBreadcrumbSimple.html":{},"classes/MakeBreadcrumbTitle.html":{},"injectables/NavigationService.html":{},"components/NotificationsComponent.html":{},"injectables/NursingHomesEffects.html":{},"classes/OpenSideNav.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{},"classes/SetDirectionLtr.html":{},"classes/SetDirectionRtr.html":{},"classes/SetNavigationPositionSide.html":{},"classes/SetNavigationPositionTop.html":{},"components/SidenavComponent.html":{},"classes/SignUpFailure.html":{},"classes/SignUpSuccess.html":{},"components/SigninComponent.html":{},"classes/Signup.html":{},"injectables/ThemeService.html":{},"classes/TransitioningLayout.html":{},"classes/UseBreadcrumb.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{},"miscellaneous/enumerations.html":{}}}],["var",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfirmComponent.html":{},"components/DashboardLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/ErrorLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"components/LoaderComponent.html":{},"components/LockscreenComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["veri",{"_index":1632,"title":{},"body":{"interfaces/IBadge.html":{},"interfaces/IChildItem.html":{},"interfaces/IMenuItem.html":{},"injectables/NavigationService.html":{}}}],["via",{"_index":3006,"title":{},"body":{"index.html":{}}}],["view",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthState.html":{},"interfaces/State-1.html":{}}}],["viewchild",{"_index":1416,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LockscreenComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["viewchild(matbutton",{"_index":1414,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LockscreenComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["viewchild(matprogressbar",{"_index":1411,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LockscreenComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["views.reduc",{"_index":494,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-1.html":{}}}],["void",{"_index":143,"title":{},"body":{"directives/AppDropdownDirective.html":{},"components/BreadcrumbComponent.html":{},"components/DashboardLayoutComponent.html":{},"directives/DropdownLinkDirective.html":{},"directives/EgretSideNavToggleDirective.html":{},"components/ErrorComponent.html":{},"directives/FontSizeDirective.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderSideComponent.html":{},"injectables/LayoutService.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LockscreenComponent.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/NursingHomeFormComponent.html":{},"components/PatientEditFormComponent.html":{},"components/PatientFormComponent.html":{},"components/PatientListComponent.html":{},"components/PatientsComponent.html":{},"injectables/RoutePartsService.html":{},"directives/ScrollToDirective.html":{},"components/SidebarSideComponent.html":{},"components/SidebarTopComponent.html":{},"components/SidenavComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"injectables/ThemeService.html":{},"components/UserEditFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/UsersComponent.html":{}}}],["wait",{"_index":1786,"title":{},"body":{"injectables/LoaderService.html":{}}}],["want",{"_index":2941,"title":{},"body":{"index.html":{}}}],["warn",{"_index":1342,"title":{},"body":{"components/ErrorComponent.html":{},"components/NotificationsComponent.html":{}}}],["watch",{"_index":2061,"title":{},"body":{"components/PatientEditFormComponent.html":{},"components/UserEditFormComponent.html":{}}}],["whether",{"_index":2155,"title":{},"body":{"components/PatientFormComponent.html":{},"components/UserFormComponent.html":{}}}],["whitelisteddomain",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["width",{"_index":794,"title":{},"body":{"interfaces/ConfirmData.html":{},"injectables/ConfirmService.html":{},"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{},"injectables/NursingHomesEffects.html":{},"components/PatientsComponent.html":{},"injectables/PatientsEffects.html":{},"components/UsersComponent.html":{},"injectables/UsersEffects.html":{}}}],["window",{"_index":625,"title":{},"body":{"classes/ClearSelectedNursingHome.html":{},"classes/ClearSelectedPatient.html":{},"classes/ClearSelectedUser.html":{},"classes/CreateNursingHome.html":{},"classes/CreatePatient.html":{},"classes/CreatePatientFormDialog.html":{},"classes/CreateUser.html":{},"classes/CreateUserFormDialog.html":{},"classes/DeletePatient.html":{},"classes/DeleteUser.html":{},"classes/DismissEditNursingHome.html":{},"classes/DismissEditPatient.html":{},"classes/DismissEditUser.html":{},"classes/DismissPatientFormDialog.html":{},"classes/DismissPoppedUpNursingHomeForm.html":{},"classes/DismissUserFormDialog.html":{},"classes/EditNursingHome.html":{},"classes/EditPatient.html":{},"classes/EditUser.html":{},"classes/InitializeNursingHome.html":{},"classes/InitializePatient.html":{},"classes/InitializeUser.html":{},"classes/LoadNursingHomes.html":{},"classes/LoadPatientUsers.html":{},"classes/LoadPatients.html":{},"classes/LoadUserPatients.html":{},"classes/LoadUsers.html":{},"classes/PopUpNursingHomeForm.html":{},"classes/ResetNursingHomesState.html":{},"classes/ResetPatientsState.html":{},"classes/ResetUsersState.html":{},"classes/SearchNursingHome.html":{},"classes/SearchNursingHomeComplete.html":{},"classes/SearchPatient.html":{},"classes/SearchPatientComplete.html":{},"classes/SearchUser.html":{},"classes/SearchUserComplete.html":{},"classes/SelectNursingHome.html":{},"classes/SelectPatient.html":{},"classes/SelectUser.html":{}}}],["window.matchmedia(`(max",{"_index":1609,"title":{},"body":{"interfaces/IAdjustScreenOptions.html":{},"interfaces/ILayoutChangeOptions.html":{},"interfaces/ILayoutConf.html":{},"injectables/LayoutService.html":{}}}],["window.navigator.languag",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["window:res",{"_index":906,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["window:resize(ev",{"_index":911,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["window['intl",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["window['intl'].getcanonicallocales(window.navigator.language)[0",{"_index":305,"title":{},"body":{"modules/AppModule.html":{}}}],["within",{"_index":1471,"title":{},"body":{"classes/GenericValidator.html":{}}}],["work",{"_index":2295,"title":{},"body":{"injectables/PatientsService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["wrap",{"_index":995,"title":{},"body":{"components/DashboardLayoutComponent.html":{}}}],["xs",{"_index":1336,"title":{},"body":{"directives/EgretSideNavToggleDirective.html":{}}}],["y",{"_index":2358,"title":{},"body":{"directives/ScrollToDirective.html":{}}}],["zone.j",{"_index":2895,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/ErrorsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/containers/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        App Component\nA view component for the app\nto allow individual styling for the view\nand all of it's child views\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-root\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'moio-management'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/containers/app/app.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * App Component\n * A view component for the app\n * to allow individual styling for the view\n * and all of it's child views\n */\n@Component({\n  selector: 'moio-root',\n  template: ``\n})\nexport class AppComponent {\n  title = 'moio-management';\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AppDropdownDirective.html":{"url":"directives/AppDropdownDirective.html","title":"directive - AppDropdownDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AppDropdownDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/directives/dropdown.directive.ts\n        \n\n            \n                Description\n            \n            \n                DropDown directive\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appDropdown]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _router\n                            \n                            \n                                    Protected\n                                navlinks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addLink\n                            \n                            \n                                    Public\n                                closeOtherLinks\n                            \n                            \n                                    Public\n                                getUrl\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                removeGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/directives/dropdown.directive.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addLink\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addLink(link: DropdownLinkDirective)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/directives/dropdown.directive.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        link\n                                                        \n                                                                    DropdownLinkDirective\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            closeOtherLinks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        closeOtherLinks(openLink: DropdownLinkDirective)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/directives/dropdown.directive.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        openLink\n                                                        \n                                                                    DropdownLinkDirective\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getUrl()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/directives/dropdown.directive.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/directives/dropdown.directive.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeGroup(link: DropdownLinkDirective)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/directives/dropdown.directive.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        link\n                                                        \n                                                                    DropdownLinkDirective\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _router:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/directives/dropdown.directive.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            navlinks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navlinks:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/directives/dropdown.directive.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, OnInit } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { DropdownLinkDirective } from './dropdown-link.directive';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n/**\n * DropDown directive\n * @deprecated (cvb) Not sure if we need it.\n */\n@Directive({\n  selector: '[appDropdown]'\n})\nexport class AppDropdownDirective implements OnInit {\n  protected navlinks: Array = [];\n\n  private _router: Subscription;\n\n  public closeOtherLinks(openLink: DropdownLinkDirective): void {\n    this.navlinks.forEach((link: DropdownLinkDirective) => {\n      if (link !== openLink) {\n        link.open = false;\n      }\n    });\n  }\n\n  public addLink(link: DropdownLinkDirective): void {\n    this.navlinks.push(link);\n  }\n\n  public removeGroup(link: DropdownLinkDirective): void {\n    const index = this.navlinks.indexOf(link);\n    if (index !== -1) {\n      this.navlinks.splice(index, 1);\n    }\n  }\n\n  public getUrl() {\n    return this.router.url;\n  }\n\n  public ngOnInit(): any {\n    this._router = this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe((event: NavigationEnd) => {\n      this.navlinks.forEach((link: DropdownLinkDirective) => {\n        if (link.group) {\n          const routeUrl = this.getUrl();\n          const currentUrl = routeUrl.split('/');\n          if (currentUrl.indexOf(link.group) > 0) {\n            link.open = true;\n            this.closeOtherLinks(link);\n          }\n        }\n      });\n    });\n  }\n\n  constructor(private router: Router) {\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDashboardModule\n\nDashboardModule\n\nAppModule -->\n\nDashboardModule->AppModule\n\n\n\n\n\nErrorsModule\n\nErrorsModule\n\nAppModule -->\n\nErrorsModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            DashboardModule\n                        \n                        \n                            ErrorsModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { LOCALE_ID, NgModule } from '@angular/core';\nimport { AppComponent } from './core/containers/app/app.component';\nimport { registerLocaleData } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { AppRoutingModule } from './app-routing.module';\nimport { rootRoutes } from './app.routes';\nimport de from '@angular/common/locales/de';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { environment } from '../environments/environment';\nimport { map, take } from 'rxjs/operators';\nimport { JWT_OPTIONS, JwtModule } from '@auth0/angular-jwt';\nimport { select, Store, StoreModule } from '@ngrx/store';\nimport { StoreRouterConnectingModule } from '@ngrx/router-store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { EffectsModule } from '@ngrx/effects';\nimport { reducers, metaReducers } from './reducers';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AuthModule } from './auth/auth.module';\nimport { ErrorsModule } from './errors/errors.module';\nimport { DashboardModule } from './dashboard/dashboard.module';\nimport * as fromAuth from './auth/reducers';\n/**\n * Angular material\n */\n\nimport {\n  MatInputModule, MatPaginatorModule, MatProgressSpinnerModule,\n  MatSortModule, MatTableModule\n} from '@angular/material';\n\n/**\n * register locales\n * all required locales have to be imported\n */\nregisterLocaleData(de);\n\n/**\n * factory function to instantiate and config\n * the tranlation service\n * @param http ng http client\n */\nexport function createTanslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n/**\n * jwt options factory to obtain token from the\n * store\n * @param store Store\n */\nexport function jwtOptionsFactory(store) {\n  return {\n    whitelistedDomains: environment.whitelistedDomains,\n    skipWhenExpired: true,\n    tokenGetter: () => {\n      return store.pipe(\n        select(fromAuth.getAccessToken),\n        map(token => token),\n        take(1)\n      ).toPromise();\n    }\n  };\n}\n\n/**\n * strip the preferred language from the browser\n */\nfunction getBrowserLanguage() {\n  let locale = 'de';\n\n  if (typeof window['Intl'] !== 'undefined' && window.navigator.language) {\n    locale = window['Intl'].getCanonicalLocales(window.navigator.language)[0];\n\n    if (locale.indexOf('-') !== -1) {\n      locale = locale.substr(0, 2);\n    }\n  }\n\n  return locale;\n}\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    RouterModule.forRoot(rootRoutes),\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: (createTanslateLoader),\n        deps: [HttpClient]\n      }\n    }),\n    JwtModule.forRoot({\n      jwtOptionsProvider: {\n        provide: JWT_OPTIONS,\n        useFactory: jwtOptionsFactory,\n        deps: [Store]\n      }\n    }),\n    AuthModule,\n    ErrorsModule,\n    DashboardModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSortModule,\n    MatTableModule,\n    StoreModule.forRoot(reducers, {metaReducers}),\n    StoreRouterConnectingModule.forRoot(),\n    StoreDevtoolsModule.instrument({\n      maxAge: 10,\n      logOnly: environment.production\n    }),\n    EffectsModule.forRoot([]),\n    AppRoutingModule\n  ],\n  exports: [RouterModule],\n  providers: [\n    {provide: LOCALE_ID, useValue: getBrowserLanguage()}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { rootRoutes } from './app.routes';\n\n@NgModule({\n  imports: [RouterModule.forRoot(rootRoutes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthApiService.html":{"url":"injectables/AuthApiService.html","title":"injectable - AuthApiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/services/auth-api.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/services/auth-api.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(credentials: ICredentials)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/services/auth-api.service.ts:16\n                            \n                        \n\n\n                \n                    \n                            log user in to API\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        credentials\n                                                        \n                                                                    ICredentials\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                user credentials\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/services/auth-api.service.ts:24\n                            \n                        \n\n\n                \n                    \n                            log user out of the API\n\n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ICredentials } from '../models/user.interface';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthApiService {\n\n  /**\n   * log user in to API\n   * @param credentials user credentials\n   */\n  login(credentials: ICredentials): Observable {\n    return this.http\n      .post(`${environment.apiHost}/api/auth/loginmanagement`, credentials);\n  }\n\n  /**\n   * log user out of the API\n   */\n  logout(): Observable {\n    return this.http.get(`${environment.apiHost}/api/auth/logout`);\n  }\n\n  constructor(private http: HttpClient) {\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthEffects.html":{"url":"injectables/AuthEffects.html","title":"injectable - AuthEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/effects/auth.effects.ts\n        \n\n            \n                Description\n            \n            \n                Authentication effects\nprovided in root\nbundles effects for the Authentication Module\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                login$\n                            \n                            \n                                loginRedirect$\n                            \n                            \n                                loginSuccess$\n                            \n                            \n                                logout$\n                            \n                            \n                                logoutConfirmation$\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, authApiService: AuthApiService, router: Router, store: Store, snackBar: MatSnackBar, translate: TranslateService, confirmService: ConfirmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/effects/auth.effects.ts:132\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                actions\n\n                                                        \n                                                \n                                                \n                                                        authApiService\n                                                  \n                                                        \n                                                                    AuthApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service encapsulating api calls\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the router\n\n                                                        \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ngrx store\n\n                                                        \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                material snackbar\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                translate service\n\n                                                        \n                                                \n                                                \n                                                        confirmService\n                                                  \n                                                        \n                                                                    ConfirmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ConfirmService\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        login$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(AuthPageActions.AuthPageActionTypes.Login),\n      delay(3000),\n      map(action => action.payload.credentials),\n      exhaustMap((credentials: ICredentials) => {\n        return this.authApiService\n          .login(credentials)\n          .pipe(\n            map(response => new AuthApiActions.LoginSuccess({response})),\n            catchError(response => {\n              const message = response.statusText.toLowerCase();\n              return of(new AuthApiActions.LoginFailure({message}));\n            })\n          );\n      })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/effects/auth.effects.ts:29\n                            \n                        \n\n                \n                    \n                        login effect\nlisten to action Login. Will trigger the login API\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginRedirect$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginRedirect$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(\n        AuthApiActions.AuthApiActionTypes.LoginRedirect,\n        AuthApiActions.AuthApiActionTypes.LogoutSuccess\n      ),\n      tap(() => {\n        this.router.navigate(['/auth/signin']);\n      })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect({dispatch: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/effects/auth.effects.ts:68\n                            \n                        \n\n                \n                    \n                        effect on login redirect\nredirect to the login page\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginSuccess$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginSuccess$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(AuthApiActions.AuthApiActionTypes.LoginSuccess),\n      tap(() => {\n        this.router.navigate(['/']);\n      })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect({dispatch: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/effects/auth.effects.ts:53\n                            \n                        \n\n                \n                    \n                        effect when API returns a successful login\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        logout$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(AuthActions.AuthActionTypes.Logout),\n      exhaustMap(() => {\n\n        return this.authApiService\n          .logout()\n          .pipe(\n            map(() => new AuthApiActions.LogoutSuccess()),\n            catchError(httpResponse => {\n              const message = httpResponse.statusText.toLowerCase();\n\n              const snackBarRef = this.snackBar.open(this.translate.instant(message), this.translate.instant('Retry'), {\n                duration: 10000\n              });\n\n              snackBarRef.afterDismissed().subscribe(snackBarDismiss => {\n\n                if (snackBarDismiss.dismissedByAction) {\n                  this.store.dispatch(new AuthActions.Logout());\n                } else {\n                  this.router.navigate(['/dashboard']);\n                }\n              });\n\n              return of(new AuthApiActions.LogoutFailure({message}));\n            })\n          );\n      })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/effects/auth.effects.ts:85\n                            \n                        \n\n                \n                    \n                        logout effect\nstarts the logout process from the API\nin case of LogoutSuccess\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logoutConfirmation$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        logoutConfirmation$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(AuthActions.AuthActionTypes.LogoutConfirmation),\n      exhaustMap(() => {\n        return this.confirmService.confirm({title: this.translate.instant(\"Logout\"), \n          message: this.translate.instant(\"Auth.ConfirmLogoutMessage\")});\n      }),\n      map(result =>\n        result\n          ? new AuthActions.Logout()\n          : new AuthActions.LogoutConfirmationDismiss()\n      )\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/effects/auth.effects.ts:120\n                            \n                        \n\n                \n                    \n                        show a dialog to logout\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        snackBar:     MatSnackBar\n\n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/effects/auth.effects.ts:150\n                            \n                        \n\n                \n                    \n                        material snackbar\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { catchError, delay, exhaustMap, map, tap } from 'rxjs/operators';\nimport { ICredentials } from '../models/user.interface';\nimport { AuthApiService } from '../services/auth-api.service';\nimport { AuthApiActions, AuthActions, AuthPageActions } from '../actions';\nimport { of } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ConfirmService } from '../../core/services/confirm.service';\n\n/**\n * Authentication effects\n * provided in root\n * bundles effects for the Authentication Module\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthEffects {\n\n  /**\n   * login effect\n   * listen to action Login. Will trigger the login API\n   */\n  @Effect()\n  login$ = this.actions$\n    .pipe(\n      ofType(AuthPageActions.AuthPageActionTypes.Login),\n      delay(3000),\n      map(action => action.payload.credentials),\n      exhaustMap((credentials: ICredentials) => {\n        return this.authApiService\n          .login(credentials)\n          .pipe(\n            map(response => new AuthApiActions.LoginSuccess({response})),\n            catchError(response => {\n              const message = response.statusText.toLowerCase();\n              return of(new AuthApiActions.LoginFailure({message}));\n            })\n          );\n      })\n    );\n\n  /**\n   * effect when API returns a successful login\n   */\n  @Effect({\n    dispatch: false\n  })\n  loginSuccess$ = this.actions$\n    .pipe(\n      ofType(AuthApiActions.AuthApiActionTypes.LoginSuccess),\n      tap(() => {\n        this.router.navigate(['/']);\n      })\n    );\n\n  /**\n   * effect on login redirect\n   * redirect to the login page\n   */\n  @Effect({\n    dispatch: false\n  })\n  loginRedirect$ = this.actions$\n    .pipe(\n      ofType(\n        AuthApiActions.AuthApiActionTypes.LoginRedirect,\n        AuthApiActions.AuthApiActionTypes.LogoutSuccess\n      ),\n      tap(() => {\n        this.router.navigate(['/auth/signin']);\n      })\n    );\n\n  /**\n   * logout effect\n   * starts the logout process from the API\n   * in case of LogoutSuccess\n   */\n  @Effect()\n  logout$ = this.actions$\n    .pipe(\n      ofType(AuthActions.AuthActionTypes.Logout),\n      exhaustMap(() => {\n\n        return this.authApiService\n          .logout()\n          .pipe(\n            map(() => new AuthApiActions.LogoutSuccess()),\n            catchError(httpResponse => {\n              const message = httpResponse.statusText.toLowerCase();\n\n              const snackBarRef = this.snackBar.open(this.translate.instant(message), this.translate.instant('Retry'), {\n                duration: 10000\n              });\n\n              snackBarRef.afterDismissed().subscribe(snackBarDismiss => {\n\n                if (snackBarDismiss.dismissedByAction) {\n                  this.store.dispatch(new AuthActions.Logout());\n                } else {\n                  this.router.navigate(['/dashboard']);\n                }\n              });\n\n              return of(new AuthApiActions.LogoutFailure({message}));\n            })\n          );\n      })\n    );\n\n  /**\n   * show a dialog to logout\n   */\n  @Effect()\n  logoutConfirmation$ = this.actions$\n    .pipe(\n      ofType(AuthActions.AuthActionTypes.LogoutConfirmation),\n      exhaustMap(() => {\n        return this.confirmService.confirm({title: this.translate.instant(\"Logout\"), \n          message: this.translate.instant(\"Auth.ConfirmLogoutMessage\")});\n      }),\n      map(result =>\n        result\n          ? new AuthActions.Logout()\n          : new AuthActions.LogoutConfirmationDismiss()\n      )\n    );\n\n  /**\n   * constructor\n   * @param actions$ actions\n   * @param authApiService service encapsulating api calls\n   * @param router the router\n   * @param store ngrx store\n   * @param snackBar material snackbar\n   * @param translate translate service\n   * @param confirmService ConfirmService\n\n   */\n  constructor(\n    private actions$: Actions,\n    private authApiService: AuthApiService,\n    private router: Router,\n    private store: Store,\n    public snackBar: MatSnackBar,\n    private translate: TranslateService,\n    private confirmService: ConfirmService) {\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/guards/auth.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Gaurd to check if a user\nis logged in\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/guards/auth.guard.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/guards/auth.guard.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport * as fromAuth from '../reducers';\nimport { AuthApiActions } from '../actions';\n\n/**\n * Gaurd to check if a user\n * is logged in\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private store: Store) {}\n\n  canActivate(): Observable {\n    return this.store.pipe(\n      select(fromAuth.isLoggedIn),\n      map(authed => {\n\n        if (!authed) {\n          this.store.dispatch(new AuthApiActions.LoginRedirect());\n          return false;\n        }\n\n        return true;\n      }),\n      take(1)\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthLayoutComponent.html":{"url":"components/AuthLayoutComponent.html","title":"component - AuthLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AuthLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/containers/auth-layout.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-auth-layout\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'moio-auth-layout',\n  template: ``\n})\nexport class AuthLayoutComponent {\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'AuthLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nAuthLayoutComponent\n\nAuthLayoutComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthLayoutComponent->AuthModule\n\n\n\n\n\nForgotPasswordComponent\n\nForgotPasswordComponent\n\nAuthModule -->\n\nForgotPasswordComponent->AuthModule\n\n\n\n\n\nLockscreenComponent\n\nLockscreenComponent\n\nAuthModule -->\n\nLockscreenComponent->AuthModule\n\n\n\n\n\nSigninComponent\n\nSigninComponent\n\nAuthModule -->\n\nSigninComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAuthModule -->\n\nMaterialModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AuthLayoutComponent\n                        \n                        \n                            ForgotPasswordComponent\n                        \n                        \n                            LockscreenComponent\n                        \n                        \n                            SigninComponent\n                        \n                        \n                            SignupComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { MaterialModule } from '../material';\nimport { SigninComponent } from './components/signin/signin.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { LockscreenComponent } from './components/lockscreen/lockscreen.component';\nimport { ForgotPasswordComponent } from './components/forgot-password/forgot-password.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AuthLayoutComponent } from './containers/auth-layout.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { EffectsModule } from '@ngrx/effects';\nimport { AuthEffects } from './effects/auth.effects';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromAuth from './reducers';\n\nexport const COMPONENTS = [\n  AuthLayoutComponent,\n  ForgotPasswordComponent,\n  LockscreenComponent,\n  SigninComponent,\n  SignupComponent\n];\n\n@NgModule({\n  declarations: [\n    COMPONENTS\n  ],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    HttpClientModule,\n    StoreModule.forFeature('auth', fromAuth.reducers),\n    EffectsModule.forFeature([AuthEffects]),\n  ],\n  entryComponents: []\n})\nexport class AuthModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthRoutingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthRoutingModule\n\n\n\ncluster_AuthRoutingModule_imports\n\n\n\n\nMaterialModule\n\nMaterialModule\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthRoutingModule -->\n\nMaterialModule->AuthRoutingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth-routing.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { authRoutes } from './auth.routes';\nimport { MaterialModule } from '../material';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(authRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AuthRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthState.html":{"url":"interfaces/AuthState.html","title":"interface - AuthState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/reducers/index.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        userState\n                                \n                                \n                                        views\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        userState\n                                    \n                                \n                                \n                                    \n                                        userState:     fromAuth.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromAuth.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        views\n                                    \n                                \n                                \n                                    \n                                        views:     fromViews.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromViews.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as fromAuth from './auth.reducer';\nimport * as fromViews from './views.reducer';\nimport * as fromRoot from '../../reducers';\nimport { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { AuthApiActions } from '../actions';\n\nconst jwtHelper = new JwtHelperService();\n\nexport interface AuthState {\n  userState: fromAuth.State;\n  views: fromViews.State;\n}\n\nexport interface State extends fromRoot.State {\n  auth: AuthState;\n}\n\nexport const reducers: ActionReducerMap = {\n  userState: fromAuth.reducer,\n  views: fromViews.reducer\n};\n\nexport const selectAuthState = createFeatureSelector('auth');\n\nexport const selectAuthUserState = createSelector(\n  selectAuthState,\n  (state: AuthState) => state.userState\n);\n\nexport const selectAuthViewsState = createSelector(\n  selectAuthState,\n  (state: AuthState) => state.views\n);\n\nexport const getUser = createSelector(selectAuthUserState, fromAuth.getUser);\nexport const getAccessToken = createSelector(selectAuthUserState, fromAuth.getAccessToken);\n\nexport const isLoggedIn = createSelector(selectAuthUserState, state => {\n  return state.user && state.access_token && !jwtHelper.isTokenExpired(state.access_token);\n});\n\nexport const getPending = createSelector(\n  selectAuthViewsState,\n  fromViews.getPending\n);\n\nexport const getError = createSelector(\n  selectAuthViewsState,\n  fromViews.getError\n);\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlankComponent.html":{"url":"components/BlankComponent.html","title":"component - BlankComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BlankComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/components/blank/blank.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-blank\n            \n\n\n\n            \n                template\n                \n  This is a blank component.\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'moio-blank',\n  template: `\n    \n      This is a blank component.\n    \n  `\n})\nexport class BlankComponent {\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  This is a blank component.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'BlankComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BreadcrumbComponent.html":{"url":"components/BreadcrumbComponent.html","title":"component - BreadcrumbComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BreadcrumbComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/containers/layout-components/breadcrumb/breadcrumb.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-breadcrumb\n            \n\n\n\n\n            \n                templateUrl\n                ./breadcrumb.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                layout\n                            \n                            \n                                routeParts\n                            \n                            \n                                routerEventSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                parseText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, routePartsService: RoutePartsService, activeRoute: ActivatedRoute, layout: LayoutService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/containers/layout-components/breadcrumb/breadcrumb.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        routePartsService\n                                                  \n                                                        \n                                                                    RoutePartsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activeRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        layout\n                                                  \n                                                        \n                                                                    LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/breadcrumb/breadcrumb.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/breadcrumb/breadcrumb.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parseText\n                            \n                            \n                        \n                    \n                \n                \n                    \nparseText(part)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/breadcrumb/breadcrumb.component.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        part\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            layout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layout:     LayoutService\n\n                    \n                \n                    \n                        \n                            Type :     LayoutService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/breadcrumb/breadcrumb.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            routeParts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        routeParts:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/breadcrumb/breadcrumb.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            routerEventSub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        routerEventSub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/breadcrumb/breadcrumb.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { RoutePartsService } from '../../../../core/services/route-parts.service';\nimport { LayoutService } from '../../../../core/services/layout.service';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'moio-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n})\nexport class BreadcrumbComponent implements OnInit, OnDestroy {\n  routeParts: any[];\n  routerEventSub: Subscription;\n\n  // public isEnabled: boolean = true;\n  constructor(\n    private router: Router,\n    private routePartsService: RoutePartsService,\n    private activeRoute: ActivatedRoute,\n    public layout: LayoutService\n  ) {\n    this.routerEventSub = this.router.events\n      .pipe(filter(event => event instanceof NavigationEnd))\n      .subscribe((routeChange) => {\n        this.routeParts = this.routePartsService.generateRouteParts(this.activeRoute.snapshot);\n        // generate url from parts\n\n        // console.log(this.routeParts);\n\n        this.routeParts.reverse().map((item, i) => {\n          item.breadcrumb = this.parseText(item);\n          item.urlSegments.forEach((urlSegment, j) => {\n            if (j === 0) {\n              return item.url = `${urlSegment.path}`;\n            }\n            item.url += `/${urlSegment.path}`;\n          });\n          if (i === 0) {\n            return item;\n          }\n          // prepend previous part to current part\n          item.url = `${this.routeParts[i - 1].url}/${item.url}`;\n          return item;\n        });\n      });\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n    if (this.routerEventSub) {\n      this.routerEventSub.unsubscribe();\n    }\n  }\n\n  parseText(part) {\n    part.breadcrumb = part.breadcrumb.replace(/{{([^{}]*)}}/g, function (a, b) {\n      const r = part.params[b];\n      return typeof r === 'string' ? r : a;\n    });\n    return part.breadcrumb;\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{part.breadcrumb | translate}}\n  \n\n\n\n  {{routeParts[routeParts.length -1]['breadcrumb'] | translate}}\n  Moio Management\n   1\">\n    \n      {{part.breadcrumb | translate}}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{part.breadcrumb | translate}}    {{routeParts[routeParts.length -1][\\'breadcrumb\\'] | translate}}  Moio Management   1\">          {{part.breadcrumb | translate}}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'BreadcrumbComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearSelectedNursingHome.html":{"url":"classes/ClearSelectedNursingHome.html","title":"class - ClearSelectedNursingHome","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearSelectedNursingHome\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/nursing-homes.actions.ts\n        \n\n            \n                Description\n            \n            \n                Clear selected ser Action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : NursingHomesActionTypes.ClearSelectedNursingHome\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes.actions.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { NursingHome } from '../models/nursing-home.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum NursingHomesActionTypes {\n  SelectNursingHome = '[NursingHome] Select Current NursingHome',\n  ClearSelectedNursingHome = '[NursingHome] Clear Current NursingHome',\n  InitializeNursingHome = '[NursingHome] Initialize Current NursingHome',\n  PopUpNursingHomeForm = '[NursingHome] Pop Up NursingHome Form',\n  CreateNursingHome = '[NursingHome] Create NursingHome',\n  DismissPoppedUpNursingHomeForm = '[NursingHome] Dismiss Create NursingHome',\n  LoadNursingHomes = '[NursingHome] Load Nursing Homes',\n  SearchNursingHome = '[NursingHome] Search NursingHome',\n  SearchNursingHomeComplete = '[NursingHome] Search NursingHome Complete',\n  EditNursingHome = '[NursingHome] Edit NursingHome',\n  DismissEditNursingHome = '[NursingHome] Dismiss Edit NursingHome',\n  ResetNursingHomesState = '[NursingHomes] Reset NursingHomes State'\n}\n\n\n/**\n * Select nursingHome Action\n */\nexport class SelectNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SelectNursingHome;\n\n  constructor(public payload: NursingHome) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.ClearSelectedNursingHome;\n}\n\n/**\n * Initialize nursingHome Action\n */\nexport class InitializeNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.InitializeNursingHome;\n}\n\n/**\n * action to pop up nursingHome form\n */\nexport class PopUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.PopUpNursingHomeForm;\n}\n\n/**\n * Create nursingHome Action\n */\nexport class CreateNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.CreateNursingHome;\n\n  constructor(public payload: { nursingHome: NursingHome }) { }\n}\n\n/**\n * CreateNursingHome Dialog window dismissed\n */\nexport class DismissPoppedUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.DismissPoppedUpNursingHomeForm;\n}\n\n/**\n * Load nursingHomes Action\n */\nexport class LoadNursingHomes implements Action {\n  readonly type = NursingHomesActionTypes.LoadNursingHomes;\n}\n\n/**\n * Search nursingHome Action\n */\nexport class SearchNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHome;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search nursingHome complete Action\n */\nexport class SearchNursingHomeComplete implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHomeComplete;\n\n  constructor(public payload: NursingHome[]) { }\n}\n\n/**\n * action to submit and edit nursingHome\n */\nexport class EditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.EditNursingHome;\n\n  constructor(public payload: Update) {\n  }\n}\n\n/**\n * NursingHome Edit dismissed action\n */\nexport class DismissEditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.DismissEditNursingHome;\n}\n\n/**\n * reset the nursingHome state\n */\nexport class ResetNursingHomesState implements Action {\n  readonly type = NursingHomesActionTypes.ResetNursingHomesState;\n}\n\n/**\n * Export union of nursingHome Action\n */\nexport type NursingHomesActionsUnion\n  = SelectNursingHome\n  | ClearSelectedNursingHome\n  | InitializeNursingHome\n  | PopUpNursingHomeForm\n  | CreateNursingHome\n  | DismissPoppedUpNursingHomeForm\n  | LoadNursingHomes\n  | SearchNursingHome\n  | SearchNursingHomeComplete\n  | EditNursingHome\n  | DismissEditNursingHome\n  | ResetNursingHomesState;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearSelectedPatient.html":{"url":"classes/ClearSelectedPatient.html","title":"class - ClearSelectedPatient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearSelectedPatient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients.actions.ts\n        \n\n            \n                Description\n            \n            \n                Clear selected ser Action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsActionTypes.ClearSelectedPatient\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { IPatient } from '../models/patient.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum PatientsActionTypes {\n  SelectPatient = '[Patient] Select Current Patient',\n  ClearSelectedPatient = '[Patient] Clear Current Patient',\n  InitializePatient = '[Patient] Initialize Current Patient',\n  CreatePatientFormDialog = '[Patients] Pop Up Patient Form',\n  CreatePatient = '[Patient] Create Patient',\n  DismissPatientFormDialog = '[Patient] Dismiss Patient Form Dialog',\n  LoadPatients = '[Patient] Load Patients',\n  SearchPatient = '[Patient] Search Patient',\n  SearchPatientComplete = '[Patient] Search Patient Complete',\n  EditPatient = '[Patient] Edit Patient',\n  DismissEditPatient = '[Patient] Dismiss Edit Patient',\n  ResetPatientsState = '[Patients] Reset Patients State',\n  DeletePatient ='[Patients] Delete Patient',\n  LoadPatientUsers = '[User] Load User Patients'\n}\n\n\n/**\n * Select patient Action\n */\nexport class SelectPatient implements Action {\n  readonly type = PatientsActionTypes.SelectPatient;\n\n  constructor(public payload: IPatient) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedPatient implements Action {\n  readonly type = PatientsActionTypes.ClearSelectedPatient;\n}\n\n/**\n * Initialize patient Action\n */\nexport class InitializePatient implements Action {\n  readonly type = PatientsActionTypes.InitializePatient;\n}\n\n/**\n * action to pop up patient form\n */\nexport class CreatePatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.CreatePatientFormDialog;\n}\n\n/**\n * Create patient Action\n */\nexport class CreatePatient implements Action {\n  readonly type = PatientsActionTypes.CreatePatient;\n\n  constructor(public payload: { patient: IPatient }) { }\n}\n\n/**\n * CreatePatient Dialog window dismissed\n */\nexport class DismissPatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.DismissPatientFormDialog;\n}\n\n/**\n * Load patients Action\n */\nexport class LoadPatients implements Action {\n  readonly type = PatientsActionTypes.LoadPatients;\n}\n\n/**\n * Search patient Action\n */\nexport class SearchPatient implements Action {\n  readonly type = PatientsActionTypes.SearchPatient;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search patient complete Action\n */\nexport class SearchPatientComplete implements Action {\n  readonly type = PatientsActionTypes.SearchPatientComplete;\n\n  constructor(public payload: IPatient[]) { }\n}\n\n/**\n * action to submit and edit patient\n */\nexport class EditPatient implements Action {\n  readonly type = PatientsActionTypes.EditPatient;\n\n  constructor(public payload: IPatient) {\n  }\n}\n\n/**\n * Patient Edit dismissed action\n */\nexport class DismissEditPatient implements Action {\n  readonly type = PatientsActionTypes.DismissEditPatient;\n}\n\n/**\n * reset the patient state\n */\nexport class ResetPatientsState implements Action {\n  readonly type = PatientsActionTypes.ResetPatientsState;\n}\n\n/**\n * action to delete a patient\n */\nexport class DeletePatient implements Action {\n  readonly type = PatientsActionTypes.DeletePatient;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load patient users action\n */\nexport class LoadPatientUsers implements Action {\n  readonly type = PatientsActionTypes.LoadPatientUsers;\n  constructor(public payload: number ) { }\n}\n\n\n/**\n * Export union of patient Action\n */\nexport type PatientsActionsUnion\n  = SelectPatient\n  | ClearSelectedPatient\n  | InitializePatient\n  | CreatePatientFormDialog\n  | CreatePatient\n  | DismissPatientFormDialog\n  | LoadPatients\n  | SearchPatient\n  | SearchPatientComplete\n  | EditPatient\n  | DismissEditPatient\n  | ResetPatientsState\n  | LoadPatientUsers;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearSelectedUser.html":{"url":"classes/ClearSelectedUser.html","title":"class - ClearSelectedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearSelectedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users.actions.ts\n        \n\n            \n                Description\n            \n            \n                Clear selected ser Action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersActionTypes.ClearSelectedUser\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum UsersActionTypes {\n  SelectUser = '[User] Select Current User',\n  ClearSelectedUser = '[User] Clear Current User',\n  InitializeUser = '[User] Initialize Current User',\n  CreateUserFormDialog = '[Users] Pop Up User Form',\n  CreateUser = '[User] Create User',\n  DismissUserFormDialog = '[User] Dismiss User Form Dialog',\n  LoadUsers = '[User] Load Users',\n  SearchUser = '[User] Search User',\n  SearchUserComplete = '[User] Search User Complete',\n  EditUser = '[User] Edit User',\n  DismissEditUser = '[User] Dismiss Edit User',\n  ResetUsersState = '[Users] Reset Users State',\n  DeleteUser = '[Users] Delete User',\n  LoadUserPatients = '[User] Load User Patients'\n}\n\n\n/**\n * Select user Action\n */\nexport class SelectUser implements Action {\n  readonly type = UsersActionTypes.SelectUser;\n\n  constructor(public payload: User) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedUser implements Action {\n  readonly type = UsersActionTypes.ClearSelectedUser;\n}\n\n/**\n * Initialize user Action\n */\nexport class InitializeUser implements Action {\n  readonly type = UsersActionTypes.InitializeUser;\n}\n\n/**\n * action to pop up user form\n */\nexport class CreateUserFormDialog implements Action {\n  readonly type = UsersActionTypes.CreateUserFormDialog;\n}\n\n/**\n * Create user Action\n */\nexport class CreateUser implements Action {\n  readonly type = UsersActionTypes.CreateUser;\n\n  constructor(public payload: { user: User }) { }\n}\n\n/**\n * CreateUser Dialog window dismissed\n */\nexport class DismissUserFormDialog implements Action {\n  readonly type = UsersActionTypes.DismissUserFormDialog;\n}\n\n/**\n * Load users Action\n */\nexport class LoadUsers implements Action {\n  readonly type = UsersActionTypes.LoadUsers;\n}\n\n/**\n * Search user action\n */\nexport class SearchUser implements Action {\n  readonly type = UsersActionTypes.SearchUser;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search user complete action\n */\nexport class SearchUserComplete implements Action {\n  readonly type = UsersActionTypes.SearchUserComplete;\n\n  constructor(public payload: User[]) { }\n}\n\n/**\n * action to submit and edit user\n */\nexport class EditUser implements Action {\n  readonly type = UsersActionTypes.EditUser;\n\n  constructor(public payload: User) {\n  }\n}\n\n/**\n * User Edit dismissed action\n */\nexport class DismissEditUser implements Action {\n  readonly type = UsersActionTypes.DismissEditUser;\n}\n\n/**\n * reset the user state\n */\nexport class ResetUsersState implements Action {\n  readonly type = UsersActionTypes.ResetUsersState;\n}\n\n/**\n * action to delete a user\n */\nexport class DeleteUser implements Action {\n  readonly type = UsersActionTypes.DeleteUser;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load user patients action\n */\nexport class LoadUserPatients implements Action {\n  readonly type = UsersActionTypes.LoadUserPatients;\n  constructor(public payload: number ) { }\n}\n\n/**\n * Export union of user Action\n */\nexport type UsersActionsUnion\n  = SelectUser\n  | ClearSelectedUser\n  | InitializeUser\n  | CreateUserFormDialog\n  | CreateUser\n  | DismissUserFormDialog\n  | LoadUsers\n  | SearchUser\n  | SearchUserComplete\n  | EditUser\n  | DismissEditUser\n  | ResetUsersState\n  | LoadUserPatients;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CloseSideNav.html":{"url":"classes/CloseSideNav.html","title":"class - CloseSideNav","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CloseSideNav\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/layout.actions.ts\n        \n\n            \n                Description\n            \n            \n                close side navigation action\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/layout.actions.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LayoutActionTypes.CloseSideNav\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\n/**\n * layout action types\n */\nexport enum LayoutActionTypes {\n  OpenSideNav = '[Layout] Open Side Nav',\n  CloseSideNav = '[Layout] Close Side Nav',\n  CompactSideNav = '[Layout] Compact Nav position',\n  SetNavigationPositionSide = '[Layout] Set Navigation Position Side',\n  SetNavigationPositionTop = '[Layout] Set Navigation Position Top',\n  SetDirectionLtr = '[Layout] Set Direction Ltr',\n  SetDirectionRtr = '[Layout] Set Direction Rtr',\n  TransitioningLayout = '[Layout] Transitioning Layout',\n  UseBreadcrumb = '[Layout] Use Breadcrumb',\n  MakeBreadcrumbSimple = '[Layout] Make Breadcrumb Simple',\n  MakeBreadcrumbTitle = '[Layout] Make Breadcrumb Title',\n  FixTopbar = '[Layout] Fix Topbar'\n}\n\n/**\n * open side navigation action\n */\nexport class OpenSideNav {\n  readonly type = LayoutActionTypes.OpenSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * close side navigation action\n */\nexport class CloseSideNav {\n  readonly type = LayoutActionTypes.CloseSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * compact side navigation action\n */\nexport class CompactSideNav {\n  readonly type = LayoutActionTypes.CompactSideNav;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to side action\n */\nexport class SetNavigationPositionSide {\n  readonly type = LayoutActionTypes.SetNavigationPositionSide;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to top action\n */\nexport class SetNavigationPositionTop {\n  readonly type = LayoutActionTypes.SetNavigationPositionTop;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to left-to-right action\n */\nexport class SetDirectionLtr {\n  readonly type = LayoutActionTypes.SetDirectionLtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to right-to-left action\n */\nexport class SetDirectionRtr {\n  readonly type = LayoutActionTypes.SetDirectionRtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * transition layout action\n */\nexport class TransitioningLayout {\n  readonly type = LayoutActionTypes.TransitioningLayout;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * Use breadcrumb action\n */\nexport class UseBreadcrumb {\n  readonly type = LayoutActionTypes.UseBreadcrumb;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * make breadcrumb simple action\n */\nexport class MakeBreadcrumbSimple {\n  readonly type = LayoutActionTypes.MakeBreadcrumbSimple;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * make breadcrum title action\n */\nexport class MakeBreadcrumbTitle {\n  readonly type = LayoutActionTypes.MakeBreadcrumbTitle;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * fix top bar action\n */\nexport class FixTopbar {\n  readonly type = LayoutActionTypes.FixTopbar;\n  constructor(public payload: boolean) { \n  }\n}\n\nexport type LayoutActions = \n  | OpenSideNav\n  | CloseSideNav\n  | CompactSideNav\n  | SetNavigationPositionSide\n  | SetNavigationPositionTop\n  | SetDirectionLtr\n  | SetDirectionRtr\n  | TransitioningLayout\n  | UseBreadcrumb\n  | MakeBreadcrumbSimple\n  | MakeBreadcrumbTitle\n  | FixTopbar;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CompactSideNav.html":{"url":"classes/CompactSideNav.html","title":"class - CompactSideNav","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CompactSideNav\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/layout.actions.ts\n        \n\n            \n                Description\n            \n            \n                compact side navigation action\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/layout.actions.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LayoutActionTypes.CompactSideNav\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\n/**\n * layout action types\n */\nexport enum LayoutActionTypes {\n  OpenSideNav = '[Layout] Open Side Nav',\n  CloseSideNav = '[Layout] Close Side Nav',\n  CompactSideNav = '[Layout] Compact Nav position',\n  SetNavigationPositionSide = '[Layout] Set Navigation Position Side',\n  SetNavigationPositionTop = '[Layout] Set Navigation Position Top',\n  SetDirectionLtr = '[Layout] Set Direction Ltr',\n  SetDirectionRtr = '[Layout] Set Direction Rtr',\n  TransitioningLayout = '[Layout] Transitioning Layout',\n  UseBreadcrumb = '[Layout] Use Breadcrumb',\n  MakeBreadcrumbSimple = '[Layout] Make Breadcrumb Simple',\n  MakeBreadcrumbTitle = '[Layout] Make Breadcrumb Title',\n  FixTopbar = '[Layout] Fix Topbar'\n}\n\n/**\n * open side navigation action\n */\nexport class OpenSideNav {\n  readonly type = LayoutActionTypes.OpenSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * close side navigation action\n */\nexport class CloseSideNav {\n  readonly type = LayoutActionTypes.CloseSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * compact side navigation action\n */\nexport class CompactSideNav {\n  readonly type = LayoutActionTypes.CompactSideNav;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to side action\n */\nexport class SetNavigationPositionSide {\n  readonly type = LayoutActionTypes.SetNavigationPositionSide;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to top action\n */\nexport class SetNavigationPositionTop {\n  readonly type = LayoutActionTypes.SetNavigationPositionTop;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to left-to-right action\n */\nexport class SetDirectionLtr {\n  readonly type = LayoutActionTypes.SetDirectionLtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to right-to-left action\n */\nexport class SetDirectionRtr {\n  readonly type = LayoutActionTypes.SetDirectionRtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * transition layout action\n */\nexport class TransitioningLayout {\n  readonly type = LayoutActionTypes.TransitioningLayout;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * Use breadcrumb action\n */\nexport class UseBreadcrumb {\n  readonly type = LayoutActionTypes.UseBreadcrumb;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * make breadcrumb simple action\n */\nexport class MakeBreadcrumbSimple {\n  readonly type = LayoutActionTypes.MakeBreadcrumbSimple;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * make breadcrum title action\n */\nexport class MakeBreadcrumbTitle {\n  readonly type = LayoutActionTypes.MakeBreadcrumbTitle;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * fix top bar action\n */\nexport class FixTopbar {\n  readonly type = LayoutActionTypes.FixTopbar;\n  constructor(public payload: boolean) { \n  }\n}\n\nexport type LayoutActions = \n  | OpenSideNav\n  | CloseSideNav\n  | CompactSideNav\n  | SetNavigationPositionSide\n  | SetNavigationPositionTop\n  | SetDirectionLtr\n  | SetDirectionRtr\n  | TransitioningLayout\n  | UseBreadcrumb\n  | MakeBreadcrumbSimple\n  | MakeBreadcrumbTitle\n  | FixTopbar;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmComponent.html":{"url":"components/ConfirmComponent.html","title":"component - ConfirmComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/components/confirm/confirm.component.ts\n\n\n    \n        Description\n    \n    \n        confirm component\nused by confirm service\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-confirm\n            \n\n\n\n\n            \n                templateUrl\n                ./confirm.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: any, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/components/confirm/confirm.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/components/confirm/confirm.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/components/confirm/confirm.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translate:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/components/confirm/confirm.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Component, Inject } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n/**\n * confirm component\n * used by confirm service\n */\n@Component({\n  selector: 'moio-confirm',\n  templateUrl: './confirm.component.html'\n})\n\n/**\n * constructor\n * @param dialogRef Material Dialog Reference\n * @param data repres. an InjectionToken to access the data in the dialog\n */\nexport class ConfirmComponent {\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public translate: TranslateService\n  ) {\n  }\n}\n\n    \n\n    \n        {{ data.title }}\n  {{ data.message }}\n  \n     {{'Ok' | translate }}\n    \n    &nbsp;\n    \n    {{'Cancel' | translate }}\n    \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ data.title }}  {{ data.message }}       {{\\'Ok\\' | translate }}                 {{\\'Cancel\\' | translate }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfirmData.html":{"url":"interfaces/ConfirmData.html","title":"interface - ConfirmData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConfirmData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/confirm.service.ts\n        \n\n            \n                Description\n            \n            \n                confirmation data for this service\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        message\n                                \n                                \n                                            Optional\n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { MatDialogRef, MatDialog } from '@angular/material';\nimport { Injectable } from '@angular/core';\n\nimport { ConfirmComponent } from '../components/confirm/confirm.component';\nimport { TranslateService } from '@ngx-translate/core';\n\n/**\n * confirmation data for this service\n */\ninterface ConfirmData {\n  title?: string;\n  message?: string;\n}\n\n/**\n * Confirmation service\n * allows an easy interface to call a confirmation\n * dialog in the UI\n */\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ConfirmService {\n\n   /**\n   * constructor\n   * @param dialog material dialog reference\n   * @param translate translate service\n   */\n  constructor(\n    private dialog: MatDialog,\n    private translate: TranslateService\n  ) {\n  }\n\n  /**\n   * confirm opens the dialog\n   *\n   * @param data ConfirmData composed from title and message\n   * returns a dialog.afterClosed() Observable.\n   * Subscribe to the returned reference to get true | false from\n   * the clicked button\n   * @return dialogRef MatDialogRef Observable\n   */\n  public confirm(data: ConfirmData = {}): Observable {\n    data.title = data.title || this.translate.instant('Confirm');;\n    data.message = data.message || this.translate.instant('Are you sure?');;\n    let dialogRef: MatDialogRef;\n    dialogRef = this.dialog.open(ConfirmComponent, {\n      width: '380px',\n      disableClose: true,\n      data: {title: data.title, message: data.message}\n    });\n    return dialogRef.afterClosed();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfirmService.html":{"url":"injectables/ConfirmService.html","title":"injectable - ConfirmService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfirmService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/confirm.service.ts\n        \n\n            \n                Description\n            \n            \n                Confirmation service\nallows an easy interface to call a confirmation\ndialog in the UI\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                confirm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/confirm.service.ts:25\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                material dialog reference\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                translate service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            confirm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        confirm(data: ConfirmData)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/confirm.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            confirm opens the dialog\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    ConfirmData\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                        \n                                                                ConfirmData composed from title and message\nreturns a dialog.afterClosed() Observable.\nSubscribe to the returned reference to get true | false from\nthe clicked button\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    dialogRef MatDialogRef Observable\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { MatDialogRef, MatDialog } from '@angular/material';\nimport { Injectable } from '@angular/core';\n\nimport { ConfirmComponent } from '../components/confirm/confirm.component';\nimport { TranslateService } from '@ngx-translate/core';\n\n/**\n * confirmation data for this service\n */\ninterface ConfirmData {\n  title?: string;\n  message?: string;\n}\n\n/**\n * Confirmation service\n * allows an easy interface to call a confirmation\n * dialog in the UI\n */\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ConfirmService {\n\n   /**\n   * constructor\n   * @param dialog material dialog reference\n   * @param translate translate service\n   */\n  constructor(\n    private dialog: MatDialog,\n    private translate: TranslateService\n  ) {\n  }\n\n  /**\n   * confirm opens the dialog\n   *\n   * @param data ConfirmData composed from title and message\n   * returns a dialog.afterClosed() Observable.\n   * Subscribe to the returned reference to get true | false from\n   * the clicked button\n   * @return dialogRef MatDialogRef Observable\n   */\n  public confirm(data: ConfirmData = {}): Observable {\n    data.title = data.title || this.translate.instant('Confirm');;\n    data.message = data.message || this.translate.instant('Are you sure?');;\n    let dialogRef: MatDialogRef;\n    dialogRef = this.dialog.open(ConfirmComponent, {\n      width: '380px',\n      disableClose: true,\n      data: {title: data.title, message: data.message}\n    });\n    return dialogRef.afterClosed();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nAuthLayoutComponent\n\nAuthLayoutComponent\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAuthLayoutComponent->CoreModule\n\n\n\n\n\nForgotPasswordComponent\n\nForgotPasswordComponent\n\nCoreModule -->\n\nForgotPasswordComponent->CoreModule\n\n\n\n\n\nLockscreenComponent\n\nLockscreenComponent\n\nCoreModule -->\n\nLockscreenComponent->CoreModule\n\n\n\n\n\nSigninComponent\n\nSigninComponent\n\nCoreModule -->\n\nSigninComponent->CoreModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nCoreModule -->\n\nSignupComponent->CoreModule\n\n\n\n\n\nAuthLayoutComponent \n\nAuthLayoutComponent \n\nAuthLayoutComponent  -->\n\nCoreModule->AuthLayoutComponent \n\n\n\n\n\nForgotPasswordComponent \n\nForgotPasswordComponent \n\nForgotPasswordComponent  -->\n\nCoreModule->ForgotPasswordComponent \n\n\n\n\n\nLockscreenComponent \n\nLockscreenComponent \n\nLockscreenComponent  -->\n\nCoreModule->LockscreenComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nCoreModule->MaterialModule \n\n\n\n\n\nSigninComponent \n\nSigninComponent \n\nSigninComponent  -->\n\nCoreModule->SigninComponent \n\n\n\n\n\nSignupComponent \n\nSignupComponent \n\nSignupComponent  -->\n\nCoreModule->SignupComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nCoreModule -->\n\nMaterialModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n        \n            Description\n        \n        \n            bundles components and services\nshared over all modules\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AuthLayoutComponent\n                        \n                        \n                            ForgotPasswordComponent\n                        \n                        \n                            LockscreenComponent\n                        \n                        \n                            SigninComponent\n                        \n                        \n                            SignupComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ConfirmComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthLayoutComponent\n                        \n                        \n                            ForgotPasswordComponent\n                        \n                        \n                            LockscreenComponent\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            SigninComponent\n                        \n                        \n                            SignupComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ConfirmComponent } from './components/confirm/confirm.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material';\n\n/**\n * list of components in this module\n */\nexport const COMPONENTS = [\n  ConfirmComponent\n];\n\n/**\n * bundles components and services\n * shared over all modules\n */\n@NgModule({\n  declarations: COMPONENTS,\n  imports: [MaterialModule, TranslateModule],\n  exports: [\n    MaterialModule,\n    TranslateModule,\n    COMPONENTS\n  ],\n  providers: [],\n  entryComponents: [ConfirmComponent]\n})\nexport class CoreModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNursingHome.html":{"url":"classes/CreateNursingHome.html","title":"class - CreateNursingHome","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNursingHome\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/nursing-homes.actions.ts\n        \n\n            \n                Description\n            \n            \n                Create nursingHome Action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/nursing-homes.actions.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes.actions.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : NursingHomesActionTypes.CreateNursingHome\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes.actions.ts:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { NursingHome } from '../models/nursing-home.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum NursingHomesActionTypes {\n  SelectNursingHome = '[NursingHome] Select Current NursingHome',\n  ClearSelectedNursingHome = '[NursingHome] Clear Current NursingHome',\n  InitializeNursingHome = '[NursingHome] Initialize Current NursingHome',\n  PopUpNursingHomeForm = '[NursingHome] Pop Up NursingHome Form',\n  CreateNursingHome = '[NursingHome] Create NursingHome',\n  DismissPoppedUpNursingHomeForm = '[NursingHome] Dismiss Create NursingHome',\n  LoadNursingHomes = '[NursingHome] Load Nursing Homes',\n  SearchNursingHome = '[NursingHome] Search NursingHome',\n  SearchNursingHomeComplete = '[NursingHome] Search NursingHome Complete',\n  EditNursingHome = '[NursingHome] Edit NursingHome',\n  DismissEditNursingHome = '[NursingHome] Dismiss Edit NursingHome',\n  ResetNursingHomesState = '[NursingHomes] Reset NursingHomes State'\n}\n\n\n/**\n * Select nursingHome Action\n */\nexport class SelectNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SelectNursingHome;\n\n  constructor(public payload: NursingHome) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.ClearSelectedNursingHome;\n}\n\n/**\n * Initialize nursingHome Action\n */\nexport class InitializeNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.InitializeNursingHome;\n}\n\n/**\n * action to pop up nursingHome form\n */\nexport class PopUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.PopUpNursingHomeForm;\n}\n\n/**\n * Create nursingHome Action\n */\nexport class CreateNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.CreateNursingHome;\n\n  constructor(public payload: { nursingHome: NursingHome }) { }\n}\n\n/**\n * CreateNursingHome Dialog window dismissed\n */\nexport class DismissPoppedUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.DismissPoppedUpNursingHomeForm;\n}\n\n/**\n * Load nursingHomes Action\n */\nexport class LoadNursingHomes implements Action {\n  readonly type = NursingHomesActionTypes.LoadNursingHomes;\n}\n\n/**\n * Search nursingHome Action\n */\nexport class SearchNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHome;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search nursingHome complete Action\n */\nexport class SearchNursingHomeComplete implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHomeComplete;\n\n  constructor(public payload: NursingHome[]) { }\n}\n\n/**\n * action to submit and edit nursingHome\n */\nexport class EditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.EditNursingHome;\n\n  constructor(public payload: Update) {\n  }\n}\n\n/**\n * NursingHome Edit dismissed action\n */\nexport class DismissEditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.DismissEditNursingHome;\n}\n\n/**\n * reset the nursingHome state\n */\nexport class ResetNursingHomesState implements Action {\n  readonly type = NursingHomesActionTypes.ResetNursingHomesState;\n}\n\n/**\n * Export union of nursingHome Action\n */\nexport type NursingHomesActionsUnion\n  = SelectNursingHome\n  | ClearSelectedNursingHome\n  | InitializeNursingHome\n  | PopUpNursingHomeForm\n  | CreateNursingHome\n  | DismissPoppedUpNursingHomeForm\n  | LoadNursingHomes\n  | SearchNursingHome\n  | SearchNursingHomeComplete\n  | EditNursingHome\n  | DismissEditNursingHome\n  | ResetNursingHomesState;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNursingHomeFailure.html":{"url":"classes/CreateNursingHomeFailure.html","title":"class - CreateNursingHomeFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNursingHomeFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/nursing-homes-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                add nursingHome failure action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/nursing-homes-api.actions.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes-api.actions.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : NursingHomesApiActionTypes.CreateNursingHomeFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes-api.actions.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { NursingHome } from '../models/nursing-home.model';\n\n/**\n * definitions for action types\n */\nexport enum NursingHomesApiActionTypes {\n  CreateNursingHomeSuccess = '[NursingHome/Api] Create NursingHome Success',\n  CreateNursingHomeFailure = '[NursingHome/Api] Create NursingHome Failure',\n  LoadNursingHomesSuccess = '[NursingHome/Api] Load NursingHomes Success',\n  LoadNursingHomesFailure = '[NursingHome/Api] Load NursingHomes Failure',\n  EditNursingHomeSuccess = '[NursingHome/Api] Edit NursingHome Success',\n  EditNursingHomeFailure = '[NursingHome/Api] Edit NursingHome Failure',\n}\n\n/**\n * add nursingHome success action\n */\nexport class CreateNursingHomeSuccess implements Action {\n  public readonly type = NursingHomesApiActionTypes.CreateNursingHomeSuccess;\n\n  constructor(public payload: { nursingHome: NursingHome }) {\n  }\n}\n\n/**\n * add nursingHome failure action\n */\nexport class CreateNursingHomeFailure implements Action {\n  public readonly type = NursingHomesApiActionTypes.CreateNursingHomeFailure;\n\n  constructor(public payload: { message: string}) {\n  }\n}\n\n/**\n * load all nursingHomes success action\n */\nexport class LoadNursingHomesSuccess implements Action {\n  public readonly type = NursingHomesApiActionTypes.LoadNursingHomesSuccess;\n\n  constructor(public payload: { nursingHomes: NursingHome[] }) {\n  }\n}\n\n/**\n * load all nursingHomes action\n */\nexport class LoadNursingHomesFailure implements Action {\n  public readonly type = NursingHomesApiActionTypes.LoadNursingHomesFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * edit nursingHome success action\n */\nexport class EditNursingHomeSuccess implements Action {\n  public readonly type = NursingHomesApiActionTypes.EditNursingHomeSuccess;\n\n  constructor(public payload: { nursingHome: NursingHome }) {\n  }\n}\n\n/**\n * edit nursingHome failure action\n */\nexport class EditNursingHomeFailure implements Action {\n  public readonly type = NursingHomesApiActionTypes.EditNursingHomeFailure;\n\n  constructor(public payload: { message: string}) {\n  }\n}\n\n// export types\nexport type NursingHomesApiActionsUnion =\n  | CreateNursingHomeSuccess\n  | CreateNursingHomeFailure\n  | EditNursingHomeSuccess\n  | EditNursingHomeFailure\n  | LoadNursingHomesSuccess\n  | LoadNursingHomesFailure\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNursingHomeSuccess.html":{"url":"classes/CreateNursingHomeSuccess.html","title":"class - CreateNursingHomeSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNursingHomeSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/nursing-homes-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                add nursingHome success action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/nursing-homes-api.actions.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes-api.actions.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : NursingHomesApiActionTypes.CreateNursingHomeSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes-api.actions.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { NursingHome } from '../models/nursing-home.model';\n\n/**\n * definitions for action types\n */\nexport enum NursingHomesApiActionTypes {\n  CreateNursingHomeSuccess = '[NursingHome/Api] Create NursingHome Success',\n  CreateNursingHomeFailure = '[NursingHome/Api] Create NursingHome Failure',\n  LoadNursingHomesSuccess = '[NursingHome/Api] Load NursingHomes Success',\n  LoadNursingHomesFailure = '[NursingHome/Api] Load NursingHomes Failure',\n  EditNursingHomeSuccess = '[NursingHome/Api] Edit NursingHome Success',\n  EditNursingHomeFailure = '[NursingHome/Api] Edit NursingHome Failure',\n}\n\n/**\n * add nursingHome success action\n */\nexport class CreateNursingHomeSuccess implements Action {\n  public readonly type = NursingHomesApiActionTypes.CreateNursingHomeSuccess;\n\n  constructor(public payload: { nursingHome: NursingHome }) {\n  }\n}\n\n/**\n * add nursingHome failure action\n */\nexport class CreateNursingHomeFailure implements Action {\n  public readonly type = NursingHomesApiActionTypes.CreateNursingHomeFailure;\n\n  constructor(public payload: { message: string}) {\n  }\n}\n\n/**\n * load all nursingHomes success action\n */\nexport class LoadNursingHomesSuccess implements Action {\n  public readonly type = NursingHomesApiActionTypes.LoadNursingHomesSuccess;\n\n  constructor(public payload: { nursingHomes: NursingHome[] }) {\n  }\n}\n\n/**\n * load all nursingHomes action\n */\nexport class LoadNursingHomesFailure implements Action {\n  public readonly type = NursingHomesApiActionTypes.LoadNursingHomesFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * edit nursingHome success action\n */\nexport class EditNursingHomeSuccess implements Action {\n  public readonly type = NursingHomesApiActionTypes.EditNursingHomeSuccess;\n\n  constructor(public payload: { nursingHome: NursingHome }) {\n  }\n}\n\n/**\n * edit nursingHome failure action\n */\nexport class EditNursingHomeFailure implements Action {\n  public readonly type = NursingHomesApiActionTypes.EditNursingHomeFailure;\n\n  constructor(public payload: { message: string}) {\n  }\n}\n\n// export types\nexport type NursingHomesApiActionsUnion =\n  | CreateNursingHomeSuccess\n  | CreateNursingHomeFailure\n  | EditNursingHomeSuccess\n  | EditNursingHomeFailure\n  | LoadNursingHomesSuccess\n  | LoadNursingHomesFailure\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePatient.html":{"url":"classes/CreatePatient.html","title":"class - CreatePatient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePatient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients.actions.ts\n        \n\n            \n                Description\n            \n            \n                Create patient Action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/patients.actions.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsActionTypes.CreatePatient\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:57\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { IPatient } from '../models/patient.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum PatientsActionTypes {\n  SelectPatient = '[Patient] Select Current Patient',\n  ClearSelectedPatient = '[Patient] Clear Current Patient',\n  InitializePatient = '[Patient] Initialize Current Patient',\n  CreatePatientFormDialog = '[Patients] Pop Up Patient Form',\n  CreatePatient = '[Patient] Create Patient',\n  DismissPatientFormDialog = '[Patient] Dismiss Patient Form Dialog',\n  LoadPatients = '[Patient] Load Patients',\n  SearchPatient = '[Patient] Search Patient',\n  SearchPatientComplete = '[Patient] Search Patient Complete',\n  EditPatient = '[Patient] Edit Patient',\n  DismissEditPatient = '[Patient] Dismiss Edit Patient',\n  ResetPatientsState = '[Patients] Reset Patients State',\n  DeletePatient ='[Patients] Delete Patient',\n  LoadPatientUsers = '[User] Load User Patients'\n}\n\n\n/**\n * Select patient Action\n */\nexport class SelectPatient implements Action {\n  readonly type = PatientsActionTypes.SelectPatient;\n\n  constructor(public payload: IPatient) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedPatient implements Action {\n  readonly type = PatientsActionTypes.ClearSelectedPatient;\n}\n\n/**\n * Initialize patient Action\n */\nexport class InitializePatient implements Action {\n  readonly type = PatientsActionTypes.InitializePatient;\n}\n\n/**\n * action to pop up patient form\n */\nexport class CreatePatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.CreatePatientFormDialog;\n}\n\n/**\n * Create patient Action\n */\nexport class CreatePatient implements Action {\n  readonly type = PatientsActionTypes.CreatePatient;\n\n  constructor(public payload: { patient: IPatient }) { }\n}\n\n/**\n * CreatePatient Dialog window dismissed\n */\nexport class DismissPatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.DismissPatientFormDialog;\n}\n\n/**\n * Load patients Action\n */\nexport class LoadPatients implements Action {\n  readonly type = PatientsActionTypes.LoadPatients;\n}\n\n/**\n * Search patient Action\n */\nexport class SearchPatient implements Action {\n  readonly type = PatientsActionTypes.SearchPatient;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search patient complete Action\n */\nexport class SearchPatientComplete implements Action {\n  readonly type = PatientsActionTypes.SearchPatientComplete;\n\n  constructor(public payload: IPatient[]) { }\n}\n\n/**\n * action to submit and edit patient\n */\nexport class EditPatient implements Action {\n  readonly type = PatientsActionTypes.EditPatient;\n\n  constructor(public payload: IPatient) {\n  }\n}\n\n/**\n * Patient Edit dismissed action\n */\nexport class DismissEditPatient implements Action {\n  readonly type = PatientsActionTypes.DismissEditPatient;\n}\n\n/**\n * reset the patient state\n */\nexport class ResetPatientsState implements Action {\n  readonly type = PatientsActionTypes.ResetPatientsState;\n}\n\n/**\n * action to delete a patient\n */\nexport class DeletePatient implements Action {\n  readonly type = PatientsActionTypes.DeletePatient;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load patient users action\n */\nexport class LoadPatientUsers implements Action {\n  readonly type = PatientsActionTypes.LoadPatientUsers;\n  constructor(public payload: number ) { }\n}\n\n\n/**\n * Export union of patient Action\n */\nexport type PatientsActionsUnion\n  = SelectPatient\n  | ClearSelectedPatient\n  | InitializePatient\n  | CreatePatientFormDialog\n  | CreatePatient\n  | DismissPatientFormDialog\n  | LoadPatients\n  | SearchPatient\n  | SearchPatientComplete\n  | EditPatient\n  | DismissEditPatient\n  | ResetPatientsState\n  | LoadPatientUsers;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePatientFailure.html":{"url":"classes/CreatePatientFailure.html","title":"class - CreatePatientFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePatientFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                add patient failure action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/patients-api.actions.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients-api.actions.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsApiActionTypes.CreatePatientFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients-api.actions.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { IPatient } from '../models/patient.model';\n\n/**\n * definitions for action types\n */\nexport enum PatientsApiActionTypes {\n  CreatePatientSuccess = '[Patient/Api] Create Patient Success',\n  CreatePatientFailure = '[Patient/Api] Create Patient Failure',\n  LoadPatientsSuccess = '[Patient/Api] Load Patients Success',\n  LoadPatientsFailure = '[Patient/Api] Load Patients Failure',\n  EditPatientSuccess = '[Patient/Api] Edit Patient Success',\n  EditPatientFailure = '[Patient/Api] Edit Patient Failure',\n  LoadPatientUsersSuccess = '[User/Api] Load Patient Users Success',\n  LoadPatientUsersFailure = '[User/Api] Load Patient Users Failure',\n}\n\n/**\n * add patient success action\n */\nexport class CreatePatientSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.CreatePatientSuccess;\n\n  constructor(public payload: { patient: IPatient }) {\n  }\n}\n\n/**\n * add patient failure action\n */\nexport class CreatePatientFailure implements Action {\n  public readonly type = PatientsApiActionTypes.CreatePatientFailure;\n\n  constructor(public payload: { messages: string }) {\n  }\n}\n\n/**\n * load all patients success action\n */\nexport class LoadPatientsSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientsSuccess;\n\n  constructor(public payload: { patients: IPatient[] }) {\n  }\n}\n\n/**\n * load all patients action\n */\nexport class LoadPatientsFailure implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientsFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * edit patient success action\n */\nexport class EditPatientSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.EditPatientSuccess;\n\n  constructor(public payload: { patient: IPatient }) {\n  }\n}\n\n/**\n * edit patient failure action\n */\nexport class EditPatientFailure implements Action {\n  public readonly type = PatientsApiActionTypes.EditPatientFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * load all patient users success action\n */\nexport class LoadPatientUsersSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientUsersSuccess;\n\n  constructor(public payload: { users: User[] }) {\n  }\n}\n\n/**\n * load all patient users failure action\n */\nexport class LoadPatientUsersFailure implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientUsersFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n// export types\nexport type PatientsApiActionsUnion =\n  | CreatePatientSuccess\n  | CreatePatientFailure\n  | EditPatientSuccess\n  | EditPatientFailure\n  | LoadPatientsSuccess\n  | LoadPatientsFailure\n  | LoadPatientUsersSuccess\n  | LoadPatientUsersFailure;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePatientFormDialog.html":{"url":"classes/CreatePatientFormDialog.html","title":"class - CreatePatientFormDialog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePatientFormDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients.actions.ts\n        \n\n            \n                Description\n            \n            \n                action to pop up patient form\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsActionTypes.CreatePatientFormDialog\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:50\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { IPatient } from '../models/patient.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum PatientsActionTypes {\n  SelectPatient = '[Patient] Select Current Patient',\n  ClearSelectedPatient = '[Patient] Clear Current Patient',\n  InitializePatient = '[Patient] Initialize Current Patient',\n  CreatePatientFormDialog = '[Patients] Pop Up Patient Form',\n  CreatePatient = '[Patient] Create Patient',\n  DismissPatientFormDialog = '[Patient] Dismiss Patient Form Dialog',\n  LoadPatients = '[Patient] Load Patients',\n  SearchPatient = '[Patient] Search Patient',\n  SearchPatientComplete = '[Patient] Search Patient Complete',\n  EditPatient = '[Patient] Edit Patient',\n  DismissEditPatient = '[Patient] Dismiss Edit Patient',\n  ResetPatientsState = '[Patients] Reset Patients State',\n  DeletePatient ='[Patients] Delete Patient',\n  LoadPatientUsers = '[User] Load User Patients'\n}\n\n\n/**\n * Select patient Action\n */\nexport class SelectPatient implements Action {\n  readonly type = PatientsActionTypes.SelectPatient;\n\n  constructor(public payload: IPatient) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedPatient implements Action {\n  readonly type = PatientsActionTypes.ClearSelectedPatient;\n}\n\n/**\n * Initialize patient Action\n */\nexport class InitializePatient implements Action {\n  readonly type = PatientsActionTypes.InitializePatient;\n}\n\n/**\n * action to pop up patient form\n */\nexport class CreatePatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.CreatePatientFormDialog;\n}\n\n/**\n * Create patient Action\n */\nexport class CreatePatient implements Action {\n  readonly type = PatientsActionTypes.CreatePatient;\n\n  constructor(public payload: { patient: IPatient }) { }\n}\n\n/**\n * CreatePatient Dialog window dismissed\n */\nexport class DismissPatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.DismissPatientFormDialog;\n}\n\n/**\n * Load patients Action\n */\nexport class LoadPatients implements Action {\n  readonly type = PatientsActionTypes.LoadPatients;\n}\n\n/**\n * Search patient Action\n */\nexport class SearchPatient implements Action {\n  readonly type = PatientsActionTypes.SearchPatient;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search patient complete Action\n */\nexport class SearchPatientComplete implements Action {\n  readonly type = PatientsActionTypes.SearchPatientComplete;\n\n  constructor(public payload: IPatient[]) { }\n}\n\n/**\n * action to submit and edit patient\n */\nexport class EditPatient implements Action {\n  readonly type = PatientsActionTypes.EditPatient;\n\n  constructor(public payload: IPatient) {\n  }\n}\n\n/**\n * Patient Edit dismissed action\n */\nexport class DismissEditPatient implements Action {\n  readonly type = PatientsActionTypes.DismissEditPatient;\n}\n\n/**\n * reset the patient state\n */\nexport class ResetPatientsState implements Action {\n  readonly type = PatientsActionTypes.ResetPatientsState;\n}\n\n/**\n * action to delete a patient\n */\nexport class DeletePatient implements Action {\n  readonly type = PatientsActionTypes.DeletePatient;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load patient users action\n */\nexport class LoadPatientUsers implements Action {\n  readonly type = PatientsActionTypes.LoadPatientUsers;\n  constructor(public payload: number ) { }\n}\n\n\n/**\n * Export union of patient Action\n */\nexport type PatientsActionsUnion\n  = SelectPatient\n  | ClearSelectedPatient\n  | InitializePatient\n  | CreatePatientFormDialog\n  | CreatePatient\n  | DismissPatientFormDialog\n  | LoadPatients\n  | SearchPatient\n  | SearchPatientComplete\n  | EditPatient\n  | DismissEditPatient\n  | ResetPatientsState\n  | LoadPatientUsers;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePatientSuccess.html":{"url":"classes/CreatePatientSuccess.html","title":"class - CreatePatientSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePatientSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                add patient success action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/patients-api.actions.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients-api.actions.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsApiActionTypes.CreatePatientSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients-api.actions.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { IPatient } from '../models/patient.model';\n\n/**\n * definitions for action types\n */\nexport enum PatientsApiActionTypes {\n  CreatePatientSuccess = '[Patient/Api] Create Patient Success',\n  CreatePatientFailure = '[Patient/Api] Create Patient Failure',\n  LoadPatientsSuccess = '[Patient/Api] Load Patients Success',\n  LoadPatientsFailure = '[Patient/Api] Load Patients Failure',\n  EditPatientSuccess = '[Patient/Api] Edit Patient Success',\n  EditPatientFailure = '[Patient/Api] Edit Patient Failure',\n  LoadPatientUsersSuccess = '[User/Api] Load Patient Users Success',\n  LoadPatientUsersFailure = '[User/Api] Load Patient Users Failure',\n}\n\n/**\n * add patient success action\n */\nexport class CreatePatientSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.CreatePatientSuccess;\n\n  constructor(public payload: { patient: IPatient }) {\n  }\n}\n\n/**\n * add patient failure action\n */\nexport class CreatePatientFailure implements Action {\n  public readonly type = PatientsApiActionTypes.CreatePatientFailure;\n\n  constructor(public payload: { messages: string }) {\n  }\n}\n\n/**\n * load all patients success action\n */\nexport class LoadPatientsSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientsSuccess;\n\n  constructor(public payload: { patients: IPatient[] }) {\n  }\n}\n\n/**\n * load all patients action\n */\nexport class LoadPatientsFailure implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientsFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * edit patient success action\n */\nexport class EditPatientSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.EditPatientSuccess;\n\n  constructor(public payload: { patient: IPatient }) {\n  }\n}\n\n/**\n * edit patient failure action\n */\nexport class EditPatientFailure implements Action {\n  public readonly type = PatientsApiActionTypes.EditPatientFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * load all patient users success action\n */\nexport class LoadPatientUsersSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientUsersSuccess;\n\n  constructor(public payload: { users: User[] }) {\n  }\n}\n\n/**\n * load all patient users failure action\n */\nexport class LoadPatientUsersFailure implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientUsersFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n// export types\nexport type PatientsApiActionsUnion =\n  | CreatePatientSuccess\n  | CreatePatientFailure\n  | EditPatientSuccess\n  | EditPatientFailure\n  | LoadPatientsSuccess\n  | LoadPatientsFailure\n  | LoadPatientUsersSuccess\n  | LoadPatientUsersFailure;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUser.html":{"url":"classes/CreateUser.html","title":"class - CreateUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users.actions.ts\n        \n\n            \n                Description\n            \n            \n                Create user Action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/users.actions.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersActionTypes.CreateUser\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:57\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum UsersActionTypes {\n  SelectUser = '[User] Select Current User',\n  ClearSelectedUser = '[User] Clear Current User',\n  InitializeUser = '[User] Initialize Current User',\n  CreateUserFormDialog = '[Users] Pop Up User Form',\n  CreateUser = '[User] Create User',\n  DismissUserFormDialog = '[User] Dismiss User Form Dialog',\n  LoadUsers = '[User] Load Users',\n  SearchUser = '[User] Search User',\n  SearchUserComplete = '[User] Search User Complete',\n  EditUser = '[User] Edit User',\n  DismissEditUser = '[User] Dismiss Edit User',\n  ResetUsersState = '[Users] Reset Users State',\n  DeleteUser = '[Users] Delete User',\n  LoadUserPatients = '[User] Load User Patients'\n}\n\n\n/**\n * Select user Action\n */\nexport class SelectUser implements Action {\n  readonly type = UsersActionTypes.SelectUser;\n\n  constructor(public payload: User) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedUser implements Action {\n  readonly type = UsersActionTypes.ClearSelectedUser;\n}\n\n/**\n * Initialize user Action\n */\nexport class InitializeUser implements Action {\n  readonly type = UsersActionTypes.InitializeUser;\n}\n\n/**\n * action to pop up user form\n */\nexport class CreateUserFormDialog implements Action {\n  readonly type = UsersActionTypes.CreateUserFormDialog;\n}\n\n/**\n * Create user Action\n */\nexport class CreateUser implements Action {\n  readonly type = UsersActionTypes.CreateUser;\n\n  constructor(public payload: { user: User }) { }\n}\n\n/**\n * CreateUser Dialog window dismissed\n */\nexport class DismissUserFormDialog implements Action {\n  readonly type = UsersActionTypes.DismissUserFormDialog;\n}\n\n/**\n * Load users Action\n */\nexport class LoadUsers implements Action {\n  readonly type = UsersActionTypes.LoadUsers;\n}\n\n/**\n * Search user action\n */\nexport class SearchUser implements Action {\n  readonly type = UsersActionTypes.SearchUser;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search user complete action\n */\nexport class SearchUserComplete implements Action {\n  readonly type = UsersActionTypes.SearchUserComplete;\n\n  constructor(public payload: User[]) { }\n}\n\n/**\n * action to submit and edit user\n */\nexport class EditUser implements Action {\n  readonly type = UsersActionTypes.EditUser;\n\n  constructor(public payload: User) {\n  }\n}\n\n/**\n * User Edit dismissed action\n */\nexport class DismissEditUser implements Action {\n  readonly type = UsersActionTypes.DismissEditUser;\n}\n\n/**\n * reset the user state\n */\nexport class ResetUsersState implements Action {\n  readonly type = UsersActionTypes.ResetUsersState;\n}\n\n/**\n * action to delete a user\n */\nexport class DeleteUser implements Action {\n  readonly type = UsersActionTypes.DeleteUser;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load user patients action\n */\nexport class LoadUserPatients implements Action {\n  readonly type = UsersActionTypes.LoadUserPatients;\n  constructor(public payload: number ) { }\n}\n\n/**\n * Export union of user Action\n */\nexport type UsersActionsUnion\n  = SelectUser\n  | ClearSelectedUser\n  | InitializeUser\n  | CreateUserFormDialog\n  | CreateUser\n  | DismissUserFormDialog\n  | LoadUsers\n  | SearchUser\n  | SearchUserComplete\n  | EditUser\n  | DismissEditUser\n  | ResetUsersState\n  | LoadUserPatients;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserFailure.html":{"url":"classes/CreateUserFailure.html","title":"class - CreateUserFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                add user failure action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/users-api.actions.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users-api.actions.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersApiActionTypes.CreateUserFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users-api.actions.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { IPatient } from '../models/patient.model';\n\n/**\n * definitions for action types\n */\nexport enum UsersApiActionTypes {\n  CreateUserSuccess = '[User/Api] Create User Success',\n  CreateUserFailure = '[User/Api] Create User Failure',\n  LoadUsersSuccess = '[User/Api] Load Users Success',\n  LoadUsersFailure = '[User/Api] Load Users Failure',\n  EditUserSuccess = '[User/Api] Edit User Success',\n  EditUserFailure = '[User/Api] Edit User Failure',\n  LoadUserPatientsSuccess = '[User/Api] Load User Patients Success',\n  LoadUserPatientsFailure = '[User/Api] Load User Patients Failure',\n}\n\n/**\n * add user success action\n */\nexport class CreateUserSuccess implements Action {\n  public readonly type = UsersApiActionTypes.CreateUserSuccess;\n\n  constructor(public payload: { user: User }) {\n  }\n}\n\n/**\n * add user failure action\n */\nexport class CreateUserFailure implements Action {\n  public readonly type = UsersApiActionTypes.CreateUserFailure;\n\n  constructor(public payload: { messages: string }) {\n  }\n}\n\n/**\n * load all users success action\n */\nexport class LoadUsersSuccess implements Action {\n  public readonly type = UsersApiActionTypes.LoadUsersSuccess;\n\n  constructor(public payload: { users: User[] }) {\n  }\n}\n\n/**\n * load all users failure action\n */\nexport class LoadUsersFailure implements Action {\n  public readonly type = UsersApiActionTypes.LoadUsersFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * edit user success action\n */\nexport class EditUserSuccess implements Action {\n  public readonly type = UsersApiActionTypes.EditUserSuccess;\n\n  constructor(public payload: { user: User }) {\n  }\n}\n\n/**\n * edit user failure action\n */\nexport class EditUserFailure implements Action {\n  public readonly type = UsersApiActionTypes.EditUserFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * load all user patients success action\n */\nexport class LoadUserPatientsSuccess implements Action {\n  public readonly type = UsersApiActionTypes.LoadUserPatientsSuccess;\n\n  constructor(public payload: { patients: IPatient[] }) {\n  }\n}\n\n/**\n * load all user patients failure action\n */\nexport class LoadUserPatientsFailure implements Action {\n  public readonly type = UsersApiActionTypes.LoadUserPatientsFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n// export types\nexport type UsersApiActionsUnion =\n  | CreateUserSuccess\n  | CreateUserFailure\n  | EditUserSuccess\n  | EditUserFailure\n  | LoadUsersSuccess\n  | LoadUsersFailure\n  | LoadUserPatientsSuccess\n  | LoadUserPatientsFailure\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserFormDialog.html":{"url":"classes/CreateUserFormDialog.html","title":"class - CreateUserFormDialog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserFormDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users.actions.ts\n        \n\n            \n                Description\n            \n            \n                action to pop up user form\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersActionTypes.CreateUserFormDialog\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:50\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum UsersActionTypes {\n  SelectUser = '[User] Select Current User',\n  ClearSelectedUser = '[User] Clear Current User',\n  InitializeUser = '[User] Initialize Current User',\n  CreateUserFormDialog = '[Users] Pop Up User Form',\n  CreateUser = '[User] Create User',\n  DismissUserFormDialog = '[User] Dismiss User Form Dialog',\n  LoadUsers = '[User] Load Users',\n  SearchUser = '[User] Search User',\n  SearchUserComplete = '[User] Search User Complete',\n  EditUser = '[User] Edit User',\n  DismissEditUser = '[User] Dismiss Edit User',\n  ResetUsersState = '[Users] Reset Users State',\n  DeleteUser = '[Users] Delete User',\n  LoadUserPatients = '[User] Load User Patients'\n}\n\n\n/**\n * Select user Action\n */\nexport class SelectUser implements Action {\n  readonly type = UsersActionTypes.SelectUser;\n\n  constructor(public payload: User) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedUser implements Action {\n  readonly type = UsersActionTypes.ClearSelectedUser;\n}\n\n/**\n * Initialize user Action\n */\nexport class InitializeUser implements Action {\n  readonly type = UsersActionTypes.InitializeUser;\n}\n\n/**\n * action to pop up user form\n */\nexport class CreateUserFormDialog implements Action {\n  readonly type = UsersActionTypes.CreateUserFormDialog;\n}\n\n/**\n * Create user Action\n */\nexport class CreateUser implements Action {\n  readonly type = UsersActionTypes.CreateUser;\n\n  constructor(public payload: { user: User }) { }\n}\n\n/**\n * CreateUser Dialog window dismissed\n */\nexport class DismissUserFormDialog implements Action {\n  readonly type = UsersActionTypes.DismissUserFormDialog;\n}\n\n/**\n * Load users Action\n */\nexport class LoadUsers implements Action {\n  readonly type = UsersActionTypes.LoadUsers;\n}\n\n/**\n * Search user action\n */\nexport class SearchUser implements Action {\n  readonly type = UsersActionTypes.SearchUser;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search user complete action\n */\nexport class SearchUserComplete implements Action {\n  readonly type = UsersActionTypes.SearchUserComplete;\n\n  constructor(public payload: User[]) { }\n}\n\n/**\n * action to submit and edit user\n */\nexport class EditUser implements Action {\n  readonly type = UsersActionTypes.EditUser;\n\n  constructor(public payload: User) {\n  }\n}\n\n/**\n * User Edit dismissed action\n */\nexport class DismissEditUser implements Action {\n  readonly type = UsersActionTypes.DismissEditUser;\n}\n\n/**\n * reset the user state\n */\nexport class ResetUsersState implements Action {\n  readonly type = UsersActionTypes.ResetUsersState;\n}\n\n/**\n * action to delete a user\n */\nexport class DeleteUser implements Action {\n  readonly type = UsersActionTypes.DeleteUser;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load user patients action\n */\nexport class LoadUserPatients implements Action {\n  readonly type = UsersActionTypes.LoadUserPatients;\n  constructor(public payload: number ) { }\n}\n\n/**\n * Export union of user Action\n */\nexport type UsersActionsUnion\n  = SelectUser\n  | ClearSelectedUser\n  | InitializeUser\n  | CreateUserFormDialog\n  | CreateUser\n  | DismissUserFormDialog\n  | LoadUsers\n  | SearchUser\n  | SearchUserComplete\n  | EditUser\n  | DismissEditUser\n  | ResetUsersState\n  | LoadUserPatients;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserSuccess.html":{"url":"classes/CreateUserSuccess.html","title":"class - CreateUserSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                add user success action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/users-api.actions.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users-api.actions.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersApiActionTypes.CreateUserSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users-api.actions.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { IPatient } from '../models/patient.model';\n\n/**\n * definitions for action types\n */\nexport enum UsersApiActionTypes {\n  CreateUserSuccess = '[User/Api] Create User Success',\n  CreateUserFailure = '[User/Api] Create User Failure',\n  LoadUsersSuccess = '[User/Api] Load Users Success',\n  LoadUsersFailure = '[User/Api] Load Users Failure',\n  EditUserSuccess = '[User/Api] Edit User Success',\n  EditUserFailure = '[User/Api] Edit User Failure',\n  LoadUserPatientsSuccess = '[User/Api] Load User Patients Success',\n  LoadUserPatientsFailure = '[User/Api] Load User Patients Failure',\n}\n\n/**\n * add user success action\n */\nexport class CreateUserSuccess implements Action {\n  public readonly type = UsersApiActionTypes.CreateUserSuccess;\n\n  constructor(public payload: { user: User }) {\n  }\n}\n\n/**\n * add user failure action\n */\nexport class CreateUserFailure implements Action {\n  public readonly type = UsersApiActionTypes.CreateUserFailure;\n\n  constructor(public payload: { messages: string }) {\n  }\n}\n\n/**\n * load all users success action\n */\nexport class LoadUsersSuccess implements Action {\n  public readonly type = UsersApiActionTypes.LoadUsersSuccess;\n\n  constructor(public payload: { users: User[] }) {\n  }\n}\n\n/**\n * load all users failure action\n */\nexport class LoadUsersFailure implements Action {\n  public readonly type = UsersApiActionTypes.LoadUsersFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * edit user success action\n */\nexport class EditUserSuccess implements Action {\n  public readonly type = UsersApiActionTypes.EditUserSuccess;\n\n  constructor(public payload: { user: User }) {\n  }\n}\n\n/**\n * edit user failure action\n */\nexport class EditUserFailure implements Action {\n  public readonly type = UsersApiActionTypes.EditUserFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * load all user patients success action\n */\nexport class LoadUserPatientsSuccess implements Action {\n  public readonly type = UsersApiActionTypes.LoadUserPatientsSuccess;\n\n  constructor(public payload: { patients: IPatient[] }) {\n  }\n}\n\n/**\n * load all user patients failure action\n */\nexport class LoadUserPatientsFailure implements Action {\n  public readonly type = UsersApiActionTypes.LoadUserPatientsFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n// export types\nexport type UsersApiActionsUnion =\n  | CreateUserSuccess\n  | CreateUserFailure\n  | EditUserSuccess\n  | EditUserFailure\n  | LoadUsersSuccess\n  | LoadUsersFailure\n  | LoadUserPatientsSuccess\n  | LoadUserPatientsFailure\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardLayoutComponent.html":{"url":"components/DashboardLayoutComponent.html","title":"component - DashboardLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/containers/dashboard-layout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-dashboard\n            \n\n\n\n\n            \n                templateUrl\n                ./dashboard-layout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getIsMobile\n                            \n                            \n                                    Public\n                                isModuleLoading\n                            \n                            \n                                    Public\n                                layoutConf\n                            \n                            \n                                    Private\n                                layoutConfSub\n                            \n                            \n                                    Public\n                                layoutInTransition\n                            \n                            \n                                    Private\n                                mediaSub\n                            \n                            \n                                    Private\n                                moduleLoaderSub\n                            \n                            \n                                    Public\n                                navPosition\n                            \n                            \n                                    Private\n                                routerEventSub\n                            \n                            \n                                    Public\n                                scrollConfig\n                            \n                            \n                                    Public\n                                sidebarStyle\n                            \n                            \n                                    Public\n                                themeService\n                            \n                            \n                                    Public\n                                topBarFixed\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeSidebar\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                scrollToTop\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, router: Router, translate: TranslateService, themeService: ThemeService, layout: LayoutService, media: ObservableMedia)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/containers/dashboard-layout.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                    ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        layout\n                                                  \n                                                        \n                                                                    LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        media\n                                                  \n                                                        \n                                                                    ObservableMedia\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            window:resize\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nwindow:resize(event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard-layout.component.ts:93\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeSidebar\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseSidebar()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard-layout.component.ts:139\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard-layout.component.ts:97\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard-layout.component.ts:127\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard-layout.component.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scrollToTop\n                            \n                            \n                        \n                    \n                \n                \n                    \nscrollToTop(selector: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard-layout.component.ts:120\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getIsMobile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getIsMobile:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard-layout.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isModuleLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isModuleLoading:     Boolean\n\n                    \n                \n                    \n                        \n                            Type :     Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard-layout.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            layoutConf\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layoutConf:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard-layout.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            layoutConfSub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layoutConfSub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard-layout.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            layoutInTransition\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layoutInTransition:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard-layout.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mediaSub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mediaSub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard-layout.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            moduleLoaderSub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        moduleLoaderSub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard-layout.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navPosition\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navPosition:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard-layout.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            routerEventSub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        routerEventSub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard-layout.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            scrollConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scrollConfig:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard-layout.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidebarStyle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidebarStyle:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard-layout.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            themeService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        themeService:     ThemeService\n\n                    \n                \n                    \n                        \n                            Type :     ThemeService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard-layout.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            topBarFixed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        topBarFixed:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard-layout.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translate:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/dashboard-layout.component.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, HostListener, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription, from } from 'rxjs';\nimport { NavigationEnd, ResolveEnd, ResolveStart, RouteConfigLoadEnd, RouteConfigLoadStart, Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ThemeService } from '../../core/services/theme.service';\nimport { LayoutService } from '../../core/services/layout.service';\nimport { ObservableMedia } from '@angular/flex-layout';\nimport { filter } from 'rxjs/operators';\nimport { Store, select } from '@ngrx/store';\n\nimport * as fromDashboard from '../reducers';\nimport * as layoutActions from '../actions/layout.actions';\n\n@Component({\n  selector: 'moio-dashboard',\n  templateUrl: './dashboard-layout.component.html'\n})\nexport class DashboardLayoutComponent implements OnInit, AfterViewInit, OnDestroy {\n  public isModuleLoading: Boolean = false;\n  private moduleLoaderSub: Subscription;\n  private layoutConfSub: Subscription;\n  private routerEventSub: Subscription;\n  private mediaSub: Subscription;\n  // private sidebarPS: PerfectScrollbar;\n\n  // private bodyPS: PerfectScrollbar;\n  // private headerFixedBodyPS: PerfectScrollbar;\n  public scrollConfig = {};\n  public layoutConf: any = {};\n  public sidebarStyle: string;\n  public navPosition: string;\n  public layoutInTransition: boolean;\n  public topBarFixed: boolean;\n  public getIsMobile: boolean;\n\n  constructor(\n    private store: Store,\n    private router: Router,\n    public translate: TranslateService,\n    public themeService: ThemeService,\n    private layout: LayoutService,\n    private media: ObservableMedia\n  ) {\n    // Close sidenav after route change in mobile\n    this.routerEventSub = router.events\n      .pipe(\n        filter(event => event instanceof NavigationEnd)\n      )\n      .subscribe((routeChange: NavigationEnd) => {\n        this.layout.adjustLayout({route: routeChange.url});\n      });\n\n    // Translator init\n    const browserLang: string = translate.getBrowserLang();\n    translate.use(browserLang.match(/en|de/) ? browserLang : 'de');\n  }\n\n  ngOnInit() {\n    this.store.pipe(select(fromDashboard.getSideNav)).subscribe(\n      sideNavStyle => this.sidebarStyle = sideNavStyle\n    );\n\n    this.store.pipe(select(fromDashboard.getNavPosition)).subscribe(\n      navPosition => this.navPosition = navPosition\n    );\n\n    this.store.pipe(select(fromDashboard.getLayoutInTransition)).subscribe(\n      layoutInTransition => this.layoutInTransition = layoutInTransition\n    );\n\n    this.store.pipe(select(fromDashboard.getTopbarFixed)).subscribe(\n      topBarFixed => this.topBarFixed = topBarFixed\n    );\n\n    this.store.pipe(select(fromDashboard.getIsMobile)).subscribe(\n      isMobile => this.getIsMobile = isMobile\n    );\n\n    this.layoutConf = this.layout.layoutConf;\n\n    // FOR MODULE LOADER FLAG\n    this.moduleLoaderSub = this.router.events.subscribe(event => {\n      if (event instanceof RouteConfigLoadStart || event instanceof ResolveStart) {\n        this.isModuleLoading = true;\n      }\n      if (event instanceof RouteConfigLoadEnd || event instanceof ResolveEnd) {\n        this.isModuleLoading = false;\n      }\n    });\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    this.layout.adjustLayout(event);\n  }\n\n  ngAfterViewInit() {\n    // this.layoutConfSub = this.layout-components.layoutConf$.subscribe(change => {\n    //   // this.initBodyPS(change)\n    // })\n  }\n\n  // initBodyPS(layoutConf:any = {}) {\n  //   if(layoutConf.navigationPos === 'side' && layoutConf.topbarFixed) {\n  //     if (this.bodyPS) this.bodyPS.destroy();\n  //     if (this.headerFixedBodyPS) this.headerFixedBodyPS.destroy();\n  //     this.headerFixedBodyPS = new PerfectScrollbar('.rightside-content-hold', {\n  //       suppressScrollX: true\n  //     });\n  //     this.scrollToTop('.rightside-content-hold');\n  //   } else {\n  //     if (this.bodyPS) this.bodyPS.destroy();\n  //     if (this.headerFixedBodyPS) this.headerFixedBodyPS.destroy();\n  //     this.bodyPS = new PerfectScrollbar('.main-content-wrap', {\n  //       suppressScrollX: true\n  //     });\n  //     this.scrollToTop('.main-content-wrap');\n  //   }\n  // }\n  scrollToTop(selector: string) {\n    if (document) {\n      const element = document.querySelector(selector);\n      element.scrollTop = 0;\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.moduleLoaderSub) {\n      this.moduleLoaderSub.unsubscribe();\n    }\n    if (this.layoutConfSub) {\n      this.layoutConfSub.unsubscribe();\n    }\n    if (this.routerEventSub) {\n      this.routerEventSub.unsubscribe();\n    }\n  }\n\n  closeSidebar() {\n    this.store.dispatch(new layoutActions.CloseSideNav('close'));\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n    \n    \n\n    \n    \n    \n\n    \n    \n      \n      \n      \n      \n\n      \n        \n        \n          \n            \n            \n          \n        \n        \n        \n        \n        \n      \n    \n    \n    \n\n    \n    \n      \n        \n      \n    \n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'DashboardLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardModule.html":{"url":"modules/DashboardModule.html","title":"module - DashboardModule","body":"\n                   \n\n\n\n\n    Modules\n    DashboardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_imports\n\n\n\ncluster_DashboardModule_exports\n\n\n\ncluster_DashboardModule_providers\n\n\n\n\nAuthLayoutComponent\n\nAuthLayoutComponent\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nAuthLayoutComponent->DashboardModule\n\n\n\n\n\nForgotPasswordComponent\n\nForgotPasswordComponent\n\nDashboardModule -->\n\nForgotPasswordComponent->DashboardModule\n\n\n\n\n\nLockscreenComponent\n\nLockscreenComponent\n\nDashboardModule -->\n\nLockscreenComponent->DashboardModule\n\n\n\n\n\nSigninComponent\n\nSigninComponent\n\nDashboardModule -->\n\nSigninComponent->DashboardModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nDashboardModule -->\n\nSignupComponent->DashboardModule\n\n\n\n\n\nDashboardLayoutComponent \n\nDashboardLayoutComponent \n\nDashboardLayoutComponent  -->\n\nDashboardModule->DashboardLayoutComponent \n\n\n\n\n\nDashboardRoutingModule \n\nDashboardRoutingModule \n\nDashboardRoutingModule  -->\n\nDashboardModule->DashboardRoutingModule \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nDashboardModule -->\n\nCoreModule->DashboardModule\n\n\n\n\n\nDashboardRoutingModule\n\nDashboardRoutingModule\n\nDashboardModule -->\n\nDashboardRoutingModule->DashboardModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nDashboardModule -->\n\nMaterialModule->DashboardModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nDashboardModule -->\n\nSharedModule->DashboardModule\n\n\n\n\n\nConfirmService\n\nConfirmService\n\nDashboardModule -->\n\nConfirmService->DashboardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/dashboard.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Dashboard Module\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AuthLayoutComponent\n                        \n                        \n                            ForgotPasswordComponent\n                        \n                        \n                            LockscreenComponent\n                        \n                        \n                            SigninComponent\n                        \n                        \n                            SignupComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            PatientFormComponent\n                        \n                        \n                            UserFormComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ConfirmService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                        \n                            DashboardRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DashboardLayoutComponent\n                        \n                        \n                            DashboardRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { MaterialModule } from '../material';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { NotificationsComponent } from './containers/layout-components/notifications/notifications.component';\nimport { BreadcrumbComponent } from './containers/layout-components/breadcrumb/breadcrumb.component';\nimport { HeaderSideComponent } from './containers/layout-components/header-side/header-side.component';\nimport { SidebarSideComponent } from './containers/layout-components/sidebar-side/sidebar-side.component';\nimport { SidebarTopComponent } from './containers/layout-components/sidebar-top/sidebar-top.component';\nimport { DashboardLayoutComponent } from './containers/dashboard-layout.component';\nimport { SidenavComponent } from './containers/layout-components/sidenav/sidenav.component';\nimport { BlankComponent } from './components/blank/blank.component';\nimport { UsersEffects } from './effects/users.effects';\nimport { PatientsEffects } from './effects/patients.effects';\nimport { NursingHomesEffects } from './effects/nursing-homes.effects';\nimport { ConfirmService } from '../core/services/confirm.service';\nimport { SharedModule } from './shared/shared.module';\n\n/* NGRX */\nimport { StoreModule } from '@ngrx/store';\nimport * as fromDashboard from './reducers';\nimport { EffectsModule } from '@ngrx/effects';\nimport { CoreModule } from '../core/core.module';\nimport { UserListComponent } from './components/users/user-list/user-list.component';\nimport { PatientListComponent } from './components/patients/patient-list/patient-list.component';\nimport { UsersComponent } from './components/users/users.component';\nimport { PatientsComponent } from './components/patients/patients.component';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { SplitPaneModule } from 'ng2-split-pane/lib/ng2-split-pane';\nimport { UserEditFormComponent } from './components/users/user-edit-form/user-edit-form.component';\nimport { PatientEditFormComponent } from './components/patients/patient-edit-form/patient-edit-form.component';\nimport { UserFormComponent } from './components/users/user-form/user-form.component';\nimport { PatientFormComponent } from './components/patients/patient-form/patient-form.component';\nimport { NursingHomeFormComponent } from './components/nursing-homes/nursing-home-form/nursing-home-form.component';\nimport { LoaderComponent } from '../core/components/loader/loader.component';\nimport { AppDropdownDirective } from '../core/directives/dropdown.directive';\nimport { DropdownLinkDirective } from '../core/directives/dropdown-link.directive';\nimport { DropdownAnchorDirective } from '../core/directives/dropdown-anchor.directive';\nimport { EgretSideNavToggleDirective } from '../core/directives/egret-side-nav-toggle.directive';\nimport { FontSizeDirective } from '../core/directives/font-size.directive';\nimport { ScrollToDirective } from '../core/directives/scroll-to.directive';\n\n\n/**\n * list of components in this module\n */\nexport const COMPONENTS = [\n  DashboardLayoutComponent,\n  NotificationsComponent,\n  BreadcrumbComponent,\n  HeaderSideComponent,\n  NotificationsComponent,\n  SidebarSideComponent,\n  SidebarTopComponent,\n  SidenavComponent,\n  BlankComponent,\n  BlankComponent,\n  UsersComponent,\n  PatientsComponent,\n  UserListComponent,\n  PatientListComponent,\n  UserEditFormComponent,\n  PatientEditFormComponent,\n  UserFormComponent,\n  PatientFormComponent,\n  NursingHomeFormComponent,\n\n  LoaderComponent,\n  AppDropdownDirective,\n  DropdownLinkDirective,\n  DropdownAnchorDirective,\n  EgretSideNavToggleDirective,\n  FontSizeDirective,\n  ScrollToDirective\n\n];\n\n/**\n * list of effects in this module\n */\nexport const EFFECTS = [\n  UsersEffects,\n  PatientsEffects,\n  NursingHomesEffects\n];\n\n/**\n * Dashboard Module\n */\n@NgModule({\n  declarations: [COMPONENTS],\n  imports: [\n    CommonModule,\n    CoreModule,\n    MaterialModule,\n    TranslateModule,\n    DashboardRoutingModule,\n    PerfectScrollbarModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    NgxDatatableModule,\n    StoreModule.forFeature('dashboard', fromDashboard.reducers),\n    EffectsModule.forFeature(EFFECTS),\n    SplitPaneModule\n  ],\n  exports: [\n    DashboardLayoutComponent,\n    DashboardRoutingModule\n  ],\n  providers: [\n    ConfirmService\n  ],\n  entryComponents: [UserFormComponent, PatientFormComponent\n  ]\n})\nexport class DashboardModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardRoutingModule.html":{"url":"modules/DashboardRoutingModule.html","title":"module - DashboardRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    DashboardRoutingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DashboardRoutingModule\n\n\n\ncluster_DashboardRoutingModule_imports\n\n\n\n\nMaterialModule\n\nMaterialModule\n\n\n\nDashboardRoutingModule\n\nDashboardRoutingModule\n\nDashboardRoutingModule -->\n\nMaterialModule->DashboardRoutingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/dashboard-routing.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from '../material';\nimport { BlankComponent } from './components/blank/blank.component';\nimport { UsersComponent } from './components/users/users.component';\nimport { PatientsComponent } from './components/patients/patients.component';\nimport { Routes } from '@angular/router';\nimport { DashboardLayoutComponent } from './containers/dashboard-layout.component';\nimport { AuthGuard } from '../auth/guards/auth.guard';\n\n/**\n * Dashboard module routings\n * protected by AuthGuard\n**/\nexport const dashboardRoutes: Routes = [\n  {\n    path: 'dashboard',\n    component: DashboardLayoutComponent,\n    canActivate: [AuthGuard],\n    data: {\n      title: 'Dashboard',\n      breadcrumb: 'Dashboard'\n    },\n    children: [\n      {\n        path: '',\n        redirectTo: 'blank',\n        pathMatch: 'full'\n      },\n      {\n        path: 'blank',\n        component: BlankComponent,\n        data: {\n          title: 'Blank',\n          breadcrumb: 'Blank'\n        }\n      }, {\n        path: 'users',\n        component: UsersComponent,\n        data: {\n          title: 'Users',\n          breadcrumb: 'Users'\n        }\n      }, {\n        path: 'patients',\n        component: PatientsComponent,\n        data: {\n          title: 'Patients',\n          breadcrumb: 'Patients'\n        }\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialModule,\n    RouterModule.forChild(dashboardRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class DashboardRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DashboardState.html":{"url":"interfaces/DashboardState.html","title":"interface - DashboardState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DashboardState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/reducers/index.ts\n        \n\n            \n                Description\n            \n            \n                compose dashboard state for global store\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        layout\n                                \n                                \n                                        nursingHomePage\n                                \n                                \n                                        nursingHomes\n                                \n                                \n                                        patientPage\n                                \n                                \n                                        patients\n                                \n                                \n                                        patientUsers\n                                \n                                \n                                        userPage\n                                \n                                \n                                        userPatients\n                                \n                                \n                                        users\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        layout\n                                    \n                                \n                                \n                                    \n                                        layout:     fromLayout.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromLayout.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nursingHomePage\n                                    \n                                \n                                \n                                    \n                                        nursingHomePage:     fromNursingHomePage.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromNursingHomePage.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nursingHomes\n                                    \n                                \n                                \n                                    \n                                        nursingHomes:     fromNursingHome.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromNursingHome.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        patientPage\n                                    \n                                \n                                \n                                    \n                                        patientPage:     fromPatientPage.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromPatientPage.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        patients\n                                    \n                                \n                                \n                                    \n                                        patients:     fromPatients.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromPatients.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        patientUsers\n                                    \n                                \n                                \n                                    \n                                        patientUsers:     fromPatientUsers.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromPatientUsers.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userPage\n                                    \n                                \n                                \n                                    \n                                        userPage:     fromUserPage.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromUserPage.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userPatients\n                                    \n                                \n                                \n                                    \n                                        userPatients:     fromUserPatients.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromUserPatients.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        users\n                                    \n                                \n                                \n                                    \n                                        users:     fromUsers.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromUsers.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as fromUserPage from './users-page.reducer';\nimport * as fromPatientPage from './patients-page.reducer';\nimport * as fromNursingHomePage from './nursing-homes-page.reducer';\nimport * as fromRoot from '../../reducers';\nimport * as fromUsers from './users.reducer';\nimport * as fromPatients from './patients.reducer';\nimport * as fromUserPatients from './user-patients.reducer';\nimport * as fromPatientUsers from './patient-users.reducer';\nimport * as fromNursingHome from './nursing-homes.reducer';\nimport * as fromLayout from './layout.reducer';\nimport { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\n/**\n * compose dashboard state for global store\n */\nexport interface DashboardState {\n  userPage: fromUserPage.State;\n  users: fromUsers.State;\n  nursingHomePage: fromNursingHomePage.State;\n  nursingHomes: fromNursingHome.State;\n  patientPage: fromPatientPage.State;\n  patients: fromPatients.State;\n  userPatients: fromUserPatients.State;\n  patientUsers: fromPatientUsers.State;\n  layout: fromLayout.State;\n}\n\n/**\n * assign state to global store\n */\nexport interface State extends fromRoot.State {\n  dashboard: DashboardState;\n}\n\n/**\n * compose action reducers\n */\nexport const reducers: ActionReducerMap = {\n  userPage: fromUserPage.reducer,\n  users: fromUsers.reducer,\n  nursingHomePage: fromNursingHomePage.reducer,\n  nursingHomes: fromNursingHome.reducer,\n  patientPage: fromPatientPage.reducer,\n  patients: fromPatients.reducer,\n  userPatients: fromUserPatients.reducer,\n  patientUsers: fromPatientUsers.reducer,\n  layout: fromLayout.reducer\n};\n\n// create feature selectors\nexport const getDashboardState = createFeatureSelector('dashboard');\n\n// ****************** USERS PAGE *************\nexport const getUsersPageState = createSelector(\n  getDashboardState,\n  (state: DashboardState) => state.userPage\n);\n\n// get error state of the userPage from the store\nexport const getUserPageError = createSelector(\n  getUsersPageState,\n  fromUserPage.getError\n);\n\n// get pending state of the userPage from the store\nexport const getUserPagePending = createSelector(\n  getUsersPageState,\n  fromUserPage.getPending\n);\n\n// get error state when creating user from the store\nexport const getUserCreationError = createSelector(\n  getUsersPageState,\n  fromUserPage.getCreateUserError\n);\n\n// get pending state when creating a user from the store\nexport const getUserCreationPending = createSelector(\n  getUsersPageState,\n  fromUserPage.getCreateUserPending\n);\n\n// get error state when editing a user from the store\nexport const getUserEditionError = createSelector(\n  getUsersPageState,\n  fromUserPage.getEditUserError\n);\n\n// get pending state when editing a user from the store\nexport const getUserEditionPending = createSelector(\n  getUsersPageState,\n  fromUserPage.getEditUserPending\n);\n\n// get pending state when loading user patients from the store\nexport const getLoadUserPatientsPending = createSelector(\n  getUsersPageState,\n  fromUserPage.getLoadUserPatientsPending\n);\n\n// get error state when loading user patients from the store\nexport const getLoadUserPatientsError = createSelector(\n  getUsersPageState,\n  fromUserPage.getLoadUserPatientsError\n);\n\n// ****************** USERS *************\nexport const getUsersState = createSelector(\n  getDashboardState,\n  (state: DashboardState) => state.users\n);\n\n// get the selected user id from state\nexport const getSelectedUserId = createSelector(\n  getUsersState,\n  fromUsers.getSelectedUserId\n);\n\n// deconstruct several functions from ngrx/entity\nexport const {\n  selectIds: getUsersIds,\n  selectEntities: getUserEntities,\n  selectAll: getAllUsers,\n  selectTotal: getTotalUsers\n} = fromUsers.adapater.getSelectors(getUsersState);\n\n// get the selected user from the state / users collection\nexport const getSelectedUser = createSelector(\n  getUserEntities,\n  getSelectedUserId,\n  (entities, id) => entities[id]\n);\n\n\n// ****************** USER PATIENTS *************\nexport const getUserPatientsState = createSelector(\n  getDashboardState,\n  (state: DashboardState) => state.userPatients\n);\n\n// deconstruct several functions from ngrx/entity\nexport const {\n  selectEntities: getUserPatientsEntities,\n  selectAll: getAllUserPatients,\n  selectTotal: getTotalUserPatients\n} = fromUserPatients.adapater.getSelectors(getUserPatientsState);\n\n\n\n// ****************** NURSING HOMES PAGE *************\nexport const getNursingHomesPageState = createSelector(\n  getDashboardState,\n  (state: DashboardState) => state.nursingHomePage\n);\n\n// get error state of the nursingHomePage from the store\nexport const getNursingHomePageError = createSelector(\n  getNursingHomesPageState,\n  fromNursingHomePage.getError\n);\n\n// get pending state of the nursingHomePage from the store\nexport const getNursingHomePagePending = createSelector(\n  getNursingHomesPageState,\n  fromNursingHomePage.getPending\n);\n\n// ****************** NURSING HOMES *************\nexport const getNursingHomesState = createSelector(\n  getDashboardState,\n  (state: DashboardState) => state.nursingHomes\n);\n\n// get the selected nursing home id from state\nexport const getSelectedNursingHomeId = createSelector(\n  getNursingHomesState,\n  fromNursingHome.getSelectedNursingHomeId\n);\n\n// deconstruct several functions from ngrx/entity\nexport const {\n  selectIds: getNursingHomesIds,\n  selectEntities: getNursingHomeEntities,\n  selectAll: getAllNursingHomes,\n  selectTotal: getTotalNursiomes\n} = fromNursingHome.adapater.getSelectors(getNursingHomesState);\n\n// get the selected nursing home from the state / nursing homes collection\nexport const getSelectedNursingHome = createSelector(\n  getNursingHomeEntities,\n  getSelectedNursingHomeId,\n  (entities, id) => entities[id]\n);\n\n// ****************** PATIENTS PAGE *************\nexport const getPatientsPageState = createSelector(\n  getDashboardState,\n  (state: DashboardState) => state.patientPage\n);\n\n// get error state of the patientPage from the store\nexport const getPatientPageError = createSelector(\n  getPatientsPageState,\n  fromPatientPage.getError\n);\n\n// get pending state of the patientPage from the store\nexport const getPatientPagePending = createSelector(\n  getPatientsPageState,\n  fromPatientPage.getPending\n);\n\n// get error state when creating patient from the store\nexport const getPatientCreationError = createSelector(\n  getPatientsPageState,\n  fromPatientPage.getCreatePatientError\n);\n\n// get pending state when creating a patient from the store\nexport const getPatientCreationPending = createSelector(\n  getPatientsPageState,\n  fromPatientPage.getCreatePatientPending\n);\n\n// get error state when editing a patient from the store\nexport const getPatientEditionError = createSelector(\n  getPatientsPageState,\n  fromPatientPage.getEditPatientError\n);\n\n// get pending state when editing a patient from the store\nexport const getPatientEditionPending = createSelector(\n  getPatientsPageState,\n  fromPatientPage.getEditPatientPending\n);\n\n// get pending state when loading patient users from the store\nexport const getLoadPatientUsersPending = createSelector(\n  getPatientsPageState,\n  fromPatientPage.getLoadPatientUsersPending\n);\n\n// get error state when loading patient users from the store\nexport const getLoadPatientUsersError = createSelector(\n  getPatientsPageState,\n  fromPatientPage.getLoadPatientUsersError\n);\n\n// ****************** PATIENTS *************\nexport const getPatientsState = createSelector(\n  getDashboardState,\n  (state: DashboardState) => state.patients\n);\n\n// get the selected patient id from state\nexport const getSelectedPatientId = createSelector(\n  getPatientsState,\n  fromPatients.getSelectedPatientId\n);\n\n// deconstruct several functions from ngrx/entity\nexport const {\n  selectIds: getPatientsIds,\n  selectEntities: getPatientEntities,\n  selectAll: getAllPatients,\n  selectTotal: getTotalPatients\n} = fromPatients.adapater.getSelectors(getPatientsState);\n\n// get the selected patient from the state / patients collection\nexport const getSelectedPatient = createSelector(\n  getPatientEntities,\n  getSelectedPatientId,\n  (entities, id) => entities[id]\n);\n\n// ****************** PATIENT USERS *************\nexport const getPatientUsersState = createSelector(\n  getDashboardState,\n  (state: DashboardState) => state.patientUsers\n);\n\n// deconstruct several functions from ngrx/entity\nexport const {\n  selectEntities: getPatientUsersEntities,\n  selectAll: getAllPatientUsers,\n  selectTotal: getTotalPatientUsers\n} = fromPatientUsers.adapater.getSelectors(getPatientUsersState);\n\n// ****************** DASHBOARD LAYOUT *************\nexport const getLayoutState = createSelector(\n  getDashboardState,\n  (state: DashboardState) => state.layout\n);\n\n/**\n * Layout configurations selectors\n */\nexport const getSideNav = createSelector(getLayoutState, fromLayout.getSideNav);\nexport const getNavPosition = createSelector(getLayoutState, fromLayout.getNavPosition);\nexport const getDirection = createSelector(getLayoutState, fromLayout.getDirection);\nexport const getLayoutInTransition = createSelector(getLayoutState, fromLayout.getLayoutInTransition);\nexport const getIsMobile = createSelector(getLayoutState, fromLayout.getIsMobile);\nexport const getUseBreadcrumb = createSelector(getLayoutState, fromLayout.getUseBreadcrumb);\nexport const getBreadcrumb = createSelector(getLayoutState, fromLayout.getBreadcrumb);\nexport const getTopbarFixed = createSelector(getLayoutState, fromLayout.getTopbarFixed);\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeletePatient.html":{"url":"classes/DeletePatient.html","title":"class - DeletePatient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeletePatient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients.actions.ts\n        \n\n            \n                Description\n            \n            \n                action to delete a patient\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/patients.actions.ts:122\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:124\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsActionTypes.DeletePatient\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:122\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { IPatient } from '../models/patient.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum PatientsActionTypes {\n  SelectPatient = '[Patient] Select Current Patient',\n  ClearSelectedPatient = '[Patient] Clear Current Patient',\n  InitializePatient = '[Patient] Initialize Current Patient',\n  CreatePatientFormDialog = '[Patients] Pop Up Patient Form',\n  CreatePatient = '[Patient] Create Patient',\n  DismissPatientFormDialog = '[Patient] Dismiss Patient Form Dialog',\n  LoadPatients = '[Patient] Load Patients',\n  SearchPatient = '[Patient] Search Patient',\n  SearchPatientComplete = '[Patient] Search Patient Complete',\n  EditPatient = '[Patient] Edit Patient',\n  DismissEditPatient = '[Patient] Dismiss Edit Patient',\n  ResetPatientsState = '[Patients] Reset Patients State',\n  DeletePatient ='[Patients] Delete Patient',\n  LoadPatientUsers = '[User] Load User Patients'\n}\n\n\n/**\n * Select patient Action\n */\nexport class SelectPatient implements Action {\n  readonly type = PatientsActionTypes.SelectPatient;\n\n  constructor(public payload: IPatient) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedPatient implements Action {\n  readonly type = PatientsActionTypes.ClearSelectedPatient;\n}\n\n/**\n * Initialize patient Action\n */\nexport class InitializePatient implements Action {\n  readonly type = PatientsActionTypes.InitializePatient;\n}\n\n/**\n * action to pop up patient form\n */\nexport class CreatePatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.CreatePatientFormDialog;\n}\n\n/**\n * Create patient Action\n */\nexport class CreatePatient implements Action {\n  readonly type = PatientsActionTypes.CreatePatient;\n\n  constructor(public payload: { patient: IPatient }) { }\n}\n\n/**\n * CreatePatient Dialog window dismissed\n */\nexport class DismissPatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.DismissPatientFormDialog;\n}\n\n/**\n * Load patients Action\n */\nexport class LoadPatients implements Action {\n  readonly type = PatientsActionTypes.LoadPatients;\n}\n\n/**\n * Search patient Action\n */\nexport class SearchPatient implements Action {\n  readonly type = PatientsActionTypes.SearchPatient;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search patient complete Action\n */\nexport class SearchPatientComplete implements Action {\n  readonly type = PatientsActionTypes.SearchPatientComplete;\n\n  constructor(public payload: IPatient[]) { }\n}\n\n/**\n * action to submit and edit patient\n */\nexport class EditPatient implements Action {\n  readonly type = PatientsActionTypes.EditPatient;\n\n  constructor(public payload: IPatient) {\n  }\n}\n\n/**\n * Patient Edit dismissed action\n */\nexport class DismissEditPatient implements Action {\n  readonly type = PatientsActionTypes.DismissEditPatient;\n}\n\n/**\n * reset the patient state\n */\nexport class ResetPatientsState implements Action {\n  readonly type = PatientsActionTypes.ResetPatientsState;\n}\n\n/**\n * action to delete a patient\n */\nexport class DeletePatient implements Action {\n  readonly type = PatientsActionTypes.DeletePatient;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load patient users action\n */\nexport class LoadPatientUsers implements Action {\n  readonly type = PatientsActionTypes.LoadPatientUsers;\n  constructor(public payload: number ) { }\n}\n\n\n/**\n * Export union of patient Action\n */\nexport type PatientsActionsUnion\n  = SelectPatient\n  | ClearSelectedPatient\n  | InitializePatient\n  | CreatePatientFormDialog\n  | CreatePatient\n  | DismissPatientFormDialog\n  | LoadPatients\n  | SearchPatient\n  | SearchPatientComplete\n  | EditPatient\n  | DismissEditPatient\n  | ResetPatientsState\n  | LoadPatientUsers;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUser.html":{"url":"classes/DeleteUser.html","title":"class - DeleteUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users.actions.ts\n        \n\n            \n                Description\n            \n            \n                action to delete a user\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/users.actions.ts:122\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:124\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersActionTypes.DeleteUser\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:122\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum UsersActionTypes {\n  SelectUser = '[User] Select Current User',\n  ClearSelectedUser = '[User] Clear Current User',\n  InitializeUser = '[User] Initialize Current User',\n  CreateUserFormDialog = '[Users] Pop Up User Form',\n  CreateUser = '[User] Create User',\n  DismissUserFormDialog = '[User] Dismiss User Form Dialog',\n  LoadUsers = '[User] Load Users',\n  SearchUser = '[User] Search User',\n  SearchUserComplete = '[User] Search User Complete',\n  EditUser = '[User] Edit User',\n  DismissEditUser = '[User] Dismiss Edit User',\n  ResetUsersState = '[Users] Reset Users State',\n  DeleteUser = '[Users] Delete User',\n  LoadUserPatients = '[User] Load User Patients'\n}\n\n\n/**\n * Select user Action\n */\nexport class SelectUser implements Action {\n  readonly type = UsersActionTypes.SelectUser;\n\n  constructor(public payload: User) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedUser implements Action {\n  readonly type = UsersActionTypes.ClearSelectedUser;\n}\n\n/**\n * Initialize user Action\n */\nexport class InitializeUser implements Action {\n  readonly type = UsersActionTypes.InitializeUser;\n}\n\n/**\n * action to pop up user form\n */\nexport class CreateUserFormDialog implements Action {\n  readonly type = UsersActionTypes.CreateUserFormDialog;\n}\n\n/**\n * Create user Action\n */\nexport class CreateUser implements Action {\n  readonly type = UsersActionTypes.CreateUser;\n\n  constructor(public payload: { user: User }) { }\n}\n\n/**\n * CreateUser Dialog window dismissed\n */\nexport class DismissUserFormDialog implements Action {\n  readonly type = UsersActionTypes.DismissUserFormDialog;\n}\n\n/**\n * Load users Action\n */\nexport class LoadUsers implements Action {\n  readonly type = UsersActionTypes.LoadUsers;\n}\n\n/**\n * Search user action\n */\nexport class SearchUser implements Action {\n  readonly type = UsersActionTypes.SearchUser;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search user complete action\n */\nexport class SearchUserComplete implements Action {\n  readonly type = UsersActionTypes.SearchUserComplete;\n\n  constructor(public payload: User[]) { }\n}\n\n/**\n * action to submit and edit user\n */\nexport class EditUser implements Action {\n  readonly type = UsersActionTypes.EditUser;\n\n  constructor(public payload: User) {\n  }\n}\n\n/**\n * User Edit dismissed action\n */\nexport class DismissEditUser implements Action {\n  readonly type = UsersActionTypes.DismissEditUser;\n}\n\n/**\n * reset the user state\n */\nexport class ResetUsersState implements Action {\n  readonly type = UsersActionTypes.ResetUsersState;\n}\n\n/**\n * action to delete a user\n */\nexport class DeleteUser implements Action {\n  readonly type = UsersActionTypes.DeleteUser;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load user patients action\n */\nexport class LoadUserPatients implements Action {\n  readonly type = UsersActionTypes.LoadUserPatients;\n  constructor(public payload: number ) { }\n}\n\n/**\n * Export union of user Action\n */\nexport type UsersActionsUnion\n  = SelectUser\n  | ClearSelectedUser\n  | InitializeUser\n  | CreateUserFormDialog\n  | CreateUser\n  | DismissUserFormDialog\n  | LoadUsers\n  | SearchUser\n  | SearchUserComplete\n  | EditUser\n  | DismissEditUser\n  | ResetUsersState\n  | LoadUserPatients;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DismissEditNursingHome.html":{"url":"classes/DismissEditNursingHome.html","title":"class - DismissEditNursingHome","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DismissEditNursingHome\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/nursing-homes.actions.ts\n        \n\n            \n                Description\n            \n            \n                NursingHome Edit dismissed action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : NursingHomesActionTypes.DismissEditNursingHome\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes.actions.ts:106\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { NursingHome } from '../models/nursing-home.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum NursingHomesActionTypes {\n  SelectNursingHome = '[NursingHome] Select Current NursingHome',\n  ClearSelectedNursingHome = '[NursingHome] Clear Current NursingHome',\n  InitializeNursingHome = '[NursingHome] Initialize Current NursingHome',\n  PopUpNursingHomeForm = '[NursingHome] Pop Up NursingHome Form',\n  CreateNursingHome = '[NursingHome] Create NursingHome',\n  DismissPoppedUpNursingHomeForm = '[NursingHome] Dismiss Create NursingHome',\n  LoadNursingHomes = '[NursingHome] Load Nursing Homes',\n  SearchNursingHome = '[NursingHome] Search NursingHome',\n  SearchNursingHomeComplete = '[NursingHome] Search NursingHome Complete',\n  EditNursingHome = '[NursingHome] Edit NursingHome',\n  DismissEditNursingHome = '[NursingHome] Dismiss Edit NursingHome',\n  ResetNursingHomesState = '[NursingHomes] Reset NursingHomes State'\n}\n\n\n/**\n * Select nursingHome Action\n */\nexport class SelectNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SelectNursingHome;\n\n  constructor(public payload: NursingHome) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.ClearSelectedNursingHome;\n}\n\n/**\n * Initialize nursingHome Action\n */\nexport class InitializeNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.InitializeNursingHome;\n}\n\n/**\n * action to pop up nursingHome form\n */\nexport class PopUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.PopUpNursingHomeForm;\n}\n\n/**\n * Create nursingHome Action\n */\nexport class CreateNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.CreateNursingHome;\n\n  constructor(public payload: { nursingHome: NursingHome }) { }\n}\n\n/**\n * CreateNursingHome Dialog window dismissed\n */\nexport class DismissPoppedUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.DismissPoppedUpNursingHomeForm;\n}\n\n/**\n * Load nursingHomes Action\n */\nexport class LoadNursingHomes implements Action {\n  readonly type = NursingHomesActionTypes.LoadNursingHomes;\n}\n\n/**\n * Search nursingHome Action\n */\nexport class SearchNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHome;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search nursingHome complete Action\n */\nexport class SearchNursingHomeComplete implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHomeComplete;\n\n  constructor(public payload: NursingHome[]) { }\n}\n\n/**\n * action to submit and edit nursingHome\n */\nexport class EditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.EditNursingHome;\n\n  constructor(public payload: Update) {\n  }\n}\n\n/**\n * NursingHome Edit dismissed action\n */\nexport class DismissEditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.DismissEditNursingHome;\n}\n\n/**\n * reset the nursingHome state\n */\nexport class ResetNursingHomesState implements Action {\n  readonly type = NursingHomesActionTypes.ResetNursingHomesState;\n}\n\n/**\n * Export union of nursingHome Action\n */\nexport type NursingHomesActionsUnion\n  = SelectNursingHome\n  | ClearSelectedNursingHome\n  | InitializeNursingHome\n  | PopUpNursingHomeForm\n  | CreateNursingHome\n  | DismissPoppedUpNursingHomeForm\n  | LoadNursingHomes\n  | SearchNursingHome\n  | SearchNursingHomeComplete\n  | EditNursingHome\n  | DismissEditNursingHome\n  | ResetNursingHomesState;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DismissEditPatient.html":{"url":"classes/DismissEditPatient.html","title":"class - DismissEditPatient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DismissEditPatient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients.actions.ts\n        \n\n            \n                Description\n            \n            \n                Patient Edit dismissed action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsActionTypes.DismissEditPatient\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:108\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { IPatient } from '../models/patient.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum PatientsActionTypes {\n  SelectPatient = '[Patient] Select Current Patient',\n  ClearSelectedPatient = '[Patient] Clear Current Patient',\n  InitializePatient = '[Patient] Initialize Current Patient',\n  CreatePatientFormDialog = '[Patients] Pop Up Patient Form',\n  CreatePatient = '[Patient] Create Patient',\n  DismissPatientFormDialog = '[Patient] Dismiss Patient Form Dialog',\n  LoadPatients = '[Patient] Load Patients',\n  SearchPatient = '[Patient] Search Patient',\n  SearchPatientComplete = '[Patient] Search Patient Complete',\n  EditPatient = '[Patient] Edit Patient',\n  DismissEditPatient = '[Patient] Dismiss Edit Patient',\n  ResetPatientsState = '[Patients] Reset Patients State',\n  DeletePatient ='[Patients] Delete Patient',\n  LoadPatientUsers = '[User] Load User Patients'\n}\n\n\n/**\n * Select patient Action\n */\nexport class SelectPatient implements Action {\n  readonly type = PatientsActionTypes.SelectPatient;\n\n  constructor(public payload: IPatient) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedPatient implements Action {\n  readonly type = PatientsActionTypes.ClearSelectedPatient;\n}\n\n/**\n * Initialize patient Action\n */\nexport class InitializePatient implements Action {\n  readonly type = PatientsActionTypes.InitializePatient;\n}\n\n/**\n * action to pop up patient form\n */\nexport class CreatePatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.CreatePatientFormDialog;\n}\n\n/**\n * Create patient Action\n */\nexport class CreatePatient implements Action {\n  readonly type = PatientsActionTypes.CreatePatient;\n\n  constructor(public payload: { patient: IPatient }) { }\n}\n\n/**\n * CreatePatient Dialog window dismissed\n */\nexport class DismissPatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.DismissPatientFormDialog;\n}\n\n/**\n * Load patients Action\n */\nexport class LoadPatients implements Action {\n  readonly type = PatientsActionTypes.LoadPatients;\n}\n\n/**\n * Search patient Action\n */\nexport class SearchPatient implements Action {\n  readonly type = PatientsActionTypes.SearchPatient;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search patient complete Action\n */\nexport class SearchPatientComplete implements Action {\n  readonly type = PatientsActionTypes.SearchPatientComplete;\n\n  constructor(public payload: IPatient[]) { }\n}\n\n/**\n * action to submit and edit patient\n */\nexport class EditPatient implements Action {\n  readonly type = PatientsActionTypes.EditPatient;\n\n  constructor(public payload: IPatient) {\n  }\n}\n\n/**\n * Patient Edit dismissed action\n */\nexport class DismissEditPatient implements Action {\n  readonly type = PatientsActionTypes.DismissEditPatient;\n}\n\n/**\n * reset the patient state\n */\nexport class ResetPatientsState implements Action {\n  readonly type = PatientsActionTypes.ResetPatientsState;\n}\n\n/**\n * action to delete a patient\n */\nexport class DeletePatient implements Action {\n  readonly type = PatientsActionTypes.DeletePatient;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load patient users action\n */\nexport class LoadPatientUsers implements Action {\n  readonly type = PatientsActionTypes.LoadPatientUsers;\n  constructor(public payload: number ) { }\n}\n\n\n/**\n * Export union of patient Action\n */\nexport type PatientsActionsUnion\n  = SelectPatient\n  | ClearSelectedPatient\n  | InitializePatient\n  | CreatePatientFormDialog\n  | CreatePatient\n  | DismissPatientFormDialog\n  | LoadPatients\n  | SearchPatient\n  | SearchPatientComplete\n  | EditPatient\n  | DismissEditPatient\n  | ResetPatientsState\n  | LoadPatientUsers;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DismissEditUser.html":{"url":"classes/DismissEditUser.html","title":"class - DismissEditUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DismissEditUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users.actions.ts\n        \n\n            \n                Description\n            \n            \n                User Edit dismissed action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersActionTypes.DismissEditUser\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:108\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum UsersActionTypes {\n  SelectUser = '[User] Select Current User',\n  ClearSelectedUser = '[User] Clear Current User',\n  InitializeUser = '[User] Initialize Current User',\n  CreateUserFormDialog = '[Users] Pop Up User Form',\n  CreateUser = '[User] Create User',\n  DismissUserFormDialog = '[User] Dismiss User Form Dialog',\n  LoadUsers = '[User] Load Users',\n  SearchUser = '[User] Search User',\n  SearchUserComplete = '[User] Search User Complete',\n  EditUser = '[User] Edit User',\n  DismissEditUser = '[User] Dismiss Edit User',\n  ResetUsersState = '[Users] Reset Users State',\n  DeleteUser = '[Users] Delete User',\n  LoadUserPatients = '[User] Load User Patients'\n}\n\n\n/**\n * Select user Action\n */\nexport class SelectUser implements Action {\n  readonly type = UsersActionTypes.SelectUser;\n\n  constructor(public payload: User) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedUser implements Action {\n  readonly type = UsersActionTypes.ClearSelectedUser;\n}\n\n/**\n * Initialize user Action\n */\nexport class InitializeUser implements Action {\n  readonly type = UsersActionTypes.InitializeUser;\n}\n\n/**\n * action to pop up user form\n */\nexport class CreateUserFormDialog implements Action {\n  readonly type = UsersActionTypes.CreateUserFormDialog;\n}\n\n/**\n * Create user Action\n */\nexport class CreateUser implements Action {\n  readonly type = UsersActionTypes.CreateUser;\n\n  constructor(public payload: { user: User }) { }\n}\n\n/**\n * CreateUser Dialog window dismissed\n */\nexport class DismissUserFormDialog implements Action {\n  readonly type = UsersActionTypes.DismissUserFormDialog;\n}\n\n/**\n * Load users Action\n */\nexport class LoadUsers implements Action {\n  readonly type = UsersActionTypes.LoadUsers;\n}\n\n/**\n * Search user action\n */\nexport class SearchUser implements Action {\n  readonly type = UsersActionTypes.SearchUser;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search user complete action\n */\nexport class SearchUserComplete implements Action {\n  readonly type = UsersActionTypes.SearchUserComplete;\n\n  constructor(public payload: User[]) { }\n}\n\n/**\n * action to submit and edit user\n */\nexport class EditUser implements Action {\n  readonly type = UsersActionTypes.EditUser;\n\n  constructor(public payload: User) {\n  }\n}\n\n/**\n * User Edit dismissed action\n */\nexport class DismissEditUser implements Action {\n  readonly type = UsersActionTypes.DismissEditUser;\n}\n\n/**\n * reset the user state\n */\nexport class ResetUsersState implements Action {\n  readonly type = UsersActionTypes.ResetUsersState;\n}\n\n/**\n * action to delete a user\n */\nexport class DeleteUser implements Action {\n  readonly type = UsersActionTypes.DeleteUser;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load user patients action\n */\nexport class LoadUserPatients implements Action {\n  readonly type = UsersActionTypes.LoadUserPatients;\n  constructor(public payload: number ) { }\n}\n\n/**\n * Export union of user Action\n */\nexport type UsersActionsUnion\n  = SelectUser\n  | ClearSelectedUser\n  | InitializeUser\n  | CreateUserFormDialog\n  | CreateUser\n  | DismissUserFormDialog\n  | LoadUsers\n  | SearchUser\n  | SearchUserComplete\n  | EditUser\n  | DismissEditUser\n  | ResetUsersState\n  | LoadUserPatients;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DismissPatientFormDialog.html":{"url":"classes/DismissPatientFormDialog.html","title":"class - DismissPatientFormDialog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DismissPatientFormDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients.actions.ts\n        \n\n            \n                Description\n            \n            \n                CreatePatient Dialog window dismissed\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsActionTypes.DismissPatientFormDialog\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:66\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { IPatient } from '../models/patient.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum PatientsActionTypes {\n  SelectPatient = '[Patient] Select Current Patient',\n  ClearSelectedPatient = '[Patient] Clear Current Patient',\n  InitializePatient = '[Patient] Initialize Current Patient',\n  CreatePatientFormDialog = '[Patients] Pop Up Patient Form',\n  CreatePatient = '[Patient] Create Patient',\n  DismissPatientFormDialog = '[Patient] Dismiss Patient Form Dialog',\n  LoadPatients = '[Patient] Load Patients',\n  SearchPatient = '[Patient] Search Patient',\n  SearchPatientComplete = '[Patient] Search Patient Complete',\n  EditPatient = '[Patient] Edit Patient',\n  DismissEditPatient = '[Patient] Dismiss Edit Patient',\n  ResetPatientsState = '[Patients] Reset Patients State',\n  DeletePatient ='[Patients] Delete Patient',\n  LoadPatientUsers = '[User] Load User Patients'\n}\n\n\n/**\n * Select patient Action\n */\nexport class SelectPatient implements Action {\n  readonly type = PatientsActionTypes.SelectPatient;\n\n  constructor(public payload: IPatient) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedPatient implements Action {\n  readonly type = PatientsActionTypes.ClearSelectedPatient;\n}\n\n/**\n * Initialize patient Action\n */\nexport class InitializePatient implements Action {\n  readonly type = PatientsActionTypes.InitializePatient;\n}\n\n/**\n * action to pop up patient form\n */\nexport class CreatePatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.CreatePatientFormDialog;\n}\n\n/**\n * Create patient Action\n */\nexport class CreatePatient implements Action {\n  readonly type = PatientsActionTypes.CreatePatient;\n\n  constructor(public payload: { patient: IPatient }) { }\n}\n\n/**\n * CreatePatient Dialog window dismissed\n */\nexport class DismissPatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.DismissPatientFormDialog;\n}\n\n/**\n * Load patients Action\n */\nexport class LoadPatients implements Action {\n  readonly type = PatientsActionTypes.LoadPatients;\n}\n\n/**\n * Search patient Action\n */\nexport class SearchPatient implements Action {\n  readonly type = PatientsActionTypes.SearchPatient;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search patient complete Action\n */\nexport class SearchPatientComplete implements Action {\n  readonly type = PatientsActionTypes.SearchPatientComplete;\n\n  constructor(public payload: IPatient[]) { }\n}\n\n/**\n * action to submit and edit patient\n */\nexport class EditPatient implements Action {\n  readonly type = PatientsActionTypes.EditPatient;\n\n  constructor(public payload: IPatient) {\n  }\n}\n\n/**\n * Patient Edit dismissed action\n */\nexport class DismissEditPatient implements Action {\n  readonly type = PatientsActionTypes.DismissEditPatient;\n}\n\n/**\n * reset the patient state\n */\nexport class ResetPatientsState implements Action {\n  readonly type = PatientsActionTypes.ResetPatientsState;\n}\n\n/**\n * action to delete a patient\n */\nexport class DeletePatient implements Action {\n  readonly type = PatientsActionTypes.DeletePatient;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load patient users action\n */\nexport class LoadPatientUsers implements Action {\n  readonly type = PatientsActionTypes.LoadPatientUsers;\n  constructor(public payload: number ) { }\n}\n\n\n/**\n * Export union of patient Action\n */\nexport type PatientsActionsUnion\n  = SelectPatient\n  | ClearSelectedPatient\n  | InitializePatient\n  | CreatePatientFormDialog\n  | CreatePatient\n  | DismissPatientFormDialog\n  | LoadPatients\n  | SearchPatient\n  | SearchPatientComplete\n  | EditPatient\n  | DismissEditPatient\n  | ResetPatientsState\n  | LoadPatientUsers;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DismissPoppedUpNursingHomeForm.html":{"url":"classes/DismissPoppedUpNursingHomeForm.html","title":"class - DismissPoppedUpNursingHomeForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DismissPoppedUpNursingHomeForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/nursing-homes.actions.ts\n        \n\n            \n                Description\n            \n            \n                CreateNursingHome Dialog window dismissed\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : NursingHomesActionTypes.DismissPoppedUpNursingHomeForm\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes.actions.ts:64\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { NursingHome } from '../models/nursing-home.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum NursingHomesActionTypes {\n  SelectNursingHome = '[NursingHome] Select Current NursingHome',\n  ClearSelectedNursingHome = '[NursingHome] Clear Current NursingHome',\n  InitializeNursingHome = '[NursingHome] Initialize Current NursingHome',\n  PopUpNursingHomeForm = '[NursingHome] Pop Up NursingHome Form',\n  CreateNursingHome = '[NursingHome] Create NursingHome',\n  DismissPoppedUpNursingHomeForm = '[NursingHome] Dismiss Create NursingHome',\n  LoadNursingHomes = '[NursingHome] Load Nursing Homes',\n  SearchNursingHome = '[NursingHome] Search NursingHome',\n  SearchNursingHomeComplete = '[NursingHome] Search NursingHome Complete',\n  EditNursingHome = '[NursingHome] Edit NursingHome',\n  DismissEditNursingHome = '[NursingHome] Dismiss Edit NursingHome',\n  ResetNursingHomesState = '[NursingHomes] Reset NursingHomes State'\n}\n\n\n/**\n * Select nursingHome Action\n */\nexport class SelectNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SelectNursingHome;\n\n  constructor(public payload: NursingHome) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.ClearSelectedNursingHome;\n}\n\n/**\n * Initialize nursingHome Action\n */\nexport class InitializeNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.InitializeNursingHome;\n}\n\n/**\n * action to pop up nursingHome form\n */\nexport class PopUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.PopUpNursingHomeForm;\n}\n\n/**\n * Create nursingHome Action\n */\nexport class CreateNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.CreateNursingHome;\n\n  constructor(public payload: { nursingHome: NursingHome }) { }\n}\n\n/**\n * CreateNursingHome Dialog window dismissed\n */\nexport class DismissPoppedUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.DismissPoppedUpNursingHomeForm;\n}\n\n/**\n * Load nursingHomes Action\n */\nexport class LoadNursingHomes implements Action {\n  readonly type = NursingHomesActionTypes.LoadNursingHomes;\n}\n\n/**\n * Search nursingHome Action\n */\nexport class SearchNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHome;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search nursingHome complete Action\n */\nexport class SearchNursingHomeComplete implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHomeComplete;\n\n  constructor(public payload: NursingHome[]) { }\n}\n\n/**\n * action to submit and edit nursingHome\n */\nexport class EditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.EditNursingHome;\n\n  constructor(public payload: Update) {\n  }\n}\n\n/**\n * NursingHome Edit dismissed action\n */\nexport class DismissEditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.DismissEditNursingHome;\n}\n\n/**\n * reset the nursingHome state\n */\nexport class ResetNursingHomesState implements Action {\n  readonly type = NursingHomesActionTypes.ResetNursingHomesState;\n}\n\n/**\n * Export union of nursingHome Action\n */\nexport type NursingHomesActionsUnion\n  = SelectNursingHome\n  | ClearSelectedNursingHome\n  | InitializeNursingHome\n  | PopUpNursingHomeForm\n  | CreateNursingHome\n  | DismissPoppedUpNursingHomeForm\n  | LoadNursingHomes\n  | SearchNursingHome\n  | SearchNursingHomeComplete\n  | EditNursingHome\n  | DismissEditNursingHome\n  | ResetNursingHomesState;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DismissUserFormDialog.html":{"url":"classes/DismissUserFormDialog.html","title":"class - DismissUserFormDialog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DismissUserFormDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users.actions.ts\n        \n\n            \n                Description\n            \n            \n                CreateUser Dialog window dismissed\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersActionTypes.DismissUserFormDialog\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:66\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum UsersActionTypes {\n  SelectUser = '[User] Select Current User',\n  ClearSelectedUser = '[User] Clear Current User',\n  InitializeUser = '[User] Initialize Current User',\n  CreateUserFormDialog = '[Users] Pop Up User Form',\n  CreateUser = '[User] Create User',\n  DismissUserFormDialog = '[User] Dismiss User Form Dialog',\n  LoadUsers = '[User] Load Users',\n  SearchUser = '[User] Search User',\n  SearchUserComplete = '[User] Search User Complete',\n  EditUser = '[User] Edit User',\n  DismissEditUser = '[User] Dismiss Edit User',\n  ResetUsersState = '[Users] Reset Users State',\n  DeleteUser = '[Users] Delete User',\n  LoadUserPatients = '[User] Load User Patients'\n}\n\n\n/**\n * Select user Action\n */\nexport class SelectUser implements Action {\n  readonly type = UsersActionTypes.SelectUser;\n\n  constructor(public payload: User) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedUser implements Action {\n  readonly type = UsersActionTypes.ClearSelectedUser;\n}\n\n/**\n * Initialize user Action\n */\nexport class InitializeUser implements Action {\n  readonly type = UsersActionTypes.InitializeUser;\n}\n\n/**\n * action to pop up user form\n */\nexport class CreateUserFormDialog implements Action {\n  readonly type = UsersActionTypes.CreateUserFormDialog;\n}\n\n/**\n * Create user Action\n */\nexport class CreateUser implements Action {\n  readonly type = UsersActionTypes.CreateUser;\n\n  constructor(public payload: { user: User }) { }\n}\n\n/**\n * CreateUser Dialog window dismissed\n */\nexport class DismissUserFormDialog implements Action {\n  readonly type = UsersActionTypes.DismissUserFormDialog;\n}\n\n/**\n * Load users Action\n */\nexport class LoadUsers implements Action {\n  readonly type = UsersActionTypes.LoadUsers;\n}\n\n/**\n * Search user action\n */\nexport class SearchUser implements Action {\n  readonly type = UsersActionTypes.SearchUser;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search user complete action\n */\nexport class SearchUserComplete implements Action {\n  readonly type = UsersActionTypes.SearchUserComplete;\n\n  constructor(public payload: User[]) { }\n}\n\n/**\n * action to submit and edit user\n */\nexport class EditUser implements Action {\n  readonly type = UsersActionTypes.EditUser;\n\n  constructor(public payload: User) {\n  }\n}\n\n/**\n * User Edit dismissed action\n */\nexport class DismissEditUser implements Action {\n  readonly type = UsersActionTypes.DismissEditUser;\n}\n\n/**\n * reset the user state\n */\nexport class ResetUsersState implements Action {\n  readonly type = UsersActionTypes.ResetUsersState;\n}\n\n/**\n * action to delete a user\n */\nexport class DeleteUser implements Action {\n  readonly type = UsersActionTypes.DeleteUser;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load user patients action\n */\nexport class LoadUserPatients implements Action {\n  readonly type = UsersActionTypes.LoadUserPatients;\n  constructor(public payload: number ) { }\n}\n\n/**\n * Export union of user Action\n */\nexport type UsersActionsUnion\n  = SelectUser\n  | ClearSelectedUser\n  | InitializeUser\n  | CreateUserFormDialog\n  | CreateUser\n  | DismissUserFormDialog\n  | LoadUsers\n  | SearchUser\n  | SearchUserComplete\n  | EditUser\n  | DismissEditUser\n  | ResetUsersState\n  | LoadUserPatients;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DropdownAnchorDirective.html":{"url":"directives/DropdownAnchorDirective.html","title":"directive - DropdownAnchorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DropdownAnchorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/directives/dropdown-anchor.directive.ts\n        \n\n            \n                Description\n            \n            \n                DropDownToggle directive\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appDropdownToggle]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                navlink\n                            \n                        \n                    \n                \n\n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(navlink: DropdownLinkDirective)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/directives/dropdown-anchor.directive.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navlink\n                                                  \n                                                        \n                                                                    DropdownLinkDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nclick(e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/directives/dropdown-anchor.directive.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            navlink\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navlink:     DropdownLinkDirective\n\n                    \n                \n                    \n                        \n                            Type :     DropdownLinkDirective\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/directives/dropdown-anchor.directive.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, HostListener, Inject } from '@angular/core';\nimport { DropdownLinkDirective } from './dropdown-link.directive';\n\n/**\n * DropDownToggle directive\n * @deprecated (cvb) Not sure if we need it.\n */\n@Directive({\n  selector: '[appDropdownToggle]'\n})\nexport class DropdownAnchorDirective {\n\n  protected navlink: DropdownLinkDirective;\n\n  constructor(@Inject(DropdownLinkDirective) navlink: DropdownLinkDirective) {\n    this.navlink = navlink;\n  }\n\n  @HostListener('click', ['$event'])\n  onClick(e: any) {\n    this.navlink.toggle();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DropdownLinkDirective.html":{"url":"directives/DropdownLinkDirective.html","title":"directive - DropdownLinkDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DropdownLinkDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/directives/dropdown-link.directive.ts\n        \n\n            \n                Description\n            \n            \n                DropDownLink directive\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appDropdownLink]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _open\n                            \n                            \n                                    Protected\n                                nav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                group\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    open\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(nav: AppDropdownDirective)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/directives/dropdown-link.directive.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nav\n                                                  \n                                                        \n                                                                    AppDropdownDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        group\n                    \n                    \n                            \n                            Type :    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/core/directives/dropdown-link.directive.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        open\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/core/directives/dropdown-link.directive.ts:20\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/directives/dropdown-link.directive.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/directives/dropdown-link.directive.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/directives/dropdown-link.directive.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _open\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _open:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/directives/dropdown-link.directive.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            nav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nav:     AppDropdownDirective\n\n                    \n                \n                    \n                        \n                            Type :     AppDropdownDirective\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/directives/dropdown-link.directive.ts:32\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        open\n                    \n                \n\n\n                \n                    \n                        setopen(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/directives/dropdown-link.directive.ts:24\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n  Directive, HostBinding, Inject, Input, OnInit, OnDestroy\n} from '@angular/core';\n\nimport { AppDropdownDirective } from './dropdown.directive';\n\n/**\n * DropDownLink directive\n * @deprecated (cvb) Not sure if we need it.\n */\n@Directive({\n  selector: '[appDropdownLink]'\n})\nexport class DropdownLinkDirective implements OnInit, OnDestroy{\n\n  @Input() public group: any;\n\n  @HostBinding('class.open')\n  @Input()\n  get open(): boolean {\n    return this._open;\n  }\n\n  set open(value: boolean) {\n    this._open = value;\n    if (value) {\n      this.nav.closeOtherLinks(this);\n    }\n  }\n\n  protected _open: boolean;\n  protected nav: AppDropdownDirective;\n\n  public constructor(@Inject(AppDropdownDirective) nav: AppDropdownDirective) {\n    this.nav = nav;\n  }\n\n  public ngOnInit(): any {\n    this.nav.addLink(this);\n  }\n\n  public ngOnDestroy(): any {\n    this.nav.removeGroup(this);\n  }\n\n  public toggle(): any {\n    this.open = !this.open;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditNursingHome.html":{"url":"classes/EditNursingHome.html","title":"class - EditNursingHome","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditNursingHome\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/nursing-homes.actions.ts\n        \n\n            \n                Description\n            \n            \n                action to submit and edit nursingHome\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: Update)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/nursing-homes.actions.ts:96\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    Update\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     Update\n\n                    \n                \n                    \n                        \n                            Type :     Update\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes.actions.ts:98\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : NursingHomesActionTypes.EditNursingHome\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes.actions.ts:96\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { NursingHome } from '../models/nursing-home.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum NursingHomesActionTypes {\n  SelectNursingHome = '[NursingHome] Select Current NursingHome',\n  ClearSelectedNursingHome = '[NursingHome] Clear Current NursingHome',\n  InitializeNursingHome = '[NursingHome] Initialize Current NursingHome',\n  PopUpNursingHomeForm = '[NursingHome] Pop Up NursingHome Form',\n  CreateNursingHome = '[NursingHome] Create NursingHome',\n  DismissPoppedUpNursingHomeForm = '[NursingHome] Dismiss Create NursingHome',\n  LoadNursingHomes = '[NursingHome] Load Nursing Homes',\n  SearchNursingHome = '[NursingHome] Search NursingHome',\n  SearchNursingHomeComplete = '[NursingHome] Search NursingHome Complete',\n  EditNursingHome = '[NursingHome] Edit NursingHome',\n  DismissEditNursingHome = '[NursingHome] Dismiss Edit NursingHome',\n  ResetNursingHomesState = '[NursingHomes] Reset NursingHomes State'\n}\n\n\n/**\n * Select nursingHome Action\n */\nexport class SelectNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SelectNursingHome;\n\n  constructor(public payload: NursingHome) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.ClearSelectedNursingHome;\n}\n\n/**\n * Initialize nursingHome Action\n */\nexport class InitializeNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.InitializeNursingHome;\n}\n\n/**\n * action to pop up nursingHome form\n */\nexport class PopUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.PopUpNursingHomeForm;\n}\n\n/**\n * Create nursingHome Action\n */\nexport class CreateNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.CreateNursingHome;\n\n  constructor(public payload: { nursingHome: NursingHome }) { }\n}\n\n/**\n * CreateNursingHome Dialog window dismissed\n */\nexport class DismissPoppedUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.DismissPoppedUpNursingHomeForm;\n}\n\n/**\n * Load nursingHomes Action\n */\nexport class LoadNursingHomes implements Action {\n  readonly type = NursingHomesActionTypes.LoadNursingHomes;\n}\n\n/**\n * Search nursingHome Action\n */\nexport class SearchNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHome;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search nursingHome complete Action\n */\nexport class SearchNursingHomeComplete implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHomeComplete;\n\n  constructor(public payload: NursingHome[]) { }\n}\n\n/**\n * action to submit and edit nursingHome\n */\nexport class EditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.EditNursingHome;\n\n  constructor(public payload: Update) {\n  }\n}\n\n/**\n * NursingHome Edit dismissed action\n */\nexport class DismissEditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.DismissEditNursingHome;\n}\n\n/**\n * reset the nursingHome state\n */\nexport class ResetNursingHomesState implements Action {\n  readonly type = NursingHomesActionTypes.ResetNursingHomesState;\n}\n\n/**\n * Export union of nursingHome Action\n */\nexport type NursingHomesActionsUnion\n  = SelectNursingHome\n  | ClearSelectedNursingHome\n  | InitializeNursingHome\n  | PopUpNursingHomeForm\n  | CreateNursingHome\n  | DismissPoppedUpNursingHomeForm\n  | LoadNursingHomes\n  | SearchNursingHome\n  | SearchNursingHomeComplete\n  | EditNursingHome\n  | DismissEditNursingHome\n  | ResetNursingHomesState;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditNursingHomeFailure.html":{"url":"classes/EditNursingHomeFailure.html","title":"class - EditNursingHomeFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditNursingHomeFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/nursing-homes-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                edit nursingHome failure action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/nursing-homes-api.actions.ts:70\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes-api.actions.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : NursingHomesApiActionTypes.EditNursingHomeFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes-api.actions.ts:70\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { NursingHome } from '../models/nursing-home.model';\n\n/**\n * definitions for action types\n */\nexport enum NursingHomesApiActionTypes {\n  CreateNursingHomeSuccess = '[NursingHome/Api] Create NursingHome Success',\n  CreateNursingHomeFailure = '[NursingHome/Api] Create NursingHome Failure',\n  LoadNursingHomesSuccess = '[NursingHome/Api] Load NursingHomes Success',\n  LoadNursingHomesFailure = '[NursingHome/Api] Load NursingHomes Failure',\n  EditNursingHomeSuccess = '[NursingHome/Api] Edit NursingHome Success',\n  EditNursingHomeFailure = '[NursingHome/Api] Edit NursingHome Failure',\n}\n\n/**\n * add nursingHome success action\n */\nexport class CreateNursingHomeSuccess implements Action {\n  public readonly type = NursingHomesApiActionTypes.CreateNursingHomeSuccess;\n\n  constructor(public payload: { nursingHome: NursingHome }) {\n  }\n}\n\n/**\n * add nursingHome failure action\n */\nexport class CreateNursingHomeFailure implements Action {\n  public readonly type = NursingHomesApiActionTypes.CreateNursingHomeFailure;\n\n  constructor(public payload: { message: string}) {\n  }\n}\n\n/**\n * load all nursingHomes success action\n */\nexport class LoadNursingHomesSuccess implements Action {\n  public readonly type = NursingHomesApiActionTypes.LoadNursingHomesSuccess;\n\n  constructor(public payload: { nursingHomes: NursingHome[] }) {\n  }\n}\n\n/**\n * load all nursingHomes action\n */\nexport class LoadNursingHomesFailure implements Action {\n  public readonly type = NursingHomesApiActionTypes.LoadNursingHomesFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * edit nursingHome success action\n */\nexport class EditNursingHomeSuccess implements Action {\n  public readonly type = NursingHomesApiActionTypes.EditNursingHomeSuccess;\n\n  constructor(public payload: { nursingHome: NursingHome }) {\n  }\n}\n\n/**\n * edit nursingHome failure action\n */\nexport class EditNursingHomeFailure implements Action {\n  public readonly type = NursingHomesApiActionTypes.EditNursingHomeFailure;\n\n  constructor(public payload: { message: string}) {\n  }\n}\n\n// export types\nexport type NursingHomesApiActionsUnion =\n  | CreateNursingHomeSuccess\n  | CreateNursingHomeFailure\n  | EditNursingHomeSuccess\n  | EditNursingHomeFailure\n  | LoadNursingHomesSuccess\n  | LoadNursingHomesFailure\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditNursingHomeSuccess.html":{"url":"classes/EditNursingHomeSuccess.html","title":"class - EditNursingHomeSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditNursingHomeSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/nursing-homes-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                edit nursingHome success action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/nursing-homes-api.actions.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes-api.actions.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : NursingHomesApiActionTypes.EditNursingHomeSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes-api.actions.ts:60\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { NursingHome } from '../models/nursing-home.model';\n\n/**\n * definitions for action types\n */\nexport enum NursingHomesApiActionTypes {\n  CreateNursingHomeSuccess = '[NursingHome/Api] Create NursingHome Success',\n  CreateNursingHomeFailure = '[NursingHome/Api] Create NursingHome Failure',\n  LoadNursingHomesSuccess = '[NursingHome/Api] Load NursingHomes Success',\n  LoadNursingHomesFailure = '[NursingHome/Api] Load NursingHomes Failure',\n  EditNursingHomeSuccess = '[NursingHome/Api] Edit NursingHome Success',\n  EditNursingHomeFailure = '[NursingHome/Api] Edit NursingHome Failure',\n}\n\n/**\n * add nursingHome success action\n */\nexport class CreateNursingHomeSuccess implements Action {\n  public readonly type = NursingHomesApiActionTypes.CreateNursingHomeSuccess;\n\n  constructor(public payload: { nursingHome: NursingHome }) {\n  }\n}\n\n/**\n * add nursingHome failure action\n */\nexport class CreateNursingHomeFailure implements Action {\n  public readonly type = NursingHomesApiActionTypes.CreateNursingHomeFailure;\n\n  constructor(public payload: { message: string}) {\n  }\n}\n\n/**\n * load all nursingHomes success action\n */\nexport class LoadNursingHomesSuccess implements Action {\n  public readonly type = NursingHomesApiActionTypes.LoadNursingHomesSuccess;\n\n  constructor(public payload: { nursingHomes: NursingHome[] }) {\n  }\n}\n\n/**\n * load all nursingHomes action\n */\nexport class LoadNursingHomesFailure implements Action {\n  public readonly type = NursingHomesApiActionTypes.LoadNursingHomesFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * edit nursingHome success action\n */\nexport class EditNursingHomeSuccess implements Action {\n  public readonly type = NursingHomesApiActionTypes.EditNursingHomeSuccess;\n\n  constructor(public payload: { nursingHome: NursingHome }) {\n  }\n}\n\n/**\n * edit nursingHome failure action\n */\nexport class EditNursingHomeFailure implements Action {\n  public readonly type = NursingHomesApiActionTypes.EditNursingHomeFailure;\n\n  constructor(public payload: { message: string}) {\n  }\n}\n\n// export types\nexport type NursingHomesApiActionsUnion =\n  | CreateNursingHomeSuccess\n  | CreateNursingHomeFailure\n  | EditNursingHomeSuccess\n  | EditNursingHomeFailure\n  | LoadNursingHomesSuccess\n  | LoadNursingHomesFailure\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditPatient.html":{"url":"classes/EditPatient.html","title":"class - EditPatient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditPatient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients.actions.ts\n        \n\n            \n                Description\n            \n            \n                action to submit and edit patient\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: IPatient)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/patients.actions.ts:98\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    IPatient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     IPatient\n\n                    \n                \n                    \n                        \n                            Type :     IPatient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:100\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsActionTypes.EditPatient\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:98\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { IPatient } from '../models/patient.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum PatientsActionTypes {\n  SelectPatient = '[Patient] Select Current Patient',\n  ClearSelectedPatient = '[Patient] Clear Current Patient',\n  InitializePatient = '[Patient] Initialize Current Patient',\n  CreatePatientFormDialog = '[Patients] Pop Up Patient Form',\n  CreatePatient = '[Patient] Create Patient',\n  DismissPatientFormDialog = '[Patient] Dismiss Patient Form Dialog',\n  LoadPatients = '[Patient] Load Patients',\n  SearchPatient = '[Patient] Search Patient',\n  SearchPatientComplete = '[Patient] Search Patient Complete',\n  EditPatient = '[Patient] Edit Patient',\n  DismissEditPatient = '[Patient] Dismiss Edit Patient',\n  ResetPatientsState = '[Patients] Reset Patients State',\n  DeletePatient ='[Patients] Delete Patient',\n  LoadPatientUsers = '[User] Load User Patients'\n}\n\n\n/**\n * Select patient Action\n */\nexport class SelectPatient implements Action {\n  readonly type = PatientsActionTypes.SelectPatient;\n\n  constructor(public payload: IPatient) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedPatient implements Action {\n  readonly type = PatientsActionTypes.ClearSelectedPatient;\n}\n\n/**\n * Initialize patient Action\n */\nexport class InitializePatient implements Action {\n  readonly type = PatientsActionTypes.InitializePatient;\n}\n\n/**\n * action to pop up patient form\n */\nexport class CreatePatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.CreatePatientFormDialog;\n}\n\n/**\n * Create patient Action\n */\nexport class CreatePatient implements Action {\n  readonly type = PatientsActionTypes.CreatePatient;\n\n  constructor(public payload: { patient: IPatient }) { }\n}\n\n/**\n * CreatePatient Dialog window dismissed\n */\nexport class DismissPatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.DismissPatientFormDialog;\n}\n\n/**\n * Load patients Action\n */\nexport class LoadPatients implements Action {\n  readonly type = PatientsActionTypes.LoadPatients;\n}\n\n/**\n * Search patient Action\n */\nexport class SearchPatient implements Action {\n  readonly type = PatientsActionTypes.SearchPatient;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search patient complete Action\n */\nexport class SearchPatientComplete implements Action {\n  readonly type = PatientsActionTypes.SearchPatientComplete;\n\n  constructor(public payload: IPatient[]) { }\n}\n\n/**\n * action to submit and edit patient\n */\nexport class EditPatient implements Action {\n  readonly type = PatientsActionTypes.EditPatient;\n\n  constructor(public payload: IPatient) {\n  }\n}\n\n/**\n * Patient Edit dismissed action\n */\nexport class DismissEditPatient implements Action {\n  readonly type = PatientsActionTypes.DismissEditPatient;\n}\n\n/**\n * reset the patient state\n */\nexport class ResetPatientsState implements Action {\n  readonly type = PatientsActionTypes.ResetPatientsState;\n}\n\n/**\n * action to delete a patient\n */\nexport class DeletePatient implements Action {\n  readonly type = PatientsActionTypes.DeletePatient;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load patient users action\n */\nexport class LoadPatientUsers implements Action {\n  readonly type = PatientsActionTypes.LoadPatientUsers;\n  constructor(public payload: number ) { }\n}\n\n\n/**\n * Export union of patient Action\n */\nexport type PatientsActionsUnion\n  = SelectPatient\n  | ClearSelectedPatient\n  | InitializePatient\n  | CreatePatientFormDialog\n  | CreatePatient\n  | DismissPatientFormDialog\n  | LoadPatients\n  | SearchPatient\n  | SearchPatientComplete\n  | EditPatient\n  | DismissEditPatient\n  | ResetPatientsState\n  | LoadPatientUsers;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditPatientFailure.html":{"url":"classes/EditPatientFailure.html","title":"class - EditPatientFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditPatientFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                edit patient failure action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/patients-api.actions.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients-api.actions.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsApiActionTypes.EditPatientFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients-api.actions.ts:73\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { IPatient } from '../models/patient.model';\n\n/**\n * definitions for action types\n */\nexport enum PatientsApiActionTypes {\n  CreatePatientSuccess = '[Patient/Api] Create Patient Success',\n  CreatePatientFailure = '[Patient/Api] Create Patient Failure',\n  LoadPatientsSuccess = '[Patient/Api] Load Patients Success',\n  LoadPatientsFailure = '[Patient/Api] Load Patients Failure',\n  EditPatientSuccess = '[Patient/Api] Edit Patient Success',\n  EditPatientFailure = '[Patient/Api] Edit Patient Failure',\n  LoadPatientUsersSuccess = '[User/Api] Load Patient Users Success',\n  LoadPatientUsersFailure = '[User/Api] Load Patient Users Failure',\n}\n\n/**\n * add patient success action\n */\nexport class CreatePatientSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.CreatePatientSuccess;\n\n  constructor(public payload: { patient: IPatient }) {\n  }\n}\n\n/**\n * add patient failure action\n */\nexport class CreatePatientFailure implements Action {\n  public readonly type = PatientsApiActionTypes.CreatePatientFailure;\n\n  constructor(public payload: { messages: string }) {\n  }\n}\n\n/**\n * load all patients success action\n */\nexport class LoadPatientsSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientsSuccess;\n\n  constructor(public payload: { patients: IPatient[] }) {\n  }\n}\n\n/**\n * load all patients action\n */\nexport class LoadPatientsFailure implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientsFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * edit patient success action\n */\nexport class EditPatientSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.EditPatientSuccess;\n\n  constructor(public payload: { patient: IPatient }) {\n  }\n}\n\n/**\n * edit patient failure action\n */\nexport class EditPatientFailure implements Action {\n  public readonly type = PatientsApiActionTypes.EditPatientFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * load all patient users success action\n */\nexport class LoadPatientUsersSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientUsersSuccess;\n\n  constructor(public payload: { users: User[] }) {\n  }\n}\n\n/**\n * load all patient users failure action\n */\nexport class LoadPatientUsersFailure implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientUsersFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n// export types\nexport type PatientsApiActionsUnion =\n  | CreatePatientSuccess\n  | CreatePatientFailure\n  | EditPatientSuccess\n  | EditPatientFailure\n  | LoadPatientsSuccess\n  | LoadPatientsFailure\n  | LoadPatientUsersSuccess\n  | LoadPatientUsersFailure;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditPatientSuccess.html":{"url":"classes/EditPatientSuccess.html","title":"class - EditPatientSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditPatientSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                edit patient success action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/patients-api.actions.ts:63\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients-api.actions.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsApiActionTypes.EditPatientSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients-api.actions.ts:63\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { IPatient } from '../models/patient.model';\n\n/**\n * definitions for action types\n */\nexport enum PatientsApiActionTypes {\n  CreatePatientSuccess = '[Patient/Api] Create Patient Success',\n  CreatePatientFailure = '[Patient/Api] Create Patient Failure',\n  LoadPatientsSuccess = '[Patient/Api] Load Patients Success',\n  LoadPatientsFailure = '[Patient/Api] Load Patients Failure',\n  EditPatientSuccess = '[Patient/Api] Edit Patient Success',\n  EditPatientFailure = '[Patient/Api] Edit Patient Failure',\n  LoadPatientUsersSuccess = '[User/Api] Load Patient Users Success',\n  LoadPatientUsersFailure = '[User/Api] Load Patient Users Failure',\n}\n\n/**\n * add patient success action\n */\nexport class CreatePatientSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.CreatePatientSuccess;\n\n  constructor(public payload: { patient: IPatient }) {\n  }\n}\n\n/**\n * add patient failure action\n */\nexport class CreatePatientFailure implements Action {\n  public readonly type = PatientsApiActionTypes.CreatePatientFailure;\n\n  constructor(public payload: { messages: string }) {\n  }\n}\n\n/**\n * load all patients success action\n */\nexport class LoadPatientsSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientsSuccess;\n\n  constructor(public payload: { patients: IPatient[] }) {\n  }\n}\n\n/**\n * load all patients action\n */\nexport class LoadPatientsFailure implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientsFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * edit patient success action\n */\nexport class EditPatientSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.EditPatientSuccess;\n\n  constructor(public payload: { patient: IPatient }) {\n  }\n}\n\n/**\n * edit patient failure action\n */\nexport class EditPatientFailure implements Action {\n  public readonly type = PatientsApiActionTypes.EditPatientFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * load all patient users success action\n */\nexport class LoadPatientUsersSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientUsersSuccess;\n\n  constructor(public payload: { users: User[] }) {\n  }\n}\n\n/**\n * load all patient users failure action\n */\nexport class LoadPatientUsersFailure implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientUsersFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n// export types\nexport type PatientsApiActionsUnion =\n  | CreatePatientSuccess\n  | CreatePatientFailure\n  | EditPatientSuccess\n  | EditPatientFailure\n  | LoadPatientsSuccess\n  | LoadPatientsFailure\n  | LoadPatientUsersSuccess\n  | LoadPatientUsersFailure;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditUser.html":{"url":"classes/EditUser.html","title":"class - EditUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users.actions.ts\n        \n\n            \n                Description\n            \n            \n                action to submit and edit user\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: User)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/users.actions.ts:98\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    User\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:100\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersActionTypes.EditUser\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:98\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum UsersActionTypes {\n  SelectUser = '[User] Select Current User',\n  ClearSelectedUser = '[User] Clear Current User',\n  InitializeUser = '[User] Initialize Current User',\n  CreateUserFormDialog = '[Users] Pop Up User Form',\n  CreateUser = '[User] Create User',\n  DismissUserFormDialog = '[User] Dismiss User Form Dialog',\n  LoadUsers = '[User] Load Users',\n  SearchUser = '[User] Search User',\n  SearchUserComplete = '[User] Search User Complete',\n  EditUser = '[User] Edit User',\n  DismissEditUser = '[User] Dismiss Edit User',\n  ResetUsersState = '[Users] Reset Users State',\n  DeleteUser = '[Users] Delete User',\n  LoadUserPatients = '[User] Load User Patients'\n}\n\n\n/**\n * Select user Action\n */\nexport class SelectUser implements Action {\n  readonly type = UsersActionTypes.SelectUser;\n\n  constructor(public payload: User) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedUser implements Action {\n  readonly type = UsersActionTypes.ClearSelectedUser;\n}\n\n/**\n * Initialize user Action\n */\nexport class InitializeUser implements Action {\n  readonly type = UsersActionTypes.InitializeUser;\n}\n\n/**\n * action to pop up user form\n */\nexport class CreateUserFormDialog implements Action {\n  readonly type = UsersActionTypes.CreateUserFormDialog;\n}\n\n/**\n * Create user Action\n */\nexport class CreateUser implements Action {\n  readonly type = UsersActionTypes.CreateUser;\n\n  constructor(public payload: { user: User }) { }\n}\n\n/**\n * CreateUser Dialog window dismissed\n */\nexport class DismissUserFormDialog implements Action {\n  readonly type = UsersActionTypes.DismissUserFormDialog;\n}\n\n/**\n * Load users Action\n */\nexport class LoadUsers implements Action {\n  readonly type = UsersActionTypes.LoadUsers;\n}\n\n/**\n * Search user action\n */\nexport class SearchUser implements Action {\n  readonly type = UsersActionTypes.SearchUser;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search user complete action\n */\nexport class SearchUserComplete implements Action {\n  readonly type = UsersActionTypes.SearchUserComplete;\n\n  constructor(public payload: User[]) { }\n}\n\n/**\n * action to submit and edit user\n */\nexport class EditUser implements Action {\n  readonly type = UsersActionTypes.EditUser;\n\n  constructor(public payload: User) {\n  }\n}\n\n/**\n * User Edit dismissed action\n */\nexport class DismissEditUser implements Action {\n  readonly type = UsersActionTypes.DismissEditUser;\n}\n\n/**\n * reset the user state\n */\nexport class ResetUsersState implements Action {\n  readonly type = UsersActionTypes.ResetUsersState;\n}\n\n/**\n * action to delete a user\n */\nexport class DeleteUser implements Action {\n  readonly type = UsersActionTypes.DeleteUser;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load user patients action\n */\nexport class LoadUserPatients implements Action {\n  readonly type = UsersActionTypes.LoadUserPatients;\n  constructor(public payload: number ) { }\n}\n\n/**\n * Export union of user Action\n */\nexport type UsersActionsUnion\n  = SelectUser\n  | ClearSelectedUser\n  | InitializeUser\n  | CreateUserFormDialog\n  | CreateUser\n  | DismissUserFormDialog\n  | LoadUsers\n  | SearchUser\n  | SearchUserComplete\n  | EditUser\n  | DismissEditUser\n  | ResetUsersState\n  | LoadUserPatients;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditUserFailure.html":{"url":"classes/EditUserFailure.html","title":"class - EditUserFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditUserFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                edit user failure action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/users-api.actions.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users-api.actions.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersApiActionTypes.EditUserFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users-api.actions.ts:73\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { IPatient } from '../models/patient.model';\n\n/**\n * definitions for action types\n */\nexport enum UsersApiActionTypes {\n  CreateUserSuccess = '[User/Api] Create User Success',\n  CreateUserFailure = '[User/Api] Create User Failure',\n  LoadUsersSuccess = '[User/Api] Load Users Success',\n  LoadUsersFailure = '[User/Api] Load Users Failure',\n  EditUserSuccess = '[User/Api] Edit User Success',\n  EditUserFailure = '[User/Api] Edit User Failure',\n  LoadUserPatientsSuccess = '[User/Api] Load User Patients Success',\n  LoadUserPatientsFailure = '[User/Api] Load User Patients Failure',\n}\n\n/**\n * add user success action\n */\nexport class CreateUserSuccess implements Action {\n  public readonly type = UsersApiActionTypes.CreateUserSuccess;\n\n  constructor(public payload: { user: User }) {\n  }\n}\n\n/**\n * add user failure action\n */\nexport class CreateUserFailure implements Action {\n  public readonly type = UsersApiActionTypes.CreateUserFailure;\n\n  constructor(public payload: { messages: string }) {\n  }\n}\n\n/**\n * load all users success action\n */\nexport class LoadUsersSuccess implements Action {\n  public readonly type = UsersApiActionTypes.LoadUsersSuccess;\n\n  constructor(public payload: { users: User[] }) {\n  }\n}\n\n/**\n * load all users failure action\n */\nexport class LoadUsersFailure implements Action {\n  public readonly type = UsersApiActionTypes.LoadUsersFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * edit user success action\n */\nexport class EditUserSuccess implements Action {\n  public readonly type = UsersApiActionTypes.EditUserSuccess;\n\n  constructor(public payload: { user: User }) {\n  }\n}\n\n/**\n * edit user failure action\n */\nexport class EditUserFailure implements Action {\n  public readonly type = UsersApiActionTypes.EditUserFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * load all user patients success action\n */\nexport class LoadUserPatientsSuccess implements Action {\n  public readonly type = UsersApiActionTypes.LoadUserPatientsSuccess;\n\n  constructor(public payload: { patients: IPatient[] }) {\n  }\n}\n\n/**\n * load all user patients failure action\n */\nexport class LoadUserPatientsFailure implements Action {\n  public readonly type = UsersApiActionTypes.LoadUserPatientsFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n// export types\nexport type UsersApiActionsUnion =\n  | CreateUserSuccess\n  | CreateUserFailure\n  | EditUserSuccess\n  | EditUserFailure\n  | LoadUsersSuccess\n  | LoadUsersFailure\n  | LoadUserPatientsSuccess\n  | LoadUserPatientsFailure\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditUserSuccess.html":{"url":"classes/EditUserSuccess.html","title":"class - EditUserSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditUserSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                edit user success action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/users-api.actions.ts:63\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users-api.actions.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersApiActionTypes.EditUserSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users-api.actions.ts:63\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { IPatient } from '../models/patient.model';\n\n/**\n * definitions for action types\n */\nexport enum UsersApiActionTypes {\n  CreateUserSuccess = '[User/Api] Create User Success',\n  CreateUserFailure = '[User/Api] Create User Failure',\n  LoadUsersSuccess = '[User/Api] Load Users Success',\n  LoadUsersFailure = '[User/Api] Load Users Failure',\n  EditUserSuccess = '[User/Api] Edit User Success',\n  EditUserFailure = '[User/Api] Edit User Failure',\n  LoadUserPatientsSuccess = '[User/Api] Load User Patients Success',\n  LoadUserPatientsFailure = '[User/Api] Load User Patients Failure',\n}\n\n/**\n * add user success action\n */\nexport class CreateUserSuccess implements Action {\n  public readonly type = UsersApiActionTypes.CreateUserSuccess;\n\n  constructor(public payload: { user: User }) {\n  }\n}\n\n/**\n * add user failure action\n */\nexport class CreateUserFailure implements Action {\n  public readonly type = UsersApiActionTypes.CreateUserFailure;\n\n  constructor(public payload: { messages: string }) {\n  }\n}\n\n/**\n * load all users success action\n */\nexport class LoadUsersSuccess implements Action {\n  public readonly type = UsersApiActionTypes.LoadUsersSuccess;\n\n  constructor(public payload: { users: User[] }) {\n  }\n}\n\n/**\n * load all users failure action\n */\nexport class LoadUsersFailure implements Action {\n  public readonly type = UsersApiActionTypes.LoadUsersFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * edit user success action\n */\nexport class EditUserSuccess implements Action {\n  public readonly type = UsersApiActionTypes.EditUserSuccess;\n\n  constructor(public payload: { user: User }) {\n  }\n}\n\n/**\n * edit user failure action\n */\nexport class EditUserFailure implements Action {\n  public readonly type = UsersApiActionTypes.EditUserFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * load all user patients success action\n */\nexport class LoadUserPatientsSuccess implements Action {\n  public readonly type = UsersApiActionTypes.LoadUserPatientsSuccess;\n\n  constructor(public payload: { patients: IPatient[] }) {\n  }\n}\n\n/**\n * load all user patients failure action\n */\nexport class LoadUserPatientsFailure implements Action {\n  public readonly type = UsersApiActionTypes.LoadUserPatientsFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n// export types\nexport type UsersApiActionsUnion =\n  | CreateUserSuccess\n  | CreateUserFailure\n  | EditUserSuccess\n  | EditUserFailure\n  | LoadUsersSuccess\n  | LoadUsersFailure\n  | LoadUserPatientsSuccess\n  | LoadUserPatientsFailure\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EgretSideNavToggleDirective.html":{"url":"directives/EgretSideNavToggleDirective.html","title":"directive - EgretSideNavToggleDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  EgretSideNavToggleDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/directives/egret-side-nav-toggle.directive.ts\n        \n\n            \n                Description\n            \n            \n                SideNav toggle directive\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [EgretSideNavToggle]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isMobile\n                            \n                            \n                                screenSizeWatcher\n                            \n                            \n                                    Public\n                                sideNav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initSideNav\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateSidenav\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(media: ObservableMedia, sideNav: MatSidenav)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/directives/egret-side-nav-toggle.directive.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        media\n                                                  \n                                                        \n                                                                    ObservableMedia\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sideNav\n                                                  \n                                                        \n                                                                    MatSidenav\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initSideNav\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitSideNav()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/directives/egret-side-nav-toggle.directive.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/directives/egret-side-nav-toggle.directive.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/directives/egret-side-nav-toggle.directive.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateSidenav()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/directives/egret-side-nav-toggle.directive.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isMobile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isMobile:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/directives/egret-side-nav-toggle.directive.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            screenSizeWatcher\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        screenSizeWatcher:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/directives/egret-side-nav-toggle.directive.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sideNav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sideNav:     MatSidenav\n\n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Host()@Self()@Optional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/directives/egret-side-nav-toggle.directive.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Host, Self, Optional, OnDestroy, OnInit } from '@angular/core';\nimport { MediaChange, ObservableMedia } from '@angular/flex-layout';\nimport { Subscription } from 'rxjs';\nimport { MatSidenav } from '@angular/material';\n\n/**\n * SideNav toggle directive\n * @deprecated (cvb) Not sure if we need it.\n */\n@Directive({\n  selector: '[EgretSideNavToggle]'\n})\nexport class EgretSideNavToggleDirective implements OnInit, OnDestroy {\n  isMobile;\n  screenSizeWatcher: Subscription;\n\n  constructor(\n    private media: ObservableMedia,\n    @Host() @Self() @Optional() public sideNav: MatSidenav\n  ) {\n  }\n\n  ngOnInit() {\n    this.initSideNav();\n  }\n\n  ngOnDestroy() {\n    if (this.screenSizeWatcher) {\n      this.screenSizeWatcher.unsubscribe();\n    }\n  }\n\n  updateSidenav() {\n    const self = this;\n    setTimeout(() => {\n      self.sideNav.opened = !self.isMobile;\n      self.sideNav.mode = self.isMobile ? 'over' : 'side';\n    });\n  }\n\n  initSideNav() {\n    this.isMobile = this.media.isActive('xs') || this.media.isActive('sm');\n    this.updateSidenav();\n    this.screenSizeWatcher = this.media.subscribe((change: MediaChange) => {\n      this.isMobile = (change.mqAlias === 'xs') || (change.mqAlias === 'sm');\n      this.updateSidenav();\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/errors/components/error/error.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-error\n            \n\n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/errors/components/error/error.component.ts:7\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/errors/components/error/error.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'moio-error',\n  templateUrl: './error.component.html'\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      warning\n      \n        500\n        Server Error!\n      \n    \n\n    \n      Back to Dashboard\n      \n      Report this Problem\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            warning              500        Server Error!                    Back to Dashboard            Report this Problem            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorLayoutComponent.html":{"url":"components/ErrorLayoutComponent.html","title":"component - ErrorLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/errors/containers/error-layout.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-error-layout\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'moio-error-layout',\n  template: ``\n})\nexport class ErrorLayoutComponent {\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorsModule.html":{"url":"modules/ErrorsModule.html","title":"module - ErrorsModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ErrorsModule\n\n\n\ncluster_ErrorsModule_declarations\n\n\n\ncluster_ErrorsModule_imports\n\n\n\n\nAuthLayoutComponent\n\nAuthLayoutComponent\n\n\n\nErrorsModule\n\nErrorsModule\n\nErrorsModule -->\n\nAuthLayoutComponent->ErrorsModule\n\n\n\n\n\nForgotPasswordComponent\n\nForgotPasswordComponent\n\nErrorsModule -->\n\nForgotPasswordComponent->ErrorsModule\n\n\n\n\n\nLockscreenComponent\n\nLockscreenComponent\n\nErrorsModule -->\n\nLockscreenComponent->ErrorsModule\n\n\n\n\n\nSigninComponent\n\nSigninComponent\n\nErrorsModule -->\n\nSigninComponent->ErrorsModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nErrorsModule -->\n\nSignupComponent->ErrorsModule\n\n\n\n\n\nErrorsRoutingModule\n\nErrorsRoutingModule\n\nErrorsModule -->\n\nErrorsRoutingModule->ErrorsModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nErrorsModule -->\n\nMaterialModule->ErrorsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/errors/errors.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AuthLayoutComponent\n                        \n                        \n                            ForgotPasswordComponent\n                        \n                        \n                            LockscreenComponent\n                        \n                        \n                            SigninComponent\n                        \n                        \n                            SignupComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ErrorsRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from '../material';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { ErrorComponent } from './components/error/error.component';\nimport { ErrorsRoutingModule } from './errors-routing.module';\nimport { ErrorLayoutComponent } from './containers/error-layout.component';\nimport { TranslateModule } from '@ngx-translate/core';\n\nexport const COMPONENTS = [\n  ErrorLayoutComponent,\n  NotFoundComponent,\n  ErrorComponent\n];\n\n@NgModule({\n  declarations: [\n    COMPONENTS\n  ],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    ErrorsRoutingModule,\n    TranslateModule\n  ]\n})\nexport class ErrorsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorsRoutingModule.html":{"url":"modules/ErrorsRoutingModule.html","title":"module - ErrorsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/errors/errors-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { errorsRoutes } from './errors.routes';\n\n@NgModule({\n  imports: [RouterModule.forChild(errorsRoutes)],\n  exports: [RouterModule]\n})\nexport class ErrorsRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FixTopbar.html":{"url":"classes/FixTopbar.html","title":"class - FixTopbar","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FixTopbar\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/layout.actions.ts\n        \n\n            \n                Description\n            \n            \n                fix top bar action\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/layout.actions.ts:124\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:125\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LayoutActionTypes.FixTopbar\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:124\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\n/**\n * layout action types\n */\nexport enum LayoutActionTypes {\n  OpenSideNav = '[Layout] Open Side Nav',\n  CloseSideNav = '[Layout] Close Side Nav',\n  CompactSideNav = '[Layout] Compact Nav position',\n  SetNavigationPositionSide = '[Layout] Set Navigation Position Side',\n  SetNavigationPositionTop = '[Layout] Set Navigation Position Top',\n  SetDirectionLtr = '[Layout] Set Direction Ltr',\n  SetDirectionRtr = '[Layout] Set Direction Rtr',\n  TransitioningLayout = '[Layout] Transitioning Layout',\n  UseBreadcrumb = '[Layout] Use Breadcrumb',\n  MakeBreadcrumbSimple = '[Layout] Make Breadcrumb Simple',\n  MakeBreadcrumbTitle = '[Layout] Make Breadcrumb Title',\n  FixTopbar = '[Layout] Fix Topbar'\n}\n\n/**\n * open side navigation action\n */\nexport class OpenSideNav {\n  readonly type = LayoutActionTypes.OpenSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * close side navigation action\n */\nexport class CloseSideNav {\n  readonly type = LayoutActionTypes.CloseSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * compact side navigation action\n */\nexport class CompactSideNav {\n  readonly type = LayoutActionTypes.CompactSideNav;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to side action\n */\nexport class SetNavigationPositionSide {\n  readonly type = LayoutActionTypes.SetNavigationPositionSide;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to top action\n */\nexport class SetNavigationPositionTop {\n  readonly type = LayoutActionTypes.SetNavigationPositionTop;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to left-to-right action\n */\nexport class SetDirectionLtr {\n  readonly type = LayoutActionTypes.SetDirectionLtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to right-to-left action\n */\nexport class SetDirectionRtr {\n  readonly type = LayoutActionTypes.SetDirectionRtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * transition layout action\n */\nexport class TransitioningLayout {\n  readonly type = LayoutActionTypes.TransitioningLayout;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * Use breadcrumb action\n */\nexport class UseBreadcrumb {\n  readonly type = LayoutActionTypes.UseBreadcrumb;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * make breadcrumb simple action\n */\nexport class MakeBreadcrumbSimple {\n  readonly type = LayoutActionTypes.MakeBreadcrumbSimple;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * make breadcrum title action\n */\nexport class MakeBreadcrumbTitle {\n  readonly type = LayoutActionTypes.MakeBreadcrumbTitle;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * fix top bar action\n */\nexport class FixTopbar {\n  readonly type = LayoutActionTypes.FixTopbar;\n  constructor(public payload: boolean) { \n  }\n}\n\nexport type LayoutActions = \n  | OpenSideNav\n  | CloseSideNav\n  | CompactSideNav\n  | SetNavigationPositionSide\n  | SetNavigationPositionTop\n  | SetDirectionLtr\n  | SetDirectionRtr\n  | TransitioningLayout\n  | UseBreadcrumb\n  | MakeBreadcrumbSimple\n  | MakeBreadcrumbTitle\n  | FixTopbar;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/FontSizeDirective.html":{"url":"directives/FontSizeDirective.html","title":"directive - FontSizeDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  FontSizeDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/directives/font-size.directive.ts\n        \n\n            \n                Description\n            \n            \n                font size directive\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [fontSize]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fontSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fontSize: string, el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/directives/font-size.directive.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fontSize\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/directives/font-size.directive.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fontSize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fontSize:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Attribute('fontSize')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/directives/font-size.directive.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, Attribute, OnInit } from '@angular/core';\n\n/**\n * font size directive\n * @deprecated (cvb) pretty sure we don not need this\n */\n@Directive({selector: '[fontSize]'})\nexport class FontSizeDirective implements OnInit {\n  constructor(@Attribute('fontSize') public fontSize: string, private el: ElementRef) {\n  }\n\n  ngOnInit() {\n    this.el.nativeElement.fontSize = this.fontSize;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForgotPassword.html":{"url":"classes/ForgotPassword.html","title":"class - ForgotPassword","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForgotPassword\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/actions/auth-page.actions.ts\n        \n\n            \n                Description\n            \n            \n                action for the forgot password page\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/actions/auth-page.actions.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-page.actions.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : AuthPageActionTypes.ForgotPassword\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-page.actions.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { ICredentials } from '../models/user.interface';\n\nexport enum AuthPageActionTypes {\n  Login = '[Auth/Login Page] Login',\n  Signup = '[Auth/Signup Page] Signup',\n  ForgotPassword = '[Auth/Forgot Password Page] Forgot Password'\n}\n\n/**\n * Login action\n */\nexport class Login implements Action {\n  readonly type = AuthPageActionTypes.Login;\n\n  constructor(public payload: { credentials: ICredentials }) {\n  }\n}\n\n/**\n * signup action\n */\nexport class Signup implements Action {\n  readonly type = AuthPageActionTypes.Signup;\n\n  constructor(public payload: { credentials: ICredentials }) {\n  }\n}\n\n/**\n * action for the forgot password page\n */\nexport class ForgotPassword implements Action {\n  readonly type = AuthPageActionTypes.ForgotPassword;\n\n  constructor(public payload: { email: string }) {\n  }\n}\n\nexport type AuthPageActionsUnion =\n  | Login\n  | Signup\n  | ForgotPassword;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordComponent.html":{"url":"components/ForgotPasswordComponent.html","title":"component - ForgotPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForgotPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/components/forgot-password/forgot-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-forgot-password\n            \n\n\n\n\n            \n                templateUrl\n                ./forgot-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                progressBar\n                            \n                            \n                                submitButton\n                            \n                            \n                                userEmail\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                submitEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/components/forgot-password/forgot-password.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/components/forgot-password/forgot-password.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitEmail\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubmitEmail()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/components/forgot-password/forgot-password.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            progressBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        progressBar:     MatProgressBar\n\n                    \n                \n                    \n                        \n                            Type :     MatProgressBar\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatProgressBar)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/components/forgot-password/forgot-password.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitButton\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        submitButton:     MatButton\n\n                    \n                \n                    \n                        \n                            Type :     MatButton\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatButton)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/components/forgot-password/forgot-password.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userEmail\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userEmail:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/auth/components/forgot-password/forgot-password.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatProgressBar, MatButton } from '@angular/material';\n\n@Component({\n  selector: 'moio-forgot-password',\n  templateUrl: './forgot-password.component.html'\n})\nexport class ForgotPasswordComponent implements OnInit {\n  userEmail;\n  @ViewChild(MatProgressBar) progressBar: MatProgressBar;\n  @ViewChild(MatButton) submitButton: MatButton;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  submitEmail() {\n    this.submitButton.disabled = true;\n    this.progressBar.mode = 'indeterminate';\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n          \n          {{ 'NewPasswordSendText' | translate }}\n        \n        \n\n          \n            \n              \n            \n             {{ 'Auth.EmailRequired' | translate }}\n            \n          \n\n          {{ 'Submit' | translate }}\n          \n            {{ 'Auth.Signin' | translate}}\n            \n          \n        \n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            {{ \\'NewPasswordSendText\\' | translate }}                                                                             {{ \\'Auth.EmailRequired\\' | translate }}                                {{ \\'Submit\\' | translate }}                      {{ \\'Auth.Signin\\' | translate}}                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForgotPasswordFailure.html":{"url":"classes/ForgotPasswordFailure.html","title":"class - ForgotPasswordFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForgotPasswordFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/actions/auth-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                sign up failure\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/actions/auth-api.actions.ts:93\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-api.actions.ts:95\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : AuthApiActionTypes.ForgotPasswordFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-api.actions.ts:93\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum AuthApiActionTypes {\n  LoginSuccess = '[Auth/Api] Login Success',\n  LoginFailure = '[Auth/Api] Login Failure',\n  LoginRedirect = '[Auth/Api] Login Redirect',\n  LogoutSuccess = '[Auth/Api] Logout Success',\n  LogoutFailure = '[Auth/Api] Logout Failure',\n  SignUpSuccess = '[Auth/Api] Sign Up Success',\n  SignUpFailure = '[Auth/Api] Sign Up Failure',\n  ForgotPasswordSuccess = '[Auth/Api] Forgot Password Success',\n  ForgotPasswordFailure = '[Auth/Api] Forgot Password Failure',\n}\n\n/**\n * login action\n */\nexport class LoginSuccess implements Action {\n  readonly type = AuthApiActionTypes.LoginSuccess;\n\n  constructor(public payload: { response: any }) {\n  }\n}\n\n/**\n * login failure\n */\nexport class LoginFailure implements Action {\n  readonly type = AuthApiActionTypes.LoginFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * logout success\n */\nexport class LogoutSuccess implements Action {\n  readonly type = AuthApiActionTypes.LogoutSuccess;\n}\n\n/**\n * lougout failure\n */\nexport class LogoutFailure implements Action {\n  readonly type = AuthApiActionTypes.LogoutFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * redirect action\n */\nexport class LoginRedirect implements Action {\n  readonly type = AuthApiActionTypes.LoginRedirect;\n}\n\n/**\n * sign up success\n */\nexport class SignUpSuccess implements Action {\n  readonly type = AuthApiActionTypes.SignUpSuccess;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up failure\n */\nexport class SignUpFailure implements Action {\n  readonly type = AuthApiActionTypes.SignUpFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up success\n */\nexport class ForgotPasswordSuccess implements Action {\n  readonly type = AuthApiActionTypes.ForgotPasswordSuccess;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up failure\n */\nexport class ForgotPasswordFailure implements Action {\n  readonly type = AuthApiActionTypes.ForgotPasswordFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\nexport type AuthApiActionsUnion =\n  | LoginSuccess\n  | LoginFailure\n  | LoginRedirect\n  | LogoutSuccess\n  | LogoutFailure\n  | SignUpSuccess\n  | SignUpFailure\n  | ForgotPasswordSuccess\n  | ForgotPasswordFailure;\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForgotPasswordSuccess.html":{"url":"classes/ForgotPasswordSuccess.html","title":"class - ForgotPasswordSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForgotPasswordSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/actions/auth-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                sign up success\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/actions/auth-api.actions.ts:83\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-api.actions.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : AuthApiActionTypes.ForgotPasswordSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-api.actions.ts:83\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum AuthApiActionTypes {\n  LoginSuccess = '[Auth/Api] Login Success',\n  LoginFailure = '[Auth/Api] Login Failure',\n  LoginRedirect = '[Auth/Api] Login Redirect',\n  LogoutSuccess = '[Auth/Api] Logout Success',\n  LogoutFailure = '[Auth/Api] Logout Failure',\n  SignUpSuccess = '[Auth/Api] Sign Up Success',\n  SignUpFailure = '[Auth/Api] Sign Up Failure',\n  ForgotPasswordSuccess = '[Auth/Api] Forgot Password Success',\n  ForgotPasswordFailure = '[Auth/Api] Forgot Password Failure',\n}\n\n/**\n * login action\n */\nexport class LoginSuccess implements Action {\n  readonly type = AuthApiActionTypes.LoginSuccess;\n\n  constructor(public payload: { response: any }) {\n  }\n}\n\n/**\n * login failure\n */\nexport class LoginFailure implements Action {\n  readonly type = AuthApiActionTypes.LoginFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * logout success\n */\nexport class LogoutSuccess implements Action {\n  readonly type = AuthApiActionTypes.LogoutSuccess;\n}\n\n/**\n * lougout failure\n */\nexport class LogoutFailure implements Action {\n  readonly type = AuthApiActionTypes.LogoutFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * redirect action\n */\nexport class LoginRedirect implements Action {\n  readonly type = AuthApiActionTypes.LoginRedirect;\n}\n\n/**\n * sign up success\n */\nexport class SignUpSuccess implements Action {\n  readonly type = AuthApiActionTypes.SignUpSuccess;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up failure\n */\nexport class SignUpFailure implements Action {\n  readonly type = AuthApiActionTypes.SignUpFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up success\n */\nexport class ForgotPasswordSuccess implements Action {\n  readonly type = AuthApiActionTypes.ForgotPasswordSuccess;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up failure\n */\nexport class ForgotPasswordFailure implements Action {\n  readonly type = AuthApiActionTypes.ForgotPasswordFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\nexport type AuthApiActionsUnion =\n  | LoginSuccess\n  | LoginFailure\n  | LoginRedirect\n  | LogoutSuccess\n  | LogoutFailure\n  | SignUpSuccess\n  | SignUpFailure\n  | ForgotPasswordSuccess\n  | ForgotPasswordFailure;\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GenericValidator.html":{"url":"classes/GenericValidator.html","title":"class - GenericValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GenericValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/shared/generic-validator.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                processMessages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(validationMessages: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/shared/generic-validator.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationMessages\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processMessages\n                            \n                            \n                        \n                    \n                \n                \n                    \nprocessMessages(container: FormGroup)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/shared/generic-validator.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    FormGroup\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     literal type\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\n\n// Generic validator for Reactive forms\n// Implemented as a class, not a service, so it can retain state for multiple forms.\nexport class GenericValidator {\n\n  // Provide the set of valid validation messages\n  // Stucture:\n  // controlName1: {\n  //     validationRuleName1: 'Validation Message.',\n  //     validationRuleName2: 'Validation Message.'\n  // },\n  // controlName2: {\n  //     validationRuleName1: 'Validation Message.',\n  //     validationRuleName2: 'Validation Message.'\n  // }\n  constructor(private validationMessages: { [key: string]: { [key: string]: string } }) {\n\n  }\n\n  // Processes each control within a FormGroup\n  // And returns a set of validation messages to display\n  // Structure\n  // controlName1: 'Validation Message.',\n  // controlName2: 'Validation Message.'\n  processMessages(container: FormGroup): { [key: string]: string } {\n    const messages = {};\n    for (const controlKey in container.controls) {\n      if (container.controls.hasOwnProperty(controlKey)) {\n        const c = container.controls[controlKey];\n        // If it is a FormGroup, process its child controls.\n        if (c instanceof FormGroup) {\n          const childMessages = this.processMessages(c);\n          Object.assign(messages, childMessages);\n        } else {\n          // Only validate if there are validation messages for the control\n          if (this.validationMessages[controlKey]) {\n            messages[controlKey] = '';\n            if ((c.dirty || c.touched) && c.errors) {\n              Object.keys(c.errors).map(messageKey => {\n                if (this.validationMessages[controlKey][messageKey]) {\n                  messages[controlKey] += this.validationMessages[controlKey][messageKey] + ' ';\n                }\n              });\n            }\n          }\n        }\n      }\n    }\n    return messages;\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderSideComponent.html":{"url":"components/HeaderSideComponent.html","title":"component - HeaderSideComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderSideComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/containers/layout-components/header-side/header-side.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-header-side\n            \n\n\n\n\n            \n                templateUrl\n                ./header-side.template.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                availableLangs\n                            \n                            \n                                currentLang\n                            \n                            \n                                    Public\n                                egretThemes\n                            \n                            \n                                    Public\n                                sidebarStyle\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeTheme\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onConfirmLogout\n                            \n                            \n                                setLang\n                            \n                            \n                                toggleCollapse\n                            \n                            \n                                toggleNotific\n                            \n                            \n                                toggleSidenav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                notificPanel\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authStore: Store, store: Store, themeService: ThemeService, layout: LayoutService, translate: TranslateService, renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/containers/layout-components/header-side/header-side.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authStore\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                    ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        layout\n                                                  \n                                                        \n                                                                    LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        notificPanel\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/header-side/header-side.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeTheme\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeTheme(theme)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/header-side/header-side.component.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        theme\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/header-side/header-side.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onConfirmLogout\n                            \n                            \n                        \n                    \n                \n                \n                    \nonConfirmLogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/header-side/header-side.component.ts:93\n                            \n                        \n\n\n                \n                    \n                            logout the user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setLang\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetLang(event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/header-side/header-side.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleCollapse\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleCollapse()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/header-side/header-side.component.ts:75\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleNotific\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleNotific()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/header-side/header-side.component.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleSidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleSidenav()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/header-side/header-side.component.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            availableLangs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        availableLangs:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n    name: 'English',\n    code: 'en',\n  }, {\n    name: 'Deutsch',\n    code: 'de',\n  }]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/header-side/header-side.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentLang\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentLang:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'de'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/header-side/header-side.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            egretThemes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        egretThemes:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/header-side/header-side.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidebarStyle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidebarStyle:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/header-side/header-side.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translate:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/header-side/header-side.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Renderer2 } from '@angular/core';\nimport { ThemeService } from '../../../../core/services/theme.service';\nimport { LayoutService } from '../../../../core/services/layout.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Store, select } from '@ngrx/store';\n\nimport { AuthActions } from '../../../../auth/actions';\nimport * as layoutActions from '../../../actions/layout.actions';\nimport * as fromAuth from '../../../../auth/reducers';\nimport * as fromDashboard from '../../../reducers';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'moio-header-side',\n  templateUrl: './header-side.template.html'\n})\nexport class HeaderSideComponent implements OnInit {\n  @Input() notificPanel;\n  currentLang = 'de';\n\n  public availableLangs = [{\n    name: 'English',\n    code: 'en',\n  }, {\n    name: 'Deutsch',\n    code: 'de',\n  }];\n  public egretThemes;\n  public sidebarStyle: string;\n\n  constructor(\n    private authStore: Store,\n    private store: Store,\n    private themeService: ThemeService,\n    private layout: LayoutService,\n    public translate: TranslateService,\n    private renderer: Renderer2\n  ) {\n  }\n\n  ngOnInit() {\n    this.egretThemes = this.themeService.egretThemes;\n\n    this.translate.use(this.currentLang);\n\n    // TODO: Unsubscribe\n    this.store.pipe(select(fromDashboard.getSideNav)).subscribe(\n      (sidebarStyle:string) => this.sidebarStyle = sidebarStyle\n    );\n  }\n\n  setLang(event) {\n    // TODO: change language\n    console.log(event);\n    this.translate.use(this.currentLang);\n  }\n\n  changeTheme(theme) {\n    this.themeService.changeTheme(this.renderer, theme);\n  }\n\n  toggleNotific() {\n    this.notificPanel.toggle();\n  }\n\n  toggleSidenav() {\n    // todo subscribe to the sidenavstyle\n    if (this.sidebarStyle === 'closed') {\n      this.store.dispatch(new layoutActions.OpenSideNav('full'));\n    } else {\n      this.store.dispatch(new layoutActions.CloseSideNav('closed'));\n    }\n  }\n\n  toggleCollapse() {\n    // compact --> full\n    if (this.sidebarStyle === 'compact') {\n      return this.layout.publishLayoutChange({\n        sidebarStyle: 'full'\n      }, {transitionClass: true});\n    }\n\n    // * --> compact\n    this.layout.publishLayoutChange({\n      sidebarStyle: 'compact'\n    }, {transitionClass: true});\n\n  }\n\n  /**\n   * logout the user\n   */\n  onConfirmLogout() {\n    this.authStore.dispatch(new AuthActions.LogoutConfirmation());\n  }\n}\n\n    \n\n    \n        \n  \n  \n    menu\n  \n  \n  \n    chevron_left\n  \n  \n  \n    \n      search\n      \n    \n   -->\n  \n  \n  \n    {{ lang.name }}\n    \n  \n  \n  \n    format_color_fill\n   -->\n\n  \n    \n      \n        \n          \n          check\n        \n      \n    \n   -->\n  \n  \n    notifications\n    3\n   -->\n  \n  \n    \n  \n\n  \n    \n      account_box\n      {{'AccountMenu.Profile' | translate }}\n    \n    \n      settings\n      Account Settings\n    \n    \n      notifications_off\n      Disable alerts\n     -->\n    \n      exit_to_app\n      {{ 'Auth.Signout' | translate }}\n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        menu          chevron_left                search             -->          {{ lang.name }}              format_color_fill   -->                                        check                     -->        notifications    3   -->                      account_box      {{\\'AccountMenu.Profile\\' | translate }}              settings      Account Settings              notifications_off      Disable alerts     -->          exit_to_app      {{ \\'Auth.Signout\\' | translate }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderSideComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAdjustScreenOptions.html":{"url":"interfaces/IAdjustScreenOptions.html","title":"interface - IAdjustScreenOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IAdjustScreenOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/layout.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        browserEvent\n                                \n                                \n                                            Optional\n                                        route\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        browserEvent\n                                    \n                                \n                                \n                                    \n                                        browserEvent:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                    \n                                \n                                \n                                    \n                                        route:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { getQueryParam } from '../helpers/url.helper';\n\n/**\n * layout configuration defintion\n */\ninterface ILayoutConf {\n  navigationPos?: string;   // side, top\n  sidebarStyle?: string;    // full, compact, closed\n  dir?: string;             // ltr, rtl\n  layoutInTransition?: boolean;\n  isMobile?: boolean;\n  useBreadcrumb?: boolean;\n  breadcrumb?: string;      // simple, title\n  topbarFixed?: boolean;\n}\n\n/**\n * change layout options definition\n */\ninterface ILayoutChangeOptions {\n  duration?: number;\n  transitionClass?: boolean;\n}\n\ninterface IAdjustScreenOptions {\n  browserEvent?: any;\n  route?: string;\n}\n\n/**\n * layout service\n * injected in root\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LayoutService {\n  public layoutConf: ILayoutConf;\n  layoutConfSubject = new BehaviorSubject(this.layoutConf);\n  layoutConf$ = this.layoutConfSubject.asObservable();\n  public isMobile: boolean;\n  public currentRoute: string;\n  public fullWidthRoutes = ['shop'];\n\n  /**\n   * constructor\n   */\n  constructor() {\n    this.setAppLayout();\n  }\n\n  /**\n   * set default layout options\n   */\n  setAppLayout() {\n    // ******** SET YOUR LAYOUT OPTIONS HERE *********\n    this.layoutConf = {\n      'navigationPos': 'side',    // side, top\n      'sidebarStyle': 'full',     // full, compact, closed\n      'dir': 'ltr',               // ltr, rtl\n      'useBreadcrumb': true,\n      'topbarFixed': false,\n      'breadcrumb': 'title'       // simple, title\n    };\n  }\n\n  /**\n   * publish layout changes\n   * @param lc layout conf\n   * @param opt layout options\n   */\n  publishLayoutChange(lc: ILayoutConf, opt: ILayoutChangeOptions = {}) {\n    const duration = opt.duration || 250;\n    if (!opt.transitionClass) {\n      this.layoutConf = Object.assign(this.layoutConf, lc);\n      return this.layoutConfSubject.next(this.layoutConf);\n    }\n\n    this.layoutConf = Object.assign(this.layoutConf, lc, {layoutInTransition: true});\n    this.layoutConfSubject.next(this.layoutConf);\n\n    setTimeout(() => {\n      this.layoutConf = Object.assign(this.layoutConf, {layoutInTransition: false});\n      this.layoutConfSubject.next(this.layoutConf);\n    }, duration);\n  }\n\n  /**\n   * set layout from query\n   * @deprecated we do not need this\n   */\n  setLayoutFromQuery() {\n    const layoutConfString = getQueryParam('layout');\n    try {\n      this.layoutConf = JSON.parse(layoutConfString);\n    } catch (e) {\n    }\n  }\n\n  /**\n   * adjust layout to the current situation\n   * e.g. isMobile\n   * @param options screen options\n   */\n  adjustLayout(options: IAdjustScreenOptions = {}) {\n    let sidebarStyle: string;\n    this.isMobile = this.isSm();\n    this.currentRoute = options.route || this.currentRoute;\n    sidebarStyle = this.isMobile ? 'closed' : this.layoutConf.sidebarStyle;\n\n    if (this.currentRoute) {\n      this.fullWidthRoutes.forEach(route => {\n        if (this.currentRoute.indexOf(route) !== -1) {\n          sidebarStyle = 'closed';\n        }\n      });\n    }\n\n    this.publishLayoutChange({\n      isMobile: this.isMobile,\n      sidebarStyle: sidebarStyle\n    });\n  }\n\n  /**\n   * identify current screen width\n   * and return if the max width is 959px\n   */\n  isSm() {\n    return window.matchMedia(`(max-width: 959px)`).matches;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBadge.html":{"url":"interfaces/IBadge.html","title":"interface - IBadge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IBadge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/navigation.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        color\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\ninterface IMenuItem {\n  type: string;       // Possible values: link/dropDown/icon/separator/extLink\n  name?: string;      // Used as display text for item and title for separator type\n  state?: string;     // Router state\n  icon?: string;      // Material icon name\n  tooltip?: string;   // Tooltip text\n  disabled?: boolean; // If true; item will not be appeared in sidenav.\n  sub?: IChildItem[]; // Dropdown items\n  badges?: IBadge[];\n}\n\ninterface IChildItem {\n  type?: string;\n  name: string;       // Display text\n  state?: string;     // Router state\n  icon?: string;\n  sub?: IChildItem[];\n}\n\ninterface IBadge {\n  color: string;      // primary/accent/warn/hex color codes(#fff000)\n  value: string;      // Display text\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavigationService {\n  constructor() {\n  }\n\n  iconMenu: IMenuItem[] = [\n    {\n      name: 'Dashboard',\n      type: 'link',\n      tooltip: 'Dashboard',\n      icon: 'dashboard',\n      state: 'dashboard/blank'\n    },\n    {\n      name: 'Users',\n      type: 'link',\n      tooltip: 'users',\n      icon: 'group',\n      state: 'dashboard/users'\n    },\n    {\n      name: 'Patients',\n      type: 'link',\n      tooltip: 'patients',\n      icon: 'group',\n      state: 'dashboard/patients'\n    }\n  ];\n\n  // Icon menu TITLE at the very top of navigation.\n  // This title will appear if any icon type item is present in menu.\n  iconTypeMenuTitle = 'Frequently Accessed';\n  // sets iconMenu as default;\n  menuItems = new BehaviorSubject(this.iconMenu);\n  // navigation component has subscribed to this Observable\n  menuItems$ = this.menuItems.asObservable();\n\n  // Customizer component uses this method to change menu.\n  // You can remove this method and customizer component.\n  // Or you can customize this method to supply different menu for\n  // different user type.\n  publishNavigationChange(menuType: string) {\n    this.menuItems.next(this.iconMenu);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IChildItem.html":{"url":"interfaces/IChildItem.html","title":"interface - IChildItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IChildItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/navigation.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        state\n                                \n                                \n                                            Optional\n                                        sub\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                    \n                                \n                                \n                                    \n                                        sub:     IChildItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IChildItem[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\ninterface IMenuItem {\n  type: string;       // Possible values: link/dropDown/icon/separator/extLink\n  name?: string;      // Used as display text for item and title for separator type\n  state?: string;     // Router state\n  icon?: string;      // Material icon name\n  tooltip?: string;   // Tooltip text\n  disabled?: boolean; // If true; item will not be appeared in sidenav.\n  sub?: IChildItem[]; // Dropdown items\n  badges?: IBadge[];\n}\n\ninterface IChildItem {\n  type?: string;\n  name: string;       // Display text\n  state?: string;     // Router state\n  icon?: string;\n  sub?: IChildItem[];\n}\n\ninterface IBadge {\n  color: string;      // primary/accent/warn/hex color codes(#fff000)\n  value: string;      // Display text\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavigationService {\n  constructor() {\n  }\n\n  iconMenu: IMenuItem[] = [\n    {\n      name: 'Dashboard',\n      type: 'link',\n      tooltip: 'Dashboard',\n      icon: 'dashboard',\n      state: 'dashboard/blank'\n    },\n    {\n      name: 'Users',\n      type: 'link',\n      tooltip: 'users',\n      icon: 'group',\n      state: 'dashboard/users'\n    },\n    {\n      name: 'Patients',\n      type: 'link',\n      tooltip: 'patients',\n      icon: 'group',\n      state: 'dashboard/patients'\n    }\n  ];\n\n  // Icon menu TITLE at the very top of navigation.\n  // This title will appear if any icon type item is present in menu.\n  iconTypeMenuTitle = 'Frequently Accessed';\n  // sets iconMenu as default;\n  menuItems = new BehaviorSubject(this.iconMenu);\n  // navigation component has subscribed to this Observable\n  menuItems$ = this.menuItems.asObservable();\n\n  // Customizer component uses this method to change menu.\n  // You can remove this method and customizer component.\n  // Or you can customize this method to supply different menu for\n  // different user type.\n  publishNavigationChange(menuType: string) {\n    this.menuItems.next(this.iconMenu);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICredentials.html":{"url":"interfaces/ICredentials.html","title":"interface - ICredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/models/user.interface.ts\n        \n\n            \n                Description\n            \n            \n                credentials definition\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IUser {\n  username?: string;\n  firstname?: string;\n  lastname?: string;\n  password?: string;\n  email?: string;\n}\n\n/**\n * credentials definition\n */\nexport interface ICredentials {\n  username: string;\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDevice.html":{"url":"interfaces/IDevice.html","title":"interface - IDevice","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDevice\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/models/device.model.ts\n        \n\n            \n                Description\n            \n            \n                device description\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        admin_code\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        model_no\n                                \n                                \n                                            Optional\n                                        nursing_home_id\n                                \n                                \n                                            Optional\n                                        readonly_code\n                                \n                                \n                                            Optional\n                                        serial_no\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        admin_code\n                                    \n                                \n                                \n                                    \n                                        admin_code:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model_no\n                                    \n                                \n                                \n                                    \n                                        model_no:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nursing_home_id\n                                    \n                                \n                                \n                                    \n                                        nursing_home_id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readonly_code\n                                    \n                                \n                                \n                                    \n                                        readonly_code:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serial_no\n                                    \n                                \n                                \n                                    \n                                        serial_no:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IDevice {\n    admin_code?: string | null;\n    id?: number | null;\n    model_no?: string | null;\n    nursing_home_id?: number;\n    readonly_code?: string;\n    serial_no?: string;\n  }\n  \n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILayoutChangeOptions.html":{"url":"interfaces/ILayoutChangeOptions.html","title":"interface - ILayoutChangeOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILayoutChangeOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/layout.service.ts\n        \n\n            \n                Description\n            \n            \n                change layout options definition\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        duration\n                                \n                                \n                                            Optional\n                                        transitionClass\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                    \n                                \n                                \n                                    \n                                        duration:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transitionClass\n                                    \n                                \n                                \n                                    \n                                        transitionClass:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { getQueryParam } from '../helpers/url.helper';\n\n/**\n * layout configuration defintion\n */\ninterface ILayoutConf {\n  navigationPos?: string;   // side, top\n  sidebarStyle?: string;    // full, compact, closed\n  dir?: string;             // ltr, rtl\n  layoutInTransition?: boolean;\n  isMobile?: boolean;\n  useBreadcrumb?: boolean;\n  breadcrumb?: string;      // simple, title\n  topbarFixed?: boolean;\n}\n\n/**\n * change layout options definition\n */\ninterface ILayoutChangeOptions {\n  duration?: number;\n  transitionClass?: boolean;\n}\n\ninterface IAdjustScreenOptions {\n  browserEvent?: any;\n  route?: string;\n}\n\n/**\n * layout service\n * injected in root\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LayoutService {\n  public layoutConf: ILayoutConf;\n  layoutConfSubject = new BehaviorSubject(this.layoutConf);\n  layoutConf$ = this.layoutConfSubject.asObservable();\n  public isMobile: boolean;\n  public currentRoute: string;\n  public fullWidthRoutes = ['shop'];\n\n  /**\n   * constructor\n   */\n  constructor() {\n    this.setAppLayout();\n  }\n\n  /**\n   * set default layout options\n   */\n  setAppLayout() {\n    // ******** SET YOUR LAYOUT OPTIONS HERE *********\n    this.layoutConf = {\n      'navigationPos': 'side',    // side, top\n      'sidebarStyle': 'full',     // full, compact, closed\n      'dir': 'ltr',               // ltr, rtl\n      'useBreadcrumb': true,\n      'topbarFixed': false,\n      'breadcrumb': 'title'       // simple, title\n    };\n  }\n\n  /**\n   * publish layout changes\n   * @param lc layout conf\n   * @param opt layout options\n   */\n  publishLayoutChange(lc: ILayoutConf, opt: ILayoutChangeOptions = {}) {\n    const duration = opt.duration || 250;\n    if (!opt.transitionClass) {\n      this.layoutConf = Object.assign(this.layoutConf, lc);\n      return this.layoutConfSubject.next(this.layoutConf);\n    }\n\n    this.layoutConf = Object.assign(this.layoutConf, lc, {layoutInTransition: true});\n    this.layoutConfSubject.next(this.layoutConf);\n\n    setTimeout(() => {\n      this.layoutConf = Object.assign(this.layoutConf, {layoutInTransition: false});\n      this.layoutConfSubject.next(this.layoutConf);\n    }, duration);\n  }\n\n  /**\n   * set layout from query\n   * @deprecated we do not need this\n   */\n  setLayoutFromQuery() {\n    const layoutConfString = getQueryParam('layout');\n    try {\n      this.layoutConf = JSON.parse(layoutConfString);\n    } catch (e) {\n    }\n  }\n\n  /**\n   * adjust layout to the current situation\n   * e.g. isMobile\n   * @param options screen options\n   */\n  adjustLayout(options: IAdjustScreenOptions = {}) {\n    let sidebarStyle: string;\n    this.isMobile = this.isSm();\n    this.currentRoute = options.route || this.currentRoute;\n    sidebarStyle = this.isMobile ? 'closed' : this.layoutConf.sidebarStyle;\n\n    if (this.currentRoute) {\n      this.fullWidthRoutes.forEach(route => {\n        if (this.currentRoute.indexOf(route) !== -1) {\n          sidebarStyle = 'closed';\n        }\n      });\n    }\n\n    this.publishLayoutChange({\n      isMobile: this.isMobile,\n      sidebarStyle: sidebarStyle\n    });\n  }\n\n  /**\n   * identify current screen width\n   * and return if the max width is 959px\n   */\n  isSm() {\n    return window.matchMedia(`(max-width: 959px)`).matches;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILayoutConf.html":{"url":"interfaces/ILayoutConf.html","title":"interface - ILayoutConf","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILayoutConf\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/layout.service.ts\n        \n\n            \n                Description\n            \n            \n                layout configuration defintion\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        breadcrumb\n                                \n                                \n                                            Optional\n                                        dir\n                                \n                                \n                                            Optional\n                                        isMobile\n                                \n                                \n                                            Optional\n                                        layoutInTransition\n                                \n                                \n                                            Optional\n                                        navigationPos\n                                \n                                \n                                            Optional\n                                        sidebarStyle\n                                \n                                \n                                            Optional\n                                        topbarFixed\n                                \n                                \n                                            Optional\n                                        useBreadcrumb\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        breadcrumb\n                                    \n                                \n                                \n                                    \n                                        breadcrumb:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dir\n                                    \n                                \n                                \n                                    \n                                        dir:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isMobile\n                                    \n                                \n                                \n                                    \n                                        isMobile:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layoutInTransition\n                                    \n                                \n                                \n                                    \n                                        layoutInTransition:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        navigationPos\n                                    \n                                \n                                \n                                    \n                                        navigationPos:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sidebarStyle\n                                    \n                                \n                                \n                                    \n                                        sidebarStyle:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topbarFixed\n                                    \n                                \n                                \n                                    \n                                        topbarFixed:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useBreadcrumb\n                                    \n                                \n                                \n                                    \n                                        useBreadcrumb:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { getQueryParam } from '../helpers/url.helper';\n\n/**\n * layout configuration defintion\n */\ninterface ILayoutConf {\n  navigationPos?: string;   // side, top\n  sidebarStyle?: string;    // full, compact, closed\n  dir?: string;             // ltr, rtl\n  layoutInTransition?: boolean;\n  isMobile?: boolean;\n  useBreadcrumb?: boolean;\n  breadcrumb?: string;      // simple, title\n  topbarFixed?: boolean;\n}\n\n/**\n * change layout options definition\n */\ninterface ILayoutChangeOptions {\n  duration?: number;\n  transitionClass?: boolean;\n}\n\ninterface IAdjustScreenOptions {\n  browserEvent?: any;\n  route?: string;\n}\n\n/**\n * layout service\n * injected in root\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LayoutService {\n  public layoutConf: ILayoutConf;\n  layoutConfSubject = new BehaviorSubject(this.layoutConf);\n  layoutConf$ = this.layoutConfSubject.asObservable();\n  public isMobile: boolean;\n  public currentRoute: string;\n  public fullWidthRoutes = ['shop'];\n\n  /**\n   * constructor\n   */\n  constructor() {\n    this.setAppLayout();\n  }\n\n  /**\n   * set default layout options\n   */\n  setAppLayout() {\n    // ******** SET YOUR LAYOUT OPTIONS HERE *********\n    this.layoutConf = {\n      'navigationPos': 'side',    // side, top\n      'sidebarStyle': 'full',     // full, compact, closed\n      'dir': 'ltr',               // ltr, rtl\n      'useBreadcrumb': true,\n      'topbarFixed': false,\n      'breadcrumb': 'title'       // simple, title\n    };\n  }\n\n  /**\n   * publish layout changes\n   * @param lc layout conf\n   * @param opt layout options\n   */\n  publishLayoutChange(lc: ILayoutConf, opt: ILayoutChangeOptions = {}) {\n    const duration = opt.duration || 250;\n    if (!opt.transitionClass) {\n      this.layoutConf = Object.assign(this.layoutConf, lc);\n      return this.layoutConfSubject.next(this.layoutConf);\n    }\n\n    this.layoutConf = Object.assign(this.layoutConf, lc, {layoutInTransition: true});\n    this.layoutConfSubject.next(this.layoutConf);\n\n    setTimeout(() => {\n      this.layoutConf = Object.assign(this.layoutConf, {layoutInTransition: false});\n      this.layoutConfSubject.next(this.layoutConf);\n    }, duration);\n  }\n\n  /**\n   * set layout from query\n   * @deprecated we do not need this\n   */\n  setLayoutFromQuery() {\n    const layoutConfString = getQueryParam('layout');\n    try {\n      this.layoutConf = JSON.parse(layoutConfString);\n    } catch (e) {\n    }\n  }\n\n  /**\n   * adjust layout to the current situation\n   * e.g. isMobile\n   * @param options screen options\n   */\n  adjustLayout(options: IAdjustScreenOptions = {}) {\n    let sidebarStyle: string;\n    this.isMobile = this.isSm();\n    this.currentRoute = options.route || this.currentRoute;\n    sidebarStyle = this.isMobile ? 'closed' : this.layoutConf.sidebarStyle;\n\n    if (this.currentRoute) {\n      this.fullWidthRoutes.forEach(route => {\n        if (this.currentRoute.indexOf(route) !== -1) {\n          sidebarStyle = 'closed';\n        }\n      });\n    }\n\n    this.publishLayoutChange({\n      isMobile: this.isMobile,\n      sidebarStyle: sidebarStyle\n    });\n  }\n\n  /**\n   * identify current screen width\n   * and return if the max width is 959px\n   */\n  isSm() {\n    return window.matchMedia(`(max-width: 959px)`).matches;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMenuItem.html":{"url":"interfaces/IMenuItem.html","title":"interface - IMenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/navigation.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        badges\n                                \n                                \n                                            Optional\n                                        disabled\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        state\n                                \n                                \n                                            Optional\n                                        sub\n                                \n                                \n                                            Optional\n                                        tooltip\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        badges\n                                    \n                                \n                                \n                                    \n                                        badges:     IBadge[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IBadge[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                    \n                                \n                                \n                                    \n                                        sub:     IChildItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IChildItem[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltip\n                                    \n                                \n                                \n                                    \n                                        tooltip:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\ninterface IMenuItem {\n  type: string;       // Possible values: link/dropDown/icon/separator/extLink\n  name?: string;      // Used as display text for item and title for separator type\n  state?: string;     // Router state\n  icon?: string;      // Material icon name\n  tooltip?: string;   // Tooltip text\n  disabled?: boolean; // If true; item will not be appeared in sidenav.\n  sub?: IChildItem[]; // Dropdown items\n  badges?: IBadge[];\n}\n\ninterface IChildItem {\n  type?: string;\n  name: string;       // Display text\n  state?: string;     // Router state\n  icon?: string;\n  sub?: IChildItem[];\n}\n\ninterface IBadge {\n  color: string;      // primary/accent/warn/hex color codes(#fff000)\n  value: string;      // Display text\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavigationService {\n  constructor() {\n  }\n\n  iconMenu: IMenuItem[] = [\n    {\n      name: 'Dashboard',\n      type: 'link',\n      tooltip: 'Dashboard',\n      icon: 'dashboard',\n      state: 'dashboard/blank'\n    },\n    {\n      name: 'Users',\n      type: 'link',\n      tooltip: 'users',\n      icon: 'group',\n      state: 'dashboard/users'\n    },\n    {\n      name: 'Patients',\n      type: 'link',\n      tooltip: 'patients',\n      icon: 'group',\n      state: 'dashboard/patients'\n    }\n  ];\n\n  // Icon menu TITLE at the very top of navigation.\n  // This title will appear if any icon type item is present in menu.\n  iconTypeMenuTitle = 'Frequently Accessed';\n  // sets iconMenu as default;\n  menuItems = new BehaviorSubject(this.iconMenu);\n  // navigation component has subscribed to this Observable\n  menuItems$ = this.menuItems.asObservable();\n\n  // Customizer component uses this method to change menu.\n  // You can remove this method and customizer component.\n  // Or you can customize this method to supply different menu for\n  // different user type.\n  publishNavigationChange(menuType: string) {\n    this.menuItems.next(this.iconMenu);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPatient.html":{"url":"interfaces/IPatient.html","title":"interface - IPatient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPatient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/models/patient.model.ts\n        \n\n            \n                Description\n            \n            \n                patient model description\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        device\n                                \n                                \n                                            Optional\n                                        device_id\n                                \n                                \n                                            Optional\n                                        firstname\n                                \n                                \n                                            Optional\n                                        gender\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        image\n                                \n                                \n                                            Optional\n                                        lastname\n                                \n                                \n                                            Optional\n                                        nursing_home\n                                \n                                \n                                            Optional\n                                        nursing_home_id\n                                \n                                \n                                            Optional\n                                        nursing_home_name\n                                \n                                \n                                            Optional\n                                        phone\n                                \n                                \n                                            Optional\n                                        users\n                                \n                                \n                                            Optional\n                                        users_count\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        device\n                                    \n                                \n                                \n                                    \n                                        device:     IDevice\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IDevice\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        device_id\n                                    \n                                \n                                \n                                    \n                                        device_id:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                    \n                                \n                                \n                                    \n                                        firstname:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                    \n                                \n                                \n                                    \n                                        gender:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                    \n                                \n                                \n                                    \n                                        image:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                    \n                                \n                                \n                                    \n                                        lastname:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nursing_home\n                                    \n                                \n                                \n                                    \n                                        nursing_home:     NursingHome\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     NursingHome\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nursing_home_id\n                                    \n                                \n                                \n                                    \n                                        nursing_home_id:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nursing_home_name\n                                    \n                                \n                                \n                                    \n                                        nursing_home_name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                    \n                                \n                                \n                                    \n                                        phone:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        users\n                                    \n                                \n                                \n                                    \n                                        users:     User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        users_count\n                                    \n                                \n                                \n                                    \n                                        users_count:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IDevice } from './device.model';\nimport { User } from './user.model';\nimport { NursingHome } from './nursing-home.model';\n\n/**\n * patient model description\n */\nexport interface IPatient {\n  id?: number | null; // auto generated from DB\n  firstname?: string | null;\n  lastname?: string;\n  gender?: string | null;\n  image?: string; // url or base64 encoded image?\n  phone?: string; // optional\n  device_id?: number | null;\n  nursing_home_id?: number | null;\n  nursing_home_name?: string | null;\n  device?: IDevice;\n  nursing_home?: NursingHome;\n  users?: User[];\n  \n  users_count?: number | null;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRoutePart.html":{"url":"interfaces/IRoutePart.html","title":"interface - IRoutePart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IRoutePart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/route-parts.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        breadcrumb\n                                \n                                \n                                            Optional\n                                        params\n                                \n                                \n                                        title\n                                \n                                \n                                        url\n                                \n                                \n                                        urlSegments\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        breadcrumb\n                                    \n                                \n                                \n                                    \n                                        breadcrumb:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                    \n                                \n                                \n                                    \n                                        params:     Params\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Params\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        urlSegments\n                                    \n                                \n                                \n                                    \n                                        urlSegments:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, OnInit } from '@angular/core';\nimport { Router, ActivatedRouteSnapshot, Params } from '@angular/router';\n\ninterface IRoutePart {\n  title: string;\n  breadcrumb: string;\n  params?: Params;\n  url: string;\n  urlSegments: any[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoutePartsService implements OnInit {\n  public routeParts: IRoutePart[];\n\n  constructor(private router: Router) {\n  }\n\n  ngOnInit() {\n  }\n\n  generateRouteParts(snapshot: ActivatedRouteSnapshot): IRoutePart[] {\n    let routeParts = [];\n    if (snapshot) {\n      if (snapshot.firstChild) {\n        routeParts = routeParts.concat(this.generateRouteParts(snapshot.firstChild));\n      }\n      if (snapshot.data['title'] && snapshot.url.length) {\n        // console.log(snapshot.data['title'], snapshot.url)\n        routeParts.push({\n          title: snapshot.data['title'],\n          breadcrumb: snapshot.data['breadcrumb'],\n          url: snapshot.url[0].path,\n          urlSegments: snapshot.url,\n          params: snapshot.params\n        });\n      }\n    }\n    return routeParts;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITheme.html":{"url":"interfaces/ITheme.html","title":"interface - ITheme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITheme\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/theme.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        baseColor\n                                \n                                \n                                            Optional\n                                        isActive\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        baseColor\n                                    \n                                \n                                \n                                    \n                                        baseColor:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                    \n                                \n                                \n                                    \n                                        isActive:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Inject, Renderer2 } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { getQueryParam } from '../helpers/url.helper';\n\ninterface ITheme {\n  name: string;\n  baseColor?: string;\n  isActive?: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  public egretThemes: ITheme[] = [{\n    'name': 'egret-dark-purple',\n    'baseColor': '#9c27b0',\n    'isActive': false\n  }, {\n    'name': 'egret-dark-pink',\n    'baseColor': '#e91e63',\n    'isActive': false\n  }, {\n    'name': 'egret-blue',\n    'baseColor': '#247ba0',\n    'isActive': false\n  }, {\n    'name': 'egret-indigo',\n    'baseColor': '#3f51b5',\n    'isActive': true\n  }];\n  public activatedTheme: ITheme;\n\n  constructor(\n    @Inject(DOCUMENT) private document: Document\n  ) {\n  }\n\n  // Invoked in AppComponent and apply 'activatedTheme' on startup\n  applyMatTheme(r: Renderer2) {\n    /*\n    ****** (SET YOUR DEFAULT THEME HERE) *******\n    * Assign new Theme to activatedTheme\n    */\n    // this.activatedTheme = this.egretThemes[0];\n    // this.activatedTheme = this.egretThemes[1];\n    // this.activatedTheme = this.egretThemes[2];\n    this.activatedTheme = this.egretThemes[3];\n\n    // *********** ONLY FOR DEMO **********\n    this.setThemeFromQuery();\n    // ************************************\n\n    this.changeTheme(r, this.activatedTheme);\n  }\n\n  changeTheme(r: Renderer2, theme: ITheme) {\n    r.removeClass(this.document.body, this.activatedTheme.name);\n    r.addClass(this.document.body, theme.name);\n    this.flipActiveFlag(theme);\n  }\n\n  flipActiveFlag(theme: ITheme) {\n    this.egretThemes.forEach((t) => {\n      t.isActive = false;\n      if (t.name === theme.name) {\n        t.isActive = true;\n        this.activatedTheme = theme;\n      }\n    });\n  }\n\n  // *********** ONLY FOR DEMO **********\n  setThemeFromQuery() {\n    const themeStr = getQueryParam('theme');\n    try {\n      this.activatedTheme = JSON.parse(themeStr);\n      this.flipActiveFlag(this.activatedTheme);\n    } catch (e) {\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/models/user.interface.ts\n        \n\n            \n                Description\n            \n            \n                user definition\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        email\n                                \n                                \n                                            Optional\n                                        firstname\n                                \n                                \n                                            Optional\n                                        lastname\n                                \n                                \n                                            Optional\n                                        password\n                                \n                                \n                                            Optional\n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                    \n                                \n                                \n                                    \n                                        firstname:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                    \n                                \n                                \n                                    \n                                        lastname:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IUser {\n  username?: string;\n  firstname?: string;\n  lastname?: string;\n  password?: string;\n  email?: string;\n}\n\n/**\n * credentials definition\n */\nexport interface ICredentials {\n  username: string;\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitializeNursingHome.html":{"url":"classes/InitializeNursingHome.html","title":"class - InitializeNursingHome","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitializeNursingHome\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/nursing-homes.actions.ts\n        \n\n            \n                Description\n            \n            \n                Initialize nursingHome Action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : NursingHomesActionTypes.InitializeNursingHome\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes.actions.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { NursingHome } from '../models/nursing-home.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum NursingHomesActionTypes {\n  SelectNursingHome = '[NursingHome] Select Current NursingHome',\n  ClearSelectedNursingHome = '[NursingHome] Clear Current NursingHome',\n  InitializeNursingHome = '[NursingHome] Initialize Current NursingHome',\n  PopUpNursingHomeForm = '[NursingHome] Pop Up NursingHome Form',\n  CreateNursingHome = '[NursingHome] Create NursingHome',\n  DismissPoppedUpNursingHomeForm = '[NursingHome] Dismiss Create NursingHome',\n  LoadNursingHomes = '[NursingHome] Load Nursing Homes',\n  SearchNursingHome = '[NursingHome] Search NursingHome',\n  SearchNursingHomeComplete = '[NursingHome] Search NursingHome Complete',\n  EditNursingHome = '[NursingHome] Edit NursingHome',\n  DismissEditNursingHome = '[NursingHome] Dismiss Edit NursingHome',\n  ResetNursingHomesState = '[NursingHomes] Reset NursingHomes State'\n}\n\n\n/**\n * Select nursingHome Action\n */\nexport class SelectNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SelectNursingHome;\n\n  constructor(public payload: NursingHome) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.ClearSelectedNursingHome;\n}\n\n/**\n * Initialize nursingHome Action\n */\nexport class InitializeNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.InitializeNursingHome;\n}\n\n/**\n * action to pop up nursingHome form\n */\nexport class PopUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.PopUpNursingHomeForm;\n}\n\n/**\n * Create nursingHome Action\n */\nexport class CreateNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.CreateNursingHome;\n\n  constructor(public payload: { nursingHome: NursingHome }) { }\n}\n\n/**\n * CreateNursingHome Dialog window dismissed\n */\nexport class DismissPoppedUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.DismissPoppedUpNursingHomeForm;\n}\n\n/**\n * Load nursingHomes Action\n */\nexport class LoadNursingHomes implements Action {\n  readonly type = NursingHomesActionTypes.LoadNursingHomes;\n}\n\n/**\n * Search nursingHome Action\n */\nexport class SearchNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHome;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search nursingHome complete Action\n */\nexport class SearchNursingHomeComplete implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHomeComplete;\n\n  constructor(public payload: NursingHome[]) { }\n}\n\n/**\n * action to submit and edit nursingHome\n */\nexport class EditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.EditNursingHome;\n\n  constructor(public payload: Update) {\n  }\n}\n\n/**\n * NursingHome Edit dismissed action\n */\nexport class DismissEditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.DismissEditNursingHome;\n}\n\n/**\n * reset the nursingHome state\n */\nexport class ResetNursingHomesState implements Action {\n  readonly type = NursingHomesActionTypes.ResetNursingHomesState;\n}\n\n/**\n * Export union of nursingHome Action\n */\nexport type NursingHomesActionsUnion\n  = SelectNursingHome\n  | ClearSelectedNursingHome\n  | InitializeNursingHome\n  | PopUpNursingHomeForm\n  | CreateNursingHome\n  | DismissPoppedUpNursingHomeForm\n  | LoadNursingHomes\n  | SearchNursingHome\n  | SearchNursingHomeComplete\n  | EditNursingHome\n  | DismissEditNursingHome\n  | ResetNursingHomesState;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitializePatient.html":{"url":"classes/InitializePatient.html","title":"class - InitializePatient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitializePatient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients.actions.ts\n        \n\n            \n                Description\n            \n            \n                Initialize patient Action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsActionTypes.InitializePatient\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { IPatient } from '../models/patient.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum PatientsActionTypes {\n  SelectPatient = '[Patient] Select Current Patient',\n  ClearSelectedPatient = '[Patient] Clear Current Patient',\n  InitializePatient = '[Patient] Initialize Current Patient',\n  CreatePatientFormDialog = '[Patients] Pop Up Patient Form',\n  CreatePatient = '[Patient] Create Patient',\n  DismissPatientFormDialog = '[Patient] Dismiss Patient Form Dialog',\n  LoadPatients = '[Patient] Load Patients',\n  SearchPatient = '[Patient] Search Patient',\n  SearchPatientComplete = '[Patient] Search Patient Complete',\n  EditPatient = '[Patient] Edit Patient',\n  DismissEditPatient = '[Patient] Dismiss Edit Patient',\n  ResetPatientsState = '[Patients] Reset Patients State',\n  DeletePatient ='[Patients] Delete Patient',\n  LoadPatientUsers = '[User] Load User Patients'\n}\n\n\n/**\n * Select patient Action\n */\nexport class SelectPatient implements Action {\n  readonly type = PatientsActionTypes.SelectPatient;\n\n  constructor(public payload: IPatient) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedPatient implements Action {\n  readonly type = PatientsActionTypes.ClearSelectedPatient;\n}\n\n/**\n * Initialize patient Action\n */\nexport class InitializePatient implements Action {\n  readonly type = PatientsActionTypes.InitializePatient;\n}\n\n/**\n * action to pop up patient form\n */\nexport class CreatePatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.CreatePatientFormDialog;\n}\n\n/**\n * Create patient Action\n */\nexport class CreatePatient implements Action {\n  readonly type = PatientsActionTypes.CreatePatient;\n\n  constructor(public payload: { patient: IPatient }) { }\n}\n\n/**\n * CreatePatient Dialog window dismissed\n */\nexport class DismissPatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.DismissPatientFormDialog;\n}\n\n/**\n * Load patients Action\n */\nexport class LoadPatients implements Action {\n  readonly type = PatientsActionTypes.LoadPatients;\n}\n\n/**\n * Search patient Action\n */\nexport class SearchPatient implements Action {\n  readonly type = PatientsActionTypes.SearchPatient;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search patient complete Action\n */\nexport class SearchPatientComplete implements Action {\n  readonly type = PatientsActionTypes.SearchPatientComplete;\n\n  constructor(public payload: IPatient[]) { }\n}\n\n/**\n * action to submit and edit patient\n */\nexport class EditPatient implements Action {\n  readonly type = PatientsActionTypes.EditPatient;\n\n  constructor(public payload: IPatient) {\n  }\n}\n\n/**\n * Patient Edit dismissed action\n */\nexport class DismissEditPatient implements Action {\n  readonly type = PatientsActionTypes.DismissEditPatient;\n}\n\n/**\n * reset the patient state\n */\nexport class ResetPatientsState implements Action {\n  readonly type = PatientsActionTypes.ResetPatientsState;\n}\n\n/**\n * action to delete a patient\n */\nexport class DeletePatient implements Action {\n  readonly type = PatientsActionTypes.DeletePatient;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load patient users action\n */\nexport class LoadPatientUsers implements Action {\n  readonly type = PatientsActionTypes.LoadPatientUsers;\n  constructor(public payload: number ) { }\n}\n\n\n/**\n * Export union of patient Action\n */\nexport type PatientsActionsUnion\n  = SelectPatient\n  | ClearSelectedPatient\n  | InitializePatient\n  | CreatePatientFormDialog\n  | CreatePatient\n  | DismissPatientFormDialog\n  | LoadPatients\n  | SearchPatient\n  | SearchPatientComplete\n  | EditPatient\n  | DismissEditPatient\n  | ResetPatientsState\n  | LoadPatientUsers;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitializeUser.html":{"url":"classes/InitializeUser.html","title":"class - InitializeUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitializeUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users.actions.ts\n        \n\n            \n                Description\n            \n            \n                Initialize user Action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersActionTypes.InitializeUser\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum UsersActionTypes {\n  SelectUser = '[User] Select Current User',\n  ClearSelectedUser = '[User] Clear Current User',\n  InitializeUser = '[User] Initialize Current User',\n  CreateUserFormDialog = '[Users] Pop Up User Form',\n  CreateUser = '[User] Create User',\n  DismissUserFormDialog = '[User] Dismiss User Form Dialog',\n  LoadUsers = '[User] Load Users',\n  SearchUser = '[User] Search User',\n  SearchUserComplete = '[User] Search User Complete',\n  EditUser = '[User] Edit User',\n  DismissEditUser = '[User] Dismiss Edit User',\n  ResetUsersState = '[Users] Reset Users State',\n  DeleteUser = '[Users] Delete User',\n  LoadUserPatients = '[User] Load User Patients'\n}\n\n\n/**\n * Select user Action\n */\nexport class SelectUser implements Action {\n  readonly type = UsersActionTypes.SelectUser;\n\n  constructor(public payload: User) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedUser implements Action {\n  readonly type = UsersActionTypes.ClearSelectedUser;\n}\n\n/**\n * Initialize user Action\n */\nexport class InitializeUser implements Action {\n  readonly type = UsersActionTypes.InitializeUser;\n}\n\n/**\n * action to pop up user form\n */\nexport class CreateUserFormDialog implements Action {\n  readonly type = UsersActionTypes.CreateUserFormDialog;\n}\n\n/**\n * Create user Action\n */\nexport class CreateUser implements Action {\n  readonly type = UsersActionTypes.CreateUser;\n\n  constructor(public payload: { user: User }) { }\n}\n\n/**\n * CreateUser Dialog window dismissed\n */\nexport class DismissUserFormDialog implements Action {\n  readonly type = UsersActionTypes.DismissUserFormDialog;\n}\n\n/**\n * Load users Action\n */\nexport class LoadUsers implements Action {\n  readonly type = UsersActionTypes.LoadUsers;\n}\n\n/**\n * Search user action\n */\nexport class SearchUser implements Action {\n  readonly type = UsersActionTypes.SearchUser;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search user complete action\n */\nexport class SearchUserComplete implements Action {\n  readonly type = UsersActionTypes.SearchUserComplete;\n\n  constructor(public payload: User[]) { }\n}\n\n/**\n * action to submit and edit user\n */\nexport class EditUser implements Action {\n  readonly type = UsersActionTypes.EditUser;\n\n  constructor(public payload: User) {\n  }\n}\n\n/**\n * User Edit dismissed action\n */\nexport class DismissEditUser implements Action {\n  readonly type = UsersActionTypes.DismissEditUser;\n}\n\n/**\n * reset the user state\n */\nexport class ResetUsersState implements Action {\n  readonly type = UsersActionTypes.ResetUsersState;\n}\n\n/**\n * action to delete a user\n */\nexport class DeleteUser implements Action {\n  readonly type = UsersActionTypes.DeleteUser;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load user patients action\n */\nexport class LoadUserPatients implements Action {\n  readonly type = UsersActionTypes.LoadUserPatients;\n  constructor(public payload: number ) { }\n}\n\n/**\n * Export union of user Action\n */\nexport type UsersActionsUnion\n  = SelectUser\n  | ClearSelectedUser\n  | InitializeUser\n  | CreateUserFormDialog\n  | CreateUser\n  | DismissUserFormDialog\n  | LoadUsers\n  | SearchUser\n  | SearchUserComplete\n  | EditUser\n  | DismissEditUser\n  | ResetUsersState\n  | LoadUserPatients;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LayoutService.html":{"url":"injectables/LayoutService.html","title":"injectable - LayoutService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LayoutService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/layout.service.ts\n        \n\n            \n                Description\n            \n            \n                layout service\ninjected in root\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentRoute\n                            \n                            \n                                    Public\n                                fullWidthRoutes\n                            \n                            \n                                    Public\n                                isMobile\n                            \n                            \n                                    Public\n                                layoutConf\n                            \n                            \n                                layoutConf$\n                            \n                            \n                                layoutConfSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                adjustLayout\n                            \n                            \n                                isSm\n                            \n                            \n                                publishLayoutChange\n                            \n                            \n                                setAppLayout\n                            \n                            \n                                setLayoutFromQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/layout.service.ts:45\n                            \n                        \n\n                \n                    \n                            constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            adjustLayout\n                            \n                            \n                        \n                    \n                \n                \n                    \nadjustLayout(options: IAdjustScreenOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/layout.service.ts:107\n                            \n                        \n\n\n                \n                    \n                            adjust layout to the current situation\ne.g. isMobile\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    IAdjustScreenOptions\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                        \n                                                                screen options\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSm\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/layout.service.ts:131\n                            \n                        \n\n\n                \n                    \n                            identify current screen width\nand return if the max width is 959px\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publishLayoutChange\n                            \n                            \n                        \n                    \n                \n                \n                    \npublishLayoutChange(lc: ILayoutConf, opt: ILayoutChangeOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/layout.service.ts:74\n                            \n                        \n\n\n                \n                    \n                            publish layout changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        lc\n                                                        \n                                                                    ILayoutConf\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                layout conf\n\n                                                        \n                                                \n                                                \n                                                        opt\n                                                        \n                                                                    ILayoutChangeOptions\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                        \n                                                                layout options\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setAppLayout\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetAppLayout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/layout.service.ts:57\n                            \n                        \n\n\n                \n                    \n                            set default layout options\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setLayoutFromQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetLayoutFromQuery()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/layout.service.ts:94\n                            \n                        \n\n\n                \n                    \n                            set layout from query\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentRoute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentRoute:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/layout.service.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fullWidthRoutes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fullWidthRoutes:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['shop']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/layout.service.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isMobile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isMobile:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/layout.service.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            layoutConf\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layoutConf:     ILayoutConf\n\n                    \n                \n                    \n                        \n                            Type :     ILayoutConf\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/layout.service.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            layoutConf$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layoutConf$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.layoutConfSubject.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/layout.service.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            layoutConfSubject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layoutConfSubject:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(this.layoutConf)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/layout.service.ts:41\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { getQueryParam } from '../helpers/url.helper';\n\n/**\n * layout configuration defintion\n */\ninterface ILayoutConf {\n  navigationPos?: string;   // side, top\n  sidebarStyle?: string;    // full, compact, closed\n  dir?: string;             // ltr, rtl\n  layoutInTransition?: boolean;\n  isMobile?: boolean;\n  useBreadcrumb?: boolean;\n  breadcrumb?: string;      // simple, title\n  topbarFixed?: boolean;\n}\n\n/**\n * change layout options definition\n */\ninterface ILayoutChangeOptions {\n  duration?: number;\n  transitionClass?: boolean;\n}\n\ninterface IAdjustScreenOptions {\n  browserEvent?: any;\n  route?: string;\n}\n\n/**\n * layout service\n * injected in root\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LayoutService {\n  public layoutConf: ILayoutConf;\n  layoutConfSubject = new BehaviorSubject(this.layoutConf);\n  layoutConf$ = this.layoutConfSubject.asObservable();\n  public isMobile: boolean;\n  public currentRoute: string;\n  public fullWidthRoutes = ['shop'];\n\n  /**\n   * constructor\n   */\n  constructor() {\n    this.setAppLayout();\n  }\n\n  /**\n   * set default layout options\n   */\n  setAppLayout() {\n    // ******** SET YOUR LAYOUT OPTIONS HERE *********\n    this.layoutConf = {\n      'navigationPos': 'side',    // side, top\n      'sidebarStyle': 'full',     // full, compact, closed\n      'dir': 'ltr',               // ltr, rtl\n      'useBreadcrumb': true,\n      'topbarFixed': false,\n      'breadcrumb': 'title'       // simple, title\n    };\n  }\n\n  /**\n   * publish layout changes\n   * @param lc layout conf\n   * @param opt layout options\n   */\n  publishLayoutChange(lc: ILayoutConf, opt: ILayoutChangeOptions = {}) {\n    const duration = opt.duration || 250;\n    if (!opt.transitionClass) {\n      this.layoutConf = Object.assign(this.layoutConf, lc);\n      return this.layoutConfSubject.next(this.layoutConf);\n    }\n\n    this.layoutConf = Object.assign(this.layoutConf, lc, {layoutInTransition: true});\n    this.layoutConfSubject.next(this.layoutConf);\n\n    setTimeout(() => {\n      this.layoutConf = Object.assign(this.layoutConf, {layoutInTransition: false});\n      this.layoutConfSubject.next(this.layoutConf);\n    }, duration);\n  }\n\n  /**\n   * set layout from query\n   * @deprecated we do not need this\n   */\n  setLayoutFromQuery() {\n    const layoutConfString = getQueryParam('layout');\n    try {\n      this.layoutConf = JSON.parse(layoutConfString);\n    } catch (e) {\n    }\n  }\n\n  /**\n   * adjust layout to the current situation\n   * e.g. isMobile\n   * @param options screen options\n   */\n  adjustLayout(options: IAdjustScreenOptions = {}) {\n    let sidebarStyle: string;\n    this.isMobile = this.isSm();\n    this.currentRoute = options.route || this.currentRoute;\n    sidebarStyle = this.isMobile ? 'closed' : this.layoutConf.sidebarStyle;\n\n    if (this.currentRoute) {\n      this.fullWidthRoutes.forEach(route => {\n        if (this.currentRoute.indexOf(route) !== -1) {\n          sidebarStyle = 'closed';\n        }\n      });\n    }\n\n    this.publishLayoutChange({\n      isMobile: this.isMobile,\n      sidebarStyle: sidebarStyle\n    });\n  }\n\n  /**\n   * identify current screen width\n   * and return if the max width is 959px\n   */\n  isSm() {\n    return window.matchMedia(`(max-width: 959px)`).matches;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadNursingHomes.html":{"url":"classes/LoadNursingHomes.html","title":"class - LoadNursingHomes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadNursingHomes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/nursing-homes.actions.ts\n        \n\n            \n                Description\n            \n            \n                Load nursingHomes Action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : NursingHomesActionTypes.LoadNursingHomes\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes.actions.ts:71\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { NursingHome } from '../models/nursing-home.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum NursingHomesActionTypes {\n  SelectNursingHome = '[NursingHome] Select Current NursingHome',\n  ClearSelectedNursingHome = '[NursingHome] Clear Current NursingHome',\n  InitializeNursingHome = '[NursingHome] Initialize Current NursingHome',\n  PopUpNursingHomeForm = '[NursingHome] Pop Up NursingHome Form',\n  CreateNursingHome = '[NursingHome] Create NursingHome',\n  DismissPoppedUpNursingHomeForm = '[NursingHome] Dismiss Create NursingHome',\n  LoadNursingHomes = '[NursingHome] Load Nursing Homes',\n  SearchNursingHome = '[NursingHome] Search NursingHome',\n  SearchNursingHomeComplete = '[NursingHome] Search NursingHome Complete',\n  EditNursingHome = '[NursingHome] Edit NursingHome',\n  DismissEditNursingHome = '[NursingHome] Dismiss Edit NursingHome',\n  ResetNursingHomesState = '[NursingHomes] Reset NursingHomes State'\n}\n\n\n/**\n * Select nursingHome Action\n */\nexport class SelectNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SelectNursingHome;\n\n  constructor(public payload: NursingHome) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.ClearSelectedNursingHome;\n}\n\n/**\n * Initialize nursingHome Action\n */\nexport class InitializeNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.InitializeNursingHome;\n}\n\n/**\n * action to pop up nursingHome form\n */\nexport class PopUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.PopUpNursingHomeForm;\n}\n\n/**\n * Create nursingHome Action\n */\nexport class CreateNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.CreateNursingHome;\n\n  constructor(public payload: { nursingHome: NursingHome }) { }\n}\n\n/**\n * CreateNursingHome Dialog window dismissed\n */\nexport class DismissPoppedUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.DismissPoppedUpNursingHomeForm;\n}\n\n/**\n * Load nursingHomes Action\n */\nexport class LoadNursingHomes implements Action {\n  readonly type = NursingHomesActionTypes.LoadNursingHomes;\n}\n\n/**\n * Search nursingHome Action\n */\nexport class SearchNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHome;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search nursingHome complete Action\n */\nexport class SearchNursingHomeComplete implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHomeComplete;\n\n  constructor(public payload: NursingHome[]) { }\n}\n\n/**\n * action to submit and edit nursingHome\n */\nexport class EditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.EditNursingHome;\n\n  constructor(public payload: Update) {\n  }\n}\n\n/**\n * NursingHome Edit dismissed action\n */\nexport class DismissEditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.DismissEditNursingHome;\n}\n\n/**\n * reset the nursingHome state\n */\nexport class ResetNursingHomesState implements Action {\n  readonly type = NursingHomesActionTypes.ResetNursingHomesState;\n}\n\n/**\n * Export union of nursingHome Action\n */\nexport type NursingHomesActionsUnion\n  = SelectNursingHome\n  | ClearSelectedNursingHome\n  | InitializeNursingHome\n  | PopUpNursingHomeForm\n  | CreateNursingHome\n  | DismissPoppedUpNursingHomeForm\n  | LoadNursingHomes\n  | SearchNursingHome\n  | SearchNursingHomeComplete\n  | EditNursingHome\n  | DismissEditNursingHome\n  | ResetNursingHomesState;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadNursingHomesFailure.html":{"url":"classes/LoadNursingHomesFailure.html","title":"class - LoadNursingHomesFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadNursingHomesFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/nursing-homes-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                load all nursingHomes action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/nursing-homes-api.actions.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes-api.actions.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : NursingHomesApiActionTypes.LoadNursingHomesFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes-api.actions.ts:50\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { NursingHome } from '../models/nursing-home.model';\n\n/**\n * definitions for action types\n */\nexport enum NursingHomesApiActionTypes {\n  CreateNursingHomeSuccess = '[NursingHome/Api] Create NursingHome Success',\n  CreateNursingHomeFailure = '[NursingHome/Api] Create NursingHome Failure',\n  LoadNursingHomesSuccess = '[NursingHome/Api] Load NursingHomes Success',\n  LoadNursingHomesFailure = '[NursingHome/Api] Load NursingHomes Failure',\n  EditNursingHomeSuccess = '[NursingHome/Api] Edit NursingHome Success',\n  EditNursingHomeFailure = '[NursingHome/Api] Edit NursingHome Failure',\n}\n\n/**\n * add nursingHome success action\n */\nexport class CreateNursingHomeSuccess implements Action {\n  public readonly type = NursingHomesApiActionTypes.CreateNursingHomeSuccess;\n\n  constructor(public payload: { nursingHome: NursingHome }) {\n  }\n}\n\n/**\n * add nursingHome failure action\n */\nexport class CreateNursingHomeFailure implements Action {\n  public readonly type = NursingHomesApiActionTypes.CreateNursingHomeFailure;\n\n  constructor(public payload: { message: string}) {\n  }\n}\n\n/**\n * load all nursingHomes success action\n */\nexport class LoadNursingHomesSuccess implements Action {\n  public readonly type = NursingHomesApiActionTypes.LoadNursingHomesSuccess;\n\n  constructor(public payload: { nursingHomes: NursingHome[] }) {\n  }\n}\n\n/**\n * load all nursingHomes action\n */\nexport class LoadNursingHomesFailure implements Action {\n  public readonly type = NursingHomesApiActionTypes.LoadNursingHomesFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * edit nursingHome success action\n */\nexport class EditNursingHomeSuccess implements Action {\n  public readonly type = NursingHomesApiActionTypes.EditNursingHomeSuccess;\n\n  constructor(public payload: { nursingHome: NursingHome }) {\n  }\n}\n\n/**\n * edit nursingHome failure action\n */\nexport class EditNursingHomeFailure implements Action {\n  public readonly type = NursingHomesApiActionTypes.EditNursingHomeFailure;\n\n  constructor(public payload: { message: string}) {\n  }\n}\n\n// export types\nexport type NursingHomesApiActionsUnion =\n  | CreateNursingHomeSuccess\n  | CreateNursingHomeFailure\n  | EditNursingHomeSuccess\n  | EditNursingHomeFailure\n  | LoadNursingHomesSuccess\n  | LoadNursingHomesFailure\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadNursingHomesSuccess.html":{"url":"classes/LoadNursingHomesSuccess.html","title":"class - LoadNursingHomesSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadNursingHomesSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/nursing-homes-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                load all nursingHomes success action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/nursing-homes-api.actions.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes-api.actions.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : NursingHomesApiActionTypes.LoadNursingHomesSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes-api.actions.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { NursingHome } from '../models/nursing-home.model';\n\n/**\n * definitions for action types\n */\nexport enum NursingHomesApiActionTypes {\n  CreateNursingHomeSuccess = '[NursingHome/Api] Create NursingHome Success',\n  CreateNursingHomeFailure = '[NursingHome/Api] Create NursingHome Failure',\n  LoadNursingHomesSuccess = '[NursingHome/Api] Load NursingHomes Success',\n  LoadNursingHomesFailure = '[NursingHome/Api] Load NursingHomes Failure',\n  EditNursingHomeSuccess = '[NursingHome/Api] Edit NursingHome Success',\n  EditNursingHomeFailure = '[NursingHome/Api] Edit NursingHome Failure',\n}\n\n/**\n * add nursingHome success action\n */\nexport class CreateNursingHomeSuccess implements Action {\n  public readonly type = NursingHomesApiActionTypes.CreateNursingHomeSuccess;\n\n  constructor(public payload: { nursingHome: NursingHome }) {\n  }\n}\n\n/**\n * add nursingHome failure action\n */\nexport class CreateNursingHomeFailure implements Action {\n  public readonly type = NursingHomesApiActionTypes.CreateNursingHomeFailure;\n\n  constructor(public payload: { message: string}) {\n  }\n}\n\n/**\n * load all nursingHomes success action\n */\nexport class LoadNursingHomesSuccess implements Action {\n  public readonly type = NursingHomesApiActionTypes.LoadNursingHomesSuccess;\n\n  constructor(public payload: { nursingHomes: NursingHome[] }) {\n  }\n}\n\n/**\n * load all nursingHomes action\n */\nexport class LoadNursingHomesFailure implements Action {\n  public readonly type = NursingHomesApiActionTypes.LoadNursingHomesFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * edit nursingHome success action\n */\nexport class EditNursingHomeSuccess implements Action {\n  public readonly type = NursingHomesApiActionTypes.EditNursingHomeSuccess;\n\n  constructor(public payload: { nursingHome: NursingHome }) {\n  }\n}\n\n/**\n * edit nursingHome failure action\n */\nexport class EditNursingHomeFailure implements Action {\n  public readonly type = NursingHomesApiActionTypes.EditNursingHomeFailure;\n\n  constructor(public payload: { message: string}) {\n  }\n}\n\n// export types\nexport type NursingHomesApiActionsUnion =\n  | CreateNursingHomeSuccess\n  | CreateNursingHomeFailure\n  | EditNursingHomeSuccess\n  | EditNursingHomeFailure\n  | LoadNursingHomesSuccess\n  | LoadNursingHomesFailure\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadPatientUsers.html":{"url":"classes/LoadPatientUsers.html","title":"class - LoadPatientUsers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadPatientUsers\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients.actions.ts\n        \n\n            \n                Description\n            \n            \n                Load patient users action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/patients.actions.ts:132\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:133\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsActionTypes.LoadPatientUsers\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:132\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { IPatient } from '../models/patient.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum PatientsActionTypes {\n  SelectPatient = '[Patient] Select Current Patient',\n  ClearSelectedPatient = '[Patient] Clear Current Patient',\n  InitializePatient = '[Patient] Initialize Current Patient',\n  CreatePatientFormDialog = '[Patients] Pop Up Patient Form',\n  CreatePatient = '[Patient] Create Patient',\n  DismissPatientFormDialog = '[Patient] Dismiss Patient Form Dialog',\n  LoadPatients = '[Patient] Load Patients',\n  SearchPatient = '[Patient] Search Patient',\n  SearchPatientComplete = '[Patient] Search Patient Complete',\n  EditPatient = '[Patient] Edit Patient',\n  DismissEditPatient = '[Patient] Dismiss Edit Patient',\n  ResetPatientsState = '[Patients] Reset Patients State',\n  DeletePatient ='[Patients] Delete Patient',\n  LoadPatientUsers = '[User] Load User Patients'\n}\n\n\n/**\n * Select patient Action\n */\nexport class SelectPatient implements Action {\n  readonly type = PatientsActionTypes.SelectPatient;\n\n  constructor(public payload: IPatient) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedPatient implements Action {\n  readonly type = PatientsActionTypes.ClearSelectedPatient;\n}\n\n/**\n * Initialize patient Action\n */\nexport class InitializePatient implements Action {\n  readonly type = PatientsActionTypes.InitializePatient;\n}\n\n/**\n * action to pop up patient form\n */\nexport class CreatePatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.CreatePatientFormDialog;\n}\n\n/**\n * Create patient Action\n */\nexport class CreatePatient implements Action {\n  readonly type = PatientsActionTypes.CreatePatient;\n\n  constructor(public payload: { patient: IPatient }) { }\n}\n\n/**\n * CreatePatient Dialog window dismissed\n */\nexport class DismissPatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.DismissPatientFormDialog;\n}\n\n/**\n * Load patients Action\n */\nexport class LoadPatients implements Action {\n  readonly type = PatientsActionTypes.LoadPatients;\n}\n\n/**\n * Search patient Action\n */\nexport class SearchPatient implements Action {\n  readonly type = PatientsActionTypes.SearchPatient;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search patient complete Action\n */\nexport class SearchPatientComplete implements Action {\n  readonly type = PatientsActionTypes.SearchPatientComplete;\n\n  constructor(public payload: IPatient[]) { }\n}\n\n/**\n * action to submit and edit patient\n */\nexport class EditPatient implements Action {\n  readonly type = PatientsActionTypes.EditPatient;\n\n  constructor(public payload: IPatient) {\n  }\n}\n\n/**\n * Patient Edit dismissed action\n */\nexport class DismissEditPatient implements Action {\n  readonly type = PatientsActionTypes.DismissEditPatient;\n}\n\n/**\n * reset the patient state\n */\nexport class ResetPatientsState implements Action {\n  readonly type = PatientsActionTypes.ResetPatientsState;\n}\n\n/**\n * action to delete a patient\n */\nexport class DeletePatient implements Action {\n  readonly type = PatientsActionTypes.DeletePatient;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load patient users action\n */\nexport class LoadPatientUsers implements Action {\n  readonly type = PatientsActionTypes.LoadPatientUsers;\n  constructor(public payload: number ) { }\n}\n\n\n/**\n * Export union of patient Action\n */\nexport type PatientsActionsUnion\n  = SelectPatient\n  | ClearSelectedPatient\n  | InitializePatient\n  | CreatePatientFormDialog\n  | CreatePatient\n  | DismissPatientFormDialog\n  | LoadPatients\n  | SearchPatient\n  | SearchPatientComplete\n  | EditPatient\n  | DismissEditPatient\n  | ResetPatientsState\n  | LoadPatientUsers;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadPatientUsersFailure.html":{"url":"classes/LoadPatientUsersFailure.html","title":"class - LoadPatientUsersFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadPatientUsersFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                load all patient users failure action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/patients-api.actions.ts:93\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients-api.actions.ts:95\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsApiActionTypes.LoadPatientUsersFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients-api.actions.ts:93\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { IPatient } from '../models/patient.model';\n\n/**\n * definitions for action types\n */\nexport enum PatientsApiActionTypes {\n  CreatePatientSuccess = '[Patient/Api] Create Patient Success',\n  CreatePatientFailure = '[Patient/Api] Create Patient Failure',\n  LoadPatientsSuccess = '[Patient/Api] Load Patients Success',\n  LoadPatientsFailure = '[Patient/Api] Load Patients Failure',\n  EditPatientSuccess = '[Patient/Api] Edit Patient Success',\n  EditPatientFailure = '[Patient/Api] Edit Patient Failure',\n  LoadPatientUsersSuccess = '[User/Api] Load Patient Users Success',\n  LoadPatientUsersFailure = '[User/Api] Load Patient Users Failure',\n}\n\n/**\n * add patient success action\n */\nexport class CreatePatientSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.CreatePatientSuccess;\n\n  constructor(public payload: { patient: IPatient }) {\n  }\n}\n\n/**\n * add patient failure action\n */\nexport class CreatePatientFailure implements Action {\n  public readonly type = PatientsApiActionTypes.CreatePatientFailure;\n\n  constructor(public payload: { messages: string }) {\n  }\n}\n\n/**\n * load all patients success action\n */\nexport class LoadPatientsSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientsSuccess;\n\n  constructor(public payload: { patients: IPatient[] }) {\n  }\n}\n\n/**\n * load all patients action\n */\nexport class LoadPatientsFailure implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientsFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * edit patient success action\n */\nexport class EditPatientSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.EditPatientSuccess;\n\n  constructor(public payload: { patient: IPatient }) {\n  }\n}\n\n/**\n * edit patient failure action\n */\nexport class EditPatientFailure implements Action {\n  public readonly type = PatientsApiActionTypes.EditPatientFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * load all patient users success action\n */\nexport class LoadPatientUsersSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientUsersSuccess;\n\n  constructor(public payload: { users: User[] }) {\n  }\n}\n\n/**\n * load all patient users failure action\n */\nexport class LoadPatientUsersFailure implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientUsersFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n// export types\nexport type PatientsApiActionsUnion =\n  | CreatePatientSuccess\n  | CreatePatientFailure\n  | EditPatientSuccess\n  | EditPatientFailure\n  | LoadPatientsSuccess\n  | LoadPatientsFailure\n  | LoadPatientUsersSuccess\n  | LoadPatientUsersFailure;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadPatientUsersSuccess.html":{"url":"classes/LoadPatientUsersSuccess.html","title":"class - LoadPatientUsersSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadPatientUsersSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                load all patient users success action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/patients-api.actions.ts:83\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients-api.actions.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsApiActionTypes.LoadPatientUsersSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients-api.actions.ts:83\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { IPatient } from '../models/patient.model';\n\n/**\n * definitions for action types\n */\nexport enum PatientsApiActionTypes {\n  CreatePatientSuccess = '[Patient/Api] Create Patient Success',\n  CreatePatientFailure = '[Patient/Api] Create Patient Failure',\n  LoadPatientsSuccess = '[Patient/Api] Load Patients Success',\n  LoadPatientsFailure = '[Patient/Api] Load Patients Failure',\n  EditPatientSuccess = '[Patient/Api] Edit Patient Success',\n  EditPatientFailure = '[Patient/Api] Edit Patient Failure',\n  LoadPatientUsersSuccess = '[User/Api] Load Patient Users Success',\n  LoadPatientUsersFailure = '[User/Api] Load Patient Users Failure',\n}\n\n/**\n * add patient success action\n */\nexport class CreatePatientSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.CreatePatientSuccess;\n\n  constructor(public payload: { patient: IPatient }) {\n  }\n}\n\n/**\n * add patient failure action\n */\nexport class CreatePatientFailure implements Action {\n  public readonly type = PatientsApiActionTypes.CreatePatientFailure;\n\n  constructor(public payload: { messages: string }) {\n  }\n}\n\n/**\n * load all patients success action\n */\nexport class LoadPatientsSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientsSuccess;\n\n  constructor(public payload: { patients: IPatient[] }) {\n  }\n}\n\n/**\n * load all patients action\n */\nexport class LoadPatientsFailure implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientsFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * edit patient success action\n */\nexport class EditPatientSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.EditPatientSuccess;\n\n  constructor(public payload: { patient: IPatient }) {\n  }\n}\n\n/**\n * edit patient failure action\n */\nexport class EditPatientFailure implements Action {\n  public readonly type = PatientsApiActionTypes.EditPatientFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * load all patient users success action\n */\nexport class LoadPatientUsersSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientUsersSuccess;\n\n  constructor(public payload: { users: User[] }) {\n  }\n}\n\n/**\n * load all patient users failure action\n */\nexport class LoadPatientUsersFailure implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientUsersFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n// export types\nexport type PatientsApiActionsUnion =\n  | CreatePatientSuccess\n  | CreatePatientFailure\n  | EditPatientSuccess\n  | EditPatientFailure\n  | LoadPatientsSuccess\n  | LoadPatientsFailure\n  | LoadPatientUsersSuccess\n  | LoadPatientUsersFailure;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadPatients.html":{"url":"classes/LoadPatients.html","title":"class - LoadPatients","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadPatients\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients.actions.ts\n        \n\n            \n                Description\n            \n            \n                Load patients Action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsActionTypes.LoadPatients\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:73\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { IPatient } from '../models/patient.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum PatientsActionTypes {\n  SelectPatient = '[Patient] Select Current Patient',\n  ClearSelectedPatient = '[Patient] Clear Current Patient',\n  InitializePatient = '[Patient] Initialize Current Patient',\n  CreatePatientFormDialog = '[Patients] Pop Up Patient Form',\n  CreatePatient = '[Patient] Create Patient',\n  DismissPatientFormDialog = '[Patient] Dismiss Patient Form Dialog',\n  LoadPatients = '[Patient] Load Patients',\n  SearchPatient = '[Patient] Search Patient',\n  SearchPatientComplete = '[Patient] Search Patient Complete',\n  EditPatient = '[Patient] Edit Patient',\n  DismissEditPatient = '[Patient] Dismiss Edit Patient',\n  ResetPatientsState = '[Patients] Reset Patients State',\n  DeletePatient ='[Patients] Delete Patient',\n  LoadPatientUsers = '[User] Load User Patients'\n}\n\n\n/**\n * Select patient Action\n */\nexport class SelectPatient implements Action {\n  readonly type = PatientsActionTypes.SelectPatient;\n\n  constructor(public payload: IPatient) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedPatient implements Action {\n  readonly type = PatientsActionTypes.ClearSelectedPatient;\n}\n\n/**\n * Initialize patient Action\n */\nexport class InitializePatient implements Action {\n  readonly type = PatientsActionTypes.InitializePatient;\n}\n\n/**\n * action to pop up patient form\n */\nexport class CreatePatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.CreatePatientFormDialog;\n}\n\n/**\n * Create patient Action\n */\nexport class CreatePatient implements Action {\n  readonly type = PatientsActionTypes.CreatePatient;\n\n  constructor(public payload: { patient: IPatient }) { }\n}\n\n/**\n * CreatePatient Dialog window dismissed\n */\nexport class DismissPatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.DismissPatientFormDialog;\n}\n\n/**\n * Load patients Action\n */\nexport class LoadPatients implements Action {\n  readonly type = PatientsActionTypes.LoadPatients;\n}\n\n/**\n * Search patient Action\n */\nexport class SearchPatient implements Action {\n  readonly type = PatientsActionTypes.SearchPatient;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search patient complete Action\n */\nexport class SearchPatientComplete implements Action {\n  readonly type = PatientsActionTypes.SearchPatientComplete;\n\n  constructor(public payload: IPatient[]) { }\n}\n\n/**\n * action to submit and edit patient\n */\nexport class EditPatient implements Action {\n  readonly type = PatientsActionTypes.EditPatient;\n\n  constructor(public payload: IPatient) {\n  }\n}\n\n/**\n * Patient Edit dismissed action\n */\nexport class DismissEditPatient implements Action {\n  readonly type = PatientsActionTypes.DismissEditPatient;\n}\n\n/**\n * reset the patient state\n */\nexport class ResetPatientsState implements Action {\n  readonly type = PatientsActionTypes.ResetPatientsState;\n}\n\n/**\n * action to delete a patient\n */\nexport class DeletePatient implements Action {\n  readonly type = PatientsActionTypes.DeletePatient;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load patient users action\n */\nexport class LoadPatientUsers implements Action {\n  readonly type = PatientsActionTypes.LoadPatientUsers;\n  constructor(public payload: number ) { }\n}\n\n\n/**\n * Export union of patient Action\n */\nexport type PatientsActionsUnion\n  = SelectPatient\n  | ClearSelectedPatient\n  | InitializePatient\n  | CreatePatientFormDialog\n  | CreatePatient\n  | DismissPatientFormDialog\n  | LoadPatients\n  | SearchPatient\n  | SearchPatientComplete\n  | EditPatient\n  | DismissEditPatient\n  | ResetPatientsState\n  | LoadPatientUsers;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadPatientsFailure.html":{"url":"classes/LoadPatientsFailure.html","title":"class - LoadPatientsFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadPatientsFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                load all patients action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/patients-api.actions.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients-api.actions.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsApiActionTypes.LoadPatientsFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients-api.actions.ts:53\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { IPatient } from '../models/patient.model';\n\n/**\n * definitions for action types\n */\nexport enum PatientsApiActionTypes {\n  CreatePatientSuccess = '[Patient/Api] Create Patient Success',\n  CreatePatientFailure = '[Patient/Api] Create Patient Failure',\n  LoadPatientsSuccess = '[Patient/Api] Load Patients Success',\n  LoadPatientsFailure = '[Patient/Api] Load Patients Failure',\n  EditPatientSuccess = '[Patient/Api] Edit Patient Success',\n  EditPatientFailure = '[Patient/Api] Edit Patient Failure',\n  LoadPatientUsersSuccess = '[User/Api] Load Patient Users Success',\n  LoadPatientUsersFailure = '[User/Api] Load Patient Users Failure',\n}\n\n/**\n * add patient success action\n */\nexport class CreatePatientSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.CreatePatientSuccess;\n\n  constructor(public payload: { patient: IPatient }) {\n  }\n}\n\n/**\n * add patient failure action\n */\nexport class CreatePatientFailure implements Action {\n  public readonly type = PatientsApiActionTypes.CreatePatientFailure;\n\n  constructor(public payload: { messages: string }) {\n  }\n}\n\n/**\n * load all patients success action\n */\nexport class LoadPatientsSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientsSuccess;\n\n  constructor(public payload: { patients: IPatient[] }) {\n  }\n}\n\n/**\n * load all patients action\n */\nexport class LoadPatientsFailure implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientsFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * edit patient success action\n */\nexport class EditPatientSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.EditPatientSuccess;\n\n  constructor(public payload: { patient: IPatient }) {\n  }\n}\n\n/**\n * edit patient failure action\n */\nexport class EditPatientFailure implements Action {\n  public readonly type = PatientsApiActionTypes.EditPatientFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * load all patient users success action\n */\nexport class LoadPatientUsersSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientUsersSuccess;\n\n  constructor(public payload: { users: User[] }) {\n  }\n}\n\n/**\n * load all patient users failure action\n */\nexport class LoadPatientUsersFailure implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientUsersFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n// export types\nexport type PatientsApiActionsUnion =\n  | CreatePatientSuccess\n  | CreatePatientFailure\n  | EditPatientSuccess\n  | EditPatientFailure\n  | LoadPatientsSuccess\n  | LoadPatientsFailure\n  | LoadPatientUsersSuccess\n  | LoadPatientUsersFailure;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadPatientsSuccess.html":{"url":"classes/LoadPatientsSuccess.html","title":"class - LoadPatientsSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadPatientsSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                load all patients success action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/patients-api.actions.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients-api.actions.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsApiActionTypes.LoadPatientsSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients-api.actions.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { IPatient } from '../models/patient.model';\n\n/**\n * definitions for action types\n */\nexport enum PatientsApiActionTypes {\n  CreatePatientSuccess = '[Patient/Api] Create Patient Success',\n  CreatePatientFailure = '[Patient/Api] Create Patient Failure',\n  LoadPatientsSuccess = '[Patient/Api] Load Patients Success',\n  LoadPatientsFailure = '[Patient/Api] Load Patients Failure',\n  EditPatientSuccess = '[Patient/Api] Edit Patient Success',\n  EditPatientFailure = '[Patient/Api] Edit Patient Failure',\n  LoadPatientUsersSuccess = '[User/Api] Load Patient Users Success',\n  LoadPatientUsersFailure = '[User/Api] Load Patient Users Failure',\n}\n\n/**\n * add patient success action\n */\nexport class CreatePatientSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.CreatePatientSuccess;\n\n  constructor(public payload: { patient: IPatient }) {\n  }\n}\n\n/**\n * add patient failure action\n */\nexport class CreatePatientFailure implements Action {\n  public readonly type = PatientsApiActionTypes.CreatePatientFailure;\n\n  constructor(public payload: { messages: string }) {\n  }\n}\n\n/**\n * load all patients success action\n */\nexport class LoadPatientsSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientsSuccess;\n\n  constructor(public payload: { patients: IPatient[] }) {\n  }\n}\n\n/**\n * load all patients action\n */\nexport class LoadPatientsFailure implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientsFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * edit patient success action\n */\nexport class EditPatientSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.EditPatientSuccess;\n\n  constructor(public payload: { patient: IPatient }) {\n  }\n}\n\n/**\n * edit patient failure action\n */\nexport class EditPatientFailure implements Action {\n  public readonly type = PatientsApiActionTypes.EditPatientFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * load all patient users success action\n */\nexport class LoadPatientUsersSuccess implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientUsersSuccess;\n\n  constructor(public payload: { users: User[] }) {\n  }\n}\n\n/**\n * load all patient users failure action\n */\nexport class LoadPatientUsersFailure implements Action {\n  public readonly type = PatientsApiActionTypes.LoadPatientUsersFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n// export types\nexport type PatientsApiActionsUnion =\n  | CreatePatientSuccess\n  | CreatePatientFailure\n  | EditPatientSuccess\n  | EditPatientFailure\n  | LoadPatientsSuccess\n  | LoadPatientsFailure\n  | LoadPatientUsersSuccess\n  | LoadPatientUsersFailure;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadUserPatients.html":{"url":"classes/LoadUserPatients.html","title":"class - LoadUserPatients","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadUserPatients\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users.actions.ts\n        \n\n            \n                Description\n            \n            \n                Load user patients action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/users.actions.ts:132\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:133\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersActionTypes.LoadUserPatients\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:132\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum UsersActionTypes {\n  SelectUser = '[User] Select Current User',\n  ClearSelectedUser = '[User] Clear Current User',\n  InitializeUser = '[User] Initialize Current User',\n  CreateUserFormDialog = '[Users] Pop Up User Form',\n  CreateUser = '[User] Create User',\n  DismissUserFormDialog = '[User] Dismiss User Form Dialog',\n  LoadUsers = '[User] Load Users',\n  SearchUser = '[User] Search User',\n  SearchUserComplete = '[User] Search User Complete',\n  EditUser = '[User] Edit User',\n  DismissEditUser = '[User] Dismiss Edit User',\n  ResetUsersState = '[Users] Reset Users State',\n  DeleteUser = '[Users] Delete User',\n  LoadUserPatients = '[User] Load User Patients'\n}\n\n\n/**\n * Select user Action\n */\nexport class SelectUser implements Action {\n  readonly type = UsersActionTypes.SelectUser;\n\n  constructor(public payload: User) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedUser implements Action {\n  readonly type = UsersActionTypes.ClearSelectedUser;\n}\n\n/**\n * Initialize user Action\n */\nexport class InitializeUser implements Action {\n  readonly type = UsersActionTypes.InitializeUser;\n}\n\n/**\n * action to pop up user form\n */\nexport class CreateUserFormDialog implements Action {\n  readonly type = UsersActionTypes.CreateUserFormDialog;\n}\n\n/**\n * Create user Action\n */\nexport class CreateUser implements Action {\n  readonly type = UsersActionTypes.CreateUser;\n\n  constructor(public payload: { user: User }) { }\n}\n\n/**\n * CreateUser Dialog window dismissed\n */\nexport class DismissUserFormDialog implements Action {\n  readonly type = UsersActionTypes.DismissUserFormDialog;\n}\n\n/**\n * Load users Action\n */\nexport class LoadUsers implements Action {\n  readonly type = UsersActionTypes.LoadUsers;\n}\n\n/**\n * Search user action\n */\nexport class SearchUser implements Action {\n  readonly type = UsersActionTypes.SearchUser;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search user complete action\n */\nexport class SearchUserComplete implements Action {\n  readonly type = UsersActionTypes.SearchUserComplete;\n\n  constructor(public payload: User[]) { }\n}\n\n/**\n * action to submit and edit user\n */\nexport class EditUser implements Action {\n  readonly type = UsersActionTypes.EditUser;\n\n  constructor(public payload: User) {\n  }\n}\n\n/**\n * User Edit dismissed action\n */\nexport class DismissEditUser implements Action {\n  readonly type = UsersActionTypes.DismissEditUser;\n}\n\n/**\n * reset the user state\n */\nexport class ResetUsersState implements Action {\n  readonly type = UsersActionTypes.ResetUsersState;\n}\n\n/**\n * action to delete a user\n */\nexport class DeleteUser implements Action {\n  readonly type = UsersActionTypes.DeleteUser;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load user patients action\n */\nexport class LoadUserPatients implements Action {\n  readonly type = UsersActionTypes.LoadUserPatients;\n  constructor(public payload: number ) { }\n}\n\n/**\n * Export union of user Action\n */\nexport type UsersActionsUnion\n  = SelectUser\n  | ClearSelectedUser\n  | InitializeUser\n  | CreateUserFormDialog\n  | CreateUser\n  | DismissUserFormDialog\n  | LoadUsers\n  | SearchUser\n  | SearchUserComplete\n  | EditUser\n  | DismissEditUser\n  | ResetUsersState\n  | LoadUserPatients;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadUserPatientsFailure.html":{"url":"classes/LoadUserPatientsFailure.html","title":"class - LoadUserPatientsFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadUserPatientsFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                load all user patients failure action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/users-api.actions.ts:93\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users-api.actions.ts:95\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersApiActionTypes.LoadUserPatientsFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users-api.actions.ts:93\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { IPatient } from '../models/patient.model';\n\n/**\n * definitions for action types\n */\nexport enum UsersApiActionTypes {\n  CreateUserSuccess = '[User/Api] Create User Success',\n  CreateUserFailure = '[User/Api] Create User Failure',\n  LoadUsersSuccess = '[User/Api] Load Users Success',\n  LoadUsersFailure = '[User/Api] Load Users Failure',\n  EditUserSuccess = '[User/Api] Edit User Success',\n  EditUserFailure = '[User/Api] Edit User Failure',\n  LoadUserPatientsSuccess = '[User/Api] Load User Patients Success',\n  LoadUserPatientsFailure = '[User/Api] Load User Patients Failure',\n}\n\n/**\n * add user success action\n */\nexport class CreateUserSuccess implements Action {\n  public readonly type = UsersApiActionTypes.CreateUserSuccess;\n\n  constructor(public payload: { user: User }) {\n  }\n}\n\n/**\n * add user failure action\n */\nexport class CreateUserFailure implements Action {\n  public readonly type = UsersApiActionTypes.CreateUserFailure;\n\n  constructor(public payload: { messages: string }) {\n  }\n}\n\n/**\n * load all users success action\n */\nexport class LoadUsersSuccess implements Action {\n  public readonly type = UsersApiActionTypes.LoadUsersSuccess;\n\n  constructor(public payload: { users: User[] }) {\n  }\n}\n\n/**\n * load all users failure action\n */\nexport class LoadUsersFailure implements Action {\n  public readonly type = UsersApiActionTypes.LoadUsersFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * edit user success action\n */\nexport class EditUserSuccess implements Action {\n  public readonly type = UsersApiActionTypes.EditUserSuccess;\n\n  constructor(public payload: { user: User }) {\n  }\n}\n\n/**\n * edit user failure action\n */\nexport class EditUserFailure implements Action {\n  public readonly type = UsersApiActionTypes.EditUserFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * load all user patients success action\n */\nexport class LoadUserPatientsSuccess implements Action {\n  public readonly type = UsersApiActionTypes.LoadUserPatientsSuccess;\n\n  constructor(public payload: { patients: IPatient[] }) {\n  }\n}\n\n/**\n * load all user patients failure action\n */\nexport class LoadUserPatientsFailure implements Action {\n  public readonly type = UsersApiActionTypes.LoadUserPatientsFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n// export types\nexport type UsersApiActionsUnion =\n  | CreateUserSuccess\n  | CreateUserFailure\n  | EditUserSuccess\n  | EditUserFailure\n  | LoadUsersSuccess\n  | LoadUsersFailure\n  | LoadUserPatientsSuccess\n  | LoadUserPatientsFailure\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadUserPatientsSuccess.html":{"url":"classes/LoadUserPatientsSuccess.html","title":"class - LoadUserPatientsSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadUserPatientsSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                load all user patients success action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/users-api.actions.ts:83\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users-api.actions.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersApiActionTypes.LoadUserPatientsSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users-api.actions.ts:83\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { IPatient } from '../models/patient.model';\n\n/**\n * definitions for action types\n */\nexport enum UsersApiActionTypes {\n  CreateUserSuccess = '[User/Api] Create User Success',\n  CreateUserFailure = '[User/Api] Create User Failure',\n  LoadUsersSuccess = '[User/Api] Load Users Success',\n  LoadUsersFailure = '[User/Api] Load Users Failure',\n  EditUserSuccess = '[User/Api] Edit User Success',\n  EditUserFailure = '[User/Api] Edit User Failure',\n  LoadUserPatientsSuccess = '[User/Api] Load User Patients Success',\n  LoadUserPatientsFailure = '[User/Api] Load User Patients Failure',\n}\n\n/**\n * add user success action\n */\nexport class CreateUserSuccess implements Action {\n  public readonly type = UsersApiActionTypes.CreateUserSuccess;\n\n  constructor(public payload: { user: User }) {\n  }\n}\n\n/**\n * add user failure action\n */\nexport class CreateUserFailure implements Action {\n  public readonly type = UsersApiActionTypes.CreateUserFailure;\n\n  constructor(public payload: { messages: string }) {\n  }\n}\n\n/**\n * load all users success action\n */\nexport class LoadUsersSuccess implements Action {\n  public readonly type = UsersApiActionTypes.LoadUsersSuccess;\n\n  constructor(public payload: { users: User[] }) {\n  }\n}\n\n/**\n * load all users failure action\n */\nexport class LoadUsersFailure implements Action {\n  public readonly type = UsersApiActionTypes.LoadUsersFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * edit user success action\n */\nexport class EditUserSuccess implements Action {\n  public readonly type = UsersApiActionTypes.EditUserSuccess;\n\n  constructor(public payload: { user: User }) {\n  }\n}\n\n/**\n * edit user failure action\n */\nexport class EditUserFailure implements Action {\n  public readonly type = UsersApiActionTypes.EditUserFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * load all user patients success action\n */\nexport class LoadUserPatientsSuccess implements Action {\n  public readonly type = UsersApiActionTypes.LoadUserPatientsSuccess;\n\n  constructor(public payload: { patients: IPatient[] }) {\n  }\n}\n\n/**\n * load all user patients failure action\n */\nexport class LoadUserPatientsFailure implements Action {\n  public readonly type = UsersApiActionTypes.LoadUserPatientsFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n// export types\nexport type UsersApiActionsUnion =\n  | CreateUserSuccess\n  | CreateUserFailure\n  | EditUserSuccess\n  | EditUserFailure\n  | LoadUsersSuccess\n  | LoadUsersFailure\n  | LoadUserPatientsSuccess\n  | LoadUserPatientsFailure\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadUsers.html":{"url":"classes/LoadUsers.html","title":"class - LoadUsers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadUsers\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users.actions.ts\n        \n\n            \n                Description\n            \n            \n                Load users Action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersActionTypes.LoadUsers\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:73\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum UsersActionTypes {\n  SelectUser = '[User] Select Current User',\n  ClearSelectedUser = '[User] Clear Current User',\n  InitializeUser = '[User] Initialize Current User',\n  CreateUserFormDialog = '[Users] Pop Up User Form',\n  CreateUser = '[User] Create User',\n  DismissUserFormDialog = '[User] Dismiss User Form Dialog',\n  LoadUsers = '[User] Load Users',\n  SearchUser = '[User] Search User',\n  SearchUserComplete = '[User] Search User Complete',\n  EditUser = '[User] Edit User',\n  DismissEditUser = '[User] Dismiss Edit User',\n  ResetUsersState = '[Users] Reset Users State',\n  DeleteUser = '[Users] Delete User',\n  LoadUserPatients = '[User] Load User Patients'\n}\n\n\n/**\n * Select user Action\n */\nexport class SelectUser implements Action {\n  readonly type = UsersActionTypes.SelectUser;\n\n  constructor(public payload: User) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedUser implements Action {\n  readonly type = UsersActionTypes.ClearSelectedUser;\n}\n\n/**\n * Initialize user Action\n */\nexport class InitializeUser implements Action {\n  readonly type = UsersActionTypes.InitializeUser;\n}\n\n/**\n * action to pop up user form\n */\nexport class CreateUserFormDialog implements Action {\n  readonly type = UsersActionTypes.CreateUserFormDialog;\n}\n\n/**\n * Create user Action\n */\nexport class CreateUser implements Action {\n  readonly type = UsersActionTypes.CreateUser;\n\n  constructor(public payload: { user: User }) { }\n}\n\n/**\n * CreateUser Dialog window dismissed\n */\nexport class DismissUserFormDialog implements Action {\n  readonly type = UsersActionTypes.DismissUserFormDialog;\n}\n\n/**\n * Load users Action\n */\nexport class LoadUsers implements Action {\n  readonly type = UsersActionTypes.LoadUsers;\n}\n\n/**\n * Search user action\n */\nexport class SearchUser implements Action {\n  readonly type = UsersActionTypes.SearchUser;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search user complete action\n */\nexport class SearchUserComplete implements Action {\n  readonly type = UsersActionTypes.SearchUserComplete;\n\n  constructor(public payload: User[]) { }\n}\n\n/**\n * action to submit and edit user\n */\nexport class EditUser implements Action {\n  readonly type = UsersActionTypes.EditUser;\n\n  constructor(public payload: User) {\n  }\n}\n\n/**\n * User Edit dismissed action\n */\nexport class DismissEditUser implements Action {\n  readonly type = UsersActionTypes.DismissEditUser;\n}\n\n/**\n * reset the user state\n */\nexport class ResetUsersState implements Action {\n  readonly type = UsersActionTypes.ResetUsersState;\n}\n\n/**\n * action to delete a user\n */\nexport class DeleteUser implements Action {\n  readonly type = UsersActionTypes.DeleteUser;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load user patients action\n */\nexport class LoadUserPatients implements Action {\n  readonly type = UsersActionTypes.LoadUserPatients;\n  constructor(public payload: number ) { }\n}\n\n/**\n * Export union of user Action\n */\nexport type UsersActionsUnion\n  = SelectUser\n  | ClearSelectedUser\n  | InitializeUser\n  | CreateUserFormDialog\n  | CreateUser\n  | DismissUserFormDialog\n  | LoadUsers\n  | SearchUser\n  | SearchUserComplete\n  | EditUser\n  | DismissEditUser\n  | ResetUsersState\n  | LoadUserPatients;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadUsersFailure.html":{"url":"classes/LoadUsersFailure.html","title":"class - LoadUsersFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadUsersFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                load all users failure action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/users-api.actions.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users-api.actions.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersApiActionTypes.LoadUsersFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users-api.actions.ts:53\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { IPatient } from '../models/patient.model';\n\n/**\n * definitions for action types\n */\nexport enum UsersApiActionTypes {\n  CreateUserSuccess = '[User/Api] Create User Success',\n  CreateUserFailure = '[User/Api] Create User Failure',\n  LoadUsersSuccess = '[User/Api] Load Users Success',\n  LoadUsersFailure = '[User/Api] Load Users Failure',\n  EditUserSuccess = '[User/Api] Edit User Success',\n  EditUserFailure = '[User/Api] Edit User Failure',\n  LoadUserPatientsSuccess = '[User/Api] Load User Patients Success',\n  LoadUserPatientsFailure = '[User/Api] Load User Patients Failure',\n}\n\n/**\n * add user success action\n */\nexport class CreateUserSuccess implements Action {\n  public readonly type = UsersApiActionTypes.CreateUserSuccess;\n\n  constructor(public payload: { user: User }) {\n  }\n}\n\n/**\n * add user failure action\n */\nexport class CreateUserFailure implements Action {\n  public readonly type = UsersApiActionTypes.CreateUserFailure;\n\n  constructor(public payload: { messages: string }) {\n  }\n}\n\n/**\n * load all users success action\n */\nexport class LoadUsersSuccess implements Action {\n  public readonly type = UsersApiActionTypes.LoadUsersSuccess;\n\n  constructor(public payload: { users: User[] }) {\n  }\n}\n\n/**\n * load all users failure action\n */\nexport class LoadUsersFailure implements Action {\n  public readonly type = UsersApiActionTypes.LoadUsersFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * edit user success action\n */\nexport class EditUserSuccess implements Action {\n  public readonly type = UsersApiActionTypes.EditUserSuccess;\n\n  constructor(public payload: { user: User }) {\n  }\n}\n\n/**\n * edit user failure action\n */\nexport class EditUserFailure implements Action {\n  public readonly type = UsersApiActionTypes.EditUserFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * load all user patients success action\n */\nexport class LoadUserPatientsSuccess implements Action {\n  public readonly type = UsersApiActionTypes.LoadUserPatientsSuccess;\n\n  constructor(public payload: { patients: IPatient[] }) {\n  }\n}\n\n/**\n * load all user patients failure action\n */\nexport class LoadUserPatientsFailure implements Action {\n  public readonly type = UsersApiActionTypes.LoadUserPatientsFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n// export types\nexport type UsersApiActionsUnion =\n  | CreateUserSuccess\n  | CreateUserFailure\n  | EditUserSuccess\n  | EditUserFailure\n  | LoadUsersSuccess\n  | LoadUsersFailure\n  | LoadUserPatientsSuccess\n  | LoadUserPatientsFailure\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadUsersSuccess.html":{"url":"classes/LoadUsersSuccess.html","title":"class - LoadUsersSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadUsersSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                load all users success action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/users-api.actions.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users-api.actions.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersApiActionTypes.LoadUsersSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users-api.actions.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { IPatient } from '../models/patient.model';\n\n/**\n * definitions for action types\n */\nexport enum UsersApiActionTypes {\n  CreateUserSuccess = '[User/Api] Create User Success',\n  CreateUserFailure = '[User/Api] Create User Failure',\n  LoadUsersSuccess = '[User/Api] Load Users Success',\n  LoadUsersFailure = '[User/Api] Load Users Failure',\n  EditUserSuccess = '[User/Api] Edit User Success',\n  EditUserFailure = '[User/Api] Edit User Failure',\n  LoadUserPatientsSuccess = '[User/Api] Load User Patients Success',\n  LoadUserPatientsFailure = '[User/Api] Load User Patients Failure',\n}\n\n/**\n * add user success action\n */\nexport class CreateUserSuccess implements Action {\n  public readonly type = UsersApiActionTypes.CreateUserSuccess;\n\n  constructor(public payload: { user: User }) {\n  }\n}\n\n/**\n * add user failure action\n */\nexport class CreateUserFailure implements Action {\n  public readonly type = UsersApiActionTypes.CreateUserFailure;\n\n  constructor(public payload: { messages: string }) {\n  }\n}\n\n/**\n * load all users success action\n */\nexport class LoadUsersSuccess implements Action {\n  public readonly type = UsersApiActionTypes.LoadUsersSuccess;\n\n  constructor(public payload: { users: User[] }) {\n  }\n}\n\n/**\n * load all users failure action\n */\nexport class LoadUsersFailure implements Action {\n  public readonly type = UsersApiActionTypes.LoadUsersFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * edit user success action\n */\nexport class EditUserSuccess implements Action {\n  public readonly type = UsersApiActionTypes.EditUserSuccess;\n\n  constructor(public payload: { user: User }) {\n  }\n}\n\n/**\n * edit user failure action\n */\nexport class EditUserFailure implements Action {\n  public readonly type = UsersApiActionTypes.EditUserFailure;\n\n  constructor(public payload: { message: string }) {\n  }\n}\n\n/**\n * load all user patients success action\n */\nexport class LoadUserPatientsSuccess implements Action {\n  public readonly type = UsersApiActionTypes.LoadUserPatientsSuccess;\n\n  constructor(public payload: { patients: IPatient[] }) {\n  }\n}\n\n/**\n * load all user patients failure action\n */\nexport class LoadUserPatientsFailure implements Action {\n  public readonly type = UsersApiActionTypes.LoadUserPatientsFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n// export types\nexport type UsersApiActionsUnion =\n  | CreateUserSuccess\n  | CreateUserFailure\n  | EditUserSuccess\n  | EditUserFailure\n  | LoadUsersSuccess\n  | LoadUsersFailure\n  | LoadUserPatientsSuccess\n  | LoadUserPatientsFailure\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/components/loader/loader.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-app-loader\n            \n\n            \n                styleUrls\n                ./loader.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loader.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                message\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/components/loader/loader.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/components/loader/loader.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/components/loader/loader.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/components/loader/loader.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/components/loader/loader.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'moio-app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent implements OnInit {\n  title;\n  message;\n\n  constructor(public dialogRef: MatDialogRef) {\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    {{ title }}\n    \n        \n    \n\n\n    \n\n    \n                \n                    ./loader.component.scss\n                \n                .mat-dialog-content {\n  min-height: 122px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ title }}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/loader.service.ts\n        \n\n            \n                Description\n            \n            \n                a loader service\nto show a loader as a Mat Dialog\nwhile busy\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/loader.service.ts:16\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                MatDialog\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                TranslateService\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        close()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/loader.service.ts:46\n                            \n                        \n\n\n                \n                    \n                            close the dialog / loader programmatically\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            open\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        open(title: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/loader.service.ts:34\n                            \n                        \n\n\n                \n                    \n                            open the loader\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                'Please wait'\n                                                        \n\n                                                        \n                                                                string the title for the loader. default: Please wait\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    dialogRef Observable\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/loader.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material';\nimport { Observable } from 'rxjs';\nimport { LoaderComponent } from '../components/loader/loader.component';\nimport { TranslateService } from '@ngx-translate/core';\n\n/**\n * a loader service\n * to show a loader as a Mat Dialog\n * while busy\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  dialogRef: MatDialogRef;\n\n  /**\n   * constructor\n   * @param dialog MatDialog\n   * @param translate TranslateService\n   */\n  constructor(\n    private dialog: MatDialog,\n    private translate: TranslateService\n  ) {\n  }\n\n  /**\n   * open the loader\n   * @param title string the title for the loader. default: Please wait\n   * @return dialogRef Observable\n   */\n  public open(title: string = 'Please wait'): Observable {\n    this.dialogRef = this.dialog\n      .open(LoaderComponent, {disableClose: true, backdropClass: 'light-backdrop'});\n    this.dialogRef.updateSize('200px');\n    this.dialogRef.componentInstance.title = this.translate.instant(title);\n\n    return this.dialogRef.afterClosed();\n  }\n\n  /**\n   * close the dialog / loader programmatically\n   */\n  public close() {\n    if (this.dialogRef) {\n      this.dialogRef.close();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LockscreenComponent.html":{"url":"components/LockscreenComponent.html","title":"component - LockscreenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LockscreenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/components/lockscreen/lockscreen.component.ts\n\n\n    \n        Description\n    \n    \n        component to show a lock screen\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-lockscreen\n            \n\n\n\n\n            \n                templateUrl\n                ./lockscreen.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lockscreenData\n                            \n                            \n                                progressBar\n                            \n                            \n                                submitButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                unlock\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/components/lockscreen/lockscreen.component.ts:17\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/components/lockscreen/lockscreen.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unlock\n                            \n                            \n                        \n                    \n                \n                \n                    \nunlock()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/components/lockscreen/lockscreen.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            unlock function\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lockscreenData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lockscreenData:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    password: ''\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/components/lockscreen/lockscreen.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            progressBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        progressBar:     MatProgressBar\n\n                    \n                \n                    \n                        \n                            Type :     MatProgressBar\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatProgressBar)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/components/lockscreen/lockscreen.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitButton\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        submitButton:     MatButton\n\n                    \n                \n                    \n                        \n                            Type :     MatButton\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatButton)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/components/lockscreen/lockscreen.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatProgressBar, MatButton } from '@angular/material';\n\n/**\n * component to show a lock screen\n */\n@Component({\n  selector: 'moio-lockscreen',\n  templateUrl: './lockscreen.component.html'\n})\nexport class LockscreenComponent implements OnInit {\n  @ViewChild(MatProgressBar) progressBar: MatProgressBar;\n  @ViewChild(MatButton) submitButton: MatButton;\n\n  lockscreenData = {\n    password: ''\n  };\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  /**\n   * unlock function\n   */\n  unlock() {\n    console.log(this.lockscreenData);\n\n    this.submitButton.disabled = true;\n    this.progressBar.mode = 'indeterminate';\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n          \n            \n            John Doe\n            Last seen 1 hour ago\n          \n          \n            \n              \n                \n              \n               Password is required\n              \n            \n\n            Unlock\n            \n            \n              It's Not Me!\n            \n          \n        \n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                          John Doe            Last seen 1 hour ago                                                                                           Password is required                                      Unlock                                      It\\'s Not Me!                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'LockscreenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Login.html":{"url":"classes/Login.html","title":"class - Login","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Login\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/actions/auth-page.actions.ts\n        \n\n            \n                Description\n            \n            \n                Login action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/actions/auth-page.actions.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-page.actions.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : AuthPageActionTypes.Login\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-page.actions.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { ICredentials } from '../models/user.interface';\n\nexport enum AuthPageActionTypes {\n  Login = '[Auth/Login Page] Login',\n  Signup = '[Auth/Signup Page] Signup',\n  ForgotPassword = '[Auth/Forgot Password Page] Forgot Password'\n}\n\n/**\n * Login action\n */\nexport class Login implements Action {\n  readonly type = AuthPageActionTypes.Login;\n\n  constructor(public payload: { credentials: ICredentials }) {\n  }\n}\n\n/**\n * signup action\n */\nexport class Signup implements Action {\n  readonly type = AuthPageActionTypes.Signup;\n\n  constructor(public payload: { credentials: ICredentials }) {\n  }\n}\n\n/**\n * action for the forgot password page\n */\nexport class ForgotPassword implements Action {\n  readonly type = AuthPageActionTypes.ForgotPassword;\n\n  constructor(public payload: { email: string }) {\n  }\n}\n\nexport type AuthPageActionsUnion =\n  | Login\n  | Signup\n  | ForgotPassword;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginFailure.html":{"url":"classes/LoginFailure.html","title":"class - LoginFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/actions/auth-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                login failure\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/actions/auth-api.actions.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-api.actions.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : AuthApiActionTypes.LoginFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-api.actions.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum AuthApiActionTypes {\n  LoginSuccess = '[Auth/Api] Login Success',\n  LoginFailure = '[Auth/Api] Login Failure',\n  LoginRedirect = '[Auth/Api] Login Redirect',\n  LogoutSuccess = '[Auth/Api] Logout Success',\n  LogoutFailure = '[Auth/Api] Logout Failure',\n  SignUpSuccess = '[Auth/Api] Sign Up Success',\n  SignUpFailure = '[Auth/Api] Sign Up Failure',\n  ForgotPasswordSuccess = '[Auth/Api] Forgot Password Success',\n  ForgotPasswordFailure = '[Auth/Api] Forgot Password Failure',\n}\n\n/**\n * login action\n */\nexport class LoginSuccess implements Action {\n  readonly type = AuthApiActionTypes.LoginSuccess;\n\n  constructor(public payload: { response: any }) {\n  }\n}\n\n/**\n * login failure\n */\nexport class LoginFailure implements Action {\n  readonly type = AuthApiActionTypes.LoginFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * logout success\n */\nexport class LogoutSuccess implements Action {\n  readonly type = AuthApiActionTypes.LogoutSuccess;\n}\n\n/**\n * lougout failure\n */\nexport class LogoutFailure implements Action {\n  readonly type = AuthApiActionTypes.LogoutFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * redirect action\n */\nexport class LoginRedirect implements Action {\n  readonly type = AuthApiActionTypes.LoginRedirect;\n}\n\n/**\n * sign up success\n */\nexport class SignUpSuccess implements Action {\n  readonly type = AuthApiActionTypes.SignUpSuccess;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up failure\n */\nexport class SignUpFailure implements Action {\n  readonly type = AuthApiActionTypes.SignUpFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up success\n */\nexport class ForgotPasswordSuccess implements Action {\n  readonly type = AuthApiActionTypes.ForgotPasswordSuccess;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up failure\n */\nexport class ForgotPasswordFailure implements Action {\n  readonly type = AuthApiActionTypes.ForgotPasswordFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\nexport type AuthApiActionsUnion =\n  | LoginSuccess\n  | LoginFailure\n  | LoginRedirect\n  | LogoutSuccess\n  | LogoutFailure\n  | SignUpSuccess\n  | SignUpFailure\n  | ForgotPasswordSuccess\n  | ForgotPasswordFailure;\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginRedirect.html":{"url":"classes/LoginRedirect.html","title":"class - LoginRedirect","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginRedirect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/actions/auth-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                redirect action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : AuthApiActionTypes.LoginRedirect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-api.actions.ts:56\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum AuthApiActionTypes {\n  LoginSuccess = '[Auth/Api] Login Success',\n  LoginFailure = '[Auth/Api] Login Failure',\n  LoginRedirect = '[Auth/Api] Login Redirect',\n  LogoutSuccess = '[Auth/Api] Logout Success',\n  LogoutFailure = '[Auth/Api] Logout Failure',\n  SignUpSuccess = '[Auth/Api] Sign Up Success',\n  SignUpFailure = '[Auth/Api] Sign Up Failure',\n  ForgotPasswordSuccess = '[Auth/Api] Forgot Password Success',\n  ForgotPasswordFailure = '[Auth/Api] Forgot Password Failure',\n}\n\n/**\n * login action\n */\nexport class LoginSuccess implements Action {\n  readonly type = AuthApiActionTypes.LoginSuccess;\n\n  constructor(public payload: { response: any }) {\n  }\n}\n\n/**\n * login failure\n */\nexport class LoginFailure implements Action {\n  readonly type = AuthApiActionTypes.LoginFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * logout success\n */\nexport class LogoutSuccess implements Action {\n  readonly type = AuthApiActionTypes.LogoutSuccess;\n}\n\n/**\n * lougout failure\n */\nexport class LogoutFailure implements Action {\n  readonly type = AuthApiActionTypes.LogoutFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * redirect action\n */\nexport class LoginRedirect implements Action {\n  readonly type = AuthApiActionTypes.LoginRedirect;\n}\n\n/**\n * sign up success\n */\nexport class SignUpSuccess implements Action {\n  readonly type = AuthApiActionTypes.SignUpSuccess;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up failure\n */\nexport class SignUpFailure implements Action {\n  readonly type = AuthApiActionTypes.SignUpFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up success\n */\nexport class ForgotPasswordSuccess implements Action {\n  readonly type = AuthApiActionTypes.ForgotPasswordSuccess;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up failure\n */\nexport class ForgotPasswordFailure implements Action {\n  readonly type = AuthApiActionTypes.ForgotPasswordFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\nexport type AuthApiActionsUnion =\n  | LoginSuccess\n  | LoginFailure\n  | LoginRedirect\n  | LogoutSuccess\n  | LogoutFailure\n  | SignUpSuccess\n  | SignUpFailure\n  | ForgotPasswordSuccess\n  | ForgotPasswordFailure;\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginSuccess.html":{"url":"classes/LoginSuccess.html","title":"class - LoginSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/actions/auth-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                login action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/actions/auth-api.actions.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-api.actions.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : AuthApiActionTypes.LoginSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-api.actions.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum AuthApiActionTypes {\n  LoginSuccess = '[Auth/Api] Login Success',\n  LoginFailure = '[Auth/Api] Login Failure',\n  LoginRedirect = '[Auth/Api] Login Redirect',\n  LogoutSuccess = '[Auth/Api] Logout Success',\n  LogoutFailure = '[Auth/Api] Logout Failure',\n  SignUpSuccess = '[Auth/Api] Sign Up Success',\n  SignUpFailure = '[Auth/Api] Sign Up Failure',\n  ForgotPasswordSuccess = '[Auth/Api] Forgot Password Success',\n  ForgotPasswordFailure = '[Auth/Api] Forgot Password Failure',\n}\n\n/**\n * login action\n */\nexport class LoginSuccess implements Action {\n  readonly type = AuthApiActionTypes.LoginSuccess;\n\n  constructor(public payload: { response: any }) {\n  }\n}\n\n/**\n * login failure\n */\nexport class LoginFailure implements Action {\n  readonly type = AuthApiActionTypes.LoginFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * logout success\n */\nexport class LogoutSuccess implements Action {\n  readonly type = AuthApiActionTypes.LogoutSuccess;\n}\n\n/**\n * lougout failure\n */\nexport class LogoutFailure implements Action {\n  readonly type = AuthApiActionTypes.LogoutFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * redirect action\n */\nexport class LoginRedirect implements Action {\n  readonly type = AuthApiActionTypes.LoginRedirect;\n}\n\n/**\n * sign up success\n */\nexport class SignUpSuccess implements Action {\n  readonly type = AuthApiActionTypes.SignUpSuccess;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up failure\n */\nexport class SignUpFailure implements Action {\n  readonly type = AuthApiActionTypes.SignUpFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up success\n */\nexport class ForgotPasswordSuccess implements Action {\n  readonly type = AuthApiActionTypes.ForgotPasswordSuccess;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up failure\n */\nexport class ForgotPasswordFailure implements Action {\n  readonly type = AuthApiActionTypes.ForgotPasswordFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\nexport type AuthApiActionsUnion =\n  | LoginSuccess\n  | LoginFailure\n  | LoginRedirect\n  | LogoutSuccess\n  | LogoutFailure\n  | SignUpSuccess\n  | SignUpFailure\n  | ForgotPasswordSuccess\n  | ForgotPasswordFailure;\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Logout.html":{"url":"classes/Logout.html","title":"class - Logout","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Logout\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/actions/auth.actions.ts\n        \n\n            \n                Description\n            \n            \n                action to logout\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : AuthActionTypes.Logout\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth.actions.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum AuthActionTypes {\n  Logout = '[Auth] Logout',\n  LogoutConfirmation = '[Auth] Logout Confirmation',\n  LogoutConfirmationDismiss = '[Auth] Logout Confirmation Dismiss'\n}\n\n/**\n * action to logout\n */\nexport class Logout implements Action {\n  readonly type = AuthActionTypes.Logout;\n}\n\n/**\n * action to confirm logout (user interaction)\n */\nexport class LogoutConfirmation implements Action {\n  readonly type = AuthActionTypes.LogoutConfirmation;\n}\n\n/**\n * action if user dismisses the modal\n */\nexport class LogoutConfirmationDismiss implements Action {\n  readonly type = AuthActionTypes.LogoutConfirmationDismiss;\n}\n\nexport type AuthActionsUnion =\n  | Logout\n  | LogoutConfirmation\n  | LogoutConfirmationDismiss;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogoutConfirmation.html":{"url":"classes/LogoutConfirmation.html","title":"class - LogoutConfirmation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogoutConfirmation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/actions/auth.actions.ts\n        \n\n            \n                Description\n            \n            \n                action to confirm logout (user interaction)\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : AuthActionTypes.LogoutConfirmation\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth.actions.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum AuthActionTypes {\n  Logout = '[Auth] Logout',\n  LogoutConfirmation = '[Auth] Logout Confirmation',\n  LogoutConfirmationDismiss = '[Auth] Logout Confirmation Dismiss'\n}\n\n/**\n * action to logout\n */\nexport class Logout implements Action {\n  readonly type = AuthActionTypes.Logout;\n}\n\n/**\n * action to confirm logout (user interaction)\n */\nexport class LogoutConfirmation implements Action {\n  readonly type = AuthActionTypes.LogoutConfirmation;\n}\n\n/**\n * action if user dismisses the modal\n */\nexport class LogoutConfirmationDismiss implements Action {\n  readonly type = AuthActionTypes.LogoutConfirmationDismiss;\n}\n\nexport type AuthActionsUnion =\n  | Logout\n  | LogoutConfirmation\n  | LogoutConfirmationDismiss;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogoutConfirmationDismiss.html":{"url":"classes/LogoutConfirmationDismiss.html","title":"class - LogoutConfirmationDismiss","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogoutConfirmationDismiss\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/actions/auth.actions.ts\n        \n\n            \n                Description\n            \n            \n                action if user dismisses the modal\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : AuthActionTypes.LogoutConfirmationDismiss\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth.actions.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum AuthActionTypes {\n  Logout = '[Auth] Logout',\n  LogoutConfirmation = '[Auth] Logout Confirmation',\n  LogoutConfirmationDismiss = '[Auth] Logout Confirmation Dismiss'\n}\n\n/**\n * action to logout\n */\nexport class Logout implements Action {\n  readonly type = AuthActionTypes.Logout;\n}\n\n/**\n * action to confirm logout (user interaction)\n */\nexport class LogoutConfirmation implements Action {\n  readonly type = AuthActionTypes.LogoutConfirmation;\n}\n\n/**\n * action if user dismisses the modal\n */\nexport class LogoutConfirmationDismiss implements Action {\n  readonly type = AuthActionTypes.LogoutConfirmationDismiss;\n}\n\nexport type AuthActionsUnion =\n  | Logout\n  | LogoutConfirmation\n  | LogoutConfirmationDismiss;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogoutFailure.html":{"url":"classes/LogoutFailure.html","title":"class - LogoutFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogoutFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/actions/auth-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                lougout failure\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/actions/auth-api.actions.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-api.actions.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : AuthApiActionTypes.LogoutFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-api.actions.ts:46\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum AuthApiActionTypes {\n  LoginSuccess = '[Auth/Api] Login Success',\n  LoginFailure = '[Auth/Api] Login Failure',\n  LoginRedirect = '[Auth/Api] Login Redirect',\n  LogoutSuccess = '[Auth/Api] Logout Success',\n  LogoutFailure = '[Auth/Api] Logout Failure',\n  SignUpSuccess = '[Auth/Api] Sign Up Success',\n  SignUpFailure = '[Auth/Api] Sign Up Failure',\n  ForgotPasswordSuccess = '[Auth/Api] Forgot Password Success',\n  ForgotPasswordFailure = '[Auth/Api] Forgot Password Failure',\n}\n\n/**\n * login action\n */\nexport class LoginSuccess implements Action {\n  readonly type = AuthApiActionTypes.LoginSuccess;\n\n  constructor(public payload: { response: any }) {\n  }\n}\n\n/**\n * login failure\n */\nexport class LoginFailure implements Action {\n  readonly type = AuthApiActionTypes.LoginFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * logout success\n */\nexport class LogoutSuccess implements Action {\n  readonly type = AuthApiActionTypes.LogoutSuccess;\n}\n\n/**\n * lougout failure\n */\nexport class LogoutFailure implements Action {\n  readonly type = AuthApiActionTypes.LogoutFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * redirect action\n */\nexport class LoginRedirect implements Action {\n  readonly type = AuthApiActionTypes.LoginRedirect;\n}\n\n/**\n * sign up success\n */\nexport class SignUpSuccess implements Action {\n  readonly type = AuthApiActionTypes.SignUpSuccess;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up failure\n */\nexport class SignUpFailure implements Action {\n  readonly type = AuthApiActionTypes.SignUpFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up success\n */\nexport class ForgotPasswordSuccess implements Action {\n  readonly type = AuthApiActionTypes.ForgotPasswordSuccess;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up failure\n */\nexport class ForgotPasswordFailure implements Action {\n  readonly type = AuthApiActionTypes.ForgotPasswordFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\nexport type AuthApiActionsUnion =\n  | LoginSuccess\n  | LoginFailure\n  | LoginRedirect\n  | LogoutSuccess\n  | LogoutFailure\n  | SignUpSuccess\n  | SignUpFailure\n  | ForgotPasswordSuccess\n  | ForgotPasswordFailure;\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogoutSuccess.html":{"url":"classes/LogoutSuccess.html","title":"class - LogoutSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogoutSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/actions/auth-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                logout success\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : AuthApiActionTypes.LogoutSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-api.actions.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum AuthApiActionTypes {\n  LoginSuccess = '[Auth/Api] Login Success',\n  LoginFailure = '[Auth/Api] Login Failure',\n  LoginRedirect = '[Auth/Api] Login Redirect',\n  LogoutSuccess = '[Auth/Api] Logout Success',\n  LogoutFailure = '[Auth/Api] Logout Failure',\n  SignUpSuccess = '[Auth/Api] Sign Up Success',\n  SignUpFailure = '[Auth/Api] Sign Up Failure',\n  ForgotPasswordSuccess = '[Auth/Api] Forgot Password Success',\n  ForgotPasswordFailure = '[Auth/Api] Forgot Password Failure',\n}\n\n/**\n * login action\n */\nexport class LoginSuccess implements Action {\n  readonly type = AuthApiActionTypes.LoginSuccess;\n\n  constructor(public payload: { response: any }) {\n  }\n}\n\n/**\n * login failure\n */\nexport class LoginFailure implements Action {\n  readonly type = AuthApiActionTypes.LoginFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * logout success\n */\nexport class LogoutSuccess implements Action {\n  readonly type = AuthApiActionTypes.LogoutSuccess;\n}\n\n/**\n * lougout failure\n */\nexport class LogoutFailure implements Action {\n  readonly type = AuthApiActionTypes.LogoutFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * redirect action\n */\nexport class LoginRedirect implements Action {\n  readonly type = AuthApiActionTypes.LoginRedirect;\n}\n\n/**\n * sign up success\n */\nexport class SignUpSuccess implements Action {\n  readonly type = AuthApiActionTypes.SignUpSuccess;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up failure\n */\nexport class SignUpFailure implements Action {\n  readonly type = AuthApiActionTypes.SignUpFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up success\n */\nexport class ForgotPasswordSuccess implements Action {\n  readonly type = AuthApiActionTypes.ForgotPasswordSuccess;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up failure\n */\nexport class ForgotPasswordFailure implements Action {\n  readonly type = AuthApiActionTypes.ForgotPasswordFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\nexport type AuthApiActionsUnion =\n  | LoginSuccess\n  | LoginFailure\n  | LoginRedirect\n  | LogoutSuccess\n  | LogoutFailure\n  | SignUpSuccess\n  | SignUpFailure\n  | ForgotPasswordSuccess\n  | ForgotPasswordFailure;\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MakeBreadcrumbSimple.html":{"url":"classes/MakeBreadcrumbSimple.html","title":"class - MakeBreadcrumbSimple","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MakeBreadcrumbSimple\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/layout.actions.ts\n        \n\n            \n                Description\n            \n            \n                make breadcrumb simple action\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/layout.actions.ts:106\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:107\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LayoutActionTypes.MakeBreadcrumbSimple\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:106\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\n/**\n * layout action types\n */\nexport enum LayoutActionTypes {\n  OpenSideNav = '[Layout] Open Side Nav',\n  CloseSideNav = '[Layout] Close Side Nav',\n  CompactSideNav = '[Layout] Compact Nav position',\n  SetNavigationPositionSide = '[Layout] Set Navigation Position Side',\n  SetNavigationPositionTop = '[Layout] Set Navigation Position Top',\n  SetDirectionLtr = '[Layout] Set Direction Ltr',\n  SetDirectionRtr = '[Layout] Set Direction Rtr',\n  TransitioningLayout = '[Layout] Transitioning Layout',\n  UseBreadcrumb = '[Layout] Use Breadcrumb',\n  MakeBreadcrumbSimple = '[Layout] Make Breadcrumb Simple',\n  MakeBreadcrumbTitle = '[Layout] Make Breadcrumb Title',\n  FixTopbar = '[Layout] Fix Topbar'\n}\n\n/**\n * open side navigation action\n */\nexport class OpenSideNav {\n  readonly type = LayoutActionTypes.OpenSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * close side navigation action\n */\nexport class CloseSideNav {\n  readonly type = LayoutActionTypes.CloseSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * compact side navigation action\n */\nexport class CompactSideNav {\n  readonly type = LayoutActionTypes.CompactSideNav;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to side action\n */\nexport class SetNavigationPositionSide {\n  readonly type = LayoutActionTypes.SetNavigationPositionSide;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to top action\n */\nexport class SetNavigationPositionTop {\n  readonly type = LayoutActionTypes.SetNavigationPositionTop;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to left-to-right action\n */\nexport class SetDirectionLtr {\n  readonly type = LayoutActionTypes.SetDirectionLtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to right-to-left action\n */\nexport class SetDirectionRtr {\n  readonly type = LayoutActionTypes.SetDirectionRtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * transition layout action\n */\nexport class TransitioningLayout {\n  readonly type = LayoutActionTypes.TransitioningLayout;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * Use breadcrumb action\n */\nexport class UseBreadcrumb {\n  readonly type = LayoutActionTypes.UseBreadcrumb;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * make breadcrumb simple action\n */\nexport class MakeBreadcrumbSimple {\n  readonly type = LayoutActionTypes.MakeBreadcrumbSimple;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * make breadcrum title action\n */\nexport class MakeBreadcrumbTitle {\n  readonly type = LayoutActionTypes.MakeBreadcrumbTitle;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * fix top bar action\n */\nexport class FixTopbar {\n  readonly type = LayoutActionTypes.FixTopbar;\n  constructor(public payload: boolean) { \n  }\n}\n\nexport type LayoutActions = \n  | OpenSideNav\n  | CloseSideNav\n  | CompactSideNav\n  | SetNavigationPositionSide\n  | SetNavigationPositionTop\n  | SetDirectionLtr\n  | SetDirectionRtr\n  | TransitioningLayout\n  | UseBreadcrumb\n  | MakeBreadcrumbSimple\n  | MakeBreadcrumbTitle\n  | FixTopbar;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MakeBreadcrumbTitle.html":{"url":"classes/MakeBreadcrumbTitle.html","title":"class - MakeBreadcrumbTitle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MakeBreadcrumbTitle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/layout.actions.ts\n        \n\n            \n                Description\n            \n            \n                make breadcrum title action\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/layout.actions.ts:115\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:116\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LayoutActionTypes.MakeBreadcrumbTitle\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:115\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\n/**\n * layout action types\n */\nexport enum LayoutActionTypes {\n  OpenSideNav = '[Layout] Open Side Nav',\n  CloseSideNav = '[Layout] Close Side Nav',\n  CompactSideNav = '[Layout] Compact Nav position',\n  SetNavigationPositionSide = '[Layout] Set Navigation Position Side',\n  SetNavigationPositionTop = '[Layout] Set Navigation Position Top',\n  SetDirectionLtr = '[Layout] Set Direction Ltr',\n  SetDirectionRtr = '[Layout] Set Direction Rtr',\n  TransitioningLayout = '[Layout] Transitioning Layout',\n  UseBreadcrumb = '[Layout] Use Breadcrumb',\n  MakeBreadcrumbSimple = '[Layout] Make Breadcrumb Simple',\n  MakeBreadcrumbTitle = '[Layout] Make Breadcrumb Title',\n  FixTopbar = '[Layout] Fix Topbar'\n}\n\n/**\n * open side navigation action\n */\nexport class OpenSideNav {\n  readonly type = LayoutActionTypes.OpenSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * close side navigation action\n */\nexport class CloseSideNav {\n  readonly type = LayoutActionTypes.CloseSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * compact side navigation action\n */\nexport class CompactSideNav {\n  readonly type = LayoutActionTypes.CompactSideNav;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to side action\n */\nexport class SetNavigationPositionSide {\n  readonly type = LayoutActionTypes.SetNavigationPositionSide;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to top action\n */\nexport class SetNavigationPositionTop {\n  readonly type = LayoutActionTypes.SetNavigationPositionTop;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to left-to-right action\n */\nexport class SetDirectionLtr {\n  readonly type = LayoutActionTypes.SetDirectionLtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to right-to-left action\n */\nexport class SetDirectionRtr {\n  readonly type = LayoutActionTypes.SetDirectionRtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * transition layout action\n */\nexport class TransitioningLayout {\n  readonly type = LayoutActionTypes.TransitioningLayout;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * Use breadcrumb action\n */\nexport class UseBreadcrumb {\n  readonly type = LayoutActionTypes.UseBreadcrumb;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * make breadcrumb simple action\n */\nexport class MakeBreadcrumbSimple {\n  readonly type = LayoutActionTypes.MakeBreadcrumbSimple;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * make breadcrum title action\n */\nexport class MakeBreadcrumbTitle {\n  readonly type = LayoutActionTypes.MakeBreadcrumbTitle;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * fix top bar action\n */\nexport class FixTopbar {\n  readonly type = LayoutActionTypes.FixTopbar;\n  constructor(public payload: boolean) { \n  }\n}\n\nexport type LayoutActions = \n  | OpenSideNav\n  | CloseSideNav\n  | CompactSideNav\n  | SetNavigationPositionSide\n  | SetNavigationPositionTop\n  | SetDirectionLtr\n  | SetDirectionRtr\n  | TransitioningLayout\n  | UseBreadcrumb\n  | MakeBreadcrumbSimple\n  | MakeBreadcrumbTitle\n  | FixTopbar;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/material/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatDialogModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatOptionModule, MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSnackBarModule, MatToolbarModule,\n  MatTooltipModule\n} from '@angular/material';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nconst MODULES = [\n  MatSidenavModule,\n  MatListModule,\n  MatTooltipModule,\n  MatOptionModule,\n  MatSelectModule,\n  MatMenuModule,\n  MatSnackBarModule,\n  MatGridListModule,\n  MatToolbarModule,\n  MatIconModule,\n  MatButtonModule,\n  MatRadioModule,\n  MatCheckboxModule,\n  MatCardModule,\n  MatProgressSpinnerModule,\n  MatRippleModule,\n  MatDialogModule,\n  MatProgressBarModule,\n  MatInputModule,\n  FlexLayoutModule\n];\n\n@NgModule({\n  declarations: [],\n  imports: [MODULES],\n  exports: [MODULES]\n})\nexport class MaterialModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NavigationService.html":{"url":"injectables/NavigationService.html","title":"injectable - NavigationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NavigationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/navigation.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iconMenu\n                            \n                            \n                                iconTypeMenuTitle\n                            \n                            \n                                menuItems\n                            \n                            \n                                menuItems$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                publishNavigationChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/navigation.service.ts:31\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publishNavigationChange\n                            \n                            \n                        \n                    \n                \n                \n                    \npublishNavigationChange(menuType: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/navigation.service.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        menuType\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iconMenu\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconMenu:     IMenuItem[]\n\n                    \n                \n                    \n                        \n                            Type :     IMenuItem[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      name: 'Dashboard',\n      type: 'link',\n      tooltip: 'Dashboard',\n      icon: 'dashboard',\n      state: 'dashboard/blank'\n    },\n    {\n      name: 'Users',\n      type: 'link',\n      tooltip: 'users',\n      icon: 'group',\n      state: 'dashboard/users'\n    },\n    {\n      name: 'Patients',\n      type: 'link',\n      tooltip: 'patients',\n      icon: 'group',\n      state: 'dashboard/patients'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/navigation.service.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iconTypeMenuTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconTypeMenuTitle:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Frequently Accessed'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/navigation.service.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menuItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        menuItems:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(this.iconMenu)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/navigation.service.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menuItems$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        menuItems$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.menuItems.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/navigation.service.ts:65\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\ninterface IMenuItem {\n  type: string;       // Possible values: link/dropDown/icon/separator/extLink\n  name?: string;      // Used as display text for item and title for separator type\n  state?: string;     // Router state\n  icon?: string;      // Material icon name\n  tooltip?: string;   // Tooltip text\n  disabled?: boolean; // If true; item will not be appeared in sidenav.\n  sub?: IChildItem[]; // Dropdown items\n  badges?: IBadge[];\n}\n\ninterface IChildItem {\n  type?: string;\n  name: string;       // Display text\n  state?: string;     // Router state\n  icon?: string;\n  sub?: IChildItem[];\n}\n\ninterface IBadge {\n  color: string;      // primary/accent/warn/hex color codes(#fff000)\n  value: string;      // Display text\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavigationService {\n  constructor() {\n  }\n\n  iconMenu: IMenuItem[] = [\n    {\n      name: 'Dashboard',\n      type: 'link',\n      tooltip: 'Dashboard',\n      icon: 'dashboard',\n      state: 'dashboard/blank'\n    },\n    {\n      name: 'Users',\n      type: 'link',\n      tooltip: 'users',\n      icon: 'group',\n      state: 'dashboard/users'\n    },\n    {\n      name: 'Patients',\n      type: 'link',\n      tooltip: 'patients',\n      icon: 'group',\n      state: 'dashboard/patients'\n    }\n  ];\n\n  // Icon menu TITLE at the very top of navigation.\n  // This title will appear if any icon type item is present in menu.\n  iconTypeMenuTitle = 'Frequently Accessed';\n  // sets iconMenu as default;\n  menuItems = new BehaviorSubject(this.iconMenu);\n  // navigation component has subscribed to this Observable\n  menuItems$ = this.menuItems.asObservable();\n\n  // Customizer component uses this method to change menu.\n  // You can remove this method and customizer component.\n  // Or you can customize this method to supply different menu for\n  // different user type.\n  publishNavigationChange(menuType: string) {\n    this.menuItems.next(this.iconMenu);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/errors/components/not-found/not-found.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-not-found\n            \n\n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/errors/components/not-found/not-found.component.ts:7\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/errors/components/not-found/not-found.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'moio-not-found',\n  templateUrl: './not-found.component.html'\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      error\n      \n        404\n        Page Not Found!\n      \n    \n\n    \n      {{'Back to Dashboard' | translate}}\n      \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            error              404        Page Not Found!                    {{\\'Back to Dashboard\\' | translate}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationsComponent.html":{"url":"components/NotificationsComponent.html","title":"component - NotificationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotificationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/containers/layout-components/notifications/notifications.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-notifications\n            \n\n\n\n\n            \n                templateUrl\n                ./notifications.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                notifications\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearAll\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                notificPanel\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/containers/layout-components/notifications/notifications.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        notificPanel\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/notifications/notifications.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clearAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nclearAll(event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/notifications/notifications.component.ts:45\n                            \n                        \n\n\n                \n                    \n                            clear all notifications\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/notifications/notifications.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n    message: 'New contact added',\n    icon: 'assignment_ind',\n    time: '1 min ago',\n    route: '/inbox',\n    color: 'primary'\n  }, {\n    message: 'New message',\n    icon: 'chat',\n    time: '4 min ago',\n    route: '/chat',\n    color: 'accent'\n  }, {\n    message: 'Server rebooted',\n    icon: 'settings_backup_restore',\n    time: '12 min ago',\n    route: '/charts',\n    color: 'warn'\n  }]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/notifications/notifications.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\n\n@Component({\n  selector: 'moio-notifications',\n  templateUrl: './notifications.component.html'\n})\nexport class NotificationsComponent implements OnInit {\n  @Input() notificPanel;\n\n  // Dummy notifications\n  notifications = [{\n    message: 'New contact added',\n    icon: 'assignment_ind',\n    time: '1 min ago',\n    route: '/inbox',\n    color: 'primary'\n  }, {\n    message: 'New message',\n    icon: 'chat',\n    time: '4 min ago',\n    route: '/chat',\n    color: 'accent'\n  }, {\n    message: 'Server rebooted',\n    icon: 'settings_backup_restore',\n    time: '12 min ago',\n    route: '/charts',\n    color: 'warn'\n  }];\n\n  constructor(private router: Router) {}\n\n  ngOnInit() {\n    this.router.events.subscribe((routeChange) => {\n        if (routeChange instanceof NavigationEnd) {\n          this.notificPanel.close();\n        }\n    });\n  }\n\n  /**\n   * clear all notifications\n   */\n  clearAll(event) {\n    event.preventDefault();\n    this.notifications = [];\n  }\n}\n\n    \n\n    \n        \n  Notifications\n\n\n\n  \n  \n    {{n.icon}}\n    \n      \n        {{n.message}}\n        {{n.time}}\n      \n    \n  \n\n\n\n  Clear all notifications\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Notifications        {{n.icon}}                  {{n.message}}        {{n.time}}              Clear all notifications'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'NotificationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NumberValidators.html":{"url":"classes/NumberValidators.html","title":"class - NumberValidators","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NumberValidators\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/shared/number-validator.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                range\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            range\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        range(min: number, max: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/shared/number-validator.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        min\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        max\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ValidatorFn\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl, ValidatorFn } from '@angular/forms';\n\nexport class NumberValidators {\n\n    static range(min: number, max: number): ValidatorFn {\n        return (c: AbstractControl): { [key: string]: boolean } | null => {\n            if (c.value && (isNaN(c.value) || c.value  max)) {\n                return { 'range': true };\n            }\n            return null;\n        };\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NursingHome.html":{"url":"interfaces/NursingHome.html","title":"interface - NursingHome","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NursingHome\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/models/nursing-home.model.ts\n        \n\n            \n                Description\n            \n            \n                nursing home defintion\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        key\n                                \n                                \n                                            Optional\n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface NursingHome {\n    id?: number | null;\n    key?: string;\n    name?: string;\n  }\n  \n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NursingHomeFormComponent.html":{"url":"components/NursingHomeFormComponent.html","title":"component - NursingHomeFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NursingHomeFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/components/nursing-homes/nursing-home-form/nursing-home-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nursing-home-form\n            \n\n\n\n\n            \n                templateUrl\n                ./nursing-home-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                itemForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildItemForm\n                            \n                            \n                                cancel\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFormSubmitted\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, dialogRef: MatDialogRef, fb: FormBuilder, store: Store, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/components/nursing-homes/nursing-home-form/nursing-home-form.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildItemForm\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildItemForm(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/nursing-homes/nursing-home-form/nursing-home-form.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancel\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/nursing-homes/nursing-home-form/nursing-home-form.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/nursing-homes/nursing-home-form/nursing-home-form.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onFormSubmitted\n                            \n                            \n                        \n                    \n                \n                \n                    \nonFormSubmitted(nursingHome: NursingHome)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/nursing-homes/nursing-home-form/nursing-home-form.component.ts:48\n                            \n                        \n\n\n                \n                    \n                            dispatch new create nursingHome action when form is submitted\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nursingHome\n                                                        \n                                                                    NursingHome\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submit\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/nursing-homes/nursing-home-form/nursing-home-form.component.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/nursing-homes/nursing-home-form/nursing-home-form.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/nursing-homes/nursing-home-form/nursing-home-form.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            itemForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/nursing-homes/nursing-home-form/nursing-home-form.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\n/* NGRX */\nimport { Store, select } from '@ngrx/store';\nimport * as fromDashboard from '../../../reducers';\nimport * as nursingHomeActions from '../../../actions/nursing-homes.actions';\nimport { Observable } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NursingHomesApiActions, NursingHomesActions } from '../../../actions';\nimport { NursingHome } from '../../../models/nursing-home.model';\n\n@Component({\n  selector: 'nursing-home-form',\n  templateUrl: './nursing-home-form.component.html'\n})\nexport class NursingHomeFormComponent implements OnInit {\n  public itemForm: FormGroup;\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public dialogRef: MatDialogRef,\n    private fb: FormBuilder,\n    private store: Store, \n    private translate: TranslateService,\n  ) { }\n\n  ngOnInit() {\n    this.buildItemForm(this.data.payload)\n\n    this.store.dispatch(new nursingHomeActions.LoadNursingHomes());\n  }\n  \n  buildItemForm(item) {\n    this.itemForm = this.fb.group({\n      key: [item.firstname || '', Validators.required],\n      name: [item.lastname || '', Validators.required]\n    })\n  }\n\n  submit() {\n    this.dialogRef.close(this.itemForm.value)\n  }\n\n  /**\n   * dispatch new create nursingHome action when form is submitted\n   * @param nursingHome\n   */\n  onFormSubmitted(nursingHome: NursingHome) {\n    this.store.dispatch(new NursingHomesActions.CreateNursingHome({nursingHome}));\n  }\n\n  cancel(){\n    this.store.dispatch(new NursingHomesActions.DismissPoppedUpNursingHomeForm());\n  }\n}\n\n    \n\n    \n        {{data.title}}\n  \n  \n    \n      \n        \n      \n    \n\n    \n      \n        \n      \n    \n\n    \n      Save\n      \n      Cancel\n    \n  \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{data.title}}                                                                      Save            Cancel        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'NursingHomeFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NursingHomesEffects.html":{"url":"injectables/NursingHomesEffects.html","title":"injectable - NursingHomesEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NursingHomesEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/effects/nursing-homes.effects.ts\n        \n\n            \n                Description\n            \n            \n                nursingHomes effects\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createNursingHome$\n                            \n                            \n                                DismissPoppedUpNursingHomeForm\n                            \n                            \n                                loadNursingHomes$\n                            \n                            \n                                popUpNursingHomeForm$\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, nursingHomesService: NursingHomesService, router: Router, store: Store, snackBar: MatSnackBar, translate: TranslateService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/effects/nursing-homes.effects.ts:124\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nursingHomesService\n                                                  \n                                                        \n                                                                    NursingHomesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createNursingHome$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        createNursingHome$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(NursingHomesActions.NursingHomesActionTypes.CreateNursingHome),\n      map(action => action.payload.nursingHome),\n      exhaustMap((nursingHomeData: NursingHome) => {\n\n        return this.nursingHomesService.createNursingHome(nursingHomeData)\n          .pipe(\n            delay(2000),\n            map(nursingHome => {\n              return new NursingHomesApiActions.CreateNursingHomeSuccess({ nursingHome });\n            }),\n            catchError(httpResponse => {\n              const message = httpResponse.statusText.toLowerCase();\n\n              return of(new NursingHomesApiActions.CreateNursingHomeFailure({ message }));\n            }),\n            tap(() => {\n              console.log('Actions finished')\n            })\n          );\n      })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/nursing-homes.effects.ts:25\n                            \n                        \n\n                \n                    \n                        effect fired, when the create new nursingHome form is submitted\nsend data to api and handle result\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DismissPoppedUpNursingHomeForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DismissPoppedUpNursingHomeForm:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(NursingHomesActions.NursingHomesActionTypes.DismissPoppedUpNursingHomeForm),\n      map(() => {\n        this.dialog.closeAll();\n    })\n  )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect({dispatch: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/nursing-homes.effects.ts:118\n                            \n                        \n\n                \n                    \n                        effect to dismiss the dialog for adding nursingHome details\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadNursingHomes$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadNursingHomes$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(NursingHomesActions.NursingHomesActionTypes.LoadNursingHomes),\n      exhaustMap(() => {\n\n        return this.nursingHomesService.getNursingHomes()\n          .pipe(\n            delay(2000),\n            map((nursingHomes: NursingHome[]) => {\n              console.log(nursingHomes)\n              return new NursingHomesApiActions.LoadNursingHomesSuccess({nursingHomes});\n            }),\n            catchError(httpError => {\n              console.log(httpError);\n              const message = httpError.statusText.toLowerCase();\n\n              let snackBarRef = this.snackBar.open(this.translate.instant(message), this.translate.instant('Retry'), {\n                duration: 10000\n              });\n\n              snackBarRef.afterDismissed().subscribe(snackBarDismiss => {\n\n                if (snackBarDismiss.dismissedByAction){\n                  this.store.dispatch(new NursingHomesActions.LoadNursingHomes());\n                }else{\n                  this.router.navigate(['/dashboard']);\n                }\n              });\n\n              return of(new NursingHomesApiActions.LoadNursingHomesFailure({ message }));\n            }),\n            tap(() => {\n              console.log('Actions finished')\n              // dispatch hideLoader action\n            })\n          );\n      })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/nursing-homes.effects.ts:53\n                            \n                        \n\n                \n                    \n                        effect for loading nursing homes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popUpNursingHomeForm$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popUpNursingHomeForm$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(NursingHomesActions.NursingHomesActionTypes.PopUpNursingHomeForm),\n      exhaustMap(() => {\n        const title = 'Creating a new nursingHome';\n        const dialogRef: MatDialogRef = this.dialog.open(NursingHomeFormComponent, {\n          width: '720px',\n          disableClose: true,\n          data: { title: title }\n        });\n        \n        return dialogRef.afterClosed();\n      })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/nursing-homes.effects.ts:96\n                            \n                        \n\n                \n                    \n                        show a dialog form for nursingHome details as a pop up\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        snackBar:     MatSnackBar\n\n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/nursing-homes.effects.ts:142\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { NursingHomesApiActions, NursingHomesActions } from '../actions';\nimport { catchError, exhaustMap, map, tap, delay } from 'rxjs/operators';\nimport { NursingHome } from '../models/nursing-home.model';\nimport { NursingHomesService } from '../services/nursing-homes.service';\nimport { of } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MatDialogRef, MatDialog, MatSnackBar } from '@angular/material';\nimport { NursingHomeFormComponent } from '../components/nursing-homes/nursing-home-form/nursing-home-form.component';\n\n/**\n * nursingHomes effects\n */\n@Injectable()\nexport class NursingHomesEffects {\n\n  /**\n   * effect fired, when the create new nursingHome form is submitted\n   * send data to api and handle result\n   */\n  @Effect()\n  createNursingHome$ = this.actions$\n    .pipe(\n      ofType(NursingHomesActions.NursingHomesActionTypes.CreateNursingHome),\n      map(action => action.payload.nursingHome),\n      exhaustMap((nursingHomeData: NursingHome) => {\n\n        return this.nursingHomesService.createNursingHome(nursingHomeData)\n          .pipe(\n            delay(2000),\n            map(nursingHome => {\n              return new NursingHomesApiActions.CreateNursingHomeSuccess({ nursingHome });\n            }),\n            catchError(httpResponse => {\n              const message = httpResponse.statusText.toLowerCase();\n\n              return of(new NursingHomesApiActions.CreateNursingHomeFailure({ message }));\n            }),\n            tap(() => {\n              console.log('Actions finished')\n            })\n          );\n      })\n    );\n\n  /**\n   * effect for loading nursing homes\n   */\n  @Effect()\n  loadNursingHomes$ = this.actions$\n    .pipe(\n      ofType(NursingHomesActions.NursingHomesActionTypes.LoadNursingHomes),\n      exhaustMap(() => {\n\n        return this.nursingHomesService.getNursingHomes()\n          .pipe(\n            delay(2000),\n            map((nursingHomes: NursingHome[]) => {\n              console.log(nursingHomes)\n              return new NursingHomesApiActions.LoadNursingHomesSuccess({nursingHomes});\n            }),\n            catchError(httpError => {\n              console.log(httpError);\n              const message = httpError.statusText.toLowerCase();\n\n              let snackBarRef = this.snackBar.open(this.translate.instant(message), this.translate.instant('Retry'), {\n                duration: 10000\n              });\n\n              snackBarRef.afterDismissed().subscribe(snackBarDismiss => {\n\n                if (snackBarDismiss.dismissedByAction){\n                  this.store.dispatch(new NursingHomesActions.LoadNursingHomes());\n                }else{\n                  this.router.navigate(['/dashboard']);\n                }\n              });\n\n              return of(new NursingHomesApiActions.LoadNursingHomesFailure({ message }));\n            }),\n            tap(() => {\n              console.log('Actions finished')\n              // dispatch hideLoader action\n            })\n          );\n      })\n    );\n\n  /**\n   * show a dialog form for nursingHome details as a pop up\n   */\n  @Effect()\n  popUpNursingHomeForm$ = this.actions$\n    .pipe(\n      ofType(NursingHomesActions.NursingHomesActionTypes.PopUpNursingHomeForm),\n      exhaustMap(() => {\n        const title = 'Creating a new nursingHome';\n        const dialogRef: MatDialogRef = this.dialog.open(NursingHomeFormComponent, {\n          width: '720px',\n          disableClose: true,\n          data: { title: title }\n        });\n        \n        return dialogRef.afterClosed();\n      })\n    );\n\n\n  /**\n   * effect to dismiss the dialog for adding nursingHome details\n   */\n  @Effect({\n    dispatch: false\n  })\n  DismissPoppedUpNursingHomeForm = this.actions$\n    .pipe(\n      ofType(NursingHomesActions.NursingHomesActionTypes.DismissPoppedUpNursingHomeForm),\n      map(() => {\n        this.dialog.closeAll();\n    })\n  );\n\n\n\n  /**\n   * constructor\n   *\n   * @param actions$\n   * @param nursingHomesService\n   * @param router\n   * @param modalController\n   * @param store\n   */\n  constructor(\n    private actions$: Actions,\n    private nursingHomesService: NursingHomesService,\n    private router: Router,\n    private store: Store,\n    public snackBar: MatSnackBar,\n    private translate: TranslateService,\n    private dialog: MatDialog,){\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NursingHomesService.html":{"url":"injectables/NursingHomesService.html","title":"injectable - NursingHomesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NursingHomesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/services/nursing-homes.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createNursingHome\n                            \n                            \n                                getNursingHomes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/services/nursing-homes.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createNursingHome\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateNursingHome(nursingHome: NursingHome)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/services/nursing-homes.service.ts:28\n                            \n                        \n\n\n                \n                    \n                            create a new nursingHome\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nursingHome\n                                                        \n                                                                    NursingHome\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNursingHomes\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNursingHomes()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/services/nursing-homes.service.ts:20\n                            \n                        \n\n\n                \n                    \n                            get all nursing homes from the moio-cloud api\n\n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable, of, throwError } from 'rxjs';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nimport { NursingHome } from '../models/nursing-home.model';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NursingHomesService {\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * get all nursing homes from the moio-cloud api\n   */\n  getNursingHomes(): Observable {\n    return this.http.get(`${environment.apiHost}/api/nursinghomes`);\n  }\n\n  /**\n   * create a new nursingHome\n   * @param nursingHome\n   */\n  createNursingHome(nursingHome: NursingHome): Observable {\n    return this.http\n      .post(`${environment.apiHost}/api/nursinghomes`, {...nursingHome});\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OpenSideNav.html":{"url":"classes/OpenSideNav.html","title":"class - OpenSideNav","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OpenSideNav\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/layout.actions.ts\n        \n\n            \n                Description\n            \n            \n                open side navigation action\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/layout.actions.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LayoutActionTypes.OpenSideNav\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\n/**\n * layout action types\n */\nexport enum LayoutActionTypes {\n  OpenSideNav = '[Layout] Open Side Nav',\n  CloseSideNav = '[Layout] Close Side Nav',\n  CompactSideNav = '[Layout] Compact Nav position',\n  SetNavigationPositionSide = '[Layout] Set Navigation Position Side',\n  SetNavigationPositionTop = '[Layout] Set Navigation Position Top',\n  SetDirectionLtr = '[Layout] Set Direction Ltr',\n  SetDirectionRtr = '[Layout] Set Direction Rtr',\n  TransitioningLayout = '[Layout] Transitioning Layout',\n  UseBreadcrumb = '[Layout] Use Breadcrumb',\n  MakeBreadcrumbSimple = '[Layout] Make Breadcrumb Simple',\n  MakeBreadcrumbTitle = '[Layout] Make Breadcrumb Title',\n  FixTopbar = '[Layout] Fix Topbar'\n}\n\n/**\n * open side navigation action\n */\nexport class OpenSideNav {\n  readonly type = LayoutActionTypes.OpenSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * close side navigation action\n */\nexport class CloseSideNav {\n  readonly type = LayoutActionTypes.CloseSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * compact side navigation action\n */\nexport class CompactSideNav {\n  readonly type = LayoutActionTypes.CompactSideNav;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to side action\n */\nexport class SetNavigationPositionSide {\n  readonly type = LayoutActionTypes.SetNavigationPositionSide;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to top action\n */\nexport class SetNavigationPositionTop {\n  readonly type = LayoutActionTypes.SetNavigationPositionTop;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to left-to-right action\n */\nexport class SetDirectionLtr {\n  readonly type = LayoutActionTypes.SetDirectionLtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to right-to-left action\n */\nexport class SetDirectionRtr {\n  readonly type = LayoutActionTypes.SetDirectionRtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * transition layout action\n */\nexport class TransitioningLayout {\n  readonly type = LayoutActionTypes.TransitioningLayout;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * Use breadcrumb action\n */\nexport class UseBreadcrumb {\n  readonly type = LayoutActionTypes.UseBreadcrumb;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * make breadcrumb simple action\n */\nexport class MakeBreadcrumbSimple {\n  readonly type = LayoutActionTypes.MakeBreadcrumbSimple;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * make breadcrum title action\n */\nexport class MakeBreadcrumbTitle {\n  readonly type = LayoutActionTypes.MakeBreadcrumbTitle;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * fix top bar action\n */\nexport class FixTopbar {\n  readonly type = LayoutActionTypes.FixTopbar;\n  constructor(public payload: boolean) { \n  }\n}\n\nexport type LayoutActions = \n  | OpenSideNav\n  | CloseSideNav\n  | CompactSideNav\n  | SetNavigationPositionSide\n  | SetNavigationPositionTop\n  | SetDirectionLtr\n  | SetDirectionRtr\n  | TransitioningLayout\n  | UseBreadcrumb\n  | MakeBreadcrumbSimple\n  | MakeBreadcrumbTitle\n  | FixTopbar;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PatientEditFormComponent.html":{"url":"components/PatientEditFormComponent.html","title":"component - PatientEditFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PatientEditFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-patient-edit-form\n            \n\n            \n                styleUrls\n                ./patient-edit-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./patient-edit-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                componentActive\n                            \n                            \n                                    Public\n                                confirmService\n                            \n                            \n                                displayMessage\n                            \n                            \n                                errorMessage$\n                            \n                            \n                                    Private\n                                genericValidator\n                            \n                            \n                                loadPatientPatientsError$\n                            \n                            \n                                loadPatientPatientsPending$\n                            \n                            \n                                pageTitle\n                            \n                            \n                                patient\n                            \n                            \n                                patientEditForm\n                            \n                            \n                                patientUsers\n                            \n                            \n                                    Private\n                                validationMessages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                cancelEdit\n                            \n                            \n                                deletePatient\n                            \n                            \n                                displayPatient\n                            \n                            \n                                editPatient\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, fb: FormBuilder, translate: TranslateService, confirmService: ConfirmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmService\n                                                  \n                                                        \n                                                                    ConfirmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            blur\n                            \n                            \n                        \n                    \n                \n                \n                    \nblur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts:100\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancelEdit\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancelEdit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts:122\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletePatient\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeletePatient()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts:143\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayPatient\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisplayPatient(patient: Patient)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts:104\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        patient\n                                                        \n                                                                    Patient\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editPatient\n                            \n                            \n                        \n                    \n                \n                \n                    \neditPatient()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts:154\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts:94\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentActive\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        componentActive:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            confirmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        confirmService:     ConfirmService\n\n                    \n                \n                    \n                        \n                            Type :     ConfirmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        displayMessage:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            genericValidator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        genericValidator:     GenericValidator\n\n                    \n                \n                    \n                        \n                            Type :     GenericValidator\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadPatientPatientsError$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadPatientPatientsError$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getLoadPatientUsersError)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadPatientPatientsPending$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadPatientPatientsPending$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getLoadPatientUsersPending)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pageTitle:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Patient Edit'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            patient\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        patient:     Patient\n\n                    \n                \n                    \n                        \n                            Type :     Patient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            patientEditForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        patientEditForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            patientUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        patientUsers:     User[]\n\n                    \n                \n                    \n                        \n                            Type :     User[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validationMessages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        validationMessages:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-edit-form/patient-edit-form.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { Observable, of } from 'rxjs';\n\nimport { IPatient as Patient } from '../../../models/patient.model';\nimport { User } from '../../../models/user.model';\nimport { GenericValidator } from '../../../shared/generic-validator';\nimport { NumberValidators } from '../../../shared/number-validator';\n\nimport { takeWhile } from 'rxjs/operators';\nimport { Store, select } from '@ngrx/store';\n\nimport * as fromDashboard from '../../../reducers';\nimport * as patientsActions from '../../../actions/patients.actions';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ConfirmService } from '../../../../core/services/confirm.service'\n\n@Component({\n  selector: 'moio-patient-edit-form',\n  templateUrl: './patient-edit-form.component.html',\n  styleUrls: ['./patient-edit-form.component.scss']\n})\nexport class PatientEditFormComponent implements OnInit, OnDestroy {\n  pageTitle = 'Patient Edit';\n  errorMessage$: Observable;\n  componentActive = true;\n  patientEditForm: FormGroup;\n\n  patient: Patient;\n\n  // Use with the generic validation message class\n  displayMessage: { [key: string]: string } = {};\n  private validationMessages: { [key: string]: { [key: string]: string } };\n  private genericValidator: GenericValidator;\n\n  // // all patient users\n  // patientUsers$: Observable = this.store.pipe(\n  //   select(fromDashboard.getAllPatientUsers)\n  // );\n\n  patientUsers: User[];\n\n  // get error state when loading patient patients\n  loadPatientPatientsError$: Observable = this.store.pipe(\n    select(fromDashboard.getLoadPatientUsersError)\n  );\n\n  // get pending state when loading patient patients\n  loadPatientPatientsPending$: Observable = this.store.pipe(\n    select(fromDashboard.getLoadPatientUsersPending)\n  );\n\n  constructor(private store: Store,\n              private fb: FormBuilder,\n              private translate: TranslateService,\n              public confirmService: ConfirmService) {\n\n    // Defines all of the validation messages for the form.\n    // These could instead be retrieved from a file or database.\n    this.validationMessages = {\n      patientname: {\n        required: 'Patientname is required.'\n      }\n    };\n\n    // Define an instance of the validator for use with this form,\n    // passing in this form's set of validation messages.\n    this.genericValidator = new GenericValidator(this.validationMessages);\n\n    this.translate.setDefaultLang('de');\n  }\n\n  ngOnInit() {\n    // Watch for changes to the currently selected patient\n    this.store.pipe(\n      select(fromDashboard.getSelectedPatient),\n      takeWhile(() => this.componentActive)\n    ).subscribe(\n      patient => {\n        if (patient){\n          this.patient = patient;\n          this.patientUsers = patient.users; \n          this.displayPatient(this.patient);\n        }\n      }\n    );\n\n    // Watch for changes to the error message\n    this.errorMessage$ = this.store.pipe(select(fromDashboard.getPatientEditionError));\n\n  }\n\n  ngOnDestroy(): void {\n    this.componentActive = false;\n  }\n\n  // Also validate on blur\n  // Helpful if the patient tabs through required fields\n  blur(): void {\n    this.displayMessage = this.genericValidator.processMessages(this.patientEditForm);\n  }\n\n  displayPatient(patient: Patient) {\n    // Display the appropriate page title\n    this.pageTitle = `${this.patient.firstname} ${this.patient.lastname}`;\n    // Define the form group\n    this.patientEditForm = this.fb.group({\n      id: [patient.id],\n      firstname: [patient.firstname],\n      lastname: [patient.lastname, Validators.required],\n      gender: [patient.gender],    \n      nursing_home_name: [patient.nursing_home.name]\n    });\n\n    // Watch for value changes\n    const formValuechanges = this.patientEditForm.valueChanges.subscribe(\n      value => this.displayMessage = this.genericValidator.processMessages(this.patientEditForm)\n    );\n  }\n\n  cancelEdit(): void {\n    // Redisplay the currently selected patient\n    // replacing any edits made\n    this.displayPatient(this.patient);\n    this.store.dispatch(new patientsActions.DismissEditPatient);\n\n\n    const title = this.translate.instant(\"CloseUnsavedForm.title\");\n    const message = this.translate.instant(\"CloseUnsavedForm.message\");\n    if (this.patientEditForm.dirty){\n      this.confirmService.confirm({title: title, message: message})\n      .subscribe(res => {\n        if (res){\n          this.store.dispatch(new patientsActions.DismissEditPatient());\n        }\n      })\n    }else{\n      this.store.dispatch(new patientsActions.DismissEditPatient());\n    }\n  }\n\n  deletePatient(): void {\n    if (this.patient && this.patient.id) {\n      if (confirm(`Really delete the patient: ${this.patient.firstname}?`)) {\n        this.store.dispatch(new patientsActions.DeletePatient(this.patient.id));\n      }\n    } else {\n      // No need to delete, it was never saved\n      this.store.dispatch(new patientsActions.DismissEditPatient);\n    }\n  }\n\n  editPatient(): void {\n    console.log(this.patientEditForm.value);\n    if (this.patientEditForm.valid) {\n      if (this.patientEditForm.dirty) {\n        // Copy over all of the original patient properties\n        // Then copy over the values from the form\n        // This ensures values not on the form, such as the Id, are retained\n        const p = { id: this.patientEditForm.get('id').value,\n                    firstname: this.patientEditForm.get('firstname').value,\n                    lastname: this.patientEditForm.get('lastname').value,\n                    gender: this.patientEditForm.get('gender').value\n                  };\n        console.log(p);\n        this.store.dispatch(new patientsActions.EditPatient(p));\n      }\n    } else {\n      this.errorMessage$ = of('Please correct the validation errors.');\n    }\n  }\n\n}\n    \n\n    \n        \n  \n    \n      {{pageTitle}}\n      \n    \n    \n      \n        \n          \n            \n              \n                \n              \n            \n\n            \n              \n                \n              \n               {{'LastNameRequired' | translate}} \n            \n          \n\n          \n            {{'Gender' | translate}}* \n            \n              \n                Male\n                Female\n              \n            \n\n            \n              \n                \n              \n            \n          \n          \n          \n            \n              {{'Edit' | translate}}\n            \n            {{'Cancel' | translate}}\n          \n        \n      \n    \n  \n\n  \n     -->\n    {{'ConnectedUserProfiles' | translate}}\n    \n      \n        \n\n          \n            \n              {{ row?.firstname }} {{ row?.lastname }}\n            \n          \n          \n            \n              {{ row?.last_login_at }}\n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./patient-edit-form.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{pageTitle}}                                                                                                                                                                                 {{\\'LastNameRequired\\' | translate}}                                             {{\\'Gender\\' | translate}}*                                           Male                Female                                                                                                                                                      {{\\'Edit\\' | translate}}                        {{\\'Cancel\\' | translate}}                                     -->    {{\\'ConnectedUserProfiles\\' | translate}}                                                      {{ row?.firstname }} {{ row?.lastname }}                                                          {{ row?.last_login_at }}                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'PatientEditFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PatientFormComponent.html":{"url":"components/PatientFormComponent.html","title":"component - PatientFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PatientFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/components/patients/patient-form/patient-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                patient-form\n            \n\n\n\n\n            \n                templateUrl\n                ./patient-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                confirmService\n                            \n                            \n                                createPatientPending$\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                loadNursingHomeErrorMessage$\n                            \n                            \n                                loadNursinghomePending$\n                            \n                            \n                                nursingHomes$\n                            \n                            \n                                    Public\n                                patientForm\n                            \n                            \n                                savePatientErrorMessage$\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                passwordMatchValidator\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, dialogRef: MatDialogRef, fb: FormBuilder, store: Store, translate: TranslateService, confirmService: ConfirmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/components/patients/patient-form/patient-form.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmService\n                                                  \n                                                        \n                                                                    ConfirmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancel\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-form/patient-form.component.ts:112\n                            \n                        \n\n\n                \n                    \n                            dismiss the open patient form dialogue with confirmation if \nthe form has unsave data\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-form/patient-form.component.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordMatchValidator\n                            \n                            \n                        \n                    \n                \n                \n                    \npasswordMatchValidator(control: AbstractControl)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-form/patient-form.component.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control\n                                                        \n                                                                    AbstractControl\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submit\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-form/patient-form.component.ts:99\n                            \n                        \n\n\n                \n                    \n                            dispatch new create patient action when form is submitted\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            confirmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        confirmService:     ConfirmService\n\n                    \n                \n                    \n                        \n                            Type :     ConfirmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-form/patient-form.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createPatientPending$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        createPatientPending$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getPatientCreationPending)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-form/patient-form.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-form/patient-form.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-form/patient-form.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadNursingHomeErrorMessage$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadNursingHomeErrorMessage$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getPatientCreationError)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-form/patient-form.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadNursinghomePending$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadNursinghomePending$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getNursingHomePagePending)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-form/patient-form.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nursingHomes$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nursingHomes$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getAllNursingHomes)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-form/patient-form.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            patientForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        patientForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-form/patient-form.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            savePatientErrorMessage$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        savePatientErrorMessage$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getNursingHomePageError)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-form/patient-form.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translate:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-form/patient-form.component.ts:52\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { FormBuilder, Validators, FormGroup, AbstractControl } from '@angular/forms';\n/* NGRX */\nimport { Store, select } from '@ngrx/store';\nimport * as fromDashboard from '../../../reducers';\nimport * as nursingHomeActions from '../../../actions/nursing-homes.actions';\nimport { Observable } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\nimport { PatientsApiActions, PatientsActions } from '../../../actions';\nimport { IPatient } from '../../../models/patient.model';\nimport { NursingHome } from 'src/app/dashboard/models/nursing-home.model';\nimport { ConfirmService } from '../../../../core/services/confirm.service'\n\n\n@Component({\n  selector: 'patient-form',\n  templateUrl: './patient-form.component.html'\n})\nexport class PatientFormComponent implements OnInit {\n  public patientForm: FormGroup;\n\n  // observe patient creation pending state\n  createPatientPending$: Observable = this.store.pipe(\n    select(fromDashboard.getPatientCreationPending)\n  );\n\n  // observe errors while saving the patient\n  savePatientErrorMessage$: Observable = this.store.pipe(\n    select(fromDashboard.getNursingHomePageError)\n  );\n\n  // observe pending state while loading nursing homes\n  loadNursinghomePending$: Observable = this.store.pipe(\n    select(fromDashboard.getNursingHomePagePending)\n  );\n\n  // observe errors while loading nursing homes\n  loadNursingHomeErrorMessage$: Observable = this.store.pipe(\n    select(fromDashboard.getPatientCreationError)\n  );\n\n  nursingHomes$: Observable = this.store.pipe(\n    select(fromDashboard.getAllNursingHomes)\n  );\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public dialogRef: MatDialogRef,\n    private fb: FormBuilder,\n    private store: Store, \n    public translate: TranslateService,\n    public confirmService: ConfirmService\n  ) { \n    translate.setDefaultLang('de');\n  }\n\n  ngOnInit() {\n    // LoadAllNursingHomes\n    this.store.dispatch(new nursingHomeActions.LoadNursingHomes());\n\n    /**\n     * Create patientForm group to collect patient details\n     */\n    this.patientForm = this.fb.group({\n      firstname: ['', Validators.required],\n      lastname: ['', Validators.required],\n      patientname: ['', Validators.required],\n      email: ['',[Validators.required, Validators.email]],\n      password: ['',Validators.required],\n      password_confirmation: ['',Validators.required],\n      nursing_home_key: ['',Validators.required]\n    },\n    {\n      // check whether our password and confirm password match\n      validator: this.passwordMatchValidator\n   })\n  }\n\n  passwordMatchValidator(control: AbstractControl) {\n    const password: string = control.get('password').value; // get password from our password form control\n    const passwordConfirmation: string = control.get('password_confirmation').value; // get password from our password_confirmation form control\n    // compare is the password math\n    if (password !== passwordConfirmation) {\n      // if they don't match, set an error in our passwordConfirmation form control\n      control.get('password_confirmation').setErrors({ NoPasswordMatch: true });\n    }else{\n     if ( control.getError('NoPasswordMatch')){\n       control.setErrors(null);\n     }\n      return null\n    }\n  }\n\n  /**\n   * dispatch new create patient action when form is submitted\n   * @param patient\n   */\n  submit() {\n    if (this.patientForm.valid) {\n      const patient = this.patientForm.value;\n      console.log(patient);\n      this.store.dispatch(new PatientsActions.CreatePatient({patient}));\n    }\n    // this.dialogRef.close(this.patientForm.value)\n  }\n\n  /**\n   * dismiss the open patient form dialogue with confirmation if \n   * the form has unsave data\n   */\n  cancel(){\n    const title = this.translate.instant(\"CloseUnsavedForm.title\");\n    const message = this.translate.instant(\"CloseUnsavedForm.message\");\n    if (this.patientForm.dirty){\n      this.confirmService.confirm({title: title, message: message})\n      .subscribe(res => {\n        if (res){\n          this.store.dispatch(new PatientsActions.DismissPatientFormDialog());\n        }\n      })\n    }else{\n      this.store.dispatch(new PatientsActions.DismissPatientFormDialog());\n    }\n  }\n}\n\n    \n\n    \n        \n        \n        \n      \n      \n      {{data.title}}\n      \n        {{loadNursingHomeErrorMessage$ | async}}!\n      \n      \n        {{savePatientErrorMessage$ | async }}!\n      \n      \n        \n          \n            \n              \n              {{'FirstNameRequired' | translate}}\n            \n          \n      \n          \n            \n              \n              {{'LastNameRequired' | translate}}\n            \n          \n      \n          \n            \n              \n              {{'PatientNameRequired' | translate}}\n            \n          \n      \n          \n            \n              \n              {{'EmailRequired' | translate}}\n            \n          \n      \n          \n            \n              \n              {{'PasswordRequried' | translate}}\n            \n          \n      \n          \n            \n              \n              \n                {{'ConfirmPasswordRequired' | translate}}\n              \n               \n                Password do not match \n              \n            \n          \n      \n          \n            \n              \n                \n                  {{nursingHome.name}}\n                \n              \n              {{'NursingHomeKeyRequired' |\n                translate}}\n      \n            \n          \n      \n          \n            {{'Save' |\n              translate}}\n            \n            {{'Cancel' | translate}}\n          \n        \n      \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{data.title}}              {{loadNursingHomeErrorMessage$ | async}}!                    {{savePatientErrorMessage$ | async }}!                                                                      {{\\'FirstNameRequired\\' | translate}}                                                                              {{\\'LastNameRequired\\' | translate}}                                                                              {{\\'PatientNameRequired\\' | translate}}                                                                              {{\\'EmailRequired\\' | translate}}                                                                              {{\\'PasswordRequried\\' | translate}}                                                                                              {{\\'ConfirmPasswordRequired\\' | translate}}                                             Password do not match                                                                                                                 {{nursingHome.name}}                                            {{\\'NursingHomeKeyRequired\\' |                translate}}                                                        {{\\'Save\\' |              translate}}                        {{\\'Cancel\\' | translate}}                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'PatientFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PatientListComponent.html":{"url":"components/PatientListComponent.html","title":"component - PatientListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PatientListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/components/patients/patient-list/patient-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-patient-list\n            \n\n            \n                styleUrls\n                ./patient-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./patient-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                componentActive\n                            \n                            \n                                errorMessage$\n                            \n                            \n                                ids\n                            \n                            \n                                isPending$\n                            \n                            \n                                    Public\n                                items\n                            \n                            \n                                patients\n                            \n                            \n                                patients$\n                            \n                            \n                                selectedPatient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                newPatient\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSelectRow\n                            \n                            \n                                selectPatient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, translate: TranslateService, dialog: MatDialog, snack: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/components/patients/patient-list/patient-list.component.ts:42\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Store\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                TranslateService\n\n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        snack\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPatient\n                            \n                            \n                        \n                    \n                \n                \n                    \nnewPatient()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-list/patient-list.component.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-list/patient-list.component.ts:84\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-list/patient-list.component.ts:65\n                            \n                        \n\n\n                \n                    \n                            init PatientListComponent component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSelectRow\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSelectRow(undefined)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-list/patient-list.component.ts:107\n                            \n                        \n\n\n                \n                    \n                            emit the selected patient\nthe datatable component returns an ARRAY of selected\nelements depending on the 'selectionType' setting.\nIn our case just a single patient!\nTherefor emit 0th element of the selection.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectPatient\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectPatient(patient: Patient)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-list/patient-list.component.ts:94\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        patient\n                                                        \n                                                                    Patient\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentActive\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        componentActive:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-list/patient-list.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getPatientPageError)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-list/patient-list.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ids\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ids:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-list/patient-list.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isPending$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isPending$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getPatientPagePending)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-list/patient-list.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        items:     Patient[]\n\n                    \n                \n                    \n                        \n                            Type :     Patient[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-list/patient-list.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            patients\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        patients:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-list/patient-list.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            patients$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        patients$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getAllPatients)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-list/patient-list.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedPatient\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedPatient:     Patient | null\n\n                    \n                \n                    \n                        \n                            Type :     Patient | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patient-list/patient-list.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy} from '@angular/core';\nimport { MatProgressBar, MatButton } from '@angular/material';\nimport { MatDialogRef, MatDialog, MatSnackBar } from '@angular/material';\nimport { PatientFormComponent } from '../patient-form/patient-form.component';\n\nimport { IPatient as Patient} from '../../../models/patient.model';\n\n/* NGRX */\nimport { Store, select } from '@ngrx/store';\nimport * as fromDashboard from '../../../reducers';\nimport * as patientsActions from '../../../actions/patients.actions';\nimport { Observable } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\nimport { takeWhile } from 'rxjs/operators';\n\n@Component({\n  selector: 'moio-patient-list',\n  templateUrl: './patient-list.component.html',\n  styleUrls: ['./patient-list.component.scss']\n})\nexport class PatientListComponent implements OnInit, OnDestroy {\n  \n  // Used to select patient in the list\n  selectedPatient: Patient | null;\n  componentActive = true;\n\n  ids: string[];\n  \n  // all patients\n  patients$: Observable = this.store.pipe(\n    select(fromDashboard.getAllPatients)\n  );\n\n  // pending action\n  isPending$: Observable = this.store.pipe(\n    select(fromDashboard.getPatientPagePending)\n  );\n\n  // get error status\n  errorMessage$: Observable = this.store.pipe(\n    select(fromDashboard.getPatientPageError)\n  );\n\n  /**\n   * constructor\n   * @param store Store\n   * @param translate TranslateService\n   */\n  constructor(\n    private store: Store, \n    private translate: TranslateService,\n    private dialog: MatDialog,\n    private snack: MatSnackBar) {\n\n      this.translate.setDefaultLang('de');\n\n  }\n\n  public items: Patient[];\n  patients: Observable;\n\n  /**\n   * init PatientListComponent component\n   */\n  ngOnInit(): void {\n\n    this.store.dispatch(new patientsActions.LoadPatients());\n\n    this.patients = this.store.pipe(select(fromDashboard.getAllPatients)) as Observable;\n\n    this.store.pipe(select(fromDashboard.getPatientsIds))\n    .subscribe((ids: string[]) => this.ids = ids);\n\n    // Subscribe here because it does not use an async pipe\n    this.store.pipe(\n      select(fromDashboard.getSelectedPatient),\n      takeWhile(() => this.componentActive)\n    ).subscribe(\n      currentPatient => this.selectedPatient = currentPatient\n    );\n  }\n\n  // unsubscribe from the observable\n  ngOnDestroy(): void {\n    this.componentActive = false;\n  }\n\n  // Create Patient action\n  newPatient(): void {\n    this.store.dispatch(new patientsActions.InitializePatient());\n  }\n\n  // Select patient action\n  selectPatient(patient: Patient): void {\n    this.store.dispatch(new patientsActions.SelectPatient(patient));\n  }\n\n  /**\n   * emit the selected patient\n   * the datatable component returns an ARRAY of selected\n   * elements depending on the 'selectionType' setting.\n   * In our case just a single patient!\n   * Therefor emit 0th element of the selection.\n   *\n   * @param selected Patient first element of array\n   */\n  onSelectRow({selected}) {\n    // this.patientSelected.emit(selected[0]);\n    const patient = selected[0];\n    this.store.dispatch(new patientsActions.SelectPatient(patient));\n    // this.store.dispatch(new patientsActions.LoadPatientUsers(patient.id));\n    \n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n    \n      \n        {{ row?.firstname }} {{ row?.lastname }}\n      \n    \n    \n      \n        {{ row?.device.serial_no }}\n      \n    \n    \n      \n        {{ row?.users_count }}\n      \n    \n  \n \n    \n\n    \n                \n                    ./patient-list.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ row?.firstname }} {{ row?.lastname }}                            {{ row?.device.serial_no }}                            {{ row?.users_count }}             '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'PatientListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PatientsComponent.html":{"url":"components/PatientsComponent.html","title":"component - PatientsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PatientsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/components/patients/patients.component.ts\n\n\n    \n        Description\n    \n    \n        contains basic page layout for the\npatients section\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-patients-page\n            \n\n\n\n\n            \n                templateUrl\n                ./patients.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedPatientId$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openPopUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, translate: TranslateService, dialog: MatDialog, snack: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/components/patients/patients.component.ts:23\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Store\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        snack\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openPopUp\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenPopUp()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patients.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedPatientId$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedPatientId$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getSelectedPatientId)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/patients/patients.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport * as fromDashboard from '../../reducers';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { MatDialogRef, MatDialog, MatSnackBar } from '@angular/material';\n\nimport { PatientFormComponent } from './patient-form/patient-form.component';\n\n/**\n * contains basic page layout for the\n * patients section\n */\n@Component({\n  selector: 'moio-patients-page',\n  templateUrl: './patients.component.html'\n})\nexport class PatientsComponent {\n\n  // get selected patient id\n  selectedPatientId$: Observable = this.store.pipe(\n    select(fromDashboard.getSelectedPatientId)\n  );\n\n  /**\n   * constructor\n   * @param store Store\n   */\n  constructor(\n    private store: Store,\n    private translate: TranslateService,\n    private dialog: MatDialog,\n    private snack: MatSnackBar) {\n\n  }\n\n   //add appPatient\n   openPopUp() { \n    let title = this.translate.instant('PatientFormTitle');\n    let dialogRef: MatDialogRef = this.dialog.open(PatientFormComponent, {\n      width: '720px',\n      disableClose: true,\n      data: { title: title },\n      id: 'patientCreationForm'\n    });\n  }\n}\n\n    \n\n    \n        \n  add{{'Create' | translate}}\n -->\n\n\n  \n    \n  \n  \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  add{{\\'Create\\' | translate}} -->                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'PatientsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PatientsEffects.html":{"url":"injectables/PatientsEffects.html","title":"injectable - PatientsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PatientsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/effects/patients.effects.ts\n        \n\n            \n                Description\n            \n            \n                patients effects\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createPatient$\n                            \n                            \n                                createPatientSuccess$\n                            \n                            \n                                DismissPatientFormDialog\n                            \n                            \n                                editPatient$\n                            \n                            \n                                loadPatients\n                            \n                            \n                                popUpPatientForm$\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, patientsService: PatientsService, router: Router, store: Store, snackBar: MatSnackBar, translate: TranslateService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/effects/patients.effects.ts:179\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientsService\n                                                  \n                                                        \n                                                                    PatientsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createPatient$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        createPatient$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(PatientsActions.PatientsActionTypes.CreatePatient),\n      map(action => action.payload.patient),\n      exhaustMap((patientData: IPatient) => {\n\n        return this.patientsService.createPatient(patientData)\n          .pipe(\n            // delay(2000),\n            map(patient => {\n              console.log(patient);\n              return new PatientsApiActions.CreatePatientSuccess({patient});\n            }),\n            catchError(httpResponse => {\n              console.log(httpResponse);\n              const messages = httpResponse.statusText.toLowerCase();\n\n              return of(new PatientsApiActions.CreatePatientFailure({messages}));\n            })\n          );\n      })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/patients.effects.ts:25\n                            \n                        \n\n                \n                    \n                        effect fired, when the create new patient form is submitted\nsend data to api and handle result\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createPatientSuccess$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        createPatientSuccess$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(PatientsApiActions.PatientsApiActionTypes.CreatePatientSuccess),\n      tap(() => {\n        this.dialog.getDialogById(\"patientCreationForm\").close();\n        this.store.dispatch(new PatientsActions.LoadPatients());\n      })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect({dispatch: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/patients.effects.ts:94\n                            \n                        \n\n                \n                    \n                        observes the CreatePatientSuccess action\nin case create patient succeeds, the form dialog box is closed\nand the patients list is shown\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DismissPatientFormDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DismissPatientFormDialog:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(PatientsActions.PatientsActionTypes.DismissPatientFormDialog),\n      map(() => {\n        this.dialog.getDialogById('patientCreationForm').close();\n      })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect({dispatch: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/patients.effects.ts:173\n                            \n                        \n\n                \n                    \n                        effect to dismiss the dialog for adding patient details\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editPatient$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editPatient$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$.pipe(\n    ofType(PatientsActions.PatientsActionTypes.EditPatient),\n    map(action => action.payload),\n    exhaustMap((patient: IPatient) => {\n\n      return this.patientsService.updatePatient(patient)\n        .pipe(\n          map((savedPatient: IPatient) => {\n            this.store.dispatch(new PatientsActions.DismissEditPatient());\n            return new PatientsApiActions.EditPatientSuccess({patient: savedPatient});\n          }),\n          catchError(httpError => {\n            console.log(httpError);\n              const message = httpError.statusText.toLowerCase();\n\n              const snackBarRef = this.snackBar.open(this.translate.instant(message), this.translate.instant('Retry'), {\n                duration: 10000\n              });\n\n              snackBarRef.afterDismissed().subscribe(snackBarDismiss => {\n\n                if (snackBarDismiss.dismissedByAction){\n                  this.store.dispatch(new PatientsActions.EditPatient(patient));\n                } else {\n                  this.router.navigate(['/dashboard/patients']);\n                }\n              });\n\n              return of(new PatientsApiActions.LoadPatientUsersFailure({message}));\n            })\n        );\n    })\n  )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/patients.effects.ts:52\n                            \n                        \n\n                \n                    \n                        send patient data to api and handle result\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadPatients\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadPatients:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(PatientsActions.PatientsActionTypes.LoadPatients),\n      exhaustMap(() => {\n\n        return this.patientsService.getPatients()\n          .pipe(\n            //delay(2000),\n            map((patients: IPatient[]) => {\n              console.log(patients);\n\n              for (let key in patients){\n                const patient = patients[key];\n                patient[\"users_count\"] = patient.users.length;\n              }\n\n              return new PatientsApiActions.LoadPatientsSuccess({patients});\n            }),\n            catchError(httpError => {\n              const message = httpError.statusText.toLowerCase();\n\n              const snackBarRef = this.snackBar.open(this.translate.instant(message), this.translate.instant('Retry'), {\n                duration: 10000\n              });\n\n              snackBarRef.afterDismissed().subscribe(snackBarDismiss => {\n\n                if (snackBarDismiss.dismissedByAction){\n                  this.store.dispatch(new PatientsActions.LoadPatients());\n                } else {\n                  this.router.navigate(['/dashboard']);\n                }\n              });\n\n              return of(new PatientsApiActions.LoadPatientsFailure({message}));\n            })\n          );\n      })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/patients.effects.ts:107\n                            \n                        \n\n                \n                    \n                        effect for loading patients\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popUpPatientForm$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popUpPatientForm$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(PatientsActions.PatientsActionTypes.CreatePatientFormDialog),\n      exhaustMap(() => {\n        const title = 'Creating a new patient';\n        const dialogRef: MatDialogRef = this.dialog.open(PatientFormComponent, {\n          width: '720px',\n          disableClose: true,\n          data: { title: title }\n        });\n        \n        return dialogRef.afterClosed();\n      })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/patients.effects.ts:151\n                            \n                        \n\n                \n                    \n                        show a dialog form for patient details as a pop up\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        snackBar:     MatSnackBar\n\n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/patients.effects.ts:195\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { PatientsApiActions, PatientsActions } from '../actions';\nimport { catchError, exhaustMap, map, tap, delay } from 'rxjs/operators';\nimport { IPatient } from '../models/patient.model';\nimport { PatientsService } from '../services/patients.service';\nimport { of } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MatDialogRef, MatDialog, MatSnackBar } from '@angular/material';\nimport { PatientFormComponent } from '../components/patients/patient-form/patient-form.component';\n\n/**\n * patients effects\n */\n@Injectable()\nexport class PatientsEffects {\n\n  /**\n   * effect fired, when the create new patient form is submitted\n   * send data to api and handle result\n   */\n  @Effect()\n  createPatient$ = this.actions$\n    .pipe(\n      ofType(PatientsActions.PatientsActionTypes.CreatePatient),\n      map(action => action.payload.patient),\n      exhaustMap((patientData: IPatient) => {\n\n        return this.patientsService.createPatient(patientData)\n          .pipe(\n            // delay(2000),\n            map(patient => {\n              console.log(patient);\n              return new PatientsApiActions.CreatePatientSuccess({patient});\n            }),\n            catchError(httpResponse => {\n              console.log(httpResponse);\n              const messages = httpResponse.statusText.toLowerCase();\n\n              return of(new PatientsApiActions.CreatePatientFailure({messages}));\n            })\n          );\n      })\n    );\n\n  /**\n   * send patient data to api and handle result\n   */\n  @Effect()\n  editPatient$ = this.actions$.pipe(\n    ofType(PatientsActions.PatientsActionTypes.EditPatient),\n    map(action => action.payload),\n    exhaustMap((patient: IPatient) => {\n\n      return this.patientsService.updatePatient(patient)\n        .pipe(\n          map((savedPatient: IPatient) => {\n            this.store.dispatch(new PatientsActions.DismissEditPatient());\n            return new PatientsApiActions.EditPatientSuccess({patient: savedPatient});\n          }),\n          catchError(httpError => {\n            console.log(httpError);\n              const message = httpError.statusText.toLowerCase();\n\n              const snackBarRef = this.snackBar.open(this.translate.instant(message), this.translate.instant('Retry'), {\n                duration: 10000\n              });\n\n              snackBarRef.afterDismissed().subscribe(snackBarDismiss => {\n\n                if (snackBarDismiss.dismissedByAction){\n                  this.store.dispatch(new PatientsActions.EditPatient(patient));\n                } else {\n                  this.router.navigate(['/dashboard/patients']);\n                }\n              });\n\n              return of(new PatientsApiActions.LoadPatientUsersFailure({message}));\n            })\n        );\n    })\n  );\n\n  /**\n   * observes the CreatePatientSuccess action\n   * in case create patient succeeds, the form dialog box is closed\n   * and the patients list is shown\n   */\n  @Effect({\n    dispatch: false\n  })\n  createPatientSuccess$ = this.actions$\n    .pipe(\n      ofType(PatientsApiActions.PatientsApiActionTypes.CreatePatientSuccess),\n      tap(() => {\n        this.dialog.getDialogById(\"patientCreationForm\").close();\n        this.store.dispatch(new PatientsActions.LoadPatients());\n      })\n    );\n\n  /**\n   * effect for loading patients\n   */\n  @Effect()\n  loadPatients = this.actions$\n    .pipe(\n      ofType(PatientsActions.PatientsActionTypes.LoadPatients),\n      exhaustMap(() => {\n\n        return this.patientsService.getPatients()\n          .pipe(\n            //delay(2000),\n            map((patients: IPatient[]) => {\n              console.log(patients);\n\n              for (let key in patients){\n                const patient = patients[key];\n                patient[\"users_count\"] = patient.users.length;\n              }\n\n              return new PatientsApiActions.LoadPatientsSuccess({patients});\n            }),\n            catchError(httpError => {\n              const message = httpError.statusText.toLowerCase();\n\n              const snackBarRef = this.snackBar.open(this.translate.instant(message), this.translate.instant('Retry'), {\n                duration: 10000\n              });\n\n              snackBarRef.afterDismissed().subscribe(snackBarDismiss => {\n\n                if (snackBarDismiss.dismissedByAction){\n                  this.store.dispatch(new PatientsActions.LoadPatients());\n                } else {\n                  this.router.navigate(['/dashboard']);\n                }\n              });\n\n              return of(new PatientsApiActions.LoadPatientsFailure({message}));\n            })\n          );\n      })\n    );\n\n  /**\n   * show a dialog form for patient details as a pop up\n   */\n  @Effect()\n  popUpPatientForm$ = this.actions$\n    .pipe(\n      ofType(PatientsActions.PatientsActionTypes.CreatePatientFormDialog),\n      exhaustMap(() => {\n        const title = 'Creating a new patient';\n        const dialogRef: MatDialogRef = this.dialog.open(PatientFormComponent, {\n          width: '720px',\n          disableClose: true,\n          data: { title: title }\n        });\n        \n        return dialogRef.afterClosed();\n      })\n    );\n\n\n  /**\n   * effect to dismiss the dialog for adding patient details\n   */\n  @Effect({\n    dispatch: false\n  })\n  DismissPatientFormDialog = this.actions$\n    .pipe(\n      ofType(PatientsActions.PatientsActionTypes.DismissPatientFormDialog),\n      map(() => {\n        this.dialog.getDialogById('patientCreationForm').close();\n      })\n    );\n\n  /**\n   * constructor\n   *\n   * @param actions$\n   * @param patientsService\n   * @param router\n   * @param modalController\n   * @param store\n   */\n  constructor(\n    private actions$: Actions,\n    private patientsService: PatientsService,\n    private router: Router,\n    private store: Store,\n    public snackBar: MatSnackBar,\n    private translate: TranslateService,\n    private dialog: MatDialog) {\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PatientsService.html":{"url":"injectables/PatientsService.html","title":"injectable - PatientsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PatientsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/services/patients.service.ts\n        \n\n            \n                Description\n            \n            \n                patient service\nencapsulates api interactions for\nworking with 'patients'\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createPatient\n                            \n                            \n                                deletePatient\n                            \n                            \n                                editPatient\n                            \n                            \n                                getPatients\n                            \n                            \n                                updatePatient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/services/patients.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createPatient\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreatePatient(patient: IPatient)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/services/patients.service.ts:35\n                            \n                        \n\n\n                \n                    \n                            create a new patient\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        patient\n                                                        \n                                                                    IPatient\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                IPatient\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletePatient\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeletePatient(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/services/patients.service.ts:43\n                            \n                        \n\n\n                \n                    \n                            delete a patient\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                patient id\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editPatient\n                            \n                            \n                        \n                    \n                \n                \n                    \neditPatient(changed: Update)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/services/patients.service.ts:59\n                            \n                        \n\n\n                \n                    \n                            edit a patient\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changed\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPatients\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPatients()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/services/patients.service.ts:26\n                            \n                        \n\n\n                \n                    \n                            get all patients from the moio-cloud api\n\n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatePatient\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdatePatient(patient: IPatient)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/services/patients.service.ts:51\n                            \n                        \n\n\n                \n                    \n                            update a patient\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        patient\n                                                        \n                                                                    IPatient\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                object:IPatient\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { IPatient } from '../models/patient.model';\nimport { environment } from '../../../environments/environment';\nimport { Update } from '@ngrx/entity';\n\n/**\n * patient service\n * encapsulates api interactions for\n * working with 'patients'\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatientsService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  /**\n   * get all patients from the moio-cloud api\n   */\n  getPatients(): Observable {\n    console.log('loading patients');\n    return this.http.get(`${environment.apiHost}/api/patients`);\n  }\n\n  /**\n   * create a new patient\n   * @param patient IPatient\n   */\n  createPatient(patient: IPatient): Observable {\n    return this.http.post(`${environment.apiHost}/api/patients`, patient);\n  }\n\n  /**\n   * delete a patient\n   * @param id patient id\n   */\n  deletePatient(id: number): Observable {\n    return this.http.delete(`${environment.apiHost}/api/patients/${id}`);\n  }\n\n  /**\n   * update a patient\n   * @param patient object:IPatient\n   */\n  updatePatient(patient: IPatient): Observable {\n    return this.http.put(`${environment.apiHost}/api/patients/${patient.id}`, patient);\n  }\n\n  /**\n   * edit a patient\n   * @param changed\n   */\n  editPatient(changed: Update): Observable {\n    return this.http\n      .put(`${environment.apiHost}/api/patients/${changed.id}`, {...changed.changes});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PopUpNursingHomeForm.html":{"url":"classes/PopUpNursingHomeForm.html","title":"class - PopUpNursingHomeForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PopUpNursingHomeForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/nursing-homes.actions.ts\n        \n\n            \n                Description\n            \n            \n                action to pop up nursingHome form\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : NursingHomesActionTypes.PopUpNursingHomeForm\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes.actions.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { NursingHome } from '../models/nursing-home.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum NursingHomesActionTypes {\n  SelectNursingHome = '[NursingHome] Select Current NursingHome',\n  ClearSelectedNursingHome = '[NursingHome] Clear Current NursingHome',\n  InitializeNursingHome = '[NursingHome] Initialize Current NursingHome',\n  PopUpNursingHomeForm = '[NursingHome] Pop Up NursingHome Form',\n  CreateNursingHome = '[NursingHome] Create NursingHome',\n  DismissPoppedUpNursingHomeForm = '[NursingHome] Dismiss Create NursingHome',\n  LoadNursingHomes = '[NursingHome] Load Nursing Homes',\n  SearchNursingHome = '[NursingHome] Search NursingHome',\n  SearchNursingHomeComplete = '[NursingHome] Search NursingHome Complete',\n  EditNursingHome = '[NursingHome] Edit NursingHome',\n  DismissEditNursingHome = '[NursingHome] Dismiss Edit NursingHome',\n  ResetNursingHomesState = '[NursingHomes] Reset NursingHomes State'\n}\n\n\n/**\n * Select nursingHome Action\n */\nexport class SelectNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SelectNursingHome;\n\n  constructor(public payload: NursingHome) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.ClearSelectedNursingHome;\n}\n\n/**\n * Initialize nursingHome Action\n */\nexport class InitializeNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.InitializeNursingHome;\n}\n\n/**\n * action to pop up nursingHome form\n */\nexport class PopUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.PopUpNursingHomeForm;\n}\n\n/**\n * Create nursingHome Action\n */\nexport class CreateNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.CreateNursingHome;\n\n  constructor(public payload: { nursingHome: NursingHome }) { }\n}\n\n/**\n * CreateNursingHome Dialog window dismissed\n */\nexport class DismissPoppedUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.DismissPoppedUpNursingHomeForm;\n}\n\n/**\n * Load nursingHomes Action\n */\nexport class LoadNursingHomes implements Action {\n  readonly type = NursingHomesActionTypes.LoadNursingHomes;\n}\n\n/**\n * Search nursingHome Action\n */\nexport class SearchNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHome;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search nursingHome complete Action\n */\nexport class SearchNursingHomeComplete implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHomeComplete;\n\n  constructor(public payload: NursingHome[]) { }\n}\n\n/**\n * action to submit and edit nursingHome\n */\nexport class EditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.EditNursingHome;\n\n  constructor(public payload: Update) {\n  }\n}\n\n/**\n * NursingHome Edit dismissed action\n */\nexport class DismissEditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.DismissEditNursingHome;\n}\n\n/**\n * reset the nursingHome state\n */\nexport class ResetNursingHomesState implements Action {\n  readonly type = NursingHomesActionTypes.ResetNursingHomesState;\n}\n\n/**\n * Export union of nursingHome Action\n */\nexport type NursingHomesActionsUnion\n  = SelectNursingHome\n  | ClearSelectedNursingHome\n  | InitializeNursingHome\n  | PopUpNursingHomeForm\n  | CreateNursingHome\n  | DismissPoppedUpNursingHomeForm\n  | LoadNursingHomes\n  | SearchNursingHome\n  | SearchNursingHomeComplete\n  | EditNursingHome\n  | DismissEditNursingHome\n  | ResetNursingHomesState;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetNursingHomesState.html":{"url":"classes/ResetNursingHomesState.html","title":"class - ResetNursingHomesState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetNursingHomesState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/nursing-homes.actions.ts\n        \n\n            \n                Description\n            \n            \n                reset the nursingHome state\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : NursingHomesActionTypes.ResetNursingHomesState\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes.actions.ts:113\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { NursingHome } from '../models/nursing-home.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum NursingHomesActionTypes {\n  SelectNursingHome = '[NursingHome] Select Current NursingHome',\n  ClearSelectedNursingHome = '[NursingHome] Clear Current NursingHome',\n  InitializeNursingHome = '[NursingHome] Initialize Current NursingHome',\n  PopUpNursingHomeForm = '[NursingHome] Pop Up NursingHome Form',\n  CreateNursingHome = '[NursingHome] Create NursingHome',\n  DismissPoppedUpNursingHomeForm = '[NursingHome] Dismiss Create NursingHome',\n  LoadNursingHomes = '[NursingHome] Load Nursing Homes',\n  SearchNursingHome = '[NursingHome] Search NursingHome',\n  SearchNursingHomeComplete = '[NursingHome] Search NursingHome Complete',\n  EditNursingHome = '[NursingHome] Edit NursingHome',\n  DismissEditNursingHome = '[NursingHome] Dismiss Edit NursingHome',\n  ResetNursingHomesState = '[NursingHomes] Reset NursingHomes State'\n}\n\n\n/**\n * Select nursingHome Action\n */\nexport class SelectNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SelectNursingHome;\n\n  constructor(public payload: NursingHome) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.ClearSelectedNursingHome;\n}\n\n/**\n * Initialize nursingHome Action\n */\nexport class InitializeNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.InitializeNursingHome;\n}\n\n/**\n * action to pop up nursingHome form\n */\nexport class PopUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.PopUpNursingHomeForm;\n}\n\n/**\n * Create nursingHome Action\n */\nexport class CreateNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.CreateNursingHome;\n\n  constructor(public payload: { nursingHome: NursingHome }) { }\n}\n\n/**\n * CreateNursingHome Dialog window dismissed\n */\nexport class DismissPoppedUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.DismissPoppedUpNursingHomeForm;\n}\n\n/**\n * Load nursingHomes Action\n */\nexport class LoadNursingHomes implements Action {\n  readonly type = NursingHomesActionTypes.LoadNursingHomes;\n}\n\n/**\n * Search nursingHome Action\n */\nexport class SearchNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHome;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search nursingHome complete Action\n */\nexport class SearchNursingHomeComplete implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHomeComplete;\n\n  constructor(public payload: NursingHome[]) { }\n}\n\n/**\n * action to submit and edit nursingHome\n */\nexport class EditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.EditNursingHome;\n\n  constructor(public payload: Update) {\n  }\n}\n\n/**\n * NursingHome Edit dismissed action\n */\nexport class DismissEditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.DismissEditNursingHome;\n}\n\n/**\n * reset the nursingHome state\n */\nexport class ResetNursingHomesState implements Action {\n  readonly type = NursingHomesActionTypes.ResetNursingHomesState;\n}\n\n/**\n * Export union of nursingHome Action\n */\nexport type NursingHomesActionsUnion\n  = SelectNursingHome\n  | ClearSelectedNursingHome\n  | InitializeNursingHome\n  | PopUpNursingHomeForm\n  | CreateNursingHome\n  | DismissPoppedUpNursingHomeForm\n  | LoadNursingHomes\n  | SearchNursingHome\n  | SearchNursingHomeComplete\n  | EditNursingHome\n  | DismissEditNursingHome\n  | ResetNursingHomesState;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPatientsState.html":{"url":"classes/ResetPatientsState.html","title":"class - ResetPatientsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPatientsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients.actions.ts\n        \n\n            \n                Description\n            \n            \n                reset the patient state\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsActionTypes.ResetPatientsState\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:115\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { IPatient } from '../models/patient.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum PatientsActionTypes {\n  SelectPatient = '[Patient] Select Current Patient',\n  ClearSelectedPatient = '[Patient] Clear Current Patient',\n  InitializePatient = '[Patient] Initialize Current Patient',\n  CreatePatientFormDialog = '[Patients] Pop Up Patient Form',\n  CreatePatient = '[Patient] Create Patient',\n  DismissPatientFormDialog = '[Patient] Dismiss Patient Form Dialog',\n  LoadPatients = '[Patient] Load Patients',\n  SearchPatient = '[Patient] Search Patient',\n  SearchPatientComplete = '[Patient] Search Patient Complete',\n  EditPatient = '[Patient] Edit Patient',\n  DismissEditPatient = '[Patient] Dismiss Edit Patient',\n  ResetPatientsState = '[Patients] Reset Patients State',\n  DeletePatient ='[Patients] Delete Patient',\n  LoadPatientUsers = '[User] Load User Patients'\n}\n\n\n/**\n * Select patient Action\n */\nexport class SelectPatient implements Action {\n  readonly type = PatientsActionTypes.SelectPatient;\n\n  constructor(public payload: IPatient) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedPatient implements Action {\n  readonly type = PatientsActionTypes.ClearSelectedPatient;\n}\n\n/**\n * Initialize patient Action\n */\nexport class InitializePatient implements Action {\n  readonly type = PatientsActionTypes.InitializePatient;\n}\n\n/**\n * action to pop up patient form\n */\nexport class CreatePatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.CreatePatientFormDialog;\n}\n\n/**\n * Create patient Action\n */\nexport class CreatePatient implements Action {\n  readonly type = PatientsActionTypes.CreatePatient;\n\n  constructor(public payload: { patient: IPatient }) { }\n}\n\n/**\n * CreatePatient Dialog window dismissed\n */\nexport class DismissPatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.DismissPatientFormDialog;\n}\n\n/**\n * Load patients Action\n */\nexport class LoadPatients implements Action {\n  readonly type = PatientsActionTypes.LoadPatients;\n}\n\n/**\n * Search patient Action\n */\nexport class SearchPatient implements Action {\n  readonly type = PatientsActionTypes.SearchPatient;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search patient complete Action\n */\nexport class SearchPatientComplete implements Action {\n  readonly type = PatientsActionTypes.SearchPatientComplete;\n\n  constructor(public payload: IPatient[]) { }\n}\n\n/**\n * action to submit and edit patient\n */\nexport class EditPatient implements Action {\n  readonly type = PatientsActionTypes.EditPatient;\n\n  constructor(public payload: IPatient) {\n  }\n}\n\n/**\n * Patient Edit dismissed action\n */\nexport class DismissEditPatient implements Action {\n  readonly type = PatientsActionTypes.DismissEditPatient;\n}\n\n/**\n * reset the patient state\n */\nexport class ResetPatientsState implements Action {\n  readonly type = PatientsActionTypes.ResetPatientsState;\n}\n\n/**\n * action to delete a patient\n */\nexport class DeletePatient implements Action {\n  readonly type = PatientsActionTypes.DeletePatient;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load patient users action\n */\nexport class LoadPatientUsers implements Action {\n  readonly type = PatientsActionTypes.LoadPatientUsers;\n  constructor(public payload: number ) { }\n}\n\n\n/**\n * Export union of patient Action\n */\nexport type PatientsActionsUnion\n  = SelectPatient\n  | ClearSelectedPatient\n  | InitializePatient\n  | CreatePatientFormDialog\n  | CreatePatient\n  | DismissPatientFormDialog\n  | LoadPatients\n  | SearchPatient\n  | SearchPatientComplete\n  | EditPatient\n  | DismissEditPatient\n  | ResetPatientsState\n  | LoadPatientUsers;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetUsersState.html":{"url":"classes/ResetUsersState.html","title":"class - ResetUsersState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetUsersState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users.actions.ts\n        \n\n            \n                Description\n            \n            \n                reset the user state\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersActionTypes.ResetUsersState\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:115\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum UsersActionTypes {\n  SelectUser = '[User] Select Current User',\n  ClearSelectedUser = '[User] Clear Current User',\n  InitializeUser = '[User] Initialize Current User',\n  CreateUserFormDialog = '[Users] Pop Up User Form',\n  CreateUser = '[User] Create User',\n  DismissUserFormDialog = '[User] Dismiss User Form Dialog',\n  LoadUsers = '[User] Load Users',\n  SearchUser = '[User] Search User',\n  SearchUserComplete = '[User] Search User Complete',\n  EditUser = '[User] Edit User',\n  DismissEditUser = '[User] Dismiss Edit User',\n  ResetUsersState = '[Users] Reset Users State',\n  DeleteUser = '[Users] Delete User',\n  LoadUserPatients = '[User] Load User Patients'\n}\n\n\n/**\n * Select user Action\n */\nexport class SelectUser implements Action {\n  readonly type = UsersActionTypes.SelectUser;\n\n  constructor(public payload: User) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedUser implements Action {\n  readonly type = UsersActionTypes.ClearSelectedUser;\n}\n\n/**\n * Initialize user Action\n */\nexport class InitializeUser implements Action {\n  readonly type = UsersActionTypes.InitializeUser;\n}\n\n/**\n * action to pop up user form\n */\nexport class CreateUserFormDialog implements Action {\n  readonly type = UsersActionTypes.CreateUserFormDialog;\n}\n\n/**\n * Create user Action\n */\nexport class CreateUser implements Action {\n  readonly type = UsersActionTypes.CreateUser;\n\n  constructor(public payload: { user: User }) { }\n}\n\n/**\n * CreateUser Dialog window dismissed\n */\nexport class DismissUserFormDialog implements Action {\n  readonly type = UsersActionTypes.DismissUserFormDialog;\n}\n\n/**\n * Load users Action\n */\nexport class LoadUsers implements Action {\n  readonly type = UsersActionTypes.LoadUsers;\n}\n\n/**\n * Search user action\n */\nexport class SearchUser implements Action {\n  readonly type = UsersActionTypes.SearchUser;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search user complete action\n */\nexport class SearchUserComplete implements Action {\n  readonly type = UsersActionTypes.SearchUserComplete;\n\n  constructor(public payload: User[]) { }\n}\n\n/**\n * action to submit and edit user\n */\nexport class EditUser implements Action {\n  readonly type = UsersActionTypes.EditUser;\n\n  constructor(public payload: User) {\n  }\n}\n\n/**\n * User Edit dismissed action\n */\nexport class DismissEditUser implements Action {\n  readonly type = UsersActionTypes.DismissEditUser;\n}\n\n/**\n * reset the user state\n */\nexport class ResetUsersState implements Action {\n  readonly type = UsersActionTypes.ResetUsersState;\n}\n\n/**\n * action to delete a user\n */\nexport class DeleteUser implements Action {\n  readonly type = UsersActionTypes.DeleteUser;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load user patients action\n */\nexport class LoadUserPatients implements Action {\n  readonly type = UsersActionTypes.LoadUserPatients;\n  constructor(public payload: number ) { }\n}\n\n/**\n * Export union of user Action\n */\nexport type UsersActionsUnion\n  = SelectUser\n  | ClearSelectedUser\n  | InitializeUser\n  | CreateUserFormDialog\n  | CreateUser\n  | DismissUserFormDialog\n  | LoadUsers\n  | SearchUser\n  | SearchUserComplete\n  | EditUser\n  | DismissEditUser\n  | ResetUsersState\n  | LoadUserPatients;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoutePartsService.html":{"url":"injectables/RoutePartsService.html","title":"injectable - RoutePartsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoutePartsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/route-parts.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                routeParts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateRouteParts\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/route-parts.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            generateRouteParts\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenerateRouteParts(snapshot: ActivatedRouteSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/route-parts.service.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snapshot\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     IRoutePart[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/route-parts.service.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            routeParts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        routeParts:     IRoutePart[]\n\n                    \n                \n                    \n                        \n                            Type :     IRoutePart[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/route-parts.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, OnInit } from '@angular/core';\nimport { Router, ActivatedRouteSnapshot, Params } from '@angular/router';\n\ninterface IRoutePart {\n  title: string;\n  breadcrumb: string;\n  params?: Params;\n  url: string;\n  urlSegments: any[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoutePartsService implements OnInit {\n  public routeParts: IRoutePart[];\n\n  constructor(private router: Router) {\n  }\n\n  ngOnInit() {\n  }\n\n  generateRouteParts(snapshot: ActivatedRouteSnapshot): IRoutePart[] {\n    let routeParts = [];\n    if (snapshot) {\n      if (snapshot.firstChild) {\n        routeParts = routeParts.concat(this.generateRouteParts(snapshot.firstChild));\n      }\n      if (snapshot.data['title'] && snapshot.url.length) {\n        // console.log(snapshot.data['title'], snapshot.url)\n        routeParts.push({\n          title: snapshot.data['title'],\n          breadcrumb: snapshot.data['breadcrumb'],\n          url: snapshot.url[0].path,\n          urlSegments: snapshot.url,\n          params: snapshot.params\n        });\n      }\n    }\n    return routeParts;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ScrollToDirective.html":{"url":"directives/ScrollToDirective.html","title":"directive - ScrollToDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ScrollToDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/directives/scroll-to.directive.ts\n        \n\n            \n                Description\n            \n            \n                scroll to directive\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [scrollTo]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                elmID\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                currentYPosition\n                            \n                            \n                                elmYPosition\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elmID: string, el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/directives/scroll-to.directive.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elmID\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nclick()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/directives/scroll-to.directive.ts:43\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentYPosition\n                            \n                            \n                        \n                    \n                \n                \n                    \ncurrentYPosition()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/directives/scroll-to.directive.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            elmYPosition\n                            \n                            \n                        \n                    \n                \n                \n                    \nelmYPosition(eID)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/directives/scroll-to.directive.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eID\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/directives/scroll-to.directive.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elmID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        elmID:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Attribute('scrollTo')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/directives/scroll-to.directive.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, Attribute, OnInit, HostListener } from '@angular/core';\n\n/**\n * scroll to directive\n * @deprecated (cvb) not sure if we need it\n */\n@Directive({selector: '[scrollTo]'})\nexport class ScrollToDirective implements OnInit {\n  constructor(@Attribute('scrollTo') public elmID: string, private el: ElementRef) {\n  }\n\n  ngOnInit() {\n  }\n\n  currentYPosition() {\n    // Firefox, Chrome, Opera, Safari\n    if (self.pageYOffset) {\n      return self.pageYOffset;\n    }\n    // Internet Explorer 6 - standards mode\n    if (document.documentElement && document.documentElement.scrollTop) {\n      return document.documentElement.scrollTop;\n    }\n    // Internet Explorer 6, 7 and 8\n    if (document.body.scrollTop) {\n      return document.body.scrollTop;\n    }\n    return 0;\n  }\n\n  elmYPosition(eID) {\n    const elm = document.getElementById(eID);\n    let y = elm.offsetTop;\n    let node: any = elm;\n    while (node.offsetParent && node.offsetParent !== document.body) {\n      node = node.offsetParent;\n      y += node.offsetTop;\n    }\n    return y;\n  }\n\n  @HostListener('click', ['$event'])\n  smoothScroll() {\n    if (!this.elmID) {\n      return;\n    }\n    const startY = this.currentYPosition();\n    const stopY = this.elmYPosition(this.elmID);\n    const distance = stopY > startY ? stopY - startY : startY - stopY;\n\n    if (distance = 20) {\n      speed = 20;\n    }\n\n    const step = Math.round(distance / 25);\n    let leapY = stopY > startY ? startY + step : startY - step;\n    let timer = 0;\n\n    if (stopY > startY) {\n      for (let i = startY; i  stopY) {\n          leapY = stopY;\n        }\n        timer++;\n      }\n      return;\n    }\n\n    for (let i = startY; i > stopY; i -= step) {\n      setTimeout('window.scrollTo(0, ' + leapY + ')', timer * speed);\n      leapY -= step;\n      if (leapY \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchNursingHome.html":{"url":"classes/SearchNursingHome.html","title":"class - SearchNursingHome","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchNursingHome\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/nursing-homes.actions.ts\n        \n\n            \n                Description\n            \n            \n                Search nursingHome Action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/nursing-homes.actions.ts:78\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes.actions.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : NursingHomesActionTypes.SearchNursingHome\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes.actions.ts:78\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { NursingHome } from '../models/nursing-home.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum NursingHomesActionTypes {\n  SelectNursingHome = '[NursingHome] Select Current NursingHome',\n  ClearSelectedNursingHome = '[NursingHome] Clear Current NursingHome',\n  InitializeNursingHome = '[NursingHome] Initialize Current NursingHome',\n  PopUpNursingHomeForm = '[NursingHome] Pop Up NursingHome Form',\n  CreateNursingHome = '[NursingHome] Create NursingHome',\n  DismissPoppedUpNursingHomeForm = '[NursingHome] Dismiss Create NursingHome',\n  LoadNursingHomes = '[NursingHome] Load Nursing Homes',\n  SearchNursingHome = '[NursingHome] Search NursingHome',\n  SearchNursingHomeComplete = '[NursingHome] Search NursingHome Complete',\n  EditNursingHome = '[NursingHome] Edit NursingHome',\n  DismissEditNursingHome = '[NursingHome] Dismiss Edit NursingHome',\n  ResetNursingHomesState = '[NursingHomes] Reset NursingHomes State'\n}\n\n\n/**\n * Select nursingHome Action\n */\nexport class SelectNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SelectNursingHome;\n\n  constructor(public payload: NursingHome) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.ClearSelectedNursingHome;\n}\n\n/**\n * Initialize nursingHome Action\n */\nexport class InitializeNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.InitializeNursingHome;\n}\n\n/**\n * action to pop up nursingHome form\n */\nexport class PopUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.PopUpNursingHomeForm;\n}\n\n/**\n * Create nursingHome Action\n */\nexport class CreateNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.CreateNursingHome;\n\n  constructor(public payload: { nursingHome: NursingHome }) { }\n}\n\n/**\n * CreateNursingHome Dialog window dismissed\n */\nexport class DismissPoppedUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.DismissPoppedUpNursingHomeForm;\n}\n\n/**\n * Load nursingHomes Action\n */\nexport class LoadNursingHomes implements Action {\n  readonly type = NursingHomesActionTypes.LoadNursingHomes;\n}\n\n/**\n * Search nursingHome Action\n */\nexport class SearchNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHome;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search nursingHome complete Action\n */\nexport class SearchNursingHomeComplete implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHomeComplete;\n\n  constructor(public payload: NursingHome[]) { }\n}\n\n/**\n * action to submit and edit nursingHome\n */\nexport class EditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.EditNursingHome;\n\n  constructor(public payload: Update) {\n  }\n}\n\n/**\n * NursingHome Edit dismissed action\n */\nexport class DismissEditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.DismissEditNursingHome;\n}\n\n/**\n * reset the nursingHome state\n */\nexport class ResetNursingHomesState implements Action {\n  readonly type = NursingHomesActionTypes.ResetNursingHomesState;\n}\n\n/**\n * Export union of nursingHome Action\n */\nexport type NursingHomesActionsUnion\n  = SelectNursingHome\n  | ClearSelectedNursingHome\n  | InitializeNursingHome\n  | PopUpNursingHomeForm\n  | CreateNursingHome\n  | DismissPoppedUpNursingHomeForm\n  | LoadNursingHomes\n  | SearchNursingHome\n  | SearchNursingHomeComplete\n  | EditNursingHome\n  | DismissEditNursingHome\n  | ResetNursingHomesState;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchNursingHomeComplete.html":{"url":"classes/SearchNursingHomeComplete.html","title":"class - SearchNursingHomeComplete","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchNursingHomeComplete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/nursing-homes.actions.ts\n        \n\n            \n                Description\n            \n            \n                Search nursingHome complete Action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: NursingHome[])\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/nursing-homes.actions.ts:87\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    NursingHome[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     NursingHome[]\n\n                    \n                \n                    \n                        \n                            Type :     NursingHome[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes.actions.ts:89\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : NursingHomesActionTypes.SearchNursingHomeComplete\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes.actions.ts:87\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { NursingHome } from '../models/nursing-home.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum NursingHomesActionTypes {\n  SelectNursingHome = '[NursingHome] Select Current NursingHome',\n  ClearSelectedNursingHome = '[NursingHome] Clear Current NursingHome',\n  InitializeNursingHome = '[NursingHome] Initialize Current NursingHome',\n  PopUpNursingHomeForm = '[NursingHome] Pop Up NursingHome Form',\n  CreateNursingHome = '[NursingHome] Create NursingHome',\n  DismissPoppedUpNursingHomeForm = '[NursingHome] Dismiss Create NursingHome',\n  LoadNursingHomes = '[NursingHome] Load Nursing Homes',\n  SearchNursingHome = '[NursingHome] Search NursingHome',\n  SearchNursingHomeComplete = '[NursingHome] Search NursingHome Complete',\n  EditNursingHome = '[NursingHome] Edit NursingHome',\n  DismissEditNursingHome = '[NursingHome] Dismiss Edit NursingHome',\n  ResetNursingHomesState = '[NursingHomes] Reset NursingHomes State'\n}\n\n\n/**\n * Select nursingHome Action\n */\nexport class SelectNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SelectNursingHome;\n\n  constructor(public payload: NursingHome) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.ClearSelectedNursingHome;\n}\n\n/**\n * Initialize nursingHome Action\n */\nexport class InitializeNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.InitializeNursingHome;\n}\n\n/**\n * action to pop up nursingHome form\n */\nexport class PopUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.PopUpNursingHomeForm;\n}\n\n/**\n * Create nursingHome Action\n */\nexport class CreateNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.CreateNursingHome;\n\n  constructor(public payload: { nursingHome: NursingHome }) { }\n}\n\n/**\n * CreateNursingHome Dialog window dismissed\n */\nexport class DismissPoppedUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.DismissPoppedUpNursingHomeForm;\n}\n\n/**\n * Load nursingHomes Action\n */\nexport class LoadNursingHomes implements Action {\n  readonly type = NursingHomesActionTypes.LoadNursingHomes;\n}\n\n/**\n * Search nursingHome Action\n */\nexport class SearchNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHome;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search nursingHome complete Action\n */\nexport class SearchNursingHomeComplete implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHomeComplete;\n\n  constructor(public payload: NursingHome[]) { }\n}\n\n/**\n * action to submit and edit nursingHome\n */\nexport class EditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.EditNursingHome;\n\n  constructor(public payload: Update) {\n  }\n}\n\n/**\n * NursingHome Edit dismissed action\n */\nexport class DismissEditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.DismissEditNursingHome;\n}\n\n/**\n * reset the nursingHome state\n */\nexport class ResetNursingHomesState implements Action {\n  readonly type = NursingHomesActionTypes.ResetNursingHomesState;\n}\n\n/**\n * Export union of nursingHome Action\n */\nexport type NursingHomesActionsUnion\n  = SelectNursingHome\n  | ClearSelectedNursingHome\n  | InitializeNursingHome\n  | PopUpNursingHomeForm\n  | CreateNursingHome\n  | DismissPoppedUpNursingHomeForm\n  | LoadNursingHomes\n  | SearchNursingHome\n  | SearchNursingHomeComplete\n  | EditNursingHome\n  | DismissEditNursingHome\n  | ResetNursingHomesState;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchPatient.html":{"url":"classes/SearchPatient.html","title":"class - SearchPatient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchPatient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients.actions.ts\n        \n\n            \n                Description\n            \n            \n                Search patient Action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/patients.actions.ts:80\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsActionTypes.SearchPatient\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:80\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { IPatient } from '../models/patient.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum PatientsActionTypes {\n  SelectPatient = '[Patient] Select Current Patient',\n  ClearSelectedPatient = '[Patient] Clear Current Patient',\n  InitializePatient = '[Patient] Initialize Current Patient',\n  CreatePatientFormDialog = '[Patients] Pop Up Patient Form',\n  CreatePatient = '[Patient] Create Patient',\n  DismissPatientFormDialog = '[Patient] Dismiss Patient Form Dialog',\n  LoadPatients = '[Patient] Load Patients',\n  SearchPatient = '[Patient] Search Patient',\n  SearchPatientComplete = '[Patient] Search Patient Complete',\n  EditPatient = '[Patient] Edit Patient',\n  DismissEditPatient = '[Patient] Dismiss Edit Patient',\n  ResetPatientsState = '[Patients] Reset Patients State',\n  DeletePatient ='[Patients] Delete Patient',\n  LoadPatientUsers = '[User] Load User Patients'\n}\n\n\n/**\n * Select patient Action\n */\nexport class SelectPatient implements Action {\n  readonly type = PatientsActionTypes.SelectPatient;\n\n  constructor(public payload: IPatient) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedPatient implements Action {\n  readonly type = PatientsActionTypes.ClearSelectedPatient;\n}\n\n/**\n * Initialize patient Action\n */\nexport class InitializePatient implements Action {\n  readonly type = PatientsActionTypes.InitializePatient;\n}\n\n/**\n * action to pop up patient form\n */\nexport class CreatePatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.CreatePatientFormDialog;\n}\n\n/**\n * Create patient Action\n */\nexport class CreatePatient implements Action {\n  readonly type = PatientsActionTypes.CreatePatient;\n\n  constructor(public payload: { patient: IPatient }) { }\n}\n\n/**\n * CreatePatient Dialog window dismissed\n */\nexport class DismissPatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.DismissPatientFormDialog;\n}\n\n/**\n * Load patients Action\n */\nexport class LoadPatients implements Action {\n  readonly type = PatientsActionTypes.LoadPatients;\n}\n\n/**\n * Search patient Action\n */\nexport class SearchPatient implements Action {\n  readonly type = PatientsActionTypes.SearchPatient;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search patient complete Action\n */\nexport class SearchPatientComplete implements Action {\n  readonly type = PatientsActionTypes.SearchPatientComplete;\n\n  constructor(public payload: IPatient[]) { }\n}\n\n/**\n * action to submit and edit patient\n */\nexport class EditPatient implements Action {\n  readonly type = PatientsActionTypes.EditPatient;\n\n  constructor(public payload: IPatient) {\n  }\n}\n\n/**\n * Patient Edit dismissed action\n */\nexport class DismissEditPatient implements Action {\n  readonly type = PatientsActionTypes.DismissEditPatient;\n}\n\n/**\n * reset the patient state\n */\nexport class ResetPatientsState implements Action {\n  readonly type = PatientsActionTypes.ResetPatientsState;\n}\n\n/**\n * action to delete a patient\n */\nexport class DeletePatient implements Action {\n  readonly type = PatientsActionTypes.DeletePatient;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load patient users action\n */\nexport class LoadPatientUsers implements Action {\n  readonly type = PatientsActionTypes.LoadPatientUsers;\n  constructor(public payload: number ) { }\n}\n\n\n/**\n * Export union of patient Action\n */\nexport type PatientsActionsUnion\n  = SelectPatient\n  | ClearSelectedPatient\n  | InitializePatient\n  | CreatePatientFormDialog\n  | CreatePatient\n  | DismissPatientFormDialog\n  | LoadPatients\n  | SearchPatient\n  | SearchPatientComplete\n  | EditPatient\n  | DismissEditPatient\n  | ResetPatientsState\n  | LoadPatientUsers;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchPatientComplete.html":{"url":"classes/SearchPatientComplete.html","title":"class - SearchPatientComplete","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchPatientComplete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients.actions.ts\n        \n\n            \n                Description\n            \n            \n                Search patient complete Action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: IPatient[])\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/patients.actions.ts:89\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    IPatient[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     IPatient[]\n\n                    \n                \n                    \n                        \n                            Type :     IPatient[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:91\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsActionTypes.SearchPatientComplete\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:89\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { IPatient } from '../models/patient.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum PatientsActionTypes {\n  SelectPatient = '[Patient] Select Current Patient',\n  ClearSelectedPatient = '[Patient] Clear Current Patient',\n  InitializePatient = '[Patient] Initialize Current Patient',\n  CreatePatientFormDialog = '[Patients] Pop Up Patient Form',\n  CreatePatient = '[Patient] Create Patient',\n  DismissPatientFormDialog = '[Patient] Dismiss Patient Form Dialog',\n  LoadPatients = '[Patient] Load Patients',\n  SearchPatient = '[Patient] Search Patient',\n  SearchPatientComplete = '[Patient] Search Patient Complete',\n  EditPatient = '[Patient] Edit Patient',\n  DismissEditPatient = '[Patient] Dismiss Edit Patient',\n  ResetPatientsState = '[Patients] Reset Patients State',\n  DeletePatient ='[Patients] Delete Patient',\n  LoadPatientUsers = '[User] Load User Patients'\n}\n\n\n/**\n * Select patient Action\n */\nexport class SelectPatient implements Action {\n  readonly type = PatientsActionTypes.SelectPatient;\n\n  constructor(public payload: IPatient) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedPatient implements Action {\n  readonly type = PatientsActionTypes.ClearSelectedPatient;\n}\n\n/**\n * Initialize patient Action\n */\nexport class InitializePatient implements Action {\n  readonly type = PatientsActionTypes.InitializePatient;\n}\n\n/**\n * action to pop up patient form\n */\nexport class CreatePatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.CreatePatientFormDialog;\n}\n\n/**\n * Create patient Action\n */\nexport class CreatePatient implements Action {\n  readonly type = PatientsActionTypes.CreatePatient;\n\n  constructor(public payload: { patient: IPatient }) { }\n}\n\n/**\n * CreatePatient Dialog window dismissed\n */\nexport class DismissPatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.DismissPatientFormDialog;\n}\n\n/**\n * Load patients Action\n */\nexport class LoadPatients implements Action {\n  readonly type = PatientsActionTypes.LoadPatients;\n}\n\n/**\n * Search patient Action\n */\nexport class SearchPatient implements Action {\n  readonly type = PatientsActionTypes.SearchPatient;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search patient complete Action\n */\nexport class SearchPatientComplete implements Action {\n  readonly type = PatientsActionTypes.SearchPatientComplete;\n\n  constructor(public payload: IPatient[]) { }\n}\n\n/**\n * action to submit and edit patient\n */\nexport class EditPatient implements Action {\n  readonly type = PatientsActionTypes.EditPatient;\n\n  constructor(public payload: IPatient) {\n  }\n}\n\n/**\n * Patient Edit dismissed action\n */\nexport class DismissEditPatient implements Action {\n  readonly type = PatientsActionTypes.DismissEditPatient;\n}\n\n/**\n * reset the patient state\n */\nexport class ResetPatientsState implements Action {\n  readonly type = PatientsActionTypes.ResetPatientsState;\n}\n\n/**\n * action to delete a patient\n */\nexport class DeletePatient implements Action {\n  readonly type = PatientsActionTypes.DeletePatient;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load patient users action\n */\nexport class LoadPatientUsers implements Action {\n  readonly type = PatientsActionTypes.LoadPatientUsers;\n  constructor(public payload: number ) { }\n}\n\n\n/**\n * Export union of patient Action\n */\nexport type PatientsActionsUnion\n  = SelectPatient\n  | ClearSelectedPatient\n  | InitializePatient\n  | CreatePatientFormDialog\n  | CreatePatient\n  | DismissPatientFormDialog\n  | LoadPatients\n  | SearchPatient\n  | SearchPatientComplete\n  | EditPatient\n  | DismissEditPatient\n  | ResetPatientsState\n  | LoadPatientUsers;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchUser.html":{"url":"classes/SearchUser.html","title":"class - SearchUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users.actions.ts\n        \n\n            \n                Description\n            \n            \n                Search user action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/users.actions.ts:80\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersActionTypes.SearchUser\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:80\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum UsersActionTypes {\n  SelectUser = '[User] Select Current User',\n  ClearSelectedUser = '[User] Clear Current User',\n  InitializeUser = '[User] Initialize Current User',\n  CreateUserFormDialog = '[Users] Pop Up User Form',\n  CreateUser = '[User] Create User',\n  DismissUserFormDialog = '[User] Dismiss User Form Dialog',\n  LoadUsers = '[User] Load Users',\n  SearchUser = '[User] Search User',\n  SearchUserComplete = '[User] Search User Complete',\n  EditUser = '[User] Edit User',\n  DismissEditUser = '[User] Dismiss Edit User',\n  ResetUsersState = '[Users] Reset Users State',\n  DeleteUser = '[Users] Delete User',\n  LoadUserPatients = '[User] Load User Patients'\n}\n\n\n/**\n * Select user Action\n */\nexport class SelectUser implements Action {\n  readonly type = UsersActionTypes.SelectUser;\n\n  constructor(public payload: User) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedUser implements Action {\n  readonly type = UsersActionTypes.ClearSelectedUser;\n}\n\n/**\n * Initialize user Action\n */\nexport class InitializeUser implements Action {\n  readonly type = UsersActionTypes.InitializeUser;\n}\n\n/**\n * action to pop up user form\n */\nexport class CreateUserFormDialog implements Action {\n  readonly type = UsersActionTypes.CreateUserFormDialog;\n}\n\n/**\n * Create user Action\n */\nexport class CreateUser implements Action {\n  readonly type = UsersActionTypes.CreateUser;\n\n  constructor(public payload: { user: User }) { }\n}\n\n/**\n * CreateUser Dialog window dismissed\n */\nexport class DismissUserFormDialog implements Action {\n  readonly type = UsersActionTypes.DismissUserFormDialog;\n}\n\n/**\n * Load users Action\n */\nexport class LoadUsers implements Action {\n  readonly type = UsersActionTypes.LoadUsers;\n}\n\n/**\n * Search user action\n */\nexport class SearchUser implements Action {\n  readonly type = UsersActionTypes.SearchUser;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search user complete action\n */\nexport class SearchUserComplete implements Action {\n  readonly type = UsersActionTypes.SearchUserComplete;\n\n  constructor(public payload: User[]) { }\n}\n\n/**\n * action to submit and edit user\n */\nexport class EditUser implements Action {\n  readonly type = UsersActionTypes.EditUser;\n\n  constructor(public payload: User) {\n  }\n}\n\n/**\n * User Edit dismissed action\n */\nexport class DismissEditUser implements Action {\n  readonly type = UsersActionTypes.DismissEditUser;\n}\n\n/**\n * reset the user state\n */\nexport class ResetUsersState implements Action {\n  readonly type = UsersActionTypes.ResetUsersState;\n}\n\n/**\n * action to delete a user\n */\nexport class DeleteUser implements Action {\n  readonly type = UsersActionTypes.DeleteUser;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load user patients action\n */\nexport class LoadUserPatients implements Action {\n  readonly type = UsersActionTypes.LoadUserPatients;\n  constructor(public payload: number ) { }\n}\n\n/**\n * Export union of user Action\n */\nexport type UsersActionsUnion\n  = SelectUser\n  | ClearSelectedUser\n  | InitializeUser\n  | CreateUserFormDialog\n  | CreateUser\n  | DismissUserFormDialog\n  | LoadUsers\n  | SearchUser\n  | SearchUserComplete\n  | EditUser\n  | DismissEditUser\n  | ResetUsersState\n  | LoadUserPatients;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchUserComplete.html":{"url":"classes/SearchUserComplete.html","title":"class - SearchUserComplete","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchUserComplete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users.actions.ts\n        \n\n            \n                Description\n            \n            \n                Search user complete action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: User[])\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/users.actions.ts:89\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    User[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     User[]\n\n                    \n                \n                    \n                        \n                            Type :     User[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:91\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersActionTypes.SearchUserComplete\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:89\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum UsersActionTypes {\n  SelectUser = '[User] Select Current User',\n  ClearSelectedUser = '[User] Clear Current User',\n  InitializeUser = '[User] Initialize Current User',\n  CreateUserFormDialog = '[Users] Pop Up User Form',\n  CreateUser = '[User] Create User',\n  DismissUserFormDialog = '[User] Dismiss User Form Dialog',\n  LoadUsers = '[User] Load Users',\n  SearchUser = '[User] Search User',\n  SearchUserComplete = '[User] Search User Complete',\n  EditUser = '[User] Edit User',\n  DismissEditUser = '[User] Dismiss Edit User',\n  ResetUsersState = '[Users] Reset Users State',\n  DeleteUser = '[Users] Delete User',\n  LoadUserPatients = '[User] Load User Patients'\n}\n\n\n/**\n * Select user Action\n */\nexport class SelectUser implements Action {\n  readonly type = UsersActionTypes.SelectUser;\n\n  constructor(public payload: User) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedUser implements Action {\n  readonly type = UsersActionTypes.ClearSelectedUser;\n}\n\n/**\n * Initialize user Action\n */\nexport class InitializeUser implements Action {\n  readonly type = UsersActionTypes.InitializeUser;\n}\n\n/**\n * action to pop up user form\n */\nexport class CreateUserFormDialog implements Action {\n  readonly type = UsersActionTypes.CreateUserFormDialog;\n}\n\n/**\n * Create user Action\n */\nexport class CreateUser implements Action {\n  readonly type = UsersActionTypes.CreateUser;\n\n  constructor(public payload: { user: User }) { }\n}\n\n/**\n * CreateUser Dialog window dismissed\n */\nexport class DismissUserFormDialog implements Action {\n  readonly type = UsersActionTypes.DismissUserFormDialog;\n}\n\n/**\n * Load users Action\n */\nexport class LoadUsers implements Action {\n  readonly type = UsersActionTypes.LoadUsers;\n}\n\n/**\n * Search user action\n */\nexport class SearchUser implements Action {\n  readonly type = UsersActionTypes.SearchUser;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search user complete action\n */\nexport class SearchUserComplete implements Action {\n  readonly type = UsersActionTypes.SearchUserComplete;\n\n  constructor(public payload: User[]) { }\n}\n\n/**\n * action to submit and edit user\n */\nexport class EditUser implements Action {\n  readonly type = UsersActionTypes.EditUser;\n\n  constructor(public payload: User) {\n  }\n}\n\n/**\n * User Edit dismissed action\n */\nexport class DismissEditUser implements Action {\n  readonly type = UsersActionTypes.DismissEditUser;\n}\n\n/**\n * reset the user state\n */\nexport class ResetUsersState implements Action {\n  readonly type = UsersActionTypes.ResetUsersState;\n}\n\n/**\n * action to delete a user\n */\nexport class DeleteUser implements Action {\n  readonly type = UsersActionTypes.DeleteUser;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load user patients action\n */\nexport class LoadUserPatients implements Action {\n  readonly type = UsersActionTypes.LoadUserPatients;\n  constructor(public payload: number ) { }\n}\n\n/**\n * Export union of user Action\n */\nexport type UsersActionsUnion\n  = SelectUser\n  | ClearSelectedUser\n  | InitializeUser\n  | CreateUserFormDialog\n  | CreateUser\n  | DismissUserFormDialog\n  | LoadUsers\n  | SearchUser\n  | SearchUserComplete\n  | EditUser\n  | DismissEditUser\n  | ResetUsersState\n  | LoadUserPatients;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectNursingHome.html":{"url":"classes/SelectNursingHome.html","title":"class - SelectNursingHome","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectNursingHome\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/nursing-homes.actions.ts\n        \n\n            \n                Description\n            \n            \n                Select nursingHome Action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: NursingHome)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/nursing-homes.actions.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    NursingHome\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     NursingHome\n\n                    \n                \n                    \n                        \n                            Type :     NursingHome\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes.actions.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : NursingHomesActionTypes.SelectNursingHome\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/nursing-homes.actions.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { NursingHome } from '../models/nursing-home.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum NursingHomesActionTypes {\n  SelectNursingHome = '[NursingHome] Select Current NursingHome',\n  ClearSelectedNursingHome = '[NursingHome] Clear Current NursingHome',\n  InitializeNursingHome = '[NursingHome] Initialize Current NursingHome',\n  PopUpNursingHomeForm = '[NursingHome] Pop Up NursingHome Form',\n  CreateNursingHome = '[NursingHome] Create NursingHome',\n  DismissPoppedUpNursingHomeForm = '[NursingHome] Dismiss Create NursingHome',\n  LoadNursingHomes = '[NursingHome] Load Nursing Homes',\n  SearchNursingHome = '[NursingHome] Search NursingHome',\n  SearchNursingHomeComplete = '[NursingHome] Search NursingHome Complete',\n  EditNursingHome = '[NursingHome] Edit NursingHome',\n  DismissEditNursingHome = '[NursingHome] Dismiss Edit NursingHome',\n  ResetNursingHomesState = '[NursingHomes] Reset NursingHomes State'\n}\n\n\n/**\n * Select nursingHome Action\n */\nexport class SelectNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SelectNursingHome;\n\n  constructor(public payload: NursingHome) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.ClearSelectedNursingHome;\n}\n\n/**\n * Initialize nursingHome Action\n */\nexport class InitializeNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.InitializeNursingHome;\n}\n\n/**\n * action to pop up nursingHome form\n */\nexport class PopUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.PopUpNursingHomeForm;\n}\n\n/**\n * Create nursingHome Action\n */\nexport class CreateNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.CreateNursingHome;\n\n  constructor(public payload: { nursingHome: NursingHome }) { }\n}\n\n/**\n * CreateNursingHome Dialog window dismissed\n */\nexport class DismissPoppedUpNursingHomeForm implements Action {\n  readonly type = NursingHomesActionTypes.DismissPoppedUpNursingHomeForm;\n}\n\n/**\n * Load nursingHomes Action\n */\nexport class LoadNursingHomes implements Action {\n  readonly type = NursingHomesActionTypes.LoadNursingHomes;\n}\n\n/**\n * Search nursingHome Action\n */\nexport class SearchNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHome;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search nursingHome complete Action\n */\nexport class SearchNursingHomeComplete implements Action {\n  readonly type = NursingHomesActionTypes.SearchNursingHomeComplete;\n\n  constructor(public payload: NursingHome[]) { }\n}\n\n/**\n * action to submit and edit nursingHome\n */\nexport class EditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.EditNursingHome;\n\n  constructor(public payload: Update) {\n  }\n}\n\n/**\n * NursingHome Edit dismissed action\n */\nexport class DismissEditNursingHome implements Action {\n  readonly type = NursingHomesActionTypes.DismissEditNursingHome;\n}\n\n/**\n * reset the nursingHome state\n */\nexport class ResetNursingHomesState implements Action {\n  readonly type = NursingHomesActionTypes.ResetNursingHomesState;\n}\n\n/**\n * Export union of nursingHome Action\n */\nexport type NursingHomesActionsUnion\n  = SelectNursingHome\n  | ClearSelectedNursingHome\n  | InitializeNursingHome\n  | PopUpNursingHomeForm\n  | CreateNursingHome\n  | DismissPoppedUpNursingHomeForm\n  | LoadNursingHomes\n  | SearchNursingHome\n  | SearchNursingHomeComplete\n  | EditNursingHome\n  | DismissEditNursingHome\n  | ResetNursingHomesState;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectPatient.html":{"url":"classes/SelectPatient.html","title":"class - SelectPatient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectPatient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/patients.actions.ts\n        \n\n            \n                Description\n            \n            \n                Select patient Action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: IPatient)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/patients.actions.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    IPatient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     IPatient\n\n                    \n                \n                    \n                        \n                            Type :     IPatient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : PatientsActionTypes.SelectPatient\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/patients.actions.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { IPatient } from '../models/patient.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum PatientsActionTypes {\n  SelectPatient = '[Patient] Select Current Patient',\n  ClearSelectedPatient = '[Patient] Clear Current Patient',\n  InitializePatient = '[Patient] Initialize Current Patient',\n  CreatePatientFormDialog = '[Patients] Pop Up Patient Form',\n  CreatePatient = '[Patient] Create Patient',\n  DismissPatientFormDialog = '[Patient] Dismiss Patient Form Dialog',\n  LoadPatients = '[Patient] Load Patients',\n  SearchPatient = '[Patient] Search Patient',\n  SearchPatientComplete = '[Patient] Search Patient Complete',\n  EditPatient = '[Patient] Edit Patient',\n  DismissEditPatient = '[Patient] Dismiss Edit Patient',\n  ResetPatientsState = '[Patients] Reset Patients State',\n  DeletePatient ='[Patients] Delete Patient',\n  LoadPatientUsers = '[User] Load User Patients'\n}\n\n\n/**\n * Select patient Action\n */\nexport class SelectPatient implements Action {\n  readonly type = PatientsActionTypes.SelectPatient;\n\n  constructor(public payload: IPatient) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedPatient implements Action {\n  readonly type = PatientsActionTypes.ClearSelectedPatient;\n}\n\n/**\n * Initialize patient Action\n */\nexport class InitializePatient implements Action {\n  readonly type = PatientsActionTypes.InitializePatient;\n}\n\n/**\n * action to pop up patient form\n */\nexport class CreatePatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.CreatePatientFormDialog;\n}\n\n/**\n * Create patient Action\n */\nexport class CreatePatient implements Action {\n  readonly type = PatientsActionTypes.CreatePatient;\n\n  constructor(public payload: { patient: IPatient }) { }\n}\n\n/**\n * CreatePatient Dialog window dismissed\n */\nexport class DismissPatientFormDialog implements Action {\n  readonly type = PatientsActionTypes.DismissPatientFormDialog;\n}\n\n/**\n * Load patients Action\n */\nexport class LoadPatients implements Action {\n  readonly type = PatientsActionTypes.LoadPatients;\n}\n\n/**\n * Search patient Action\n */\nexport class SearchPatient implements Action {\n  readonly type = PatientsActionTypes.SearchPatient;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search patient complete Action\n */\nexport class SearchPatientComplete implements Action {\n  readonly type = PatientsActionTypes.SearchPatientComplete;\n\n  constructor(public payload: IPatient[]) { }\n}\n\n/**\n * action to submit and edit patient\n */\nexport class EditPatient implements Action {\n  readonly type = PatientsActionTypes.EditPatient;\n\n  constructor(public payload: IPatient) {\n  }\n}\n\n/**\n * Patient Edit dismissed action\n */\nexport class DismissEditPatient implements Action {\n  readonly type = PatientsActionTypes.DismissEditPatient;\n}\n\n/**\n * reset the patient state\n */\nexport class ResetPatientsState implements Action {\n  readonly type = PatientsActionTypes.ResetPatientsState;\n}\n\n/**\n * action to delete a patient\n */\nexport class DeletePatient implements Action {\n  readonly type = PatientsActionTypes.DeletePatient;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load patient users action\n */\nexport class LoadPatientUsers implements Action {\n  readonly type = PatientsActionTypes.LoadPatientUsers;\n  constructor(public payload: number ) { }\n}\n\n\n/**\n * Export union of patient Action\n */\nexport type PatientsActionsUnion\n  = SelectPatient\n  | ClearSelectedPatient\n  | InitializePatient\n  | CreatePatientFormDialog\n  | CreatePatient\n  | DismissPatientFormDialog\n  | LoadPatients\n  | SearchPatient\n  | SearchPatientComplete\n  | EditPatient\n  | DismissEditPatient\n  | ResetPatientsState\n  | LoadPatientUsers;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectUser.html":{"url":"classes/SelectUser.html","title":"class - SelectUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/users.actions.ts\n        \n\n            \n                Description\n            \n            \n                Select user Action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: User)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/users.actions.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    User\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UsersActionTypes.SelectUser\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/users.actions.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\nimport { Update } from '@ngrx/entity';\n\nexport enum UsersActionTypes {\n  SelectUser = '[User] Select Current User',\n  ClearSelectedUser = '[User] Clear Current User',\n  InitializeUser = '[User] Initialize Current User',\n  CreateUserFormDialog = '[Users] Pop Up User Form',\n  CreateUser = '[User] Create User',\n  DismissUserFormDialog = '[User] Dismiss User Form Dialog',\n  LoadUsers = '[User] Load Users',\n  SearchUser = '[User] Search User',\n  SearchUserComplete = '[User] Search User Complete',\n  EditUser = '[User] Edit User',\n  DismissEditUser = '[User] Dismiss Edit User',\n  ResetUsersState = '[Users] Reset Users State',\n  DeleteUser = '[Users] Delete User',\n  LoadUserPatients = '[User] Load User Patients'\n}\n\n\n/**\n * Select user Action\n */\nexport class SelectUser implements Action {\n  readonly type = UsersActionTypes.SelectUser;\n\n  constructor(public payload: User) { }\n}\n\n/**\n * Clear selected ser Action\n */\nexport class ClearSelectedUser implements Action {\n  readonly type = UsersActionTypes.ClearSelectedUser;\n}\n\n/**\n * Initialize user Action\n */\nexport class InitializeUser implements Action {\n  readonly type = UsersActionTypes.InitializeUser;\n}\n\n/**\n * action to pop up user form\n */\nexport class CreateUserFormDialog implements Action {\n  readonly type = UsersActionTypes.CreateUserFormDialog;\n}\n\n/**\n * Create user Action\n */\nexport class CreateUser implements Action {\n  readonly type = UsersActionTypes.CreateUser;\n\n  constructor(public payload: { user: User }) { }\n}\n\n/**\n * CreateUser Dialog window dismissed\n */\nexport class DismissUserFormDialog implements Action {\n  readonly type = UsersActionTypes.DismissUserFormDialog;\n}\n\n/**\n * Load users Action\n */\nexport class LoadUsers implements Action {\n  readonly type = UsersActionTypes.LoadUsers;\n}\n\n/**\n * Search user action\n */\nexport class SearchUser implements Action {\n  readonly type = UsersActionTypes.SearchUser;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Search user complete action\n */\nexport class SearchUserComplete implements Action {\n  readonly type = UsersActionTypes.SearchUserComplete;\n\n  constructor(public payload: User[]) { }\n}\n\n/**\n * action to submit and edit user\n */\nexport class EditUser implements Action {\n  readonly type = UsersActionTypes.EditUser;\n\n  constructor(public payload: User) {\n  }\n}\n\n/**\n * User Edit dismissed action\n */\nexport class DismissEditUser implements Action {\n  readonly type = UsersActionTypes.DismissEditUser;\n}\n\n/**\n * reset the user state\n */\nexport class ResetUsersState implements Action {\n  readonly type = UsersActionTypes.ResetUsersState;\n}\n\n/**\n * action to delete a user\n */\nexport class DeleteUser implements Action {\n  readonly type = UsersActionTypes.DeleteUser;\n\n  constructor(public payload: number) {\n  }\n}\n\n/**\n * Load user patients action\n */\nexport class LoadUserPatients implements Action {\n  readonly type = UsersActionTypes.LoadUserPatients;\n  constructor(public payload: number ) { }\n}\n\n/**\n * Export union of user Action\n */\nexport type UsersActionsUnion\n  = SelectUser\n  | ClearSelectedUser\n  | InitializeUser\n  | CreateUserFormDialog\n  | CreateUser\n  | DismissUserFormDialog\n  | LoadUsers\n  | SearchUser\n  | SearchUserComplete\n  | EditUser\n  | DismissEditUser\n  | ResetUsersState\n  | LoadUserPatients;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetDirectionLtr.html":{"url":"classes/SetDirectionLtr.html","title":"class - SetDirectionLtr","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetDirectionLtr\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/layout.actions.ts\n        \n\n            \n                Description\n            \n            \n                set direction to left-to-right action\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/layout.actions.ts:70\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LayoutActionTypes.SetDirectionLtr\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:70\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\n/**\n * layout action types\n */\nexport enum LayoutActionTypes {\n  OpenSideNav = '[Layout] Open Side Nav',\n  CloseSideNav = '[Layout] Close Side Nav',\n  CompactSideNav = '[Layout] Compact Nav position',\n  SetNavigationPositionSide = '[Layout] Set Navigation Position Side',\n  SetNavigationPositionTop = '[Layout] Set Navigation Position Top',\n  SetDirectionLtr = '[Layout] Set Direction Ltr',\n  SetDirectionRtr = '[Layout] Set Direction Rtr',\n  TransitioningLayout = '[Layout] Transitioning Layout',\n  UseBreadcrumb = '[Layout] Use Breadcrumb',\n  MakeBreadcrumbSimple = '[Layout] Make Breadcrumb Simple',\n  MakeBreadcrumbTitle = '[Layout] Make Breadcrumb Title',\n  FixTopbar = '[Layout] Fix Topbar'\n}\n\n/**\n * open side navigation action\n */\nexport class OpenSideNav {\n  readonly type = LayoutActionTypes.OpenSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * close side navigation action\n */\nexport class CloseSideNav {\n  readonly type = LayoutActionTypes.CloseSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * compact side navigation action\n */\nexport class CompactSideNav {\n  readonly type = LayoutActionTypes.CompactSideNav;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to side action\n */\nexport class SetNavigationPositionSide {\n  readonly type = LayoutActionTypes.SetNavigationPositionSide;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to top action\n */\nexport class SetNavigationPositionTop {\n  readonly type = LayoutActionTypes.SetNavigationPositionTop;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to left-to-right action\n */\nexport class SetDirectionLtr {\n  readonly type = LayoutActionTypes.SetDirectionLtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to right-to-left action\n */\nexport class SetDirectionRtr {\n  readonly type = LayoutActionTypes.SetDirectionRtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * transition layout action\n */\nexport class TransitioningLayout {\n  readonly type = LayoutActionTypes.TransitioningLayout;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * Use breadcrumb action\n */\nexport class UseBreadcrumb {\n  readonly type = LayoutActionTypes.UseBreadcrumb;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * make breadcrumb simple action\n */\nexport class MakeBreadcrumbSimple {\n  readonly type = LayoutActionTypes.MakeBreadcrumbSimple;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * make breadcrum title action\n */\nexport class MakeBreadcrumbTitle {\n  readonly type = LayoutActionTypes.MakeBreadcrumbTitle;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * fix top bar action\n */\nexport class FixTopbar {\n  readonly type = LayoutActionTypes.FixTopbar;\n  constructor(public payload: boolean) { \n  }\n}\n\nexport type LayoutActions = \n  | OpenSideNav\n  | CloseSideNav\n  | CompactSideNav\n  | SetNavigationPositionSide\n  | SetNavigationPositionTop\n  | SetDirectionLtr\n  | SetDirectionRtr\n  | TransitioningLayout\n  | UseBreadcrumb\n  | MakeBreadcrumbSimple\n  | MakeBreadcrumbTitle\n  | FixTopbar;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetDirectionRtr.html":{"url":"classes/SetDirectionRtr.html","title":"class - SetDirectionRtr","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetDirectionRtr\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/layout.actions.ts\n        \n\n            \n                Description\n            \n            \n                set direction to right-to-left action\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/layout.actions.ts:79\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LayoutActionTypes.SetDirectionRtr\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:79\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\n/**\n * layout action types\n */\nexport enum LayoutActionTypes {\n  OpenSideNav = '[Layout] Open Side Nav',\n  CloseSideNav = '[Layout] Close Side Nav',\n  CompactSideNav = '[Layout] Compact Nav position',\n  SetNavigationPositionSide = '[Layout] Set Navigation Position Side',\n  SetNavigationPositionTop = '[Layout] Set Navigation Position Top',\n  SetDirectionLtr = '[Layout] Set Direction Ltr',\n  SetDirectionRtr = '[Layout] Set Direction Rtr',\n  TransitioningLayout = '[Layout] Transitioning Layout',\n  UseBreadcrumb = '[Layout] Use Breadcrumb',\n  MakeBreadcrumbSimple = '[Layout] Make Breadcrumb Simple',\n  MakeBreadcrumbTitle = '[Layout] Make Breadcrumb Title',\n  FixTopbar = '[Layout] Fix Topbar'\n}\n\n/**\n * open side navigation action\n */\nexport class OpenSideNav {\n  readonly type = LayoutActionTypes.OpenSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * close side navigation action\n */\nexport class CloseSideNav {\n  readonly type = LayoutActionTypes.CloseSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * compact side navigation action\n */\nexport class CompactSideNav {\n  readonly type = LayoutActionTypes.CompactSideNav;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to side action\n */\nexport class SetNavigationPositionSide {\n  readonly type = LayoutActionTypes.SetNavigationPositionSide;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to top action\n */\nexport class SetNavigationPositionTop {\n  readonly type = LayoutActionTypes.SetNavigationPositionTop;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to left-to-right action\n */\nexport class SetDirectionLtr {\n  readonly type = LayoutActionTypes.SetDirectionLtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to right-to-left action\n */\nexport class SetDirectionRtr {\n  readonly type = LayoutActionTypes.SetDirectionRtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * transition layout action\n */\nexport class TransitioningLayout {\n  readonly type = LayoutActionTypes.TransitioningLayout;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * Use breadcrumb action\n */\nexport class UseBreadcrumb {\n  readonly type = LayoutActionTypes.UseBreadcrumb;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * make breadcrumb simple action\n */\nexport class MakeBreadcrumbSimple {\n  readonly type = LayoutActionTypes.MakeBreadcrumbSimple;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * make breadcrum title action\n */\nexport class MakeBreadcrumbTitle {\n  readonly type = LayoutActionTypes.MakeBreadcrumbTitle;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * fix top bar action\n */\nexport class FixTopbar {\n  readonly type = LayoutActionTypes.FixTopbar;\n  constructor(public payload: boolean) { \n  }\n}\n\nexport type LayoutActions = \n  | OpenSideNav\n  | CloseSideNav\n  | CompactSideNav\n  | SetNavigationPositionSide\n  | SetNavigationPositionTop\n  | SetDirectionLtr\n  | SetDirectionRtr\n  | TransitioningLayout\n  | UseBreadcrumb\n  | MakeBreadcrumbSimple\n  | MakeBreadcrumbTitle\n  | FixTopbar;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetNavigationPositionSide.html":{"url":"classes/SetNavigationPositionSide.html","title":"class - SetNavigationPositionSide","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetNavigationPositionSide\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/layout.actions.ts\n        \n\n            \n                Description\n            \n            \n                set navigation position to side action\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/layout.actions.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LayoutActionTypes.SetNavigationPositionSide\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:52\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\n/**\n * layout action types\n */\nexport enum LayoutActionTypes {\n  OpenSideNav = '[Layout] Open Side Nav',\n  CloseSideNav = '[Layout] Close Side Nav',\n  CompactSideNav = '[Layout] Compact Nav position',\n  SetNavigationPositionSide = '[Layout] Set Navigation Position Side',\n  SetNavigationPositionTop = '[Layout] Set Navigation Position Top',\n  SetDirectionLtr = '[Layout] Set Direction Ltr',\n  SetDirectionRtr = '[Layout] Set Direction Rtr',\n  TransitioningLayout = '[Layout] Transitioning Layout',\n  UseBreadcrumb = '[Layout] Use Breadcrumb',\n  MakeBreadcrumbSimple = '[Layout] Make Breadcrumb Simple',\n  MakeBreadcrumbTitle = '[Layout] Make Breadcrumb Title',\n  FixTopbar = '[Layout] Fix Topbar'\n}\n\n/**\n * open side navigation action\n */\nexport class OpenSideNav {\n  readonly type = LayoutActionTypes.OpenSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * close side navigation action\n */\nexport class CloseSideNav {\n  readonly type = LayoutActionTypes.CloseSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * compact side navigation action\n */\nexport class CompactSideNav {\n  readonly type = LayoutActionTypes.CompactSideNav;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to side action\n */\nexport class SetNavigationPositionSide {\n  readonly type = LayoutActionTypes.SetNavigationPositionSide;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to top action\n */\nexport class SetNavigationPositionTop {\n  readonly type = LayoutActionTypes.SetNavigationPositionTop;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to left-to-right action\n */\nexport class SetDirectionLtr {\n  readonly type = LayoutActionTypes.SetDirectionLtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to right-to-left action\n */\nexport class SetDirectionRtr {\n  readonly type = LayoutActionTypes.SetDirectionRtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * transition layout action\n */\nexport class TransitioningLayout {\n  readonly type = LayoutActionTypes.TransitioningLayout;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * Use breadcrumb action\n */\nexport class UseBreadcrumb {\n  readonly type = LayoutActionTypes.UseBreadcrumb;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * make breadcrumb simple action\n */\nexport class MakeBreadcrumbSimple {\n  readonly type = LayoutActionTypes.MakeBreadcrumbSimple;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * make breadcrum title action\n */\nexport class MakeBreadcrumbTitle {\n  readonly type = LayoutActionTypes.MakeBreadcrumbTitle;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * fix top bar action\n */\nexport class FixTopbar {\n  readonly type = LayoutActionTypes.FixTopbar;\n  constructor(public payload: boolean) { \n  }\n}\n\nexport type LayoutActions = \n  | OpenSideNav\n  | CloseSideNav\n  | CompactSideNav\n  | SetNavigationPositionSide\n  | SetNavigationPositionTop\n  | SetDirectionLtr\n  | SetDirectionRtr\n  | TransitioningLayout\n  | UseBreadcrumb\n  | MakeBreadcrumbSimple\n  | MakeBreadcrumbTitle\n  | FixTopbar;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetNavigationPositionTop.html":{"url":"classes/SetNavigationPositionTop.html","title":"class - SetNavigationPositionTop","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetNavigationPositionTop\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/layout.actions.ts\n        \n\n            \n                Description\n            \n            \n                set navigation position to top action\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/layout.actions.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LayoutActionTypes.SetNavigationPositionTop\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:61\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\n/**\n * layout action types\n */\nexport enum LayoutActionTypes {\n  OpenSideNav = '[Layout] Open Side Nav',\n  CloseSideNav = '[Layout] Close Side Nav',\n  CompactSideNav = '[Layout] Compact Nav position',\n  SetNavigationPositionSide = '[Layout] Set Navigation Position Side',\n  SetNavigationPositionTop = '[Layout] Set Navigation Position Top',\n  SetDirectionLtr = '[Layout] Set Direction Ltr',\n  SetDirectionRtr = '[Layout] Set Direction Rtr',\n  TransitioningLayout = '[Layout] Transitioning Layout',\n  UseBreadcrumb = '[Layout] Use Breadcrumb',\n  MakeBreadcrumbSimple = '[Layout] Make Breadcrumb Simple',\n  MakeBreadcrumbTitle = '[Layout] Make Breadcrumb Title',\n  FixTopbar = '[Layout] Fix Topbar'\n}\n\n/**\n * open side navigation action\n */\nexport class OpenSideNav {\n  readonly type = LayoutActionTypes.OpenSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * close side navigation action\n */\nexport class CloseSideNav {\n  readonly type = LayoutActionTypes.CloseSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * compact side navigation action\n */\nexport class CompactSideNav {\n  readonly type = LayoutActionTypes.CompactSideNav;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to side action\n */\nexport class SetNavigationPositionSide {\n  readonly type = LayoutActionTypes.SetNavigationPositionSide;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to top action\n */\nexport class SetNavigationPositionTop {\n  readonly type = LayoutActionTypes.SetNavigationPositionTop;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to left-to-right action\n */\nexport class SetDirectionLtr {\n  readonly type = LayoutActionTypes.SetDirectionLtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to right-to-left action\n */\nexport class SetDirectionRtr {\n  readonly type = LayoutActionTypes.SetDirectionRtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * transition layout action\n */\nexport class TransitioningLayout {\n  readonly type = LayoutActionTypes.TransitioningLayout;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * Use breadcrumb action\n */\nexport class UseBreadcrumb {\n  readonly type = LayoutActionTypes.UseBreadcrumb;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * make breadcrumb simple action\n */\nexport class MakeBreadcrumbSimple {\n  readonly type = LayoutActionTypes.MakeBreadcrumbSimple;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * make breadcrum title action\n */\nexport class MakeBreadcrumbTitle {\n  readonly type = LayoutActionTypes.MakeBreadcrumbTitle;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * fix top bar action\n */\nexport class FixTopbar {\n  readonly type = LayoutActionTypes.FixTopbar;\n  constructor(public payload: boolean) { \n  }\n}\n\nexport type LayoutActions = \n  | OpenSideNav\n  | CloseSideNav\n  | CompactSideNav\n  | SetNavigationPositionSide\n  | SetNavigationPositionTop\n  | SetDirectionLtr\n  | SetDirectionRtr\n  | TransitioningLayout\n  | UseBreadcrumb\n  | MakeBreadcrumbSimple\n  | MakeBreadcrumbTitle\n  | FixTopbar;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class SharedModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarSideComponent.html":{"url":"components/SidebarSideComponent.html","title":"component - SidebarSideComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarSideComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/containers/layout-components/sidebar-side/sidebar-side.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-sidebar-side\n            \n\n\n\n\n            \n                templateUrl\n                ./sidebar-side.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hasIconTypeMenuItem\n                            \n                            \n                                    Public\n                                iconTypeMenuTitle\n                            \n                            \n                                    Public\n                                menuItems\n                            \n                            \n                                    Private\n                                menuItemsSub\n                            \n                            \n                                    Public\n                                themeService\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onConfirmLogout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authStore: Store, store: Store, navService: NavigationService, themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/containers/layout-components/sidebar-side/sidebar-side.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authStore\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navService\n                                                  \n                                                        \n                                                                    NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                    ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/sidebar-side/sidebar-side.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/sidebar-side/sidebar-side.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/sidebar-side/sidebar-side.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onConfirmLogout\n                            \n                            \n                        \n                    \n                \n                \n                    \nonConfirmLogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/sidebar-side/sidebar-side.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            logout the user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasIconTypeMenuItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasIconTypeMenuItem:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/sidebar-side/sidebar-side.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconTypeMenuTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconTypeMenuTitle:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/sidebar-side/sidebar-side.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            menuItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        menuItems:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/sidebar-side/sidebar-side.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            menuItemsSub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        menuItemsSub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/sidebar-side/sidebar-side.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            themeService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        themeService:     ThemeService\n\n                    \n                \n                    \n                        \n                            Type :     ThemeService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/sidebar-side/sidebar-side.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/sidebar-side/sidebar-side.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, AfterViewInit } from '@angular/core';\nimport { NavigationService } from '../../../../core/services/navigation.service';\nimport { ThemeService } from '../../../../core/services/theme.service';\nimport { Subscription } from 'rxjs';\nimport { Store, select } from '@ngrx/store';\n\nimport { AuthActions } from '../../../../auth/actions';\nimport * as fromAuth from '../../../../auth/reducers';\n\n// import PerfectScrollbar from 'perfect-scrollbar';\n\n@Component({\n  selector: 'moio-sidebar-side',\n  templateUrl: './sidebar-side.component.html'\n})\nexport class SidebarSideComponent implements OnInit, OnDestroy, AfterViewInit {\n  // private sidebarPS: PerfectScrollbar;\n  public menuItems: any[];\n  public hasIconTypeMenuItem: boolean;\n  public iconTypeMenuTitle: string;\n  private menuItemsSub: Subscription;\n  public user: any;\n\n  constructor(\n    private authStore: Store,\n    private store: Store,\n    private navService: NavigationService,\n    public themeService: ThemeService\n  ) {\n  }\n\n  ngOnInit() {\n    this.iconTypeMenuTitle = this.navService.iconTypeMenuTitle;\n    this.menuItemsSub = this.navService.menuItems$.subscribe(menuItem => {\n      this.menuItems = menuItem;\n      // Checks item list has any icon type.\n      this.hasIconTypeMenuItem = !!this.menuItems.filter(item => item.type === 'icon').length;\n    });\n\n    // TODO: Unsubscribe\n    this.store.pipe(select(fromAuth.getUser)).subscribe(\n      user => this.user = user );\n  }\n\n  ngAfterViewInit() {\n    // setTimeout(() => {\n    //   this.sidebarPS = new PerfectScrollbar('#scroll-area', {\n    //     suppressScrollX: true\n    //   })\n    // })\n  }\n\n  /**\n   * logout the user\n   */\n  onConfirmLogout() {\n    this.authStore.dispatch(new AuthActions.LogoutConfirmation());\n  }\n\n  ngOnDestroy() {\n    // if(this.sidebarPS) {\n    //   this.sidebarPS.destroy();\n    // }\n    if (this.menuItemsSub) {\n      this.menuItemsSub.unsubscribe();\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n      \n      \n      \n    \n\n    \n    \n      \n        \n      \n      \n        lock\n        {{ user.firstname }} {{ user.lastname }}\n      \n      \n      \n        \n          settings\n        \n\n        \n          exit_to_app\n        \n\n        \n          \n            account_box\n            {{'AccountMenu.Profile' | translate }}\n          \n          \n            exit_to_app\n            {{ 'Auth.Signout' | translate }}\n          \n        \n      \n    \n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                lock        {{ user.firstname }} {{ user.lastname }}                                    settings                          exit_to_app                                      account_box            {{\\'AccountMenu.Profile\\' | translate }}                                exit_to_app            {{ \\'Auth.Signout\\' | translate }}                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'SidebarSideComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarTopComponent.html":{"url":"components/SidebarTopComponent.html","title":"component - SidebarTopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarTopComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/containers/layout-components/sidebar-top/sidebar-top.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-sidebar-top\n            \n\n\n\n\n            \n                templateUrl\n                ./sidebar-top.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                menuItems\n                            \n                            \n                                    Private\n                                menuItemsSub\n                            \n                            \n                                    Private\n                                sidebarPS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navService: NavigationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/containers/layout-components/sidebar-top/sidebar-top.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navService\n                                                  \n                                                        \n                                                                    NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/sidebar-top/sidebar-top.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/sidebar-top/sidebar-top.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/sidebar-top/sidebar-top.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            menuItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        menuItems:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/sidebar-top/sidebar-top.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            menuItemsSub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        menuItemsSub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/sidebar-top/sidebar-top.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sidebarPS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidebarPS:     PerfectScrollbar\n\n                    \n                \n                    \n                        \n                            Type :     PerfectScrollbar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/sidebar-top/sidebar-top.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, AfterViewInit } from '@angular/core';\nimport PerfectScrollbar from 'perfect-scrollbar';\nimport { NavigationService } from '../../../../core/services/navigation.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'moio-sidebar-top',\n  templateUrl: './sidebar-top.component.html'\n})\nexport class SidebarTopComponent implements OnInit, OnDestroy, AfterViewInit {\n  private sidebarPS: PerfectScrollbar;\n  public menuItems: any[];\n  private menuItemsSub: Subscription;\n\n  constructor(\n    private navService: NavigationService\n  ) {\n  }\n\n  ngOnInit() {\n    this.menuItemsSub = this.navService.menuItems$.subscribe(menuItem => {\n      this.menuItems = menuItem.filter(item => item.type !== 'icon' && item.type !== 'separator');\n    });\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.sidebarPS = new PerfectScrollbar('#sidebar-top-scroll-area', {\n        suppressScrollX: true\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    // if(this.sidebarPS) {\n    //   this.sidebarPS.destroy();\n    // }\n    if (this.menuItemsSub) {\n      this.menuItemsSub.unsubscribe();\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'SidebarTopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidenavComponent.html":{"url":"components/SidenavComponent.html","title":"component - SidenavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidenavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/containers/layout-components/sidenav/sidenav.component.ts\n\n\n    \n        Description\n    \n    \n        Sidenav component\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-sidenav\n            \n\n\n\n\n            \n                templateUrl\n                ./sidenav.template.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hasIconMenu\n                            \n                            \n                                iconMenuTitle\n                            \n                            \n                                items\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/containers/layout-components/sidenav/sidenav.component.ts:14\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hasIconMenu\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/sidenav/sidenav.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconMenuTitle\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/sidenav/sidenav.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                    \n                            \n                            Type :    any[]\n\n                            \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/sidenav/sidenav.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/containers/layout-components/sidenav/sidenav.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            on init lifecycle hook\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n/**\n * Sidenav component\n */\n@Component({\n  selector: 'moio-sidenav',\n  templateUrl: './sidenav.template.html'\n})\nexport class SidenavComponent implements OnInit {\n\n  @Input('items') public menuItems: any[] = [];\n  @Input('hasIconMenu') public hasIconTypeMenuItem: boolean;\n  @Input('iconMenuTitle') public iconTypeMenuTitle: string;\n\n  constructor() {\n  }\n\n  /**\n   * on init lifecycle hook\n   */\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n      {{iconTypeMenuTitle}}\n    \n    \n    \n      \n        {{item.icon}}\n      \n    \n  \n\n  \n    \n      \n        \n        {{item.name | translate}}\n      \n      \n        \n          {{item.icon}}\n          {{item.name | translate}}\n          \n          {{ badge.value }}\n        \n        \n          {{item.icon}}\n          {{item.name | translate}}\n          \n          {{ badge.value }}\n        \n\n        \n        \n          {{item.icon}}\n          {{item.name | translate}}\n          \n          {{ badge.value }}\n          keyboard_arrow_right\n        \n        \n        \n          \n\n            \n              {{itemLvL2.name | translate}}\n              \n            \n\n            \n              {{itemLvL2.name | translate}}\n              \n              keyboard_arrow_right\n            \n\n            \n            \n              \n                \n                  {{itemLvL3.name | translate}}\n                \n              \n            \n\n          \n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{iconTypeMenuTitle}}                          {{item.icon}}                                        {{item.name | translate}}                              {{item.icon}}          {{item.name | translate}}                    {{ badge.value }}                          {{item.icon}}          {{item.name | translate}}                    {{ badge.value }}                                  {{item.icon}}          {{item.name | translate}}                    {{ badge.value }}          keyboard_arrow_right                                                            {{itemLvL2.name | translate}}                                                    {{itemLvL2.name | translate}}                            keyboard_arrow_right                                                                                    {{itemLvL3.name | translate}}                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'SidenavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUpFailure.html":{"url":"classes/SignUpFailure.html","title":"class - SignUpFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUpFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/actions/auth-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                sign up failure\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/actions/auth-api.actions.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-api.actions.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : AuthApiActionTypes.SignUpFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-api.actions.ts:73\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum AuthApiActionTypes {\n  LoginSuccess = '[Auth/Api] Login Success',\n  LoginFailure = '[Auth/Api] Login Failure',\n  LoginRedirect = '[Auth/Api] Login Redirect',\n  LogoutSuccess = '[Auth/Api] Logout Success',\n  LogoutFailure = '[Auth/Api] Logout Failure',\n  SignUpSuccess = '[Auth/Api] Sign Up Success',\n  SignUpFailure = '[Auth/Api] Sign Up Failure',\n  ForgotPasswordSuccess = '[Auth/Api] Forgot Password Success',\n  ForgotPasswordFailure = '[Auth/Api] Forgot Password Failure',\n}\n\n/**\n * login action\n */\nexport class LoginSuccess implements Action {\n  readonly type = AuthApiActionTypes.LoginSuccess;\n\n  constructor(public payload: { response: any }) {\n  }\n}\n\n/**\n * login failure\n */\nexport class LoginFailure implements Action {\n  readonly type = AuthApiActionTypes.LoginFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * logout success\n */\nexport class LogoutSuccess implements Action {\n  readonly type = AuthApiActionTypes.LogoutSuccess;\n}\n\n/**\n * lougout failure\n */\nexport class LogoutFailure implements Action {\n  readonly type = AuthApiActionTypes.LogoutFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * redirect action\n */\nexport class LoginRedirect implements Action {\n  readonly type = AuthApiActionTypes.LoginRedirect;\n}\n\n/**\n * sign up success\n */\nexport class SignUpSuccess implements Action {\n  readonly type = AuthApiActionTypes.SignUpSuccess;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up failure\n */\nexport class SignUpFailure implements Action {\n  readonly type = AuthApiActionTypes.SignUpFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up success\n */\nexport class ForgotPasswordSuccess implements Action {\n  readonly type = AuthApiActionTypes.ForgotPasswordSuccess;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up failure\n */\nexport class ForgotPasswordFailure implements Action {\n  readonly type = AuthApiActionTypes.ForgotPasswordFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\nexport type AuthApiActionsUnion =\n  | LoginSuccess\n  | LoginFailure\n  | LoginRedirect\n  | LogoutSuccess\n  | LogoutFailure\n  | SignUpSuccess\n  | SignUpFailure\n  | ForgotPasswordSuccess\n  | ForgotPasswordFailure;\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUpSuccess.html":{"url":"classes/SignUpSuccess.html","title":"class - SignUpSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUpSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/actions/auth-api.actions.ts\n        \n\n            \n                Description\n            \n            \n                sign up success\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/actions/auth-api.actions.ts:63\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-api.actions.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : AuthApiActionTypes.SignUpSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-api.actions.ts:63\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport enum AuthApiActionTypes {\n  LoginSuccess = '[Auth/Api] Login Success',\n  LoginFailure = '[Auth/Api] Login Failure',\n  LoginRedirect = '[Auth/Api] Login Redirect',\n  LogoutSuccess = '[Auth/Api] Logout Success',\n  LogoutFailure = '[Auth/Api] Logout Failure',\n  SignUpSuccess = '[Auth/Api] Sign Up Success',\n  SignUpFailure = '[Auth/Api] Sign Up Failure',\n  ForgotPasswordSuccess = '[Auth/Api] Forgot Password Success',\n  ForgotPasswordFailure = '[Auth/Api] Forgot Password Failure',\n}\n\n/**\n * login action\n */\nexport class LoginSuccess implements Action {\n  readonly type = AuthApiActionTypes.LoginSuccess;\n\n  constructor(public payload: { response: any }) {\n  }\n}\n\n/**\n * login failure\n */\nexport class LoginFailure implements Action {\n  readonly type = AuthApiActionTypes.LoginFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * logout success\n */\nexport class LogoutSuccess implements Action {\n  readonly type = AuthApiActionTypes.LogoutSuccess;\n}\n\n/**\n * lougout failure\n */\nexport class LogoutFailure implements Action {\n  readonly type = AuthApiActionTypes.LogoutFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * redirect action\n */\nexport class LoginRedirect implements Action {\n  readonly type = AuthApiActionTypes.LoginRedirect;\n}\n\n/**\n * sign up success\n */\nexport class SignUpSuccess implements Action {\n  readonly type = AuthApiActionTypes.SignUpSuccess;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up failure\n */\nexport class SignUpFailure implements Action {\n  readonly type = AuthApiActionTypes.SignUpFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up success\n */\nexport class ForgotPasswordSuccess implements Action {\n  readonly type = AuthApiActionTypes.ForgotPasswordSuccess;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\n/**\n * sign up failure\n */\nexport class ForgotPasswordFailure implements Action {\n  readonly type = AuthApiActionTypes.ForgotPasswordFailure;\n\n  constructor(public payload: { message: any }) {\n  }\n}\n\nexport type AuthApiActionsUnion =\n  | LoginSuccess\n  | LoginFailure\n  | LoginRedirect\n  | LogoutSuccess\n  | LogoutFailure\n  | SignUpSuccess\n  | SignUpFailure\n  | ForgotPasswordSuccess\n  | ForgotPasswordFailure;\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SigninComponent.html":{"url":"components/SigninComponent.html","title":"component - SigninComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SigninComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/components/signin/signin.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-signin\n            \n\n\n\n\n            \n                templateUrl\n                ./signin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage$\n                            \n                            \n                                progressBar\n                            \n                            \n                                signinForm\n                            \n                            \n                                submitButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                signin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/components/signin/signin.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/components/signin/signin.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signin\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/components/signin/signin.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            submit the form\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromAuth.getError)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/components/signin/signin.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            progressBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        progressBar:     MatProgressBar\n\n                    \n                \n                    \n                        \n                            Type :     MatProgressBar\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatProgressBar)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/components/signin/signin.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signinForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        signinForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/components/signin/signin.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitButton\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        submitButton:     MatButton\n\n                    \n                \n                    \n                        \n                            Type :     MatButton\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatButton)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/components/signin/signin.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatProgressBar, MatButton } from '@angular/material';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport * as fromAuth from '../../reducers';\nimport { AuthPageActions } from '../../actions';\n\n@Component({\n  selector: 'moio-signin',\n  templateUrl: './signin.component.html'\n})\nexport class SigninComponent implements OnInit {\n\n  @ViewChild(MatProgressBar) progressBar: MatProgressBar;\n  @ViewChild(MatButton) submitButton: MatButton;\n\n  signinForm: FormGroup;\n\n  // get any error\n  errorMessage$: Observable = this.store.pipe(\n    select(fromAuth.getError)\n  );\n\n  constructor(private store: Store, private translate: TranslateService) {\n    translate.setDefaultLang('de');\n  }\n\n  ngOnInit() {\n    this.signinForm = new FormGroup({\n      username: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required)\n    });\n\n    this.store.pipe(\n      select(fromAuth.getPending),\n    ).subscribe(pending => {\n\n      if (pending) {\n        this.progressBar.mode = 'indeterminate';\n        this.signinForm.disable();\n      } else {\n        this.progressBar.mode = 'determinate';\n        this.signinForm.enable();\n      }\n    });\n  }\n\n  /**\n   * submit the form\n   */\n  signin() {\n    const signinData = this.signinForm.value;\n\n    this.store.dispatch(new AuthPageActions.Login({credentials: signinData}));\n  }\n\n}\n\n    \n\n    \n        \n  \n\n    \n\n    \n      \n\n        \n          \n          {{'Auth.SignInToYourAccount' | translate}}\n        \n\n        \n          {{errorMessage$ | async}}!\n        \n\n        \n          \n            \n              \n            \n             {{'Auth.UsernameRequired' | translate}}\n            \n          \n\n          \n            \n              \n            \n             {{'Auth.PasswordRequried' | translate}}\n            \n          \n\n          \n            {{'Auth.Signin' | translate}}\n          \n\n          \n            \n              {{'Forgot password' | translate }}\n            \n\n            \n\n            \n              {{'Create a new account' | translate}}\n            \n          \n        \n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            {{\\'Auth.SignInToYourAccount\\' | translate}}                          {{errorMessage$ | async}}!                                                                             {{\\'Auth.UsernameRequired\\' | translate}}                                                                                   {{\\'Auth.PasswordRequried\\' | translate}}                                            {{\\'Auth.Signin\\' | translate}}                                              {{\\'Forgot password\\' | translate }}                                                  {{\\'Create a new account\\' | translate}}                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'SigninComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Signup.html":{"url":"classes/Signup.html","title":"class - Signup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Signup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/actions/auth-page.actions.ts\n        \n\n            \n                Description\n            \n            \n                signup action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/actions/auth-page.actions.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-page.actions.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : AuthPageActionTypes.Signup\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/actions/auth-page.actions.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { ICredentials } from '../models/user.interface';\n\nexport enum AuthPageActionTypes {\n  Login = '[Auth/Login Page] Login',\n  Signup = '[Auth/Signup Page] Signup',\n  ForgotPassword = '[Auth/Forgot Password Page] Forgot Password'\n}\n\n/**\n * Login action\n */\nexport class Login implements Action {\n  readonly type = AuthPageActionTypes.Login;\n\n  constructor(public payload: { credentials: ICredentials }) {\n  }\n}\n\n/**\n * signup action\n */\nexport class Signup implements Action {\n  readonly type = AuthPageActionTypes.Signup;\n\n  constructor(public payload: { credentials: ICredentials }) {\n  }\n}\n\n/**\n * action for the forgot password page\n */\nexport class ForgotPassword implements Action {\n  readonly type = AuthPageActionTypes.ForgotPassword;\n\n  constructor(public payload: { email: string }) {\n  }\n}\n\nexport type AuthPageActionsUnion =\n  | Login\n  | Signup\n  | ForgotPassword;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupComponent.html":{"url":"components/SignupComponent.html","title":"component - SignupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/components/signup/signup.component.ts\n\n\n    \n        Description\n    \n    \n        signup component\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-signup\n            \n\n\n\n\n            \n                templateUrl\n                ./signup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                progressBar\n                            \n                            \n                                signupForm\n                            \n                            \n                                submitButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/components/signup/signup.component.ts:16\n                            \n                        \n\n                \n                    \n                            constructor\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/components/signup/signup.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            on init life cycle callback\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/components/signup/signup.component.ts:48\n                            \n                        \n\n\n                \n                    \n                            signup / submit form\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            progressBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        progressBar:     MatProgressBar\n\n                    \n                \n                    \n                        \n                            Type :     MatProgressBar\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatProgressBar)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/components/signup/signup.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signupForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        signupForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/components/signup/signup.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitButton\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        submitButton:     MatButton\n\n                    \n                \n                    \n                        \n                            Type :     MatButton\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatButton)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/components/signup/signup.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatProgressBar, MatButton } from '@angular/material';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\n\n/**\n * signup component\n */\n@Component({\n  selector: 'moio-signup',\n  templateUrl: './signup.component.html'\n})\nexport class SignupComponent implements OnInit {\n  @ViewChild(MatProgressBar) progressBar: MatProgressBar;\n  @ViewChild(MatButton) submitButton: MatButton;\n\n  signupForm: FormGroup;\n  \n  /**\n   * constructor\n   */\n  constructor() {\n  }\n\n   /**\n   * on init life cycle callback\n   */\n  ngOnInit() {\n    const password = new FormControl('', Validators.required);\n    const confirmPassword = new FormControl('', Validators.required);\n\n    this.signupForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: password,\n      confirmPassword: confirmPassword,\n      agreed: new FormControl('', (control: FormControl) => {\n        const agreed = control.value;\n        if (!agreed) {\n          return {agreed: true};\n        }\n        return null;\n      })\n    });\n  }\n\n  /**\n   * signup / submit form\n   */\n  signup() {\n    this.submitButton.disabled = true;\n    this.progressBar.mode = 'indeterminate';\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n          \n          Sign up to use our service\n        \n        \n          \n            \n              \n            \n             Email is required\n            \n\n             Invaild email address\n            \n          \n\n          \n            \n              \n            \n             Password is required\n            \n          \n\n          \n            \n              \n            \n            Confirm password is required.\n            \n            Passwords\n              do not math.\n            \n          \n\n          \n            I have read and agree to the terms of service.\n            \n\n             You must agree to the terms and conditions\n            \n          \n\n          Sign up\n          \n            Sign in to existing\n              account\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            Sign up to use our service                                                                             Email is required                         Invaild email address                                                                                   Password is required                                                                                  Confirm password is required.                        Passwords              do not math.                                            I have read and agree to the terms of service.                         You must agree to the terms and conditions                                Sign up                      Sign in to existing              account                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'SignupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State.html":{"url":"interfaces/State.html","title":"interface - State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/reducers/index.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        router\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        router\n                                    \n                                \n                                \n                                    \n                                        router:     fromRouter.RouterReducerState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromRouter.RouterReducerState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as fromRouter from '@ngrx/router-store';\nimport { ActionReducer, ActionReducerMap, MetaReducer } from '@ngrx/store';\nimport { environment } from '../../environments/environment';\nimport { localStorageSync } from 'ngrx-store-localstorage';\n\nexport interface State {\n  router: fromRouter.RouterReducerState;\n}\n\n// basic gloabl reducer\nexport const reducers: ActionReducerMap = {\n  router: fromRouter.routerReducer\n};\n\n// the logger function\nexport function logger(reducer: ActionReducer): ActionReducer {\n  return (state: State, action: any): State => {\n    console.log('action', action);\n    console.log('state', state);\n    return reducer(state, action);\n  };\n}\n\n// use localstorage to save the state\nexport function localStorageSyncReducer(reducer: ActionReducer): ActionReducer {\n  return localStorageSync({\n    keys: ['auth'],\n    rehydrate: true\n  })(reducer);\n}\n\nexport const metaReducers: MetaReducer[] = !environment.production\n  ? [logger, localStorageSyncReducer]\n  : [localStorageSyncReducer];\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-1.html":{"url":"interfaces/State-1.html","title":"interface - State-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/reducers/index.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        auth\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth\n                                    \n                                \n                                \n                                    \n                                        auth:     AuthState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AuthState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as fromAuth from './auth.reducer';\nimport * as fromViews from './views.reducer';\nimport * as fromRoot from '../../reducers';\nimport { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { AuthApiActions } from '../actions';\n\nconst jwtHelper = new JwtHelperService();\n\nexport interface AuthState {\n  userState: fromAuth.State;\n  views: fromViews.State;\n}\n\nexport interface State extends fromRoot.State {\n  auth: AuthState;\n}\n\nexport const reducers: ActionReducerMap = {\n  userState: fromAuth.reducer,\n  views: fromViews.reducer\n};\n\nexport const selectAuthState = createFeatureSelector('auth');\n\nexport const selectAuthUserState = createSelector(\n  selectAuthState,\n  (state: AuthState) => state.userState\n);\n\nexport const selectAuthViewsState = createSelector(\n  selectAuthState,\n  (state: AuthState) => state.views\n);\n\nexport const getUser = createSelector(selectAuthUserState, fromAuth.getUser);\nexport const getAccessToken = createSelector(selectAuthUserState, fromAuth.getAccessToken);\n\nexport const isLoggedIn = createSelector(selectAuthUserState, state => {\n  return state.user && state.access_token && !jwtHelper.isTokenExpired(state.access_token);\n});\n\nexport const getPending = createSelector(\n  selectAuthViewsState,\n  fromViews.getPending\n);\n\nexport const getError = createSelector(\n  selectAuthViewsState,\n  fromViews.getError\n);\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-10.html":{"url":"interfaces/State-10.html","title":"interface - State-10","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/reducers/patients.reducer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        selectedPatientId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        selectedPatientId\n                                    \n                                \n                                \n                                    \n                                        selectedPatientId:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PatientsApiActions, PatientsActions } from '../actions';\nimport { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { IPatient } from '../models/patient.model';\nimport { AuthApiActions } from '../../auth/actions';\n\n// state interface definition\nexport interface State extends EntityState {\n  selectedPatientId: number | null;\n}\n\n// extend & export entity adapater\nexport const adapater: EntityAdapter = createEntityAdapter({\n  selectId: (patient: IPatient) => patient.id,\n  sortComparer: false\n});\n\n// compose the initial state\nexport const initialState: State = adapater.getInitialState({\n  selectedPatientId: null\n});\n\n/**\n * reducer for the patients state\n * @param state\n * @param action\n */\nexport function reducer(\n  state: State = initialState,\n  action:\n    | PatientsApiActions.PatientsApiActionsUnion\n    | PatientsActions.PatientsActionsUnion\n    | AuthApiActions.AuthApiActionsUnion\n): State {\n\n  switch (action.type) {\n\n    // load patients success state\n    case PatientsApiActions.PatientsApiActionTypes.LoadPatientsSuccess:\n      return adapater.upsertMany(action.payload.patients, state);\n\n    // add a new entity to the state in case creation is successful\n    case PatientsApiActions.PatientsApiActionTypes.CreatePatientSuccess:\n      return adapater.addOne(action.payload.patient, state);\n\n    case PatientsApiActions.PatientsApiActionTypes.EditPatientSuccess:\n      return adapater.upsertOne(action.payload.patient, state);\n\n    // case select patient\n    case PatientsActions.PatientsActionTypes.SelectPatient:\n      return {\n        ...state,\n        selectedPatientId: action.payload.id\n      };\n\n    // clear selected patient\n    case (PatientsActions.PatientsActionTypes.DismissEditPatient):\n      return {\n        ...state,\n        selectedPatientId: null\n      }\n\n    // reset state to initial state on logout\n    case AuthApiActions.AuthApiActionTypes.LogoutSuccess:\n    case PatientsActions.PatientsActionTypes.ResetPatientsState:\n      return initialState;\n\n    default:\n      return state;\n  }\n\n}\n\n/**\n * return the selected patient id from the state\n * @param state\n * @param state the current state\n */\nexport const getSelectedPatientId = (state: State) => state.selectedPatientId;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-11.html":{"url":"interfaces/State-11.html","title":"interface - State-11","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/reducers/user-patients.reducer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n\n\n\n    \n\n\n    \n        import { UsersApiActions, UsersActions } from '../actions';\nimport { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { AuthApiActions } from '../../auth/actions';\nimport { IPatient } from '../models/patient.model';\n\n// state interface definition\nexport interface State extends EntityState {\n}\n\n// extend & export entity adapater\nexport const adapater: EntityAdapter = createEntityAdapter({\n  selectId: (patient: IPatient) => patient.id,\n  sortComparer: false\n});\n\n// compose the initial state\nexport const initialState: State = adapater.getInitialState({\n});\n\n/**\n * reducer for the user patients state\n * @param state\n * @param action\n */\nexport function reducer(\n  state: State = initialState,\n  action:\n    | UsersApiActions.UsersApiActionsUnion\n    | UsersActions.UsersActionsUnion\n    | AuthApiActions.AuthApiActionsUnion\n): State {\n\n  switch (action.type) {\n\n    // load user patients success state\n    case UsersApiActions.UsersApiActionTypes.LoadUserPatientsSuccess:\n      return adapater.upsertMany(action.payload.patients, state);\n\n    // clear selected user\n    case (UsersActions.UsersActionTypes.DismissEditUser):\n      return adapater.removeAll(state)\n\n    // clear user patients\n    case (UsersActions.UsersActionTypes.SelectUser):\n      return adapater.removeAll(state)\n\n    // reset state to initial state on logout\n    case AuthApiActions.AuthApiActionTypes.LogoutSuccess:\n    case UsersActions.UsersActionTypes.ResetUsersState:\n      return initialState;\n\n    default:\n      return state;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-12.html":{"url":"interfaces/State-12.html","title":"interface - State-12","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/reducers/users-page.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createUserError\n                                \n                                \n                                        createUserPending\n                                \n                                \n                                        editUserError\n                                \n                                \n                                        editUserPending\n                                \n                                \n                                        error\n                                \n                                \n                                        LoadUserPatientsError\n                                \n                                \n                                        loadUserPatientsPending\n                                \n                                \n                                        pending\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createUserError\n                                    \n                                \n                                \n                                    \n                                        createUserError:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createUserPending\n                                    \n                                \n                                \n                                    \n                                        createUserPending:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editUserError\n                                    \n                                \n                                \n                                    \n                                        editUserError:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editUserPending\n                                    \n                                \n                                \n                                    \n                                        editUserPending:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LoadUserPatientsError\n                                    \n                                \n                                \n                                    \n                                        LoadUserPatientsError:     null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadUserPatientsPending\n                                    \n                                \n                                \n                                    \n                                        loadUserPatientsPending:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pending\n                                    \n                                \n                                \n                                    \n                                        pending:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UsersApiActions, UsersActions } from '../actions';\n\nexport interface State {\n  error: string | null;\n  pending: boolean;\n  createUserError: string | null;\n  createUserPending: boolean;\n  editUserError: string | null;\n  editUserPending: boolean;\n  loadUserPatientsPending: boolean;\n  LoadUserPatientsError: null;\n}\n\nexport const initialState: State = {\n  error: null,\n  pending: false,\n  createUserError: null,\n  createUserPending: false,\n  editUserError: null,\n  editUserPending: false,\n  loadUserPatientsPending: false,\n  LoadUserPatientsError: null\n};\n\n/**\n * reducer for users page\n *\n * @param state\n * @param action\n */\nexport function reducer(\n  state: State = initialState,\n  action: UsersApiActions.UsersApiActionsUnion\n    | UsersActions.UsersActionsUnion): State {\n  switch (action.type) {\n\n    case (UsersActions.UsersActionTypes.LoadUsers):\n      return {\n        ...state,\n        pending: true,\n        error: null\n      };\n\n    case (UsersActions.UsersActionTypes.EditUser):\n      return {\n        ...state,\n        editUserPending: true,\n        editUserError: null\n      };\n\n    case (UsersActions.UsersActionTypes.LoadUserPatients):\n      return {\n        ...state,\n        loadUserPatientsPending: true,\n        LoadUserPatientsError: null\n      };\n\n    case (UsersActions.UsersActionTypes.CreateUser):\n      return {\n        ...state,\n        createUserPending: true\n      };\n    \n    case (UsersApiActions.UsersApiActionTypes.CreateUserFailure):\n      return {\n        ...state,\n        createUserPending: false,\n        createUserError: action.payload.messages\n      };\n\n    case (UsersApiActions.UsersApiActionTypes.CreateUserSuccess):\n      return {\n        ...state,\n        createUserPending: false,\n        createUserError: null\n      };\n\n    case (UsersApiActions.UsersApiActionTypes.LoadUsersSuccess):\n      return {\n        ...state,\n        pending: false,\n        error: null\n      };\n\n    case (UsersApiActions.UsersApiActionTypes.LoadUserPatientsSuccess):\n      return {\n        ...state,\n        loadUserPatientsPending: false,\n        LoadUserPatientsError: null\n      };\n\n    case (UsersApiActions.UsersApiActionTypes.LoadUserPatientsFailure):\n      return {\n        ...state,\n        loadUserPatientsPending: false,\n        LoadUserPatientsError: action.payload.message\n      };\n\n    case (UsersApiActions.UsersApiActionTypes.EditUserSuccess):\n      return {\n        ...state,\n        editUserPending: false,\n        editUserError: null\n      };\n\n    case (UsersActions.UsersActionTypes.DismissEditUser):\n      return {\n        ...state,\n        error: null\n      }\n\n    case (UsersApiActions.UsersApiActionTypes.LoadUsersFailure):\n      return {\n        ...state,\n        pending: false,\n        error: action.payload.message\n      };\n    \n    case (UsersApiActions.UsersApiActionTypes.EditUserFailure):\n      return {\n        ...state,\n        editUserPending: false,\n        editUserError: action.payload.message\n      };\n\n    default:\n      return state;\n\n  }\n}\n\n/**\n * get the current error state for user pages\n * @param state\n */\nexport const getError = (state: State) => state.error;\n\n/**\n * get the pending state for the user pages\n * @param state\n */\nexport const getPending = (state: State) => state.pending;\n\n/**\n * get the current error state when creating user\n * @param state\n */\nexport const getCreateUserError = (state: State) => state.createUserError;\n\n/**\n * get the pending state when creating user\n * @param state\n */\nexport const getCreateUserPending = (state: State) => state.createUserPending;\n\n/**\n * get the current error state when editing user\n * @param state\n */\nexport const getEditUserError = (state: State) => state.editUserError;\n\n/**\n * get the pending state when editing user\n * @param state\n */\nexport const getEditUserPending = (state: State) => state.editUserPending;\n\n/**\n * get the pending state when loading user patients\n * @param state\n */\nexport const getLoadUserPatientsPending = (state: State) => state.loadUserPatientsPending;\n\n/**\n * get the error state when loading user patients\n * @param state\n */\nexport const getLoadUserPatientsError = (state: State) => state.LoadUserPatientsError;\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-13.html":{"url":"interfaces/State-13.html","title":"interface - State-13","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/reducers/users.reducer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        selectedUserId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        selectedUserId\n                                    \n                                \n                                \n                                    \n                                        selectedUserId:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UsersApiActions, UsersActions } from '../actions';\nimport { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { User } from '../models/user.model';\nimport { AuthApiActions } from '../../auth/actions';\n\n// state interface definition\nexport interface State extends EntityState {\n  selectedUserId: number | null;\n}\n\n// extend & export entity adapater\nexport const adapater: EntityAdapter = createEntityAdapter({\n  selectId: (user: User) => user.id,\n  sortComparer: false\n});\n\n// compose the initial state\nexport const initialState: State = adapater.getInitialState({\n  selectedUserId: null\n});\n\n/**\n * reducer for the users state\n * @param state\n * @param action\n */\nexport function reducer(\n  state: State = initialState,\n  action:\n    | UsersApiActions.UsersApiActionsUnion\n    | UsersActions.UsersActionsUnion\n    | AuthApiActions.AuthApiActionsUnion\n): State {\n\n  switch (action.type) {\n\n    // load users success state\n    case UsersApiActions.UsersApiActionTypes.LoadUsersSuccess:\n      return adapater.upsertMany(action.payload.users, state);\n\n    // add a new entity to the state in case creation is successful\n    case UsersApiActions.UsersApiActionTypes.CreateUserSuccess:\n      return adapater.addOne(action.payload.user, state);\n\n    case UsersApiActions.UsersApiActionTypes.EditUserSuccess:\n      return adapater.upsertOne(action.payload.user, state);\n\n    // case select user\n    case UsersActions.UsersActionTypes.SelectUser:\n      return {\n        ...state,\n        selectedUserId: action.payload.id\n      };\n\n    // clear selected user\n    case (UsersActions.UsersActionTypes.DismissEditUser):\n      return {\n        ...state,\n        selectedUserId: null\n      }\n\n    // reset state to initial state on logout\n    case AuthApiActions.AuthApiActionTypes.LogoutSuccess:\n    case UsersActions.UsersActionTypes.ResetUsersState:\n      return initialState;\n\n    default:\n      return state;\n  }\n\n}\n\n/**\n * return the selected user id from the state\n * @param state\n * @param state the current state\n */\nexport const getSelectedUserId = (state: State) => state.selectedUserId;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-2.html":{"url":"interfaces/State-2.html","title":"interface - State-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/reducers/auth.reducer.ts\n        \n\n            \n                Description\n            \n            \n                auth state\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        access_token\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                    \n                                \n                                \n                                    \n                                        access_token:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     IUser | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IUser | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IUser } from '../models/user.interface';\nimport { AuthApiActions, AuthActions } from '../actions';\n\n/**\n * auth state\n */\nexport interface State {\n  user: IUser | null;\n  access_token: string | null;\n}\n\nexport const initialState: State = {\n  user: null,\n  access_token: null\n};\n\nexport function reducer(\n  state: State = initialState,\n  action: AuthApiActions.AuthApiActionsUnion | AuthActions.AuthActionsUnion): State {\n\n  switch (action.type) {\n\n    case AuthApiActions.AuthApiActionTypes.LoginSuccess:\n      return {\n        ...state,\n        user: action.payload.response.user,\n        access_token: action.payload.response.access_token\n      };\n\n    case AuthApiActions.AuthApiActionTypes.LogoutSuccess:\n      return initialState;\n\n    default:\n      return state;\n  }\n}\n\nexport const getUser = (state: State) => state.user;\nexport const getAccessToken = (state: State) => state.access_token;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-3.html":{"url":"interfaces/State-3.html","title":"interface - State-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/reducers/views.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        pending\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pending\n                                    \n                                \n                                \n                                    \n                                        pending:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AuthActions, AuthApiActions, AuthPageActions } from '../actions';\n\nexport interface State {\n  error: string | null;\n  pending: boolean;\n}\n\nexport const initialState: State = {\n  error: null,\n  pending: false\n};\n\nexport function reducer(\n  state: State = initialState,\n  action: AuthActions.AuthActionsUnion\n    | AuthApiActions.AuthApiActionsUnion\n    | AuthPageActions.AuthPageActionsUnion): State {\n\n  switch (action.type) {\n\n    case AuthPageActions.AuthPageActionTypes.Login:\n      return {\n        ...state,\n        pending: true,\n        error: null\n      };\n\n    case AuthApiActions.AuthApiActionTypes.LoginSuccess:\n      return {\n        ...state,\n        pending: false,\n        error: null\n      };\n\n    case AuthApiActions.AuthApiActionTypes.LoginFailure:\n      return {\n        ...state,\n        pending: false,\n        error: action.payload.message\n      };\n\n    default:\n      return state;\n  }\n\n}\n\nexport const getError = (state: State) => state.error;\nexport const getPending = (state: State) => state.pending;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-4.html":{"url":"interfaces/State-4.html","title":"interface - State-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/reducers/index.ts\n        \n\n            \n                Description\n            \n            \n                assign state to global store\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dashboard\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dashboard\n                                    \n                                \n                                \n                                    \n                                        dashboard:     DashboardState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DashboardState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as fromUserPage from './users-page.reducer';\nimport * as fromPatientPage from './patients-page.reducer';\nimport * as fromNursingHomePage from './nursing-homes-page.reducer';\nimport * as fromRoot from '../../reducers';\nimport * as fromUsers from './users.reducer';\nimport * as fromPatients from './patients.reducer';\nimport * as fromUserPatients from './user-patients.reducer';\nimport * as fromPatientUsers from './patient-users.reducer';\nimport * as fromNursingHome from './nursing-homes.reducer';\nimport * as fromLayout from './layout.reducer';\nimport { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\n/**\n * compose dashboard state for global store\n */\nexport interface DashboardState {\n  userPage: fromUserPage.State;\n  users: fromUsers.State;\n  nursingHomePage: fromNursingHomePage.State;\n  nursingHomes: fromNursingHome.State;\n  patientPage: fromPatientPage.State;\n  patients: fromPatients.State;\n  userPatients: fromUserPatients.State;\n  patientUsers: fromPatientUsers.State;\n  layout: fromLayout.State;\n}\n\n/**\n * assign state to global store\n */\nexport interface State extends fromRoot.State {\n  dashboard: DashboardState;\n}\n\n/**\n * compose action reducers\n */\nexport const reducers: ActionReducerMap = {\n  userPage: fromUserPage.reducer,\n  users: fromUsers.reducer,\n  nursingHomePage: fromNursingHomePage.reducer,\n  nursingHomes: fromNursingHome.reducer,\n  patientPage: fromPatientPage.reducer,\n  patients: fromPatients.reducer,\n  userPatients: fromUserPatients.reducer,\n  patientUsers: fromPatientUsers.reducer,\n  layout: fromLayout.reducer\n};\n\n// create feature selectors\nexport const getDashboardState = createFeatureSelector('dashboard');\n\n// ****************** USERS PAGE *************\nexport const getUsersPageState = createSelector(\n  getDashboardState,\n  (state: DashboardState) => state.userPage\n);\n\n// get error state of the userPage from the store\nexport const getUserPageError = createSelector(\n  getUsersPageState,\n  fromUserPage.getError\n);\n\n// get pending state of the userPage from the store\nexport const getUserPagePending = createSelector(\n  getUsersPageState,\n  fromUserPage.getPending\n);\n\n// get error state when creating user from the store\nexport const getUserCreationError = createSelector(\n  getUsersPageState,\n  fromUserPage.getCreateUserError\n);\n\n// get pending state when creating a user from the store\nexport const getUserCreationPending = createSelector(\n  getUsersPageState,\n  fromUserPage.getCreateUserPending\n);\n\n// get error state when editing a user from the store\nexport const getUserEditionError = createSelector(\n  getUsersPageState,\n  fromUserPage.getEditUserError\n);\n\n// get pending state when editing a user from the store\nexport const getUserEditionPending = createSelector(\n  getUsersPageState,\n  fromUserPage.getEditUserPending\n);\n\n// get pending state when loading user patients from the store\nexport const getLoadUserPatientsPending = createSelector(\n  getUsersPageState,\n  fromUserPage.getLoadUserPatientsPending\n);\n\n// get error state when loading user patients from the store\nexport const getLoadUserPatientsError = createSelector(\n  getUsersPageState,\n  fromUserPage.getLoadUserPatientsError\n);\n\n// ****************** USERS *************\nexport const getUsersState = createSelector(\n  getDashboardState,\n  (state: DashboardState) => state.users\n);\n\n// get the selected user id from state\nexport const getSelectedUserId = createSelector(\n  getUsersState,\n  fromUsers.getSelectedUserId\n);\n\n// deconstruct several functions from ngrx/entity\nexport const {\n  selectIds: getUsersIds,\n  selectEntities: getUserEntities,\n  selectAll: getAllUsers,\n  selectTotal: getTotalUsers\n} = fromUsers.adapater.getSelectors(getUsersState);\n\n// get the selected user from the state / users collection\nexport const getSelectedUser = createSelector(\n  getUserEntities,\n  getSelectedUserId,\n  (entities, id) => entities[id]\n);\n\n\n// ****************** USER PATIENTS *************\nexport const getUserPatientsState = createSelector(\n  getDashboardState,\n  (state: DashboardState) => state.userPatients\n);\n\n// deconstruct several functions from ngrx/entity\nexport const {\n  selectEntities: getUserPatientsEntities,\n  selectAll: getAllUserPatients,\n  selectTotal: getTotalUserPatients\n} = fromUserPatients.adapater.getSelectors(getUserPatientsState);\n\n\n\n// ****************** NURSING HOMES PAGE *************\nexport const getNursingHomesPageState = createSelector(\n  getDashboardState,\n  (state: DashboardState) => state.nursingHomePage\n);\n\n// get error state of the nursingHomePage from the store\nexport const getNursingHomePageError = createSelector(\n  getNursingHomesPageState,\n  fromNursingHomePage.getError\n);\n\n// get pending state of the nursingHomePage from the store\nexport const getNursingHomePagePending = createSelector(\n  getNursingHomesPageState,\n  fromNursingHomePage.getPending\n);\n\n// ****************** NURSING HOMES *************\nexport const getNursingHomesState = createSelector(\n  getDashboardState,\n  (state: DashboardState) => state.nursingHomes\n);\n\n// get the selected nursing home id from state\nexport const getSelectedNursingHomeId = createSelector(\n  getNursingHomesState,\n  fromNursingHome.getSelectedNursingHomeId\n);\n\n// deconstruct several functions from ngrx/entity\nexport const {\n  selectIds: getNursingHomesIds,\n  selectEntities: getNursingHomeEntities,\n  selectAll: getAllNursingHomes,\n  selectTotal: getTotalNursiomes\n} = fromNursingHome.adapater.getSelectors(getNursingHomesState);\n\n// get the selected nursing home from the state / nursing homes collection\nexport const getSelectedNursingHome = createSelector(\n  getNursingHomeEntities,\n  getSelectedNursingHomeId,\n  (entities, id) => entities[id]\n);\n\n// ****************** PATIENTS PAGE *************\nexport const getPatientsPageState = createSelector(\n  getDashboardState,\n  (state: DashboardState) => state.patientPage\n);\n\n// get error state of the patientPage from the store\nexport const getPatientPageError = createSelector(\n  getPatientsPageState,\n  fromPatientPage.getError\n);\n\n// get pending state of the patientPage from the store\nexport const getPatientPagePending = createSelector(\n  getPatientsPageState,\n  fromPatientPage.getPending\n);\n\n// get error state when creating patient from the store\nexport const getPatientCreationError = createSelector(\n  getPatientsPageState,\n  fromPatientPage.getCreatePatientError\n);\n\n// get pending state when creating a patient from the store\nexport const getPatientCreationPending = createSelector(\n  getPatientsPageState,\n  fromPatientPage.getCreatePatientPending\n);\n\n// get error state when editing a patient from the store\nexport const getPatientEditionError = createSelector(\n  getPatientsPageState,\n  fromPatientPage.getEditPatientError\n);\n\n// get pending state when editing a patient from the store\nexport const getPatientEditionPending = createSelector(\n  getPatientsPageState,\n  fromPatientPage.getEditPatientPending\n);\n\n// get pending state when loading patient users from the store\nexport const getLoadPatientUsersPending = createSelector(\n  getPatientsPageState,\n  fromPatientPage.getLoadPatientUsersPending\n);\n\n// get error state when loading patient users from the store\nexport const getLoadPatientUsersError = createSelector(\n  getPatientsPageState,\n  fromPatientPage.getLoadPatientUsersError\n);\n\n// ****************** PATIENTS *************\nexport const getPatientsState = createSelector(\n  getDashboardState,\n  (state: DashboardState) => state.patients\n);\n\n// get the selected patient id from state\nexport const getSelectedPatientId = createSelector(\n  getPatientsState,\n  fromPatients.getSelectedPatientId\n);\n\n// deconstruct several functions from ngrx/entity\nexport const {\n  selectIds: getPatientsIds,\n  selectEntities: getPatientEntities,\n  selectAll: getAllPatients,\n  selectTotal: getTotalPatients\n} = fromPatients.adapater.getSelectors(getPatientsState);\n\n// get the selected patient from the state / patients collection\nexport const getSelectedPatient = createSelector(\n  getPatientEntities,\n  getSelectedPatientId,\n  (entities, id) => entities[id]\n);\n\n// ****************** PATIENT USERS *************\nexport const getPatientUsersState = createSelector(\n  getDashboardState,\n  (state: DashboardState) => state.patientUsers\n);\n\n// deconstruct several functions from ngrx/entity\nexport const {\n  selectEntities: getPatientUsersEntities,\n  selectAll: getAllPatientUsers,\n  selectTotal: getTotalPatientUsers\n} = fromPatientUsers.adapater.getSelectors(getPatientUsersState);\n\n// ****************** DASHBOARD LAYOUT *************\nexport const getLayoutState = createSelector(\n  getDashboardState,\n  (state: DashboardState) => state.layout\n);\n\n/**\n * Layout configurations selectors\n */\nexport const getSideNav = createSelector(getLayoutState, fromLayout.getSideNav);\nexport const getNavPosition = createSelector(getLayoutState, fromLayout.getNavPosition);\nexport const getDirection = createSelector(getLayoutState, fromLayout.getDirection);\nexport const getLayoutInTransition = createSelector(getLayoutState, fromLayout.getLayoutInTransition);\nexport const getIsMobile = createSelector(getLayoutState, fromLayout.getIsMobile);\nexport const getUseBreadcrumb = createSelector(getLayoutState, fromLayout.getUseBreadcrumb);\nexport const getBreadcrumb = createSelector(getLayoutState, fromLayout.getBreadcrumb);\nexport const getTopbarFixed = createSelector(getLayoutState, fromLayout.getTopbarFixed);\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-5.html":{"url":"interfaces/State-5.html","title":"interface - State-5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/reducers/layout.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        breadcrumb\n                                \n                                \n                                        direction\n                                \n                                \n                                        isMobile\n                                \n                                \n                                        layoutInTransition\n                                \n                                \n                                        navigationPos\n                                \n                                \n                                        sideNavStyle\n                                \n                                \n                                        topbarFixed\n                                \n                                \n                                        useBreadcrumb\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        breadcrumb\n                                    \n                                \n                                \n                                    \n                                        breadcrumb:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                    \n                                \n                                \n                                    \n                                        direction:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isMobile\n                                    \n                                \n                                \n                                    \n                                        isMobile:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layoutInTransition\n                                    \n                                \n                                \n                                    \n                                        layoutInTransition:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        navigationPos\n                                    \n                                \n                                \n                                    \n                                        navigationPos:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sideNavStyle\n                                    \n                                \n                                \n                                    \n                                        sideNavStyle:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topbarFixed\n                                    \n                                \n                                \n                                    \n                                        topbarFixed:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useBreadcrumb\n                                    \n                                \n                                \n                                    \n                                        useBreadcrumb:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LayoutActions, LayoutActionTypes } from '../actions/layout.actions';\nimport { createFeatureSelector, createSelector } from '@ngrx/store';\n\nexport interface State {\n  sideNavStyle: string; // full, compact, closed\n  navigationPos: string;   // side, top\n  direction: string;             // ltr, rtl\n  layoutInTransition: boolean;\n  isMobile: boolean;\n  useBreadcrumb: boolean;\n  breadcrumb: string;      // simple, title\n  topbarFixed: boolean;\n}\n\nconst initialState: State = {\n  sideNavStyle: 'full',\n  navigationPos: 'side',\n  direction: 'ltr',\n  layoutInTransition: false,\n  isMobile: false,\n  useBreadcrumb: true,\n  breadcrumb: 'title',\n  topbarFixed: false\n};\n\nexport const getSideNav = (state: State) => state.sideNavStyle;\nexport const getNavPosition = (state: State) => state.navigationPos;\nexport const getDirection = (state: State) => state.direction;\nexport const getLayoutInTransition = (state: State) => state.layoutInTransition;\nexport const getIsMobile = (state: State) => state.isMobile;\nexport const getUseBreadcrumb = (state: State) => state.useBreadcrumb;\nexport const getBreadcrumb = (state: State) => state.breadcrumb;\nexport const getTopbarFixed = (state: State) => state.topbarFixed;\n\nexport function reducer(state = initialState, action: LayoutActions): State {\n  switch (action.type) {\n\n    case LayoutActionTypes.OpenSideNav:\n      return {\n        ...state,\n        sideNavStyle: action.payload\n      };\n    case LayoutActionTypes.CloseSideNav:\n      return {\n        ...state,\n        sideNavStyle: action.payload\n      };\n    case LayoutActionTypes.CompactSideNav:\n      return {\n        ...state,\n        sideNavStyle: action.payload\n      };\n\n    case LayoutActionTypes.SetNavigationPositionSide:\n      return {\n        ...state,\n        navigationPos: action.payload\n      };\n    case LayoutActionTypes.SetNavigationPositionTop:\n      return {\n        ...state,\n        navigationPos: action.payload\n      };\n\n    case LayoutActionTypes.SetDirectionLtr:\n      return {\n        ...state,\n        direction: action.payload\n      };\n    case LayoutActionTypes.SetDirectionRtr:\n      return {\n        ...state,\n        direction: action.payload\n      };\n\n    case LayoutActionTypes.TransitioningLayout:\n      return {\n        ...state,\n        layoutInTransition: action.payload\n      };\n\n    case LayoutActionTypes.UseBreadcrumb:\n      return {\n        ...state,\n        useBreadcrumb: action.payload\n      };\n\n    case LayoutActionTypes.MakeBreadcrumbSimple:\n      return {\n        ...state,\n        breadcrumb: action.payload\n      };\n\n    case LayoutActionTypes.MakeBreadcrumbTitle:\n      return {\n        ...state,\n        breadcrumb: action.payload\n      };\n\n    case LayoutActionTypes.FixTopbar:\n      return {\n        ...state,\n        topbarFixed: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-6.html":{"url":"interfaces/State-6.html","title":"interface - State-6","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/reducers/nursing-homes-page.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        pending\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pending\n                                    \n                                \n                                \n                                    \n                                        pending:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NursingHomesApiActions, NursingHomesActions } from '../actions';\n\nexport interface State {\n  error: string | null;\n  pending: boolean;\n}\n\nexport const initialState: State = {\n  error: null,\n  pending: false\n};\n\n/**\n * reducer for nursingHomes page\n *\n * @param state\n * @param action\n */\nexport function reducer(\n  state: State = initialState,\n  action: NursingHomesApiActions.NursingHomesApiActionsUnion\n    | NursingHomesActions.NursingHomesActionsUnion): State {\n  switch (action.type) {\n\n    case (NursingHomesActions.NursingHomesActionTypes.LoadNursingHomes):\n    case (NursingHomesActions.NursingHomesActionTypes.EditNursingHome):\n      return {\n        ...state,\n        pending: true,\n        error: null\n      };\n\n    case (NursingHomesApiActions.NursingHomesApiActionTypes.LoadNursingHomesSuccess):\n    case (NursingHomesApiActions.NursingHomesApiActionTypes.CreateNursingHomeSuccess):\n    case (NursingHomesApiActions.NursingHomesApiActionTypes.EditNursingHomeSuccess):\n      return {\n        ...state,\n        pending: false,\n        error: null\n      };\n\n    case (NursingHomesActions.NursingHomesActionTypes.DismissEditNursingHome):\n      return {\n        ...state,\n        error: null\n      }\n\n    case (NursingHomesApiActions.NursingHomesApiActionTypes.LoadNursingHomesFailure):\n    case (NursingHomesApiActions.NursingHomesApiActionTypes.CreateNursingHomeFailure):\n    case (NursingHomesApiActions.NursingHomesApiActionTypes.EditNursingHomeFailure):\n      return {\n        ...state,\n        pending: false,\n        error: action.payload.message\n      };\n\n    default:\n      return state;\n\n  }\n}\n\n/**\n * get the current error state for nursingHome pages\n * @param state\n */\nexport const getError = (state: State) => state.error;\n\n/**\n * get the pending state for the nursingHome pages\n * @param state\n */\nexport const getPending = (state: State) => state.pending;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-7.html":{"url":"interfaces/State-7.html","title":"interface - State-7","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/reducers/nursing-homes.reducer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        selectedNursingHomeId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        selectedNursingHomeId\n                                    \n                                \n                                \n                                    \n                                        selectedNursingHomeId:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NursingHomesApiActions, NursingHomesActions } from '../actions';\nimport { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { NursingHome } from '../models/nursing-home.model';\nimport { AuthApiActions } from '../../auth/actions';\n\n// state interface definition\nexport interface State extends EntityState {\n  selectedNursingHomeId: number | null;\n}\n\n// extend & export entity adapater\nexport const adapater: EntityAdapter = createEntityAdapter({\n  selectId: (nursingHome: NursingHome) => nursingHome.id,\n  sortComparer: false\n});\n\n// compose the initial state\nexport const initialState: State = adapater.getInitialState({\n  selectedNursingHomeId: null\n});\n\n/**\n * reducer for the nursingHomes state\n * @param state\n * @param action\n */\nexport function reducer(\n  state: State = initialState,\n  action:\n    | NursingHomesApiActions.NursingHomesApiActionsUnion\n    | NursingHomesActions.NursingHomesActionsUnion\n    | AuthApiActions.AuthApiActionsUnion\n): State {\n\n  switch (action.type) {\n\n    // load nursingHomes success state\n    case NursingHomesApiActions.NursingHomesApiActionTypes.LoadNursingHomesSuccess:\n      console.log(action.payload.nursingHomes);\n      return adapater.upsertMany(action.payload.nursingHomes, state);\n\n    // add a new entity to the state in case creation is successful\n    case NursingHomesApiActions.NursingHomesApiActionTypes.CreateNursingHomeSuccess:\n      return adapater.addOne(action.payload.nursingHome, state);\n\n    case NursingHomesApiActions.NursingHomesApiActionTypes.EditNursingHomeSuccess:\n      return adapater.upsertOne(action.payload.nursingHome, state);\n\n    // case select nursingHome\n    case NursingHomesActions.NursingHomesActionTypes.SelectNursingHome:\n      return {\n        ...state,\n        selectedNursingHomeId: action.payload.id\n      };\n\n    // reset state to initial state on logout\n    case AuthApiActions.AuthApiActionTypes.LogoutSuccess:\n    case NursingHomesActions.NursingHomesActionTypes.ResetNursingHomesState:\n      return initialState;\n\n    default:\n      return state;\n  }\n\n}\n\n/**\n * return the selected nursingHome id from the state\n * @param state\n */\nexport const getSelectedNursingHomeId = (state: State) => state.selectedNursingHomeId;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-8.html":{"url":"interfaces/State-8.html","title":"interface - State-8","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/reducers/patient-users.reducer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n\n\n\n    \n\n\n    \n        import { PatientsApiActions, PatientsActions } from '../actions';\nimport { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { AuthApiActions } from '../../auth/actions';\nimport { User } from '../models/user.model';\n\n// state interface definition\nexport interface State extends EntityState {\n}\n\n// extend & export entity adapater\nexport const adapater: EntityAdapter = createEntityAdapter({\n  selectId: (user: User) => user.id,\n  sortComparer: false\n});\n\n// compose the initial state\nexport const initialState: State = adapater.getInitialState({\n});\n\n/**\n * reducer for the patient users state\n * @param state\n * @param action\n */\nexport function reducer(\n  state: State = initialState,\n  action:\n    | PatientsApiActions.PatientsApiActionsUnion\n    | PatientsActions.PatientsActionsUnion\n    | AuthApiActions.AuthApiActionsUnion\n): State {\n\n  switch (action.type) {\n\n    // load patient users success state\n    case PatientsApiActions.PatientsApiActionTypes.LoadPatientUsersSuccess:\n      return adapater.upsertMany(action.payload.users, state);\n\n    // clear selected patient\n    case (PatientsActions.PatientsActionTypes.DismissEditPatient):\n      return adapater.removeAll(state)\n\n    // clear patient users\n    case (PatientsActions.PatientsActionTypes.SelectPatient):\n      return adapater.removeAll(state)\n\n    // reset state to initial state on logout\n    case AuthApiActions.AuthApiActionTypes.LogoutSuccess:\n    case PatientsActions.PatientsActionTypes.ResetPatientsState:\n      return initialState;\n\n    default:\n      return state;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-9.html":{"url":"interfaces/State-9.html","title":"interface - State-9","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/reducers/patients-page.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createPatientError\n                                \n                                \n                                        createPatientPending\n                                \n                                \n                                        editPatientError\n                                \n                                \n                                        editPatientPending\n                                \n                                \n                                        error\n                                \n                                \n                                        loadPatientUsersError\n                                \n                                \n                                        loadPatientUsersPending\n                                \n                                \n                                        pending\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createPatientError\n                                    \n                                \n                                \n                                    \n                                        createPatientError:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createPatientPending\n                                    \n                                \n                                \n                                    \n                                        createPatientPending:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editPatientError\n                                    \n                                \n                                \n                                    \n                                        editPatientError:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editPatientPending\n                                    \n                                \n                                \n                                    \n                                        editPatientPending:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadPatientUsersError\n                                    \n                                \n                                \n                                    \n                                        loadPatientUsersError:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadPatientUsersPending\n                                    \n                                \n                                \n                                    \n                                        loadPatientUsersPending:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pending\n                                    \n                                \n                                \n                                    \n                                        pending:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PatientsApiActions, PatientsActions } from '../actions';\n\nexport interface State {\n  error: string | null;\n  pending: boolean;\n  createPatientError: string | null;\n  createPatientPending: boolean;\n  editPatientError: string | null;\n  editPatientPending: boolean;\n  loadPatientUsersPending: boolean;\n  loadPatientUsersError: string | null;\n\n}\n\nexport const initialState: State = {\n  error: null,\n  pending: false,\n  createPatientError: null,\n  createPatientPending: false,\n  editPatientError: null,\n  editPatientPending: false,\n  loadPatientUsersPending: false,\n  loadPatientUsersError: null\n};\n\n/**\n * reducer for patients page\n *\n * @param state\n * @param action\n */\nexport function reducer(\n  state: State = initialState,\n  action: PatientsApiActions.PatientsApiActionsUnion\n    | PatientsActions.PatientsActionsUnion): State {\n  switch (action.type) {\n\n    case (PatientsActions.PatientsActionTypes.LoadPatients):\n      return {\n        ...state,\n        pending: true,\n        error: null\n      };\n\n    case (PatientsActions.PatientsActionTypes.EditPatient):\n      return {\n        ...state,\n        editPatientPending: true,\n        editPatientError: null\n      };\n\n    case (PatientsActions.PatientsActionTypes.CreatePatient):\n      return {\n        ...state,\n        createPatientPending: true\n      };\n    \n    case (PatientsApiActions.PatientsApiActionTypes.CreatePatientFailure):\n      return {\n        ...state,\n        createPatientPending: false,\n        createPatientError: action.payload.messages\n      };\n\n    case (PatientsApiActions.PatientsApiActionTypes.CreatePatientSuccess):\n      return {\n        ...state,\n        createPatientPending: false,\n        createPatientError: null\n      };\n\n    case (PatientsApiActions.PatientsApiActionTypes.LoadPatientsSuccess):\n      return {\n        ...state,\n        pending: false,\n        error: null\n      };\n\n    case (PatientsApiActions.PatientsApiActionTypes.EditPatientSuccess):\n      return {\n        ...state,\n        editPatientPending: false,\n        editPatientError: null\n      };\n\n    case (PatientsActions.PatientsActionTypes.DismissEditPatient):\n      return {\n        ...state,\n        error: null\n      }\n\n    case (PatientsApiActions.PatientsApiActionTypes.LoadPatientsFailure):\n      return {\n        ...state,\n        pending: false,\n        error: action.payload.message\n      };\n    \n    case (PatientsApiActions.PatientsApiActionTypes.EditPatientFailure):\n      return {\n        ...state,\n        editPatientPending: false,\n        editPatientError: action.payload.message\n      };\n\n    default:\n      return state;\n\n  }\n}\n\n/**\n * get the current error state for patient pages\n * @param state\n */\nexport const getError = (state: State) => state.error;\n\n/**\n * get the pending state for the patient pages\n * @param state\n */\nexport const getPending = (state: State) => state.pending;\n\n/**\n * get the current error state when creating patient\n * @param state\n */\nexport const getCreatePatientError = (state: State) => state.createPatientError;\n\n/**\n * get the pending state when creating patient\n * @param state\n */\nexport const getCreatePatientPending = (state: State) => state.createPatientPending;\n\n/**\n * get the current error state when editing patient\n * @param state\n */\nexport const getEditPatientError = (state: State) => state.editPatientError;\n\n/**\n * get the pending state when editing patient\n * @param state\n */\nexport const getEditPatientPending = (state: State) => state.editPatientPending;\n\n/**\n * get the pending state when loading user patients\n * @param state\n */\nexport const getLoadPatientUsersPending = (state: State) => state.loadPatientUsersPending;\n\n/**\n * get the error state when loading user patients\n * @param state\n */\nexport const getLoadPatientUsersError = (state: State) => state.loadPatientUsersError;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeService.html":{"url":"injectables/ThemeService.html","title":"injectable - ThemeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/theme.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activatedTheme\n                            \n                            \n                                    Public\n                                egretThemes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyMatTheme\n                            \n                            \n                                changeTheme\n                            \n                            \n                                flipActiveFlag\n                            \n                            \n                                setThemeFromQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/theme.service.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            applyMatTheme\n                            \n                            \n                        \n                    \n                \n                \n                    \napplyMatTheme(r: Renderer2)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/theme.service.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        r\n                                                        \n                                                                    Renderer2\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeTheme\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeTheme(r: Renderer2, theme: ITheme)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/theme.service.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        r\n                                                        \n                                                                    Renderer2\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        theme\n                                                        \n                                                                    ITheme\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flipActiveFlag\n                            \n                            \n                        \n                    \n                \n                \n                    \nflipActiveFlag(theme: ITheme)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/theme.service.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        theme\n                                                        \n                                                                    ITheme\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setThemeFromQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetThemeFromQuery()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/theme.service.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activatedTheme\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activatedTheme:     ITheme\n\n                    \n                \n                    \n                        \n                            Type :     ITheme\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/theme.service.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            egretThemes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        egretThemes:     ITheme[]\n\n                    \n                \n                    \n                        \n                            Type :     ITheme[]\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n    'name': 'egret-dark-purple',\n    'baseColor': '#9c27b0',\n    'isActive': false\n  }, {\n    'name': 'egret-dark-pink',\n    'baseColor': '#e91e63',\n    'isActive': false\n  }, {\n    'name': 'egret-blue',\n    'baseColor': '#247ba0',\n    'isActive': false\n  }, {\n    'name': 'egret-indigo',\n    'baseColor': '#3f51b5',\n    'isActive': true\n  }]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/theme.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject, Renderer2 } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { getQueryParam } from '../helpers/url.helper';\n\ninterface ITheme {\n  name: string;\n  baseColor?: string;\n  isActive?: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  public egretThemes: ITheme[] = [{\n    'name': 'egret-dark-purple',\n    'baseColor': '#9c27b0',\n    'isActive': false\n  }, {\n    'name': 'egret-dark-pink',\n    'baseColor': '#e91e63',\n    'isActive': false\n  }, {\n    'name': 'egret-blue',\n    'baseColor': '#247ba0',\n    'isActive': false\n  }, {\n    'name': 'egret-indigo',\n    'baseColor': '#3f51b5',\n    'isActive': true\n  }];\n  public activatedTheme: ITheme;\n\n  constructor(\n    @Inject(DOCUMENT) private document: Document\n  ) {\n  }\n\n  // Invoked in AppComponent and apply 'activatedTheme' on startup\n  applyMatTheme(r: Renderer2) {\n    /*\n    ****** (SET YOUR DEFAULT THEME HERE) *******\n    * Assign new Theme to activatedTheme\n    */\n    // this.activatedTheme = this.egretThemes[0];\n    // this.activatedTheme = this.egretThemes[1];\n    // this.activatedTheme = this.egretThemes[2];\n    this.activatedTheme = this.egretThemes[3];\n\n    // *********** ONLY FOR DEMO **********\n    this.setThemeFromQuery();\n    // ************************************\n\n    this.changeTheme(r, this.activatedTheme);\n  }\n\n  changeTheme(r: Renderer2, theme: ITheme) {\n    r.removeClass(this.document.body, this.activatedTheme.name);\n    r.addClass(this.document.body, theme.name);\n    this.flipActiveFlag(theme);\n  }\n\n  flipActiveFlag(theme: ITheme) {\n    this.egretThemes.forEach((t) => {\n      t.isActive = false;\n      if (t.name === theme.name) {\n        t.isActive = true;\n        this.activatedTheme = theme;\n      }\n    });\n  }\n\n  // *********** ONLY FOR DEMO **********\n  setThemeFromQuery() {\n    const themeStr = getQueryParam('theme');\n    try {\n      this.activatedTheme = JSON.parse(themeStr);\n      this.flipActiveFlag(this.activatedTheme);\n    } catch (e) {\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransitioningLayout.html":{"url":"classes/TransitioningLayout.html","title":"class - TransitioningLayout","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransitioningLayout\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/layout.actions.ts\n        \n\n            \n                Description\n            \n            \n                transition layout action\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/layout.actions.ts:88\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:89\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LayoutActionTypes.TransitioningLayout\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:88\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\n/**\n * layout action types\n */\nexport enum LayoutActionTypes {\n  OpenSideNav = '[Layout] Open Side Nav',\n  CloseSideNav = '[Layout] Close Side Nav',\n  CompactSideNav = '[Layout] Compact Nav position',\n  SetNavigationPositionSide = '[Layout] Set Navigation Position Side',\n  SetNavigationPositionTop = '[Layout] Set Navigation Position Top',\n  SetDirectionLtr = '[Layout] Set Direction Ltr',\n  SetDirectionRtr = '[Layout] Set Direction Rtr',\n  TransitioningLayout = '[Layout] Transitioning Layout',\n  UseBreadcrumb = '[Layout] Use Breadcrumb',\n  MakeBreadcrumbSimple = '[Layout] Make Breadcrumb Simple',\n  MakeBreadcrumbTitle = '[Layout] Make Breadcrumb Title',\n  FixTopbar = '[Layout] Fix Topbar'\n}\n\n/**\n * open side navigation action\n */\nexport class OpenSideNav {\n  readonly type = LayoutActionTypes.OpenSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * close side navigation action\n */\nexport class CloseSideNav {\n  readonly type = LayoutActionTypes.CloseSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * compact side navigation action\n */\nexport class CompactSideNav {\n  readonly type = LayoutActionTypes.CompactSideNav;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to side action\n */\nexport class SetNavigationPositionSide {\n  readonly type = LayoutActionTypes.SetNavigationPositionSide;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to top action\n */\nexport class SetNavigationPositionTop {\n  readonly type = LayoutActionTypes.SetNavigationPositionTop;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to left-to-right action\n */\nexport class SetDirectionLtr {\n  readonly type = LayoutActionTypes.SetDirectionLtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to right-to-left action\n */\nexport class SetDirectionRtr {\n  readonly type = LayoutActionTypes.SetDirectionRtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * transition layout action\n */\nexport class TransitioningLayout {\n  readonly type = LayoutActionTypes.TransitioningLayout;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * Use breadcrumb action\n */\nexport class UseBreadcrumb {\n  readonly type = LayoutActionTypes.UseBreadcrumb;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * make breadcrumb simple action\n */\nexport class MakeBreadcrumbSimple {\n  readonly type = LayoutActionTypes.MakeBreadcrumbSimple;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * make breadcrum title action\n */\nexport class MakeBreadcrumbTitle {\n  readonly type = LayoutActionTypes.MakeBreadcrumbTitle;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * fix top bar action\n */\nexport class FixTopbar {\n  readonly type = LayoutActionTypes.FixTopbar;\n  constructor(public payload: boolean) { \n  }\n}\n\nexport type LayoutActions = \n  | OpenSideNav\n  | CloseSideNav\n  | CompactSideNav\n  | SetNavigationPositionSide\n  | SetNavigationPositionTop\n  | SetDirectionLtr\n  | SetDirectionRtr\n  | TransitioningLayout\n  | UseBreadcrumb\n  | MakeBreadcrumbSimple\n  | MakeBreadcrumbTitle\n  | FixTopbar;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UseBreadcrumb.html":{"url":"classes/UseBreadcrumb.html","title":"class - UseBreadcrumb","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UseBreadcrumb\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/actions/layout.actions.ts\n        \n\n            \n                Description\n            \n            \n                Use breadcrumb action\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/actions/layout.actions.ts:97\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:98\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LayoutActionTypes.UseBreadcrumb\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/actions/layout.actions.ts:97\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\n/**\n * layout action types\n */\nexport enum LayoutActionTypes {\n  OpenSideNav = '[Layout] Open Side Nav',\n  CloseSideNav = '[Layout] Close Side Nav',\n  CompactSideNav = '[Layout] Compact Nav position',\n  SetNavigationPositionSide = '[Layout] Set Navigation Position Side',\n  SetNavigationPositionTop = '[Layout] Set Navigation Position Top',\n  SetDirectionLtr = '[Layout] Set Direction Ltr',\n  SetDirectionRtr = '[Layout] Set Direction Rtr',\n  TransitioningLayout = '[Layout] Transitioning Layout',\n  UseBreadcrumb = '[Layout] Use Breadcrumb',\n  MakeBreadcrumbSimple = '[Layout] Make Breadcrumb Simple',\n  MakeBreadcrumbTitle = '[Layout] Make Breadcrumb Title',\n  FixTopbar = '[Layout] Fix Topbar'\n}\n\n/**\n * open side navigation action\n */\nexport class OpenSideNav {\n  readonly type = LayoutActionTypes.OpenSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * close side navigation action\n */\nexport class CloseSideNav {\n  readonly type = LayoutActionTypes.CloseSideNav;\n  constructor(public payload: string) {\n  }\n}\n\n/**\n * compact side navigation action\n */\nexport class CompactSideNav {\n  readonly type = LayoutActionTypes.CompactSideNav;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to side action\n */\nexport class SetNavigationPositionSide {\n  readonly type = LayoutActionTypes.SetNavigationPositionSide;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set navigation position to top action\n */\nexport class SetNavigationPositionTop {\n  readonly type = LayoutActionTypes.SetNavigationPositionTop;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to left-to-right action\n */\nexport class SetDirectionLtr {\n  readonly type = LayoutActionTypes.SetDirectionLtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * set direction to right-to-left action\n */\nexport class SetDirectionRtr {\n  readonly type = LayoutActionTypes.SetDirectionRtr;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * transition layout action\n */\nexport class TransitioningLayout {\n  readonly type = LayoutActionTypes.TransitioningLayout;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * Use breadcrumb action\n */\nexport class UseBreadcrumb {\n  readonly type = LayoutActionTypes.UseBreadcrumb;\n  constructor(public payload: boolean) { \n  }\n}\n\n/**\n * make breadcrumb simple action\n */\nexport class MakeBreadcrumbSimple {\n  readonly type = LayoutActionTypes.MakeBreadcrumbSimple;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * make breadcrum title action\n */\nexport class MakeBreadcrumbTitle {\n  readonly type = LayoutActionTypes.MakeBreadcrumbTitle;\n  constructor(public payload: string) { \n  }\n}\n\n/**\n * fix top bar action\n */\nexport class FixTopbar {\n  readonly type = LayoutActionTypes.FixTopbar;\n  constructor(public payload: boolean) { \n  }\n}\n\nexport type LayoutActions = \n  | OpenSideNav\n  | CloseSideNav\n  | CompactSideNav\n  | SetNavigationPositionSide\n  | SetNavigationPositionTop\n  | SetDirectionLtr\n  | SetDirectionRtr\n  | TransitioningLayout\n  | UseBreadcrumb\n  | MakeBreadcrumbSimple\n  | MakeBreadcrumbTitle\n  | FixTopbar;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/models/user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        confirm_password\n                                \n                                \n                                            Optional\n                                        email\n                                \n                                \n                                            Optional\n                                        firstname\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        last_login\n                                \n                                \n                                            Optional\n                                        lastname\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        nursing_home\n                                \n                                \n                                            Optional\n                                        nursing_home_key\n                                \n                                \n                                            Optional\n                                        password\n                                \n                                \n                                            Optional\n                                        patient_profiles\n                                \n                                \n                                            Optional\n                                        registered_on\n                                \n                                \n                                            Optional\n                                        user_patient_permission\n                                \n                                \n                                            Optional\n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        confirm_password\n                                    \n                                \n                                \n                                    \n                                        confirm_password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                    \n                                \n                                \n                                    \n                                        firstname:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_login\n                                    \n                                \n                                \n                                    \n                                        last_login:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                    \n                                \n                                \n                                    \n                                        lastname:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nursing_home\n                                    \n                                \n                                \n                                    \n                                        nursing_home:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nursing_home_key\n                                    \n                                \n                                \n                                    \n                                        nursing_home_key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        patient_profiles\n                                    \n                                \n                                \n                                    \n                                        patient_profiles:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registered_on\n                                    \n                                \n                                \n                                    \n                                        registered_on:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_patient_permission\n                                    \n                                \n                                \n                                    \n                                        user_patient_permission:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IPatient } from './patient.model';\n\nexport interface User {\n  id?: number | null;\n  name?: string;\n  username?: string;\n  firstname?: string;\n  lastname?: string;\n  email?: string;\n  nursing_home?: string;\n  registered_on?: string;\n  last_login?: string;\n  patient_profiles?: number;\n  password?: string;\n  confirm_password?: string;\n  nursing_home_key?: string;\n  user_patient_permission?: number | null;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserEditFormComponent.html":{"url":"components/UserEditFormComponent.html","title":"component - UserEditFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserEditFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-user-edit-form\n            \n\n            \n                styleUrls\n                ./user-edit-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-edit-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                componentActive\n                            \n                            \n                                    Public\n                                confirmService\n                            \n                            \n                                displayMessage\n                            \n                            \n                                errorMessage$\n                            \n                            \n                                    Private\n                                genericValidator\n                            \n                            \n                                loadUserPatientsError$\n                            \n                            \n                                loadUserPatientsPending$\n                            \n                            \n                                pageTitle\n                            \n                            \n                                user\n                            \n                            \n                                userEditForm\n                            \n                            \n                                userPatients$\n                            \n                            \n                                    Private\n                                validationMessages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                cancelEdit\n                            \n                            \n                                deleteUser\n                            \n                            \n                                displayUser\n                            \n                            \n                                editUser\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, fb: FormBuilder, translate: TranslateService, confirmService: ConfirmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmService\n                                                  \n                                                        \n                                                                    ConfirmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            blur\n                            \n                            \n                        \n                    \n                \n                \n                    \nblur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts:97\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancelEdit\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancelEdit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts:122\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts:143\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisplayUser(user: User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts:101\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editUser\n                            \n                            \n                        \n                    \n                \n                \n                    \neditUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts:154\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts:91\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentActive\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        componentActive:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            confirmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        confirmService:     ConfirmService\n\n                    \n                \n                    \n                        \n                            Type :     ConfirmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        displayMessage:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            genericValidator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        genericValidator:     GenericValidator\n\n                    \n                \n                    \n                        \n                            Type :     GenericValidator\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadUserPatientsError$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadUserPatientsError$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getLoadUserPatientsError)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadUserPatientsPending$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadUserPatientsPending$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getLoadUserPatientsPending)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pageTitle:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'User Edit'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userEditForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userEditForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userPatients$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userPatients$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getAllUserPatients)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validationMessages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        validationMessages:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-edit-form/user-edit-form.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { Observable, of } from 'rxjs';\n\nimport { User } from '../../../models/user.model';\nimport { GenericValidator } from '../../../shared/generic-validator';\nimport { NumberValidators } from '../../../shared/number-validator';\n\nimport { takeWhile } from 'rxjs/operators';\nimport { Store, select } from '@ngrx/store';\n\nimport * as fromDashboard from '../../../reducers';\nimport * as usersActions from '../../../actions/users.actions';\nimport { IPatient } from 'src/app/dashboard/models/patient.model';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ConfirmService } from '../../../../core/services/confirm.service'\n\n@Component({\n  selector: 'moio-user-edit-form',\n  templateUrl: './user-edit-form.component.html',\n  styleUrls: ['./user-edit-form.component.scss']\n})\nexport class UserEditFormComponent implements OnInit, OnDestroy {\n  pageTitle = 'User Edit';\n  errorMessage$: Observable;\n  componentActive = true;\n  userEditForm: FormGroup;\n\n  user: User;\n\n  // Use with the generic validation message class\n  displayMessage: { [key: string]: string } = {};\n  private validationMessages: { [key: string]: { [key: string]: string } };\n  private genericValidator: GenericValidator;\n\n  // all user patients\n  userPatients$: Observable = this.store.pipe(\n    select(fromDashboard.getAllUserPatients)\n  );\n\n  // get error state when loading user patients\n  loadUserPatientsError$: Observable = this.store.pipe(\n    select(fromDashboard.getLoadUserPatientsError)\n  );\n\n  // get pending state when loading user patients\n  loadUserPatientsPending$: Observable = this.store.pipe(\n    select(fromDashboard.getLoadUserPatientsPending)\n  );\n\n  constructor(private store: Store,\n              private fb: FormBuilder,\n              private translate: TranslateService,\n              public confirmService: ConfirmService) {\n\n    // Defines all of the validation messages for the form.\n    // These could instead be retrieved from a file or database.\n    this.validationMessages = {\n      username: {\n        required: 'Username is required.'\n      }\n    };\n\n    // Define an instance of the validator for use with this form,\n    // passing in this form's set of validation messages.\n    this.genericValidator = new GenericValidator(this.validationMessages);\n\n    this.translate.setDefaultLang('de');\n  }\n\n  ngOnInit() {\n    // Watch for changes to the currently selected user\n    this.store.pipe(\n      select(fromDashboard.getSelectedUser),\n      takeWhile(() => this.componentActive)\n    ).subscribe(\n      user => {\n        if (user){\n          this.user = user;\n          this.displayUser(this.user);\n        }\n      }\n    );\n\n    // Watch for changes to the error message\n    this.errorMessage$ = this.store.pipe(select(fromDashboard.getUserEditionError));\n\n  }\n\n  ngOnDestroy(): void {\n    this.componentActive = false;\n  }\n\n  // Also validate on blur\n  // Helpful if the user tabs through required fields\n  blur(): void {\n    this.displayMessage = this.genericValidator.processMessages(this.userEditForm);\n  }\n\n  displayUser(user: User) {\n    // Display the appropriate page title\n    this.pageTitle = `${this.user.firstname} ${this.user.lastname}`;\n    // Define the form group\n    this.userEditForm = this.fb.group({\n      id: [user.id],\n      firstname: [user.firstname],\n      lastname: [user.lastname],\n      email: [user.email,[Validators.email]],\n      username: [user.username, Validators.required],      \n      nursing_home: [user.nursing_home],\n      registered_on: [user.registered_on],\n      last_login: [user.last_login]\n    });\n\n    // Watch for value changes\n    const formValuechanges = this.userEditForm.valueChanges.subscribe(\n      value => this.displayMessage = this.genericValidator.processMessages(this.userEditForm)\n    );\n  }\n\n  cancelEdit(): void {\n    // Redisplay the currently selected user\n    // replacing any edits made\n    this.displayUser(this.user);\n    this.store.dispatch(new usersActions.DismissEditUser);\n\n\n    const title = this.translate.instant(\"CloseUnsavedForm.title\");\n    const message = this.translate.instant(\"CloseUnsavedForm.message\");\n    if (this.userEditForm.dirty){\n      this.confirmService.confirm({title: title, message: message})\n      .subscribe(res => {\n        if (res){\n          this.store.dispatch(new usersActions.DismissEditUser());\n        }\n      })\n    }else{\n      this.store.dispatch(new usersActions.DismissEditUser());\n    }\n  }\n\n  deleteUser(): void {\n    if (this.user && this.user.id) {\n      if (confirm(`Really delete the user: ${this.user.firstname}?`)) {\n        this.store.dispatch(new usersActions.DeleteUser(this.user.id));\n      }\n    } else {\n      // No need to delete, it was never saved\n      this.store.dispatch(new usersActions.DismissEditUser);\n    }\n  }\n\n  editUser(): void {\n    console.log(this.userEditForm.value);\n    if (this.userEditForm.valid) {\n      if (this.userEditForm.dirty) {\n        // Copy over all of the original user properties\n        // Then copy over the values from the form\n        // This ensures values not on the form, such as the Id, are retained\n        const p = { id: this.userEditForm.get('id').value,\n                    firstname: this.userEditForm.get('firstname').value,\n                    lastname: this.userEditForm.get('lastname').value,\n                    email: this.userEditForm.get('email').value,\n                    username: this.userEditForm.get('username').value\n                  };\n\n        this.store.dispatch(new usersActions.EditUser(p));\n      }\n    } else {\n      this.errorMessage$ = of('Please correct the validation errors.');\n    }\n  }\n\n}\n    \n\n    \n        \n  \n    \n      {{pageTitle}}\n      \n    \n    \n      \n        \n          \n            \n              \n                \n              \n            \n\n            \n              \n                \n              \n            \n\n            \n              \n                \n              \n              \n                {{'EmailInvalid' | translate}} \n            \n\n            \n              \n                \n              \n               {{'UsernameRequired' | translate}} \n              \n                {{'Username' | translate}} \n            \n          \n\n          \n            \n              \n                \n              \n            \n\n            \n              \n                \n              \n            \n\n            \n              \n                \n              \n            \n          \n          \n            \n              {{'Edit' | translate}}\n            \n            {{'Cancel' | translate}}\n          \n        \n      \n    \n  \n\n  \n    \n    {{'ConnectedPatientProfiles' | translate}}\n    \n      \n        \n\n          \n            \n              {{ row?.firstname }} {{ row?.lastname }}\n            \n          \n          \n            \n              {{ row?.permission }}\n            \n          \n          \n            \n              {{ row?.nursing_home.name }}\n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./user-edit-form.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{pageTitle}}                                                                                                                                                                                                                                                                    {{\\'EmailInvalid\\' | translate}}                                                                                    {{\\'UsernameRequired\\' | translate}}                               {{\\'Username\\' | translate}}                                                                                                                                                                                                                                                                                           {{\\'Edit\\' | translate}}                        {{\\'Cancel\\' | translate}}                                        {{\\'ConnectedPatientProfiles\\' | translate}}                                                      {{ row?.firstname }} {{ row?.lastname }}                                                          {{ row?.permission }}                                                          {{ row?.nursing_home.name }}                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'UserEditFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserFormComponent.html":{"url":"components/UserFormComponent.html","title":"component - UserFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/components/users/user-form/user-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                user-form\n            \n\n\n\n\n            \n                templateUrl\n                ./user-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                confirmService\n                            \n                            \n                                createUserPending$\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                loadNursingHomeErrorMessage$\n                            \n                            \n                                loadNursinghomePending$\n                            \n                            \n                                nursingHomes$\n                            \n                            \n                                saveUserErrorMessage$\n                            \n                            \n                                    Public\n                                translate\n                            \n                            \n                                    Public\n                                userForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                passwordMatchValidator\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, dialogRef: MatDialogRef, fb: FormBuilder, store: Store, translate: TranslateService, confirmService: ConfirmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/components/users/user-form/user-form.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmService\n                                                  \n                                                        \n                                                                    ConfirmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancel\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-form/user-form.component.ts:112\n                            \n                        \n\n\n                \n                    \n                            dismiss the open user form dialogue with confirmation if \nthe form has unsave data\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-form/user-form.component.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordMatchValidator\n                            \n                            \n                        \n                    \n                \n                \n                    \npasswordMatchValidator(control: AbstractControl)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-form/user-form.component.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control\n                                                        \n                                                                    AbstractControl\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submit\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-form/user-form.component.ts:99\n                            \n                        \n\n\n                \n                    \n                            dispatch new create user action when form is submitted\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            confirmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        confirmService:     ConfirmService\n\n                    \n                \n                    \n                        \n                            Type :     ConfirmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-form/user-form.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createUserPending$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        createUserPending$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getUserCreationPending)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-form/user-form.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-form/user-form.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-form/user-form.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadNursingHomeErrorMessage$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadNursingHomeErrorMessage$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getUserCreationError)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-form/user-form.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadNursinghomePending$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadNursinghomePending$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getNursingHomePagePending)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-form/user-form.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nursingHomes$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nursingHomes$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getAllNursingHomes)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-form/user-form.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveUserErrorMessage$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        saveUserErrorMessage$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getNursingHomePageError)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-form/user-form.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translate:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-form/user-form.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-form/user-form.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { FormBuilder, Validators, FormGroup, AbstractControl } from '@angular/forms';\n/* NGRX */\nimport { Store, select } from '@ngrx/store';\nimport * as fromDashboard from '../../../reducers';\nimport * as nursingHomeActions from '../../../actions/nursing-homes.actions';\nimport { Observable } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\nimport { UsersApiActions, UsersActions } from '../../../actions';\nimport { User } from '../../../models/user.model';\nimport { NursingHome } from 'src/app/dashboard/models/nursing-home.model';\nimport { ConfirmService } from '../../../../core/services/confirm.service'\n\n\n@Component({\n  selector: 'user-form',\n  templateUrl: './user-form.component.html'\n})\nexport class UserFormComponent implements OnInit {\n  public userForm: FormGroup;\n\n  // observe user creation pending state\n  createUserPending$: Observable = this.store.pipe(\n    select(fromDashboard.getUserCreationPending)\n  );\n\n  // observe errors while saving the user\n  saveUserErrorMessage$: Observable = this.store.pipe(\n    select(fromDashboard.getNursingHomePageError)\n  );\n\n  // observe pending state while loading nursing homes\n  loadNursinghomePending$: Observable = this.store.pipe(\n    select(fromDashboard.getNursingHomePagePending)\n  );\n\n  // observe errors while loading nursing homes\n  loadNursingHomeErrorMessage$: Observable = this.store.pipe(\n    select(fromDashboard.getUserCreationError)\n  );\n\n  nursingHomes$: Observable = this.store.pipe(\n    select(fromDashboard.getAllNursingHomes)\n  );\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public dialogRef: MatDialogRef,\n    private fb: FormBuilder,\n    private store: Store, \n    public translate: TranslateService,\n    public confirmService: ConfirmService\n  ) { \n    translate.setDefaultLang('de');\n  }\n\n  ngOnInit() {\n    // LoadAllNursingHomes\n    this.store.dispatch(new nursingHomeActions.LoadNursingHomes());\n\n    /**\n     * Create userForm group to collect user details\n     */\n    this.userForm = this.fb.group({\n      firstname: [''],\n      lastname: [''],\n      username: ['', Validators.required],\n      email: ['',[Validators.email]],\n      password: ['',Validators.required],\n      password_confirmation: ['',Validators.required],\n      nursing_home_key: ['']\n    },\n    {\n      // check whether our password and confirm password match\n      validator: this.passwordMatchValidator\n   })\n  }\n\n  passwordMatchValidator(control: AbstractControl) {\n    const password: string = control.get('password').value; // get password from our password form control\n    const passwordConfirmation: string = control.get('password_confirmation').value; // get password from our password_confirmation form control\n    // compare is the password math\n    if (password !== passwordConfirmation) {\n      // if they don't match, set an error in our passwordConfirmation form control\n      control.get('password_confirmation').setErrors({ NoPasswordMatch: true });\n    }else{\n     if ( control.getError('NoPasswordMatch')){\n       control.setErrors(null);\n     }\n      return null\n    }\n  }\n\n  /**\n   * dispatch new create user action when form is submitted\n   * @param user\n   */\n  submit() {\n    if (this.userForm.valid) {\n      const user = this.userForm.value;\n      console.log(user);\n      this.store.dispatch(new UsersActions.CreateUser({user}));\n    }\n    // this.dialogRef.close(this.userForm.value)\n  }\n\n  /**\n   * dismiss the open user form dialogue with confirmation if \n   * the form has unsave data\n   */\n  cancel(){\n    const title = this.translate.instant(\"CloseUnsavedForm.title\");\n    const message = this.translate.instant(\"CloseUnsavedForm.message\");\n    if (this.userForm.dirty){\n      this.confirmService.confirm({title: title, message: message})\n      .subscribe(res => {\n        if (res){\n          this.store.dispatch(new UsersActions.DismissUserFormDialog());\n        }\n      })\n    }else{\n      this.store.dispatch(new UsersActions.DismissUserFormDialog());\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n{{data.title}}\n\n  {{loadNursingHomeErrorMessage$ | async}}!\n\n\n  {{saveUserErrorMessage$ | async }}!\n\n\n  \n    \n      \n        \n        {{'FirstNameRequired' | translate}}\n      \n    \n\n    \n      \n        \n        {{'LastNameRequired' | translate}}\n      \n    \n\n    \n      \n        \n        {{'UserNameRequired' | translate}}\n      \n    \n\n    \n      \n        \n        {{'EmailRequired' | translate}}\n      \n    \n\n    \n      \n        \n        {{'PasswordRequried' | translate}}\n      \n    \n\n    \n      \n        \n        \n          {{'ConfirmPasswordRequired' | translate}}\n        \n         \n          {{ 'NoPasswordMatch' | translate }} \n        \n      \n    \n\n    \n      \n        \n          \n            {{nursingHome.name}}\n          \n        \n        {{'NursingHomeKeyRequired' |\n          translate}}\n\n      \n    \n\n    \n      {{'Save' |\n        translate}}\n      \n      {{'Cancel' | translate}}\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{data.title}}  {{loadNursingHomeErrorMessage$ | async}}!  {{saveUserErrorMessage$ | async }}!                            {{\\'FirstNameRequired\\' | translate}}                                    {{\\'LastNameRequired\\' | translate}}                                    {{\\'UserNameRequired\\' | translate}}                                    {{\\'EmailRequired\\' | translate}}                                    {{\\'PasswordRequried\\' | translate}}                                              {{\\'ConfirmPasswordRequired\\' | translate}}                           {{ \\'NoPasswordMatch\\' | translate }}                                                           {{nursingHome.name}}                          {{\\'NursingHomeKeyRequired\\' |          translate}}                    {{\\'Save\\' |        translate}}            {{\\'Cancel\\' | translate}}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'UserFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserListComponent.html":{"url":"components/UserListComponent.html","title":"component - UserListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/components/users/user-list/user-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-user-list\n            \n\n            \n                styleUrls\n                ./user-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columns\n                            \n                            \n                                componentActive\n                            \n                            \n                                errorMessage$\n                            \n                            \n                                ids\n                            \n                            \n                                isPending$\n                            \n                            \n                                    Public\n                                items\n                            \n                            \n                                selectedUser\n                            \n                            \n                                users\n                            \n                            \n                                users$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                newUser\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSelectRow\n                            \n                            \n                                selectUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, translate: TranslateService, dialog: MatDialog, snack: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/components/users/user-list/user-list.component.ts:69\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Store\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                TranslateService\n\n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        snack\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nnewUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-list/user-list.component.ts:116\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-list/user-list.component.ts:111\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-list/user-list.component.ts:92\n                            \n                        \n\n\n                \n                    \n                            init UserListComponent component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSelectRow\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSelectRow(undefined)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-list/user-list.component.ts:134\n                            \n                        \n\n\n                \n                    \n                            emit the selected user\nthe datatable component returns an ARRAY of selected\nelements depending on the 'selectionType' setting.\nIn our case just a single user!\nTherefor emit 0th element of the selection.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectUser(user: User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-list/user-list.component.ts:121\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columns\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        columns:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      prop: 'fullname',\n      name: this.translate.instant('Name')\n    },\n    {\n      prop: 'nursing_home',\n      name: this.translate.instant('NursingHome')\n    },\n    {\n      prop: 'registered_on',\n      name: this.translate.instant('RegisteredOn')\n    },\n    {\n      prop: 'last_login',\n      name: this.translate.instant('LastLoginOn')\n    },\n    {\n      prop: 'patient_profiles',\n      name: this.translate.instant('PatientProfiles')\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-list/user-list.component.ts:31\n                            \n                        \n\n                \n                    \n                        Users Table columns\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentActive\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        componentActive:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-list/user-list.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getUserPageError)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-list/user-list.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ids\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ids:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-list/user-list.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isPending$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isPending$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getUserPagePending)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-list/user-list.component.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        items:     User[]\n\n                    \n                \n                    \n                        \n                            Type :     User[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-list/user-list.component.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedUser:     User | null\n\n                    \n                \n                    \n                        \n                            Type :     User | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-list/user-list.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-list/user-list.component.ts:87\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getAllUsers)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/user-list/user-list.component.ts:57\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy} from '@angular/core';\nimport { MatProgressBar, MatButton } from '@angular/material';\nimport { MatDialogRef, MatDialog, MatSnackBar } from '@angular/material';\nimport { UserFormComponent } from '../user-form/user-form.component';\n\nimport { User } from '../../../models/user.model';\n\n/* NGRX */\nimport { Store, select } from '@ngrx/store';\nimport * as fromDashboard from '../../../reducers';\nimport * as usersActions from '../../../actions/users.actions';\nimport { Observable } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\nimport { takeWhile } from 'rxjs/operators';\n\n@Component({\n  selector: 'moio-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.scss']\n})\nexport class UserListComponent implements OnInit, OnDestroy {\n  \n  // Used to select user in the list\n  selectedUser: User | null;\n  componentActive = true;\n\n\n  /**\n   * Users Table columns\n   */\n  columns = [\n    {\n      prop: 'fullname',\n      name: this.translate.instant('Name')\n    },\n    {\n      prop: 'nursing_home',\n      name: this.translate.instant('NursingHome')\n    },\n    {\n      prop: 'registered_on',\n      name: this.translate.instant('RegisteredOn')\n    },\n    {\n      prop: 'last_login',\n      name: this.translate.instant('LastLoginOn')\n    },\n    {\n      prop: 'patient_profiles',\n      name: this.translate.instant('PatientProfiles')\n    }\n  ];\n\n  ids: string[];\n  \n  // all users\n  users$: Observable = this.store.pipe(\n    select(fromDashboard.getAllUsers)\n  );\n\n  // pending action\n  isPending$: Observable = this.store.pipe(\n    select(fromDashboard.getUserPagePending)\n  );\n\n  // get error status\n  errorMessage$: Observable = this.store.pipe(\n    select(fromDashboard.getUserPageError)\n  );\n\n  /**\n   * constructor\n   * @param store Store\n   * @param translate TranslateService\n   */\n  constructor(\n    private store: Store, \n    private translate: TranslateService,\n    private dialog: MatDialog,\n    private snack: MatSnackBar) {\n\n      this.translate.setDefaultLang('de');\n\n  }\n\n  public items: User[];\n  users: Observable;\n\n  /**\n   * init UserListComponent component\n   */\n  ngOnInit(): void {\n\n    this.store.dispatch(new usersActions.LoadUsers());\n\n    this.users = this.store.pipe(select(fromDashboard.getAllUsers)) as Observable;\n\n    this.store.pipe(select(fromDashboard.getUsersIds))\n    .subscribe((ids: string[]) => this.ids = ids);\n\n    // Subscribe here because it does not use an async pipe\n    this.store.pipe(\n      select(fromDashboard.getSelectedUser),\n      takeWhile(() => this.componentActive)\n    ).subscribe(\n      currentUser => this.selectedUser = currentUser\n    );\n  }\n\n  // unsubscribe from the observable\n  ngOnDestroy(): void {\n    this.componentActive = false;\n  }\n\n  // Create User action\n  newUser(): void {\n    this.store.dispatch(new usersActions.InitializeUser());\n  }\n\n  // Select user action\n  selectUser(user: User): void {\n    this.store.dispatch(new usersActions.SelectUser(user));\n  }\n\n  /**\n   * emit the selected user\n   * the datatable component returns an ARRAY of selected\n   * elements depending on the 'selectionType' setting.\n   * In our case just a single user!\n   * Therefor emit 0th element of the selection.\n   *\n   * @param selected User first element of array\n   */\n  onSelectRow({selected}) {\n    // this.userSelected.emit(selected[0]);\n    const user = selected[0];\n    this.store.dispatch(new usersActions.SelectUser(user));\n    this.store.dispatch(new usersActions.LoadUserPatients(user.id));\n    \n  }\n\n}\n\n    \n\n    \n        \n\n  \n  \n \n    \n\n    \n                \n                    ./user-list.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'UserListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersComponent.html":{"url":"components/UsersComponent.html","title":"component - UsersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/components/users/users.component.ts\n\n\n    \n        Description\n    \n    \n        contains basic page layout for the\nusers section\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                moio-users-page\n            \n\n\n\n\n            \n                templateUrl\n                ./users.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedUserId$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openPopUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, translate: TranslateService, dialog: MatDialog, snack: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/components/users/users.component.ts:23\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Store\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        snack\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openPopUp\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenPopUp()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/users/users.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedUserId$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedUserId$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.pipe(\n    select(fromDashboard.getSelectedUserId)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/users/users.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport * as fromDashboard from '../../reducers';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { MatDialogRef, MatDialog, MatSnackBar } from '@angular/material';\n\nimport { UserFormComponent } from './user-form/user-form.component';\n\n/**\n * contains basic page layout for the\n * users section\n */\n@Component({\n  selector: 'moio-users-page',\n  templateUrl: './users.component.html'\n})\nexport class UsersComponent {\n\n  // get selected user id\n  selectedUserId$: Observable = this.store.pipe(\n    select(fromDashboard.getSelectedUserId)\n  );\n\n  /**\n   * constructor\n   * @param store Store\n   */\n  constructor(\n    private store: Store,\n    private translate: TranslateService,\n    private dialog: MatDialog,\n    private snack: MatSnackBar) {\n\n  }\n\n   //add appUser\n   openPopUp() { \n    let title = this.translate.instant('UserFormTitle');\n    let dialogRef: MatDialogRef = this.dialog.open(UserFormComponent, {\n      width: '720px',\n      disableClose: true,\n      data: { title: title },\n      id: 'userCreationForm'\n    });\n  }\n}\n\n    \n\n    \n        \n  add{{'Create' | translate}}\n\n\n  \n    \n  \n  \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  add{{\\'Create\\' | translate}}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'moio-root'},{'name': 'AuthLayoutComponent', 'selector': 'moio-auth-layout'},{'name': 'BlankComponent', 'selector': 'moio-blank'},{'name': 'BreadcrumbComponent', 'selector': 'moio-breadcrumb'},{'name': 'ConfirmComponent', 'selector': 'moio-confirm'},{'name': 'DashboardLayoutComponent', 'selector': 'moio-dashboard'},{'name': 'ErrorComponent', 'selector': 'moio-error'},{'name': 'ErrorLayoutComponent', 'selector': 'moio-error-layout'},{'name': 'ForgotPasswordComponent', 'selector': 'moio-forgot-password'},{'name': 'HeaderSideComponent', 'selector': 'moio-header-side'},{'name': 'LoaderComponent', 'selector': 'moio-app-loader'},{'name': 'LockscreenComponent', 'selector': 'moio-lockscreen'},{'name': 'NotFoundComponent', 'selector': 'moio-not-found'},{'name': 'NotificationsComponent', 'selector': 'moio-notifications'},{'name': 'NursingHomeFormComponent', 'selector': 'nursing-home-form'},{'name': 'PatientEditFormComponent', 'selector': 'moio-patient-edit-form'},{'name': 'PatientFormComponent', 'selector': 'patient-form'},{'name': 'PatientListComponent', 'selector': 'moio-patient-list'},{'name': 'PatientsComponent', 'selector': 'moio-patients-page'},{'name': 'SidebarSideComponent', 'selector': 'moio-sidebar-side'},{'name': 'SidebarTopComponent', 'selector': 'moio-sidebar-top'},{'name': 'SidenavComponent', 'selector': 'moio-sidenav'},{'name': 'SigninComponent', 'selector': 'moio-signin'},{'name': 'SignupComponent', 'selector': 'moio-signup'},{'name': 'UserEditFormComponent', 'selector': 'moio-user-edit-form'},{'name': 'UserFormComponent', 'selector': 'user-form'},{'name': 'UserListComponent', 'selector': 'moio-user-list'},{'name': 'UsersComponent', 'selector': 'moio-users-page'}];\n    var DIRECTIVES = [{'name': 'AppDropdownDirective', 'selector': '[appDropdown]'},{'name': 'DropdownAnchorDirective', 'selector': '[appDropdownToggle]'},{'name': 'DropdownLinkDirective', 'selector': '[appDropdownLink]'},{'name': 'EgretSideNavToggleDirective', 'selector': '[EgretSideNavToggle]'},{'name': 'FontSizeDirective', 'selector': '[fontSize]'},{'name': 'ScrollToDirective', 'selector': '[scrollTo]'}];\n    var ACTUAL_COMPONENT = {'name': 'UsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersEffects.html":{"url":"injectables/UsersEffects.html","title":"injectable - UsersEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/effects/users.effects.ts\n        \n\n            \n                Description\n            \n            \n                users effects\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createUser$\n                            \n                            \n                                createUserSuccess$\n                            \n                            \n                                DismissUserFormDialog\n                            \n                            \n                                editUser$\n                            \n                            \n                                editUserSuccess$\n                            \n                            \n                                loadUserPatients\n                            \n                            \n                                loadUsers\n                            \n                            \n                                popUpUserForm$\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, usersService: UsersService, router: Router, store: Store, snackBar: MatSnackBar, translate: TranslateService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/effects/users.effects.ts:243\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                    UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createUser$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        createUser$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(UsersActions.UsersActionTypes.CreateUser),\n      map(action => action.payload.user),\n      exhaustMap((userData: User) => {\n\n        return this.usersService.createUser(userData)\n          .pipe(\n            // delay(2000),\n            map(user => {\n              console.log(user);\n              return new UsersApiActions.CreateUserSuccess({user});\n            }),\n            catchError(httpResponse => {\n              console.log(httpResponse);\n              const messages = httpResponse.statusText.toLowerCase();\n\n              return of(new UsersApiActions.CreateUserFailure({messages}));\n            })\n          );\n      })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/users.effects.ts:27\n                            \n                        \n\n                \n                    \n                        effect fired, when the create new user form is submitted\nsend data to api and handle result\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createUserSuccess$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        createUserSuccess$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(UsersApiActions.UsersApiActionTypes.CreateUserSuccess),\n      tap(() => {\n        this.dialog.getDialogById(\"userCreationForm\").close();\n      })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect({dispatch: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/users.effects.ts:96\n                            \n                        \n\n                \n                    \n                        observes the CreateUserSuccess action\nin case create user succeeds, the form dialog box is closed\nand the users list is shown\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DismissUserFormDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DismissUserFormDialog:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(UsersActions.UsersActionTypes.DismissUserFormDialog),\n      map(() => {\n        this.dialog.getDialogById('userCreationForm').close();\n      })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect({dispatch: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/users.effects.ts:237\n                            \n                        \n\n                \n                    \n                        effect to dismiss the dialog for adding user details\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editUser$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editUser$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$.pipe(\n    ofType(UsersActions.UsersActionTypes.EditUser),\n    map(action => action.payload),\n    exhaustMap((user: User) => {\n\n      return this.usersService.updateUser(user)\n        .pipe(\n          map((savedUser: User) => {\n            this.store.dispatch(new UsersActions.DismissEditUser());\n            return new UsersApiActions.EditUserSuccess({user: savedUser});\n          }),\n          catchError(httpError => {\n            console.log(httpError);\n              const message = httpError.statusText.toLowerCase();\n\n              const snackBarRef = this.snackBar.open(this.translate.instant(message), this.translate.instant('Retry'), {\n                duration: 10000\n              });\n\n              snackBarRef.afterDismissed().subscribe(snackBarDismiss => {\n\n                if (snackBarDismiss.dismissedByAction){\n                  this.store.dispatch(new UsersActions.EditUser(user));\n                } else {\n                  this.router.navigate(['/dashboard/users']);\n                }\n              });\n\n              return of(new UsersApiActions.LoadUserPatientsFailure({message}));\n            })\n        );\n    })\n  )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/users.effects.ts:54\n                            \n                        \n\n                \n                    \n                        send user data to api and handle result\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editUserSuccess$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editUserSuccess$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(UsersApiActions.UsersApiActionTypes.EditUserSuccess),\n      tap(() => {\n        this.store.dispatch(new UsersActions.LoadUsers());\n      })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect({dispatch: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/users.effects.ts:111\n                            \n                        \n\n                \n                    \n                        observes the EditUserSuccess action\nin case edit user succeeds, the list is reloaded\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadUserPatients\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadUserPatients:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(UsersActions.UsersActionTypes.LoadUserPatients),\n      map(action => action.payload),\n      exhaustMap((id: number) => {\n\n        return this.usersService.getUserPatients(id)\n          .pipe(\n            delay(2000),\n            map((patients: IPatient[]) => {\n              console.log(patients);\n\n              for (let key in patients){\n                const patient = patients[key];\n                const user = patient.users.filter(user => user.id === id );\n                let permission = \"\";\n\n                if(user[0].user_patient_permission == 1){\n                  permission = \"Administrator\";\n                }else{\n                  permission = \"Read Only\"\n                }\n                patient[\"permission\"] = permission;\n              }\n\n              return new UsersApiActions.LoadUserPatientsSuccess({patients});\n            }),\n            catchError(httpError => {\n              const message = httpError.statusText.toLowerCase();\n\n              const snackBarRef = this.snackBar.open(this.translate.instant(message), this.translate.instant('Retry'), {\n                duration: 10000\n              });\n\n              snackBarRef.afterDismissed().subscribe(snackBarDismiss => {\n\n                if (snackBarDismiss.dismissedByAction){\n                  this.store.dispatch(new UsersActions.LoadUserPatients(id));\n                } else {\n                  this.router.navigate(['/dashboard/users']);\n                }\n              });\n\n              return of(new UsersApiActions.LoadUserPatientsFailure({message}));\n            })\n          );\n      })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/users.effects.ts:162\n                            \n                        \n\n                \n                    \n                        effect for loading user users\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadUsers:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(UsersActions.UsersActionTypes.LoadUsers),\n      exhaustMap(() => {\n\n        return this.usersService.getUsers()\n          .pipe(\n            //delay(2000),\n            map((users: User[]) => {\n              console.log(users);\n              return new UsersApiActions.LoadUsersSuccess({users});\n            }),\n            catchError(httpError => {\n              const message = httpError.statusText.toLowerCase();\n\n              const snackBarRef = this.snackBar.open(this.translate.instant(message), this.translate.instant('Retry'), {\n                duration: 10000\n              });\n\n              snackBarRef.afterDismissed().subscribe(snackBarDismiss => {\n\n                if (snackBarDismiss.dismissedByAction){\n                  this.store.dispatch(new UsersActions.LoadUsers());\n                } else {\n                  this.router.navigate(['/dashboard']);\n                }\n              });\n\n              return of(new UsersApiActions.LoadUsersFailure({message}));\n            })\n          );\n      })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/users.effects.ts:123\n                            \n                        \n\n                \n                    \n                        effect for loading users\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popUpUserForm$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popUpUserForm$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n    .pipe(\n      ofType(UsersActions.UsersActionTypes.CreateUserFormDialog),\n      exhaustMap(() => {\n        const title = 'Creating a new user';\n        const dialogRef: MatDialogRef = this.dialog.open(UserFormComponent, {\n          width: '720px',\n          disableClose: true,\n          data: { title: title }\n        });\n        \n        return dialogRef.afterClosed();\n      })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/users.effects.ts:215\n                            \n                        \n\n                \n                    \n                        show a dialog form for user details as a pop up\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        snackBar:     MatSnackBar\n\n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/effects/users.effects.ts:259\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { UsersApiActions, UsersActions } from '../actions';\nimport { catchError, exhaustMap, map, tap, delay } from 'rxjs/operators';\nimport { User } from '../models/user.model';\nimport { UsersService } from '../services/users.service';\nimport { of } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MatDialogRef, MatDialog, MatSnackBar } from '@angular/material';\nimport { UserFormComponent } from '../components/users/user-form/user-form.component';\nimport { IPatient } from '../models/patient.model';\nimport { Update } from '@ngrx/entity';\n\n/**\n * users effects\n */\n@Injectable()\nexport class UsersEffects {\n\n  /**\n   * effect fired, when the create new user form is submitted\n   * send data to api and handle result\n   */\n  @Effect()\n  createUser$ = this.actions$\n    .pipe(\n      ofType(UsersActions.UsersActionTypes.CreateUser),\n      map(action => action.payload.user),\n      exhaustMap((userData: User) => {\n\n        return this.usersService.createUser(userData)\n          .pipe(\n            // delay(2000),\n            map(user => {\n              console.log(user);\n              return new UsersApiActions.CreateUserSuccess({user});\n            }),\n            catchError(httpResponse => {\n              console.log(httpResponse);\n              const messages = httpResponse.statusText.toLowerCase();\n\n              return of(new UsersApiActions.CreateUserFailure({messages}));\n            })\n          );\n      })\n    );\n\n  /**\n   * send user data to api and handle result\n   */\n  @Effect()\n  editUser$ = this.actions$.pipe(\n    ofType(UsersActions.UsersActionTypes.EditUser),\n    map(action => action.payload),\n    exhaustMap((user: User) => {\n\n      return this.usersService.updateUser(user)\n        .pipe(\n          map((savedUser: User) => {\n            this.store.dispatch(new UsersActions.DismissEditUser());\n            return new UsersApiActions.EditUserSuccess({user: savedUser});\n          }),\n          catchError(httpError => {\n            console.log(httpError);\n              const message = httpError.statusText.toLowerCase();\n\n              const snackBarRef = this.snackBar.open(this.translate.instant(message), this.translate.instant('Retry'), {\n                duration: 10000\n              });\n\n              snackBarRef.afterDismissed().subscribe(snackBarDismiss => {\n\n                if (snackBarDismiss.dismissedByAction){\n                  this.store.dispatch(new UsersActions.EditUser(user));\n                } else {\n                  this.router.navigate(['/dashboard/users']);\n                }\n              });\n\n              return of(new UsersApiActions.LoadUserPatientsFailure({message}));\n            })\n        );\n    })\n  );\n\n  /**\n   * observes the CreateUserSuccess action\n   * in case create user succeeds, the form dialog box is closed\n   * and the users list is shown\n   */\n  @Effect({\n    dispatch: false\n  })\n  createUserSuccess$ = this.actions$\n    .pipe(\n      ofType(UsersApiActions.UsersApiActionTypes.CreateUserSuccess),\n      tap(() => {\n        this.dialog.getDialogById(\"userCreationForm\").close();\n      })\n    );\n\n  /**\n   * observes the EditUserSuccess action\n   * in case edit user succeeds, the list is reloaded\n   */\n  @Effect({\n    dispatch: false\n  })\n  editUserSuccess$ = this.actions$\n    .pipe(\n      ofType(UsersApiActions.UsersApiActionTypes.EditUserSuccess),\n      tap(() => {\n        this.store.dispatch(new UsersActions.LoadUsers());\n      })\n    );\n\n  /**\n   * effect for loading users\n   */\n  @Effect()\n  loadUsers = this.actions$\n    .pipe(\n      ofType(UsersActions.UsersActionTypes.LoadUsers),\n      exhaustMap(() => {\n\n        return this.usersService.getUsers()\n          .pipe(\n            //delay(2000),\n            map((users: User[]) => {\n              console.log(users);\n              return new UsersApiActions.LoadUsersSuccess({users});\n            }),\n            catchError(httpError => {\n              const message = httpError.statusText.toLowerCase();\n\n              const snackBarRef = this.snackBar.open(this.translate.instant(message), this.translate.instant('Retry'), {\n                duration: 10000\n              });\n\n              snackBarRef.afterDismissed().subscribe(snackBarDismiss => {\n\n                if (snackBarDismiss.dismissedByAction){\n                  this.store.dispatch(new UsersActions.LoadUsers());\n                } else {\n                  this.router.navigate(['/dashboard']);\n                }\n              });\n\n              return of(new UsersApiActions.LoadUsersFailure({message}));\n            })\n          );\n      })\n    );\n\n\n  /**\n   * effect for loading user users\n   */\n  @Effect()\n  loadUserPatients = this.actions$\n    .pipe(\n      ofType(UsersActions.UsersActionTypes.LoadUserPatients),\n      map(action => action.payload),\n      exhaustMap((id: number) => {\n\n        return this.usersService.getUserPatients(id)\n          .pipe(\n            delay(2000),\n            map((patients: IPatient[]) => {\n              console.log(patients);\n\n              for (let key in patients){\n                const patient = patients[key];\n                const user = patient.users.filter(user => user.id === id );\n                let permission = \"\";\n\n                if(user[0].user_patient_permission == 1){\n                  permission = \"Administrator\";\n                }else{\n                  permission = \"Read Only\"\n                }\n                patient[\"permission\"] = permission;\n              }\n\n              return new UsersApiActions.LoadUserPatientsSuccess({patients});\n            }),\n            catchError(httpError => {\n              const message = httpError.statusText.toLowerCase();\n\n              const snackBarRef = this.snackBar.open(this.translate.instant(message), this.translate.instant('Retry'), {\n                duration: 10000\n              });\n\n              snackBarRef.afterDismissed().subscribe(snackBarDismiss => {\n\n                if (snackBarDismiss.dismissedByAction){\n                  this.store.dispatch(new UsersActions.LoadUserPatients(id));\n                } else {\n                  this.router.navigate(['/dashboard/users']);\n                }\n              });\n\n              return of(new UsersApiActions.LoadUserPatientsFailure({message}));\n            })\n          );\n      })\n    );\n\n  /**\n   * show a dialog form for user details as a pop up\n   */\n  @Effect()\n  popUpUserForm$ = this.actions$\n    .pipe(\n      ofType(UsersActions.UsersActionTypes.CreateUserFormDialog),\n      exhaustMap(() => {\n        const title = 'Creating a new user';\n        const dialogRef: MatDialogRef = this.dialog.open(UserFormComponent, {\n          width: '720px',\n          disableClose: true,\n          data: { title: title }\n        });\n        \n        return dialogRef.afterClosed();\n      })\n    );\n\n\n  /**\n   * effect to dismiss the dialog for adding user details\n   */\n  @Effect({\n    dispatch: false\n  })\n  DismissUserFormDialog = this.actions$\n    .pipe(\n      ofType(UsersActions.UsersActionTypes.DismissUserFormDialog),\n      map(() => {\n        this.dialog.getDialogById('userCreationForm').close();\n      })\n    );\n\n  /**\n   * constructor\n   *\n   * @param actions$\n   * @param usersService\n   * @param router\n   * @param modalController\n   * @param store\n   */\n  constructor(\n    private actions$: Actions,\n    private usersService: UsersService,\n    private router: Router,\n    private store: Store,\n    public snackBar: MatSnackBar,\n    private translate: TranslateService,\n    private dialog: MatDialog) {\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/services/users.service.ts\n        \n\n            \n                Description\n            \n            \n                user service\nencapsulates api interactions for\nworking with 'users'\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                editUser\n                            \n                            \n                                getUserPatients\n                            \n                            \n                                getUsers\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/services/users.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateUser(user: User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/services/users.service.ts:43\n                            \n                        \n\n\n                \n                    \n                            create a new user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                User\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteUser(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/services/users.service.ts:51\n                            \n                        \n\n\n                \n                    \n                            delete a user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                user id\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editUser\n                            \n                            \n                        \n                    \n                \n                \n                    \neditUser(changed: Update)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/services/users.service.ts:68\n                            \n                        \n\n\n                \n                    \n                            edit a user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changed\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserPatients\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserPatients(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/services/users.service.ts:35\n                            \n                        \n\n\n                \n                    \n                            get all patients belonging to a user from the moio-cloud api\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                user id\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUsers()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/services/users.service.ts:27\n                            \n                        \n\n\n                \n                    \n                            get all users from the moio-cloud api\n\n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateUser(user: User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/services/users.service.ts:59\n                            \n                        \n\n\n                \n                    \n                            update a user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                object:User\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { User } from '../models/user.model';\nimport { environment } from '../../../environments/environment';\nimport { Update } from '@ngrx/entity';\nimport { IPatient } from '../models/patient.model';\n\n/**\n * user service\n * encapsulates api interactions for\n * working with 'users'\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  /**\n   * get all users from the moio-cloud api\n   */\n  getUsers(): Observable {\n    return this.http.get(`${environment.apiHost}/api/usermanagement`);\n  }\n\n  /**\n   * get all patients belonging to a user from the moio-cloud api\n   * @param id user id\n   */\n  getUserPatients(id: number): Observable {\n    return this.http.get(`${environment.apiHost}/api/users/${id}/patients`);\n  }\n\n  /**\n   * create a new user\n   * @param user User\n   */\n  createUser(user: User): Observable {\n    return this.http.post(`${environment.apiHost}/api/appusers`, user);\n  }\n\n  /**\n   * delete a user\n   * @param id user id\n   */\n  deleteUser(id: number): Observable {\n    return this.http.delete(`${environment.apiHost}/api/users/${id}`);\n  }\n\n  /**\n   * update a user\n   * @param user object:User\n   */\n  updateUser(user: User): Observable {\n    console.log(user);\n    return this.http.put(`${environment.apiHost}/api/users/${user.id}`, user);\n  }\n\n  /**\n   * edit a user\n   * @param changed\n   */\n  editUser(changed: Update): Observable {\n    console.log(changed);\n    return this.http\n      .put(`${environment.apiHost}/api/users/${changed.id}`, {...changed.changes});\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.0.0\n        \n            @angular/cdk : ^7.1.1\n        \n            @angular/common : ^7.1.1\n        \n            @angular/compiler : ^7.1.1\n        \n            @angular/core : ^7.1.1\n        \n            @angular/flex-layout : ^7.0.0-beta.19\n        \n            @angular/forms : ^7.1.1\n        \n            @angular/http : ~7.0.0\n        \n            @angular/material : ^7.1.1\n        \n            @angular/platform-browser : ~7.0.0\n        \n            @angular/platform-browser-dynamic : ~7.0.0\n        \n            @angular/router : ^7.1.1\n        \n            @auth0/angular-jwt : ^2.0.0\n        \n            @ngrx/effects : ^6.1.2\n        \n            @ngrx/entity : ^6.1.2\n        \n            @ngrx/router-store : ^6.1.2\n        \n            @ngrx/store : ^6.1.2\n        \n            @ngrx/store-devtools : ^6.1.2\n        \n            @ngx-translate/core : ^11.0.1\n        \n            @ngx-translate/http-loader : ^4.0.0\n        \n            @swimlane/ngx-datatable : ^14.0.0\n        \n            core-js : ^2.6.0\n        \n            ng2-split-pane : ^1.4.0\n        \n            ngrx-store-localstorage : ^5.1.0\n        \n            ngx-datatable : ^1.0.3\n        \n            ngx-perfect-scrollbar : ^7.1.0\n        \n            reload : ^2.4.0\n        \n            reselect : ^4.0.0\n        \n            rxjs : ~6.3.3\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthActionTypes   (src/.../auth.actions.ts)\n                        \n                        \n                            AuthApiActionTypes   (src/.../auth-api.actions.ts)\n                        \n                        \n                            AuthPageActionTypes   (src/.../auth-page.actions.ts)\n                        \n                        \n                            LayoutActionTypes   (src/.../layout.actions.ts)\n                        \n                        \n                            NursingHomesActionTypes   (src/.../nursing-homes.actions.ts)\n                        \n                        \n                            NursingHomesApiActionTypes   (src/.../nursing-homes-api.actions.ts)\n                        \n                        \n                            PatientsActionTypes   (src/.../patients.actions.ts)\n                        \n                        \n                            PatientsApiActionTypes   (src/.../patients-api.actions.ts)\n                        \n                        \n                            UsersActionTypes   (src/.../users.actions.ts)\n                        \n                        \n                            UsersApiActionTypes   (src/.../users-api.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/auth/actions/auth.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthActionTypes\n                    \n                \n                        \n                            \n                                 Logout\n                            \n                        \n                        \n                            \n                                Value : [Auth] Logout\n                            \n                        \n                        \n                            \n                                 LogoutConfirmation\n                            \n                        \n                        \n                            \n                                Value : [Auth] Logout Confirmation\n                            \n                        \n                        \n                            \n                                 LogoutConfirmationDismiss\n                            \n                        \n                        \n                            \n                                Value : [Auth] Logout Confirmation Dismiss\n                            \n                        \n            \n        \n\n    src/app/auth/actions/auth-api.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthApiActionTypes\n                    \n                \n                        \n                            \n                                 LoginSuccess\n                            \n                        \n                        \n                            \n                                Value : [Auth/Api] Login Success\n                            \n                        \n                        \n                            \n                                 LoginFailure\n                            \n                        \n                        \n                            \n                                Value : [Auth/Api] Login Failure\n                            \n                        \n                        \n                            \n                                 LoginRedirect\n                            \n                        \n                        \n                            \n                                Value : [Auth/Api] Login Redirect\n                            \n                        \n                        \n                            \n                                 LogoutSuccess\n                            \n                        \n                        \n                            \n                                Value : [Auth/Api] Logout Success\n                            \n                        \n                        \n                            \n                                 LogoutFailure\n                            \n                        \n                        \n                            \n                                Value : [Auth/Api] Logout Failure\n                            \n                        \n                        \n                            \n                                 SignUpSuccess\n                            \n                        \n                        \n                            \n                                Value : [Auth/Api] Sign Up Success\n                            \n                        \n                        \n                            \n                                 SignUpFailure\n                            \n                        \n                        \n                            \n                                Value : [Auth/Api] Sign Up Failure\n                            \n                        \n                        \n                            \n                                 ForgotPasswordSuccess\n                            \n                        \n                        \n                            \n                                Value : [Auth/Api] Forgot Password Success\n                            \n                        \n                        \n                            \n                                 ForgotPasswordFailure\n                            \n                        \n                        \n                            \n                                Value : [Auth/Api] Forgot Password Failure\n                            \n                        \n            \n        \n\n    src/app/auth/actions/auth-page.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthPageActionTypes\n                    \n                \n                        \n                            \n                                 Login\n                            \n                        \n                        \n                            \n                                Value : [Auth/Login Page] Login\n                            \n                        \n                        \n                            \n                                 Signup\n                            \n                        \n                        \n                            \n                                Value : [Auth/Signup Page] Signup\n                            \n                        \n                        \n                            \n                                 ForgotPassword\n                            \n                        \n                        \n                            \n                                Value : [Auth/Forgot Password Page] Forgot Password\n                            \n                        \n            \n        \n\n    src/app/dashboard/actions/layout.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        LayoutActionTypes\n                    \n                \n                    \n                        \n                            layout action types\n\n                        \n                    \n                        \n                            \n                                 OpenSideNav\n                            \n                        \n                        \n                            \n                                Value : [Layout] Open Side Nav\n                            \n                        \n                        \n                            \n                                 CloseSideNav\n                            \n                        \n                        \n                            \n                                Value : [Layout] Close Side Nav\n                            \n                        \n                        \n                            \n                                 CompactSideNav\n                            \n                        \n                        \n                            \n                                Value : [Layout] Compact Nav position\n                            \n                        \n                        \n                            \n                                 SetNavigationPositionSide\n                            \n                        \n                        \n                            \n                                Value : [Layout] Set Navigation Position Side\n                            \n                        \n                        \n                            \n                                 SetNavigationPositionTop\n                            \n                        \n                        \n                            \n                                Value : [Layout] Set Navigation Position Top\n                            \n                        \n                        \n                            \n                                 SetDirectionLtr\n                            \n                        \n                        \n                            \n                                Value : [Layout] Set Direction Ltr\n                            \n                        \n                        \n                            \n                                 SetDirectionRtr\n                            \n                        \n                        \n                            \n                                Value : [Layout] Set Direction Rtr\n                            \n                        \n                        \n                            \n                                 TransitioningLayout\n                            \n                        \n                        \n                            \n                                Value : [Layout] Transitioning Layout\n                            \n                        \n                        \n                            \n                                 UseBreadcrumb\n                            \n                        \n                        \n                            \n                                Value : [Layout] Use Breadcrumb\n                            \n                        \n                        \n                            \n                                 MakeBreadcrumbSimple\n                            \n                        \n                        \n                            \n                                Value : [Layout] Make Breadcrumb Simple\n                            \n                        \n                        \n                            \n                                 MakeBreadcrumbTitle\n                            \n                        \n                        \n                            \n                                Value : [Layout] Make Breadcrumb Title\n                            \n                        \n                        \n                            \n                                 FixTopbar\n                            \n                        \n                        \n                            \n                                Value : [Layout] Fix Topbar\n                            \n                        \n            \n        \n\n    src/app/dashboard/actions/nursing-homes.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        NursingHomesActionTypes\n                    \n                \n                        \n                            \n                                 SelectNursingHome\n                            \n                        \n                        \n                            \n                                Value : [NursingHome] Select Current NursingHome\n                            \n                        \n                        \n                            \n                                 ClearSelectedNursingHome\n                            \n                        \n                        \n                            \n                                Value : [NursingHome] Clear Current NursingHome\n                            \n                        \n                        \n                            \n                                 InitializeNursingHome\n                            \n                        \n                        \n                            \n                                Value : [NursingHome] Initialize Current NursingHome\n                            \n                        \n                        \n                            \n                                 PopUpNursingHomeForm\n                            \n                        \n                        \n                            \n                                Value : [NursingHome] Pop Up NursingHome Form\n                            \n                        \n                        \n                            \n                                 CreateNursingHome\n                            \n                        \n                        \n                            \n                                Value : [NursingHome] Create NursingHome\n                            \n                        \n                        \n                            \n                                 DismissPoppedUpNursingHomeForm\n                            \n                        \n                        \n                            \n                                Value : [NursingHome] Dismiss Create NursingHome\n                            \n                        \n                        \n                            \n                                 LoadNursingHomes\n                            \n                        \n                        \n                            \n                                Value : [NursingHome] Load Nursing Homes\n                            \n                        \n                        \n                            \n                                 SearchNursingHome\n                            \n                        \n                        \n                            \n                                Value : [NursingHome] Search NursingHome\n                            \n                        \n                        \n                            \n                                 SearchNursingHomeComplete\n                            \n                        \n                        \n                            \n                                Value : [NursingHome] Search NursingHome Complete\n                            \n                        \n                        \n                            \n                                 EditNursingHome\n                            \n                        \n                        \n                            \n                                Value : [NursingHome] Edit NursingHome\n                            \n                        \n                        \n                            \n                                 DismissEditNursingHome\n                            \n                        \n                        \n                            \n                                Value : [NursingHome] Dismiss Edit NursingHome\n                            \n                        \n                        \n                            \n                                 ResetNursingHomesState\n                            \n                        \n                        \n                            \n                                Value : [NursingHomes] Reset NursingHomes State\n                            \n                        \n            \n        \n\n    src/app/dashboard/actions/nursing-homes-api.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        NursingHomesApiActionTypes\n                    \n                \n                    \n                        \n                            definitions for action types\n\n                        \n                    \n                        \n                            \n                                 CreateNursingHomeSuccess\n                            \n                        \n                        \n                            \n                                Value : [NursingHome/Api] Create NursingHome Success\n                            \n                        \n                        \n                            \n                                 CreateNursingHomeFailure\n                            \n                        \n                        \n                            \n                                Value : [NursingHome/Api] Create NursingHome Failure\n                            \n                        \n                        \n                            \n                                 LoadNursingHomesSuccess\n                            \n                        \n                        \n                            \n                                Value : [NursingHome/Api] Load NursingHomes Success\n                            \n                        \n                        \n                            \n                                 LoadNursingHomesFailure\n                            \n                        \n                        \n                            \n                                Value : [NursingHome/Api] Load NursingHomes Failure\n                            \n                        \n                        \n                            \n                                 EditNursingHomeSuccess\n                            \n                        \n                        \n                            \n                                Value : [NursingHome/Api] Edit NursingHome Success\n                            \n                        \n                        \n                            \n                                 EditNursingHomeFailure\n                            \n                        \n                        \n                            \n                                Value : [NursingHome/Api] Edit NursingHome Failure\n                            \n                        \n            \n        \n\n    src/app/dashboard/actions/patients.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        PatientsActionTypes\n                    \n                \n                        \n                            \n                                 SelectPatient\n                            \n                        \n                        \n                            \n                                Value : [Patient] Select Current Patient\n                            \n                        \n                        \n                            \n                                 ClearSelectedPatient\n                            \n                        \n                        \n                            \n                                Value : [Patient] Clear Current Patient\n                            \n                        \n                        \n                            \n                                 InitializePatient\n                            \n                        \n                        \n                            \n                                Value : [Patient] Initialize Current Patient\n                            \n                        \n                        \n                            \n                                 CreatePatientFormDialog\n                            \n                        \n                        \n                            \n                                Value : [Patients] Pop Up Patient Form\n                            \n                        \n                        \n                            \n                                 CreatePatient\n                            \n                        \n                        \n                            \n                                Value : [Patient] Create Patient\n                            \n                        \n                        \n                            \n                                 DismissPatientFormDialog\n                            \n                        \n                        \n                            \n                                Value : [Patient] Dismiss Patient Form Dialog\n                            \n                        \n                        \n                            \n                                 LoadPatients\n                            \n                        \n                        \n                            \n                                Value : [Patient] Load Patients\n                            \n                        \n                        \n                            \n                                 SearchPatient\n                            \n                        \n                        \n                            \n                                Value : [Patient] Search Patient\n                            \n                        \n                        \n                            \n                                 SearchPatientComplete\n                            \n                        \n                        \n                            \n                                Value : [Patient] Search Patient Complete\n                            \n                        \n                        \n                            \n                                 EditPatient\n                            \n                        \n                        \n                            \n                                Value : [Patient] Edit Patient\n                            \n                        \n                        \n                            \n                                 DismissEditPatient\n                            \n                        \n                        \n                            \n                                Value : [Patient] Dismiss Edit Patient\n                            \n                        \n                        \n                            \n                                 ResetPatientsState\n                            \n                        \n                        \n                            \n                                Value : [Patients] Reset Patients State\n                            \n                        \n                        \n                            \n                                 DeletePatient\n                            \n                        \n                        \n                            \n                                Value : [Patients] Delete Patient\n                            \n                        \n                        \n                            \n                                 LoadPatientUsers\n                            \n                        \n                        \n                            \n                                Value : [User] Load User Patients\n                            \n                        \n            \n        \n\n    src/app/dashboard/actions/patients-api.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        PatientsApiActionTypes\n                    \n                \n                    \n                        \n                            definitions for action types\n\n                        \n                    \n                        \n                            \n                                 CreatePatientSuccess\n                            \n                        \n                        \n                            \n                                Value : [Patient/Api] Create Patient Success\n                            \n                        \n                        \n                            \n                                 CreatePatientFailure\n                            \n                        \n                        \n                            \n                                Value : [Patient/Api] Create Patient Failure\n                            \n                        \n                        \n                            \n                                 LoadPatientsSuccess\n                            \n                        \n                        \n                            \n                                Value : [Patient/Api] Load Patients Success\n                            \n                        \n                        \n                            \n                                 LoadPatientsFailure\n                            \n                        \n                        \n                            \n                                Value : [Patient/Api] Load Patients Failure\n                            \n                        \n                        \n                            \n                                 EditPatientSuccess\n                            \n                        \n                        \n                            \n                                Value : [Patient/Api] Edit Patient Success\n                            \n                        \n                        \n                            \n                                 EditPatientFailure\n                            \n                        \n                        \n                            \n                                Value : [Patient/Api] Edit Patient Failure\n                            \n                        \n                        \n                            \n                                 LoadPatientUsersSuccess\n                            \n                        \n                        \n                            \n                                Value : [User/Api] Load Patient Users Success\n                            \n                        \n                        \n                            \n                                 LoadPatientUsersFailure\n                            \n                        \n                        \n                            \n                                Value : [User/Api] Load Patient Users Failure\n                            \n                        \n            \n        \n\n    src/app/dashboard/actions/users.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        UsersActionTypes\n                    \n                \n                        \n                            \n                                 SelectUser\n                            \n                        \n                        \n                            \n                                Value : [User] Select Current User\n                            \n                        \n                        \n                            \n                                 ClearSelectedUser\n                            \n                        \n                        \n                            \n                                Value : [User] Clear Current User\n                            \n                        \n                        \n                            \n                                 InitializeUser\n                            \n                        \n                        \n                            \n                                Value : [User] Initialize Current User\n                            \n                        \n                        \n                            \n                                 CreateUserFormDialog\n                            \n                        \n                        \n                            \n                                Value : [Users] Pop Up User Form\n                            \n                        \n                        \n                            \n                                 CreateUser\n                            \n                        \n                        \n                            \n                                Value : [User] Create User\n                            \n                        \n                        \n                            \n                                 DismissUserFormDialog\n                            \n                        \n                        \n                            \n                                Value : [User] Dismiss User Form Dialog\n                            \n                        \n                        \n                            \n                                 LoadUsers\n                            \n                        \n                        \n                            \n                                Value : [User] Load Users\n                            \n                        \n                        \n                            \n                                 SearchUser\n                            \n                        \n                        \n                            \n                                Value : [User] Search User\n                            \n                        \n                        \n                            \n                                 SearchUserComplete\n                            \n                        \n                        \n                            \n                                Value : [User] Search User Complete\n                            \n                        \n                        \n                            \n                                 EditUser\n                            \n                        \n                        \n                            \n                                Value : [User] Edit User\n                            \n                        \n                        \n                            \n                                 DismissEditUser\n                            \n                        \n                        \n                            \n                                Value : [User] Dismiss Edit User\n                            \n                        \n                        \n                            \n                                 ResetUsersState\n                            \n                        \n                        \n                            \n                                Value : [Users] Reset Users State\n                            \n                        \n                        \n                            \n                                 DeleteUser\n                            \n                        \n                        \n                            \n                                Value : [Users] Delete User\n                            \n                        \n                        \n                            \n                                 LoadUserPatients\n                            \n                        \n                        \n                            \n                                Value : [User] Load User Patients\n                            \n                        \n            \n        \n\n    src/app/dashboard/actions/users-api.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        UsersApiActionTypes\n                    \n                \n                    \n                        \n                            definitions for action types\n\n                        \n                    \n                        \n                            \n                                 CreateUserSuccess\n                            \n                        \n                        \n                            \n                                Value : [User/Api] Create User Success\n                            \n                        \n                        \n                            \n                                 CreateUserFailure\n                            \n                        \n                        \n                            \n                                Value : [User/Api] Create User Failure\n                            \n                        \n                        \n                            \n                                 LoadUsersSuccess\n                            \n                        \n                        \n                            \n                                Value : [User/Api] Load Users Success\n                            \n                        \n                        \n                            \n                                 LoadUsersFailure\n                            \n                        \n                        \n                            \n                                Value : [User/Api] Load Users Failure\n                            \n                        \n                        \n                            \n                                 EditUserSuccess\n                            \n                        \n                        \n                            \n                                Value : [User/Api] Edit User Success\n                            \n                        \n                        \n                            \n                                 EditUserFailure\n                            \n                        \n                        \n                            \n                                Value : [User/Api] Edit User Failure\n                            \n                        \n                        \n                            \n                                 LoadUserPatientsSuccess\n                            \n                        \n                        \n                            \n                                Value : [User/Api] Load User Patients Success\n                            \n                        \n                        \n                            \n                                 LoadUserPatientsFailure\n                            \n                        \n                        \n                            \n                                Value : [User/Api] Load User Patients Failure\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createTanslateLoader   (src/.../app.module.ts)\n                        \n                        \n                            getBrowserLanguage   (src/.../app.module.ts)\n                        \n                        \n                            getQueryParam   (src/.../url.helper.ts)\n                        \n                        \n                            jwtOptionsFactory   (src/.../app.module.ts)\n                        \n                        \n                            localStorageSyncReducer   (src/.../index.ts)\n                        \n                        \n                            logger   (src/.../index.ts)\n                        \n                        \n                            reducer   (src/.../views.reducer.ts)\n                        \n                        \n                            reducer   (src/.../users.reducer.ts)\n                        \n                        \n                            reducer   (src/.../auth.reducer.ts)\n                        \n                        \n                            reducer   (src/.../nursing-homes-page.reducer.ts)\n                        \n                        \n                            reducer   (src/.../nursing-homes.reducer.ts)\n                        \n                        \n                            reducer   (src/.../patient-users.reducer.ts)\n                        \n                        \n                            reducer   (src/.../patients-page.reducer.ts)\n                        \n                        \n                            reducer   (src/.../patients.reducer.ts)\n                        \n                        \n                            reducer   (src/.../user-patients.reducer.ts)\n                        \n                        \n                            reducer   (src/.../users-page.reducer.ts)\n                        \n                        \n                            reducer   (src/.../layout.reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createTanslateLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateTanslateLoader(http)\n                    \n                \n\n\n\n\n                \n                    \n                            factory function to instantiate and config\nthe tranlation service\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                ng http client\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBrowserLanguage\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBrowserLanguage()\n                    \n                \n\n\n\n\n                \n                    \n                            strip the preferred language from the browser\n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jwtOptionsFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \njwtOptionsFactory(store)\n                    \n                \n\n\n\n\n                \n                    \n                            jwt options factory to obtain token from the\nstore\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Store\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/core/helpers/url.helper.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getQueryParam\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetQueryParam(prop)\n                    \n                \n\n\n\n\n                \n                    \n                            helper to extract a query param from the URL\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        prop\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the property\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/reducers/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            localStorageSyncReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nlocalStorageSyncReducer(reducer)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reducer\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogger(reducer)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reducer\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/auth/reducers/views.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/dashboard/reducers/users.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n                            reducer for the users state\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/auth/reducers/auth.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/dashboard/reducers/nursing-homes-page.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n                            reducer for nursingHomes page\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/dashboard/reducers/nursing-homes.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n                            reducer for the nursingHomes state\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/dashboard/reducers/patient-users.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n                            reducer for the patient users state\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/dashboard/reducers/patients-page.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n                            reducer for patients page\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/dashboard/reducers/patients.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n                            reducer for the patients state\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/dashboard/reducers/user-patients.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n                            reducer for the user patients state\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/dashboard/reducers/users-page.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n                            reducer for users page\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/dashboard/reducers/layout.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMoioManagement\nThis is the description of how to setup development environment for the Moio-managemet\nGIT branches\n\nmaster: represents the production branch\ndevelop: represents the testing branch where code is tried and tested before production\n\nDevelopment Environment\nPre-Requisites\n\ngit\nnodejs\nnpm\nangular-cli\n\nUpdate your npm: $ npm i -g npm\nInstall the Angular CLI globally: $ npm install -g @angular/cli\nClone the repo to the host that you want to run from AM-Gitlab. Get the URL and the credentials, from the PO or the CTO (Alex Rückert: alexander.rueckert@appsolute-mobility.com)\n$ git clone [GITLAB URL]\nThis will create a new folder moio_management\ncd into the folder and checkout the develop-branch\n$ cd moio_management\n$ git checkout develop (or use your IDE to checkout develop)\nNext, install NPM-packages:\n$ npm install\nThat's it. You are now ready to start coding and run the moio_management\nRun the app locally\nTo run the app locally, start a server with:\n$ npm start\nThis will build the app and start a server on localhost:4200. For the other environment commands you can run, check under the \"scripts\" in the package.json file:\n\"scripts\": {\n    \"ng\": \"ng\",\n    \"start\": \"ng serve\",\n    \"build\": \"ng build\",\n    \"build:prod\": \"ng build --prod\",\n    \"test\": \"ng test\",\n    \"lint\": \"ng lint\",\n    \"e2e\": \"ng e2e\",\n    \"build:stage\": \"ng build --configuration=stage && node ./tasks/deploy-stage.js\"\n  },\nCheck this against the angular.json under \"configurations\" and environment.*.ts files in the /environments for the correct API-url which you want to use in your local machine.\nCreating your own environment\nTo work with a local env-file copy the environment.ts and give the copied file\na unique name, e.g. environment.calvin.ts. Make sure, the content is the same as\nin the environment.ts.\nNext open the angular.json in the root-dir of the project.\nLook for the section 'configurations'.\nCreate a new configuration and name it uniquely. Take note of the name\nas we need it later. At least your new configuration should look like the following:\n\"calvin\": {\n  \"fileReplacements\": [\n      {\n          \"replace\": \"src/environments/environment.ts\",\n          \"with\": \"src/environments/environment.calvin.ts\"\n      }\n  ]\n}Note the name of the configuration.\nFinally open package.json and add a new run configuration in the scripts-section:\n\"start:calvin\": \"ng serve --host 0.0.0.0 --port 4200 --configuration=calvin\",If you want to start the application with your environment enabled run this command:\n$ npm run start:calvin\nDeploy the App to the Stage-Server\nBuilding dependencies\nBuild dependencies are:\n\nnodejs / npm\nangular-cli installed globally\nthe cloned repo\nall packages from the package.json installed in the project folder\n\nBuilding\nSo if you want to build you need to setup your local dev-environment.\nWe use the npm-SCP2 package to connect to the remote server via SCP and upload\nthe build-package to the destination.\nNOTE: The SCP command will not remove files on the destination, it will just\noverwrite existing files. It might be a good idea to clean up the remote directory\nwith a FTP-program from time to time.\nTo build and upload the app run:\n$ npm run build:stage\nto build and upload the content of dist folder in project-dir.\nIf something changes for the remote server or the API-url look into the files:\n\ntasks/deploy-stage.js\nsrc/environments/environment.stage.ts\n\nand adjust the files to your needs.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardRoutingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_imports\n\n\n\ncluster_DashboardModule_exports\n\n\n\ncluster_DashboardModule_providers\n\n\n\ncluster_ErrorsModule\n\n\n\ncluster_ErrorsModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDashboardModule\n\nDashboardModule\n\nAppModule -->\n\nDashboardModule->AppModule\n\n\n\n\n\nDashboardLayoutComponent \n\nDashboardLayoutComponent \n\nDashboardLayoutComponent  -->\n\nDashboardModule->DashboardLayoutComponent \n\n\n\n\n\nDashboardRoutingModule \n\nDashboardRoutingModule \n\nDashboardRoutingModule  -->\n\nDashboardModule->DashboardRoutingModule \n\n\n\n\n\nErrorsModule\n\nErrorsModule\n\nAppModule -->\n\nErrorsModule->AppModule\n\n\n\n\n\nAuthLayoutComponent\n\nAuthLayoutComponent\n\nAuthModule -->\n\nAuthLayoutComponent->AuthModule\n\n\n\nDashboardModule -->\n\nAuthLayoutComponent->DashboardModule\n\n\n\nErrorsModule -->\n\nAuthLayoutComponent->ErrorsModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAuthLayoutComponent->CoreModule\n\n\n\n\n\nForgotPasswordComponent\n\nForgotPasswordComponent\n\nAuthModule -->\n\nForgotPasswordComponent->AuthModule\n\n\n\nDashboardModule -->\n\nForgotPasswordComponent->DashboardModule\n\n\n\nErrorsModule -->\n\nForgotPasswordComponent->ErrorsModule\n\n\n\nCoreModule -->\n\nForgotPasswordComponent->CoreModule\n\n\n\n\n\nLockscreenComponent\n\nLockscreenComponent\n\nAuthModule -->\n\nLockscreenComponent->AuthModule\n\n\n\nDashboardModule -->\n\nLockscreenComponent->DashboardModule\n\n\n\nErrorsModule -->\n\nLockscreenComponent->ErrorsModule\n\n\n\nCoreModule -->\n\nLockscreenComponent->CoreModule\n\n\n\n\n\nSigninComponent\n\nSigninComponent\n\nAuthModule -->\n\nSigninComponent->AuthModule\n\n\n\nDashboardModule -->\n\nSigninComponent->DashboardModule\n\n\n\nErrorsModule -->\n\nSigninComponent->ErrorsModule\n\n\n\nCoreModule -->\n\nSigninComponent->CoreModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\nDashboardModule -->\n\nSignupComponent->DashboardModule\n\n\n\nErrorsModule -->\n\nSignupComponent->ErrorsModule\n\n\n\nCoreModule -->\n\nSignupComponent->CoreModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAuthModule -->\n\nMaterialModule->AuthModule\n\n\n\nDashboardModule -->\n\nMaterialModule->DashboardModule\n\n\n\nErrorsModule -->\n\nMaterialModule->ErrorsModule\n\n\n\nAuthRoutingModule -->\n\nMaterialModule->AuthRoutingModule\n\n\n\nCoreModule -->\n\nMaterialModule->CoreModule\n\n\n\n\n\nDashboardRoutingModule\n\nDashboardRoutingModule\n\nDashboardRoutingModule -->\n\nMaterialModule->DashboardRoutingModule\n\n\n\nDashboardModule -->\n\nCoreModule->DashboardModule\n\n\n\n\n\nAuthLayoutComponent \n\nAuthLayoutComponent \n\nAuthLayoutComponent  -->\n\nCoreModule->AuthLayoutComponent \n\n\n\n\n\nForgotPasswordComponent \n\nForgotPasswordComponent \n\nForgotPasswordComponent  -->\n\nCoreModule->ForgotPasswordComponent \n\n\n\n\n\nLockscreenComponent \n\nLockscreenComponent \n\nLockscreenComponent  -->\n\nCoreModule->LockscreenComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nCoreModule->MaterialModule \n\n\n\n\n\nSigninComponent \n\nSigninComponent \n\nSigninComponent  -->\n\nCoreModule->SigninComponent \n\n\n\n\n\nSignupComponent \n\nSignupComponent \n\nSignupComponent  -->\n\nCoreModule->SignupComponent \n\n\n\nDashboardModule -->\n\nDashboardRoutingModule->DashboardModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nDashboardModule -->\n\nSharedModule->DashboardModule\n\n\n\n\n\nConfirmService\n\nConfirmService\n\nDashboardModule -->\n\nConfirmService->DashboardModule\n\n\n\n\n\nErrorsRoutingModule\n\nErrorsRoutingModule\n\nErrorsModule -->\n\nErrorsRoutingModule->ErrorsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    28 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    14 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    91 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    31 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        17 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthActionsUnion   (src/.../auth.actions.ts)\n                        \n                        \n                            AuthApiActionsUnion   (src/.../auth-api.actions.ts)\n                        \n                        \n                            AuthPageActionsUnion   (src/.../auth-page.actions.ts)\n                        \n                        \n                            LayoutActions   (src/.../layout.actions.ts)\n                        \n                        \n                            NursingHomesActionsUnion   (src/.../nursing-homes.actions.ts)\n                        \n                        \n                            NursingHomesApiActionsUnion   (src/.../nursing-homes-api.actions.ts)\n                        \n                        \n                            PatientsActionsUnion   (src/.../patients.actions.ts)\n                        \n                        \n                            PatientsApiActionsUnion   (src/.../patients-api.actions.ts)\n                        \n                        \n                            UsersActionsUnion   (src/.../users.actions.ts)\n                        \n                        \n                            UsersApiActionsUnion   (src/.../users-api.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/auth/actions/auth.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthActionsUnion\n                    \n                \n                \n                    \n                        AuthActionsUnion:     Logout | LogoutConfirmation | LogoutConfirmationDismiss\n\n                    \n                \n            \n        \n\n    src/app/auth/actions/auth-api.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthApiActionsUnion\n                    \n                \n                \n                    \n                        AuthApiActionsUnion:     LoginSuccess | LoginFailure | LoginRedirect | LogoutSuccess | LogoutFailure | SignUpSuccess | SignUpFailure | ForgotPasswordSuccess | ForgotPasswordFailure\n\n                    \n                \n            \n        \n\n    src/app/auth/actions/auth-page.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthPageActionsUnion\n                    \n                \n                \n                    \n                        AuthPageActionsUnion:     Login | Signup | ForgotPassword\n\n                    \n                \n            \n        \n\n    src/app/dashboard/actions/layout.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        LayoutActions\n                    \n                \n                \n                    \n                        LayoutActions:     OpenSideNav | CloseSideNav | CompactSideNav | SetNavigationPositionSide | SetNavigationPositionTop | SetDirectionLtr | SetDirectionRtr | TransitioningLayout | UseBreadcrumb | MakeBreadcrumbSimple | MakeBreadcrumbTitle | FixTopbar\n\n                    \n                \n            \n        \n\n    src/app/dashboard/actions/nursing-homes.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        NursingHomesActionsUnion\n                    \n                \n                    \n                        \n                            Export union of nursingHome Action\n\n                        \n                    \n                \n                    \n                        NursingHomesActionsUnion:     SelectNursingHome | ClearSelectedNursingHome | InitializeNursingHome | PopUpNursingHomeForm | CreateNursingHome | DismissPoppedUpNursingHomeForm | LoadNursingHomes | SearchNursingHome | SearchNursingHomeComplete | EditNursingHome | DismissEditNursingHome | ResetNursingHomesState\n\n                    \n                \n            \n        \n\n    src/app/dashboard/actions/nursing-homes-api.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        NursingHomesApiActionsUnion\n                    \n                \n                \n                    \n                        NursingHomesApiActionsUnion:     CreateNursingHomeSuccess | CreateNursingHomeFailure | EditNursingHomeSuccess | EditNursingHomeFailure | LoadNursingHomesSuccess | LoadNursingHomesFailure\n\n                    \n                \n            \n        \n\n    src/app/dashboard/actions/patients.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        PatientsActionsUnion\n                    \n                \n                    \n                        \n                            Export union of patient Action\n\n                        \n                    \n                \n                    \n                        PatientsActionsUnion:     SelectPatient | ClearSelectedPatient | InitializePatient | CreatePatientFormDialog | CreatePatient | DismissPatientFormDialog | LoadPatients | SearchPatient | SearchPatientComplete | EditPatient | DismissEditPatient | ResetPatientsState | LoadPatientUsers\n\n                    \n                \n            \n        \n\n    src/app/dashboard/actions/patients-api.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        PatientsApiActionsUnion\n                    \n                \n                \n                    \n                        PatientsApiActionsUnion:     CreatePatientSuccess | CreatePatientFailure | EditPatientSuccess | EditPatientFailure | LoadPatientsSuccess | LoadPatientsFailure | LoadPatientUsersSuccess | LoadPatientUsersFailure\n\n                    \n                \n            \n        \n\n    src/app/dashboard/actions/users.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        UsersActionsUnion\n                    \n                \n                    \n                        \n                            Export union of user Action\n\n                        \n                    \n                \n                    \n                        UsersActionsUnion:     SelectUser | ClearSelectedUser | InitializeUser | CreateUserFormDialog | CreateUser | DismissUserFormDialog | LoadUsers | SearchUser | SearchUserComplete | EditUser | DismissEditUser | ResetUsersState | LoadUserPatients\n\n                    \n                \n            \n        \n\n    src/app/dashboard/actions/users-api.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        UsersApiActionsUnion\n                    \n                \n                \n                    \n                        UsersApiActionsUnion:     CreateUserSuccess | CreateUserFailure | EditUserSuccess | EditUserFailure | LoadUsersSuccess | LoadUsersFailure | LoadUserPatientsSuccess | LoadUserPatientsFailure\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
